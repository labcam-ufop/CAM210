

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Nov 25 17:06:37 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	smallconst
    80  000600                     __psmallconst:
    81                           	callstack 0
    82  000600  00                 	db	0
    83  000601                     __powers_:
    84                           	callstack 0
    85  000601  0000               	dw	0
    86  000603  3F80               	dw	16256
    87  000605  0000               	dw	0
    88  000607  4120               	dw	16672
    89  000609  0000               	dw	0
    90  00060B  42C8               	dw	17096
    91  00060D  0000               	dw	0
    92  00060F  447A               	dw	17530
    93  000611  4000               	dw	16384
    94  000613  461C               	dw	17948
    95  000615  5000               	dw	20480
    96  000617  47C3               	dw	18371
    97  000619  2400               	dw	9216
    98  00061B  4974               	dw	18804
    99  00061D  9680               	dw	38528
   100  00061F  4B18               	dw	19224
   101  000621  BC20               	dw	48160
   102  000623  4CBE               	dw	19646
   103  000625  6B28               	dw	27432
   104  000627  4E6E               	dw	20078
   105  000629  02F9               	dw	761
   106  00062B  5015               	dw	20501
   107  00062D  78EC               	dw	30956
   108  00062F  60AD               	dw	24749
   109  000631  F2CA               	dw	62154
   110  000633  7149               	dw	29001
   111  000635                     __end_of__powers_:
   112                           	callstack 0
   113  000635                     __npowers_:
   114                           	callstack 0
   115  000635  0000               	dw	0
   116  000637  3F80               	dw	16256
   117  000639  CCCD               	dw	52429
   118  00063B  3DCC               	dw	15820
   119  00063D  D70A               	dw	55050
   120  00063F  3C23               	dw	15395
   121  000641  126F               	dw	4719
   122  000643  3A83               	dw	14979
   123  000645  B717               	dw	46871
   124  000647  38D1               	dw	14545
   125  000649  C5AC               	dw	50604
   126  00064B  3727               	dw	14119
   127  00064D  37BD               	dw	14269
   128  00064F  3586               	dw	13702
   129  000651  BF95               	dw	49045
   130  000653  33D6               	dw	13270
   131  000655  CC77               	dw	52343
   132  000657  322B               	dw	12843
   133  000659  705F               	dw	28767
   134  00065B  3089               	dw	12425
   135  00065D  E6FF               	dw	59135
   136  00065F  2EDB               	dw	11995
   137  000661  E508               	dw	58632
   138  000663  1E3C               	dw	7740
   139  000665  4260               	dw	16992
   140  000667  0DA2               	dw	3490
   141  000669                     __end_of__npowers_:
   142                           	callstack 0
   143  000669                     _dpowers:
   144                           	callstack 0
   145  000669  0001               	dw	1
   146  00066B  0000               	dw	0
   147  00066D  000A               	dw	10
   148  00066F  0000               	dw	0
   149  000671  0064               	dw	100
   150  000673  0000               	dw	0
   151  000675  03E8               	dw	1000
   152  000677  0000               	dw	0
   153  000679  2710               	dw	10000
   154  00067B  0000               	dw	0
   155  00067D  86A0               	dw	34464
   156  00067F  0001               	dw	1
   157  000681  4240               	dw	16960
   158  000683  000F               	dw	15
   159  000685  9680               	dw	38528
   160  000687  0098               	dw	152
   161  000689  E100               	dw	57600
   162  00068B  05F5               	dw	1525
   163  00068D  CA00               	dw	51712
   164  00068F  3B9A               	dw	15258
   165  000691                     __end_of_dpowers:
   166                           	callstack 0
   167  0000                     _ADRESL	set	4035
   168  0000                     _ADRESH	set	4036
   169  0000                     _ADCON0	set	4034
   170  0000                     _PORTC	set	3970
   171  0000                     _PORTB	set	3969
   172  0000                     _PORTA	set	3968
   173  0000                     _TRISC	set	3988
   174  0000                     _TRISB	set	3987
   175  0000                     _INTCON2bits	set	4081
   176  0000                     _PORTDbits	set	3971
   177  0000                     _TRISDbits	set	3989
   178  0000                     _ADCON0bits	set	4034
   179  0000                     _LATCbits	set	3979
   180  0000                     _PORTE	set	3972
   181  0000                     _PORTD	set	3971
   182  0000                     _TRISE	set	3990
   183  0000                     _TRISD	set	3989
   184  0000                     _ADCON2	set	4032
   185  0000                     _ADCON1	set	4033
   186  0000                     _TRISEbits	set	3990
   187  0000                     _LATA	set	3977
   188  0000                     _TRISA	set	3986
   189  0000                     _PORTEbits	set	3972
   190  0000                     _LATE	set	3981
   191  0000                     _LATD	set	3980
   192  0000                     _LATC	set	3979
   193  0000                     _LATB	set	3978
   194  000691                     STR_2:
   195  000691  54                 	db	84	;'T'
   196  000692  65                 	db	101	;'e'
   197  000693  6E                 	db	110	;'n'
   198  000694  73                 	db	115	;'s'
   199  000695  61                 	db	97	;'a'
   200  000696  6F                 	db	111	;'o'
   201  000697  20                 	db	32
   202  000698  3D                 	db	61	;'='
   203  000699  20                 	db	32
   204  00069A  25                 	db	37
   205  00069B  30                 	db	48	;'0'
   206  00069C  35                 	db	53	;'5'
   207  00069D  2E                 	db	46
   208  00069E  32                 	db	50	;'2'
   209  00069F  66                 	db	102	;'f'
   210  0006A0  20                 	db	32
   211  0006A1  56                 	db	86	;'V'
   212  0006A2  00                 	db	0
   213  0006A3                     STR_1:
   214  0006A3  41                 	db	65	;'A'
   215  0006A4  44                 	db	68	;'D'
   216  0006A5  43                 	db	67	;'C'
   217  0006A6  20                 	db	32
   218  0006A7  3D                 	db	61	;'='
   219  0006A8  20                 	db	32
   220  0006A9  25                 	db	37
   221  0006AA  30                 	db	48	;'0'
   222  0006AB  34                 	db	52	;'4'
   223  0006AC  64                 	db	100	;'d'
   224  0006AD  00                 	db	0
   225  0006AE  00                 	db	0	; dummy byte at the end
   226  0000                     
   227                           ; #config settings
   228                           
   229                           	psect	cinit
   230  00383A                     __pcinit:
   231                           	callstack 0
   232  00383A                     start_initialization:
   233                           	callstack 0
   234  00383A                     __initialization:
   235                           	callstack 0
   236                           
   237                           ; Clear objects allocated to BANK0 (20 bytes)
   238  00383A  EE00  F080         	lfsr	0,__pbssBANK0
   239  00383E  0E14               	movlw	20
   240  003840                     clear_0:
   241  003840  6AEE               	clrf	postinc0,c
   242  003842  06E8               	decf	wreg,f,c
   243  003844  E1FD               	bnz	clear_0
   244                           
   245                           ; Clear objects allocated to COMRAM (12 bytes)
   246  003846  EE00  F074         	lfsr	0,__pbssCOMRAM
   247  00384A  0E0C               	movlw	12
   248  00384C                     clear_1:
   249  00384C  6AEE               	clrf	postinc0,c
   250  00384E  06E8               	decf	wreg,f,c
   251  003850  E1FD               	bnz	clear_1
   252  003852                     end_of_initialization:
   253                           	callstack 0
   254  003852                     __end_of__initialization:
   255                           	callstack 0
   256  003852  0E00               	movlw	low (__Lmediumconst shr (0+16))
   257  003854  6EF8               	movwf	tblptru,c
   258  003856  0100               	movlb	0
   259  003858  EFC6  F015         	goto	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMRAM
   262  000074                     __pbssCOMRAM:
   263                           	callstack 0
   264  000074                     _volt:
   265                           	callstack 0
   266  000074                     	ds	4
   267  000078                     _adcResult:
   268                           	callstack 0
   269  000078                     	ds	2
   270  00007A                     _key:
   271                           	callstack 0
   272  00007A                     	ds	1
   273  00007B                     _tecla:
   274                           	callstack 0
   275  00007B                     	ds	1
   276  00007C                     _str:
   277                           	callstack 0
   278  00007C                     	ds	4
   279                           
   280                           	psect	bssBANK0
   281  000080                     __pbssBANK0:
   282                           	callstack 0
   283  000080                     _time:
   284                           	callstack 0
   285  000080                     	ds	10
   286  00008A                     _date:
   287                           	callstack 0
   288  00008A                     	ds	10
   289                           
   290                           	psect	cstackCOMRAM
   291  000001                     __pcstackCOMRAM:
   292                           	callstack 0
   293  000001                     ??_Lcd_Cmd:
   294  000001                     ??_Lcd_Chr_CP:
   295  000001                     ??_isdigit:
   296  000001                     ?_adc_amostra:
   297                           	callstack 0
   298  000001                     ?___wmul:
   299                           	callstack 0
   300  000001                     ?___awmod:
   301                           	callstack 0
   302  000001                     ?___lwmod:
   303                           	callstack 0
   304  000001                     ?__tdiv_to_l_:
   305                           	callstack 0
   306  000001                     ?__div_to_l_:
   307                           	callstack 0
   308  000001                     ?___lldiv:
   309                           	callstack 0
   310  000001                     ?___flneg:
   311                           	callstack 0
   312  000001                     ?___xxtofl:
   313                           	callstack 0
   314  000001                     ___wmul@multiplier:
   315                           	callstack 0
   316  000001                     ___awmod@dividend:
   317                           	callstack 0
   318  000001                     ___lwmod@dividend:
   319                           	callstack 0
   320  000001                     ___lldiv@dividend:
   321                           	callstack 0
   322  000001                     __div_to_l_@f1:
   323                           	callstack 0
   324  000001                     ___fleq@ff1:
   325                           	callstack 0
   326  000001                     ___flge@ff1:
   327                           	callstack 0
   328  000001                     ___flneg@f1:
   329                           	callstack 0
   330  000001                     __tdiv_to_l_@f1:
   331                           	callstack 0
   332  000001                     ___xxtofl@val:
   333                           	callstack 0
   334                           
   335                           ; 4 bytes @ 0x0
   336  000001                     	ds	1
   337  000002                     _isdigit$1031:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x1
   341  000002                     	ds	1
   342  000003                     ??_adc_amostra:
   343  000003                     Lcd_Chr_CP@data:
   344                           	callstack 0
   345  000003                     Lcd_Cmd@data:
   346                           	callstack 0
   347  000003                     isdigit@c:
   348                           	callstack 0
   349  000003                     ___wmul@multiplicand:
   350                           	callstack 0
   351  000003                     ___awmod@divisor:
   352                           	callstack 0
   353  000003                     ___lwmod@divisor:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x2
   357  000003                     	ds	1
   358  000004                     ??_Lcd_Init:
   359  000004                     Lcd_Out@x:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x3
   363  000004                     	ds	1
   364  000005                     ??___xxtofl:
   365  000005                     Lcd_Init@data:
   366                           	callstack 0
   367  000005                     ___awmod@counter:
   368                           	callstack 0
   369  000005                     ___lwmod@counter:
   370                           	callstack 0
   371  000005                     Lcd_Out@buffer:
   372                           	callstack 0
   373  000005                     ___wmul@product:
   374                           	callstack 0
   375  000005                     ___lldiv@divisor:
   376                           	callstack 0
   377  000005                     __div_to_l_@f2:
   378                           	callstack 0
   379  000005                     ___fleq@ff2:
   380                           	callstack 0
   381  000005                     ___flge@ff2:
   382                           	callstack 0
   383  000005                     __tdiv_to_l_@f2:
   384                           	callstack 0
   385                           
   386                           ; 4 bytes @ 0x4
   387  000005                     	ds	1
   388  000006                     ?___lwdiv:
   389                           	callstack 0
   390  000006                     ___awmod@sign:
   391                           	callstack 0
   392  000006                     ___lwdiv@dividend:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x5
   396  000006                     	ds	1
   397  000007                     ?___awdiv:
   398                           	callstack 0
   399  000007                     Lcd_Out@y:
   400                           	callstack 0
   401  000007                     adc_amostra@canal:
   402                           	callstack 0
   403  000007                     ___awdiv@dividend:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x6
   407  000007                     	ds	1
   408  000008                     Lcd_Out@data:
   409                           	callstack 0
   410  000008                     ___lwdiv@divisor:
   411                           	callstack 0
   412                           
   413                           ; 2 bytes @ 0x7
   414  000008                     	ds	1
   415  000009                     ??__tdiv_to_l_:
   416  000009                     ??___fleq:
   417  000009                     ??___flge:
   418  000009                     ___xxtofl@sign:
   419                           	callstack 0
   420  000009                     ___awdiv@divisor:
   421                           	callstack 0
   422  000009                     ___lldiv@quotient:
   423                           	callstack 0
   424  000009                     __div_to_l_@quot:
   425                           	callstack 0
   426                           
   427                           ; 4 bytes @ 0x8
   428  000009                     	ds	1
   429  00000A                     ___xxtofl@exp:
   430                           	callstack 0
   431  00000A                     ___lwdiv@quotient:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x9
   435  00000A                     	ds	1
   436  00000B                     ___awdiv@counter:
   437                           	callstack 0
   438  00000B                     ___xxtofl@arg:
   439                           	callstack 0
   440                           
   441                           ; 4 bytes @ 0xA
   442  00000B                     	ds	1
   443  00000C                     ___awdiv@sign:
   444                           	callstack 0
   445  00000C                     ___lwdiv@counter:
   446                           	callstack 0
   447  00000C                     __tdiv_to_l_@quot:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0xB
   451  00000C                     	ds	1
   452  00000D                     ___lldiv@counter:
   453                           	callstack 0
   454  00000D                     __div_to_l_@cntr:
   455                           	callstack 0
   456  00000D                     ___awdiv@quotient:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0xC
   460  00000D                     	ds	1
   461  00000E                     ?___llmod:
   462                           	callstack 0
   463  00000E                     __div_to_l_@exp1:
   464                           	callstack 0
   465  00000E                     ___llmod@dividend:
   466                           	callstack 0
   467                           
   468                           ; 4 bytes @ 0xD
   469  00000E                     	ds	1
   470  00000F                     ?___flmul:
   471                           	callstack 0
   472  00000F                     ___flmul@b:
   473                           	callstack 0
   474                           
   475                           ; 4 bytes @ 0xE
   476  00000F                     	ds	1
   477  000010                     __tdiv_to_l_@cntr:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0xF
   481  000010                     	ds	1
   482  000011                     __tdiv_to_l_@exp1:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x10
   486  000011                     	ds	1
   487  000012                     ___llmod@divisor:
   488                           	callstack 0
   489                           
   490                           ; 4 bytes @ 0x11
   491  000012                     	ds	1
   492  000013                     ___flmul@a:
   493                           	callstack 0
   494                           
   495                           ; 4 bytes @ 0x12
   496  000013                     	ds	3
   497  000016                     ___llmod@counter:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x15
   501  000016                     	ds	1
   502  000017                     ??___flmul:
   503                           
   504                           ; 1 bytes @ 0x16
   505  000017                     	ds	4
   506  00001B                     ___flmul@sign:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x1A
   510  00001B                     	ds	1
   511  00001C                     ___flmul@grs:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0x1B
   515  00001C                     	ds	4
   516  000020                     ___flmul@aexp:
   517                           	callstack 0
   518                           
   519                           ; 1 bytes @ 0x1F
   520  000020                     	ds	1
   521  000021                     ___flmul@bexp:
   522                           	callstack 0
   523                           
   524                           ; 1 bytes @ 0x20
   525  000021                     	ds	1
   526  000022                     ___flmul@prod:
   527                           	callstack 0
   528                           
   529                           ; 4 bytes @ 0x21
   530  000022                     	ds	4
   531  000026                     ___flmul@temp:
   532                           	callstack 0
   533                           
   534                           ; 2 bytes @ 0x25
   535  000026                     	ds	2
   536  000028                     ?___fldiv:
   537                           	callstack 0
   538  000028                     ?_fround:
   539                           	callstack 0
   540  000028                     ?_scale:
   541                           	callstack 0
   542  000028                     ___fldiv@b:
   543                           	callstack 0
   544                           
   545                           ; 4 bytes @ 0x27
   546  000028                     	ds	4
   547  00002C                     ___fldiv@a:
   548                           	callstack 0
   549  00002C                     _fround$1218:
   550                           	callstack 0
   551  00002C                     _scale$1219:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x2B
   555  00002C                     	ds	4
   556  000030                     ??___fldiv:
   557  000030                     scale@scl:
   558                           	callstack 0
   559  000030                     _fround$1217:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x2F
   563  000030                     	ds	1
   564  000031                     ?___fltol:
   565                           	callstack 0
   566  000031                     ___fltol@f1:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x30
   570  000031                     	ds	3
   571  000034                     fround@prec:
   572                           	callstack 0
   573  000034                     ___fldiv@rem:
   574                           	callstack 0
   575                           
   576                           ; 4 bytes @ 0x33
   577  000034                     	ds	1
   578  000035                     ??___fltol:
   579  000035                     ?___fladd:
   580                           	callstack 0
   581  000035                     ___fladd@b:
   582                           	callstack 0
   583                           
   584                           ; 4 bytes @ 0x34
   585  000035                     	ds	3
   586  000038                     ___fldiv@sign:
   587                           	callstack 0
   588                           
   589                           ; 1 bytes @ 0x37
   590  000038                     	ds	1
   591  000039                     ___fltol@sign1:
   592                           	callstack 0
   593  000039                     ___fldiv@new_exp:
   594                           	callstack 0
   595  000039                     ___fladd@a:
   596                           	callstack 0
   597                           
   598                           ; 4 bytes @ 0x38
   599  000039                     	ds	1
   600  00003A                     ___fltol@exp1:
   601                           	callstack 0
   602                           
   603                           ; 1 bytes @ 0x39
   604  00003A                     	ds	1
   605  00003B                     ___fldiv@grs:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0x3A
   609  00003B                     	ds	2
   610  00003D                     ??___fladd:
   611                           
   612                           ; 1 bytes @ 0x3C
   613  00003D                     	ds	2
   614  00003F                     ___fldiv@bexp:
   615                           	callstack 0
   616                           
   617                           ; 1 bytes @ 0x3E
   618  00003F                     	ds	1
   619  000040                     ___fldiv@aexp:
   620                           	callstack 0
   621                           
   622                           ; 1 bytes @ 0x3F
   623  000040                     	ds	1
   624  000041                     ___fladd@signs:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x40
   628  000041                     	ds	1
   629  000042                     ___fladd@aexp:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x41
   633  000042                     	ds	1
   634  000043                     ___fladd@bexp:
   635                           	callstack 0
   636                           
   637                           ; 1 bytes @ 0x42
   638  000043                     	ds	1
   639  000044                     ___fladd@grs:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0x43
   643  000044                     	ds	1
   644  000045                     ?___flsub:
   645                           	callstack 0
   646  000045                     ___flsub@b:
   647                           	callstack 0
   648                           
   649                           ; 4 bytes @ 0x44
   650  000045                     	ds	4
   651  000049                     ___flsub@a:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x48
   655  000049                     	ds	4
   656  00004D                     ?_sprintf:
   657                           	callstack 0
   658  00004D                     sprintf@sp:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x4C
   662  00004D                     	ds	2
   663  00004F                     sprintf@f:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x4E
   667  00004F                     	ds	6
   668  000055                     ??_sprintf:
   669                           
   670                           ; 1 bytes @ 0x54
   671  000055                     	ds	4
   672  000059                     _sprintf$1220:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0x58
   676  000059                     	ds	4
   677  00005D                     sprintf@ap:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x5C
   681  00005D                     	ds	2
   682  00005F                     sprintf@tmpval:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x5E
   686  00005F                     	ds	4
   687  000063                     sprintf@val:
   688                           	callstack 0
   689                           
   690                           ; 4 bytes @ 0x62
   691  000063                     	ds	4
   692  000067                     sprintf@eexp:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x66
   696  000067                     	ds	2
   697  000069                     sprintf@flag:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x68
   701  000069                     	ds	2
   702  00006B                     sprintf@width:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x6A
   706  00006B                     	ds	2
   707  00006D                     sprintf@fval:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x6C
   711  00006D                     	ds	4
   712  000071                     sprintf@prec:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x70
   716  000071                     	ds	2
   717  000073                     sprintf@c:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x72
   721  000073                     	ds	1
   722  000074                     
   723                           ; 1 bytes @ 0x73
   724 ;;
   725 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   726 ;;
   727 ;; *************** function _main *****************
   728 ;; Defined at:
   729 ;;		line 28 in file "mainADC.c"
   730 ;; Parameters:    Size  Location     Type
   731 ;;		None
   732 ;; Auto vars:     Size  Location     Type
   733 ;;		None
   734 ;; Return value:  Size  Location     Type
   735 ;;                  1    wreg      void 
   736 ;; Registers used:
   737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   738 ;; Tracked objects:
   739 ;;		On entry : 0/0
   740 ;;		On exit  : 0/0
   741 ;;		Unchanged: 0/0
   742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   743 ;;      Params:         0       0       0       0       0       0       0
   744 ;;      Locals:         0       0       0       0       0       0       0
   745 ;;      Temps:          0       0       0       0       0       0       0
   746 ;;      Totals:         0       0       0       0       0       0       0
   747 ;;Total ram usage:        0 bytes
   748 ;; Hardware stack levels required when called: 3
   749 ;; This function calls:
   750 ;;		_Lcd_Cmd
   751 ;;		_Lcd_Init
   752 ;;		_Lcd_Out
   753 ;;		___fldiv
   754 ;;		___flmul
   755 ;;		___xxtofl
   756 ;;		_adc_amostra
   757 ;;		_adc_init
   758 ;;		_sprintf
   759 ;; This function is called by:
   760 ;;		Startup code after reset
   761 ;; This function uses a non-reentrant model
   762 ;;
   763                           
   764                           	psect	text0
   765  002B8C                     __ptext0:
   766                           	callstack 0
   767  002B8C                     _main:
   768                           	callstack 28
   769  002B8C                     
   770                           ;mainADC.c: 31: ADCON1 = 0x6;
   771  002B8C  0E06               	movlw	6
   772  002B8E  6EC1               	movwf	193,c	;volatile
   773  002B90                     
   774                           ;mainADC.c: 35: INTCON2bits.RBPU = 1;
   775  002B90  8EF1               	bsf	241,7,c	;volatile
   776  002B92                     
   777                           ;mainADC.c: 38: TRISA = 0xFF;
   778  002B92  6892               	setf	146,c	;volatile
   779                           
   780                           ;mainADC.c: 39: TRISB = 0b00000000;
   781  002B94  0E00               	movlw	0
   782  002B96  6E93               	movwf	147,c	;volatile
   783                           
   784                           ;mainADC.c: 40: TRISC = 0b00000000;
   785  002B98  0E00               	movlw	0
   786  002B9A  6E94               	movwf	148,c	;volatile
   787                           
   788                           ;mainADC.c: 41: TRISD = 0b00001111;
   789  002B9C  0E0F               	movlw	15
   790  002B9E  6E95               	movwf	149,c	;volatile
   791                           
   792                           ;mainADC.c: 42: TRISE = 0b00000000;
   793  002BA0  0E00               	movlw	0
   794  002BA2  6E96               	movwf	150,c	;volatile
   795                           
   796                           ;mainADC.c: 44: PORTA = 0;
   797  002BA4  0E00               	movlw	0
   798  002BA6  6E80               	movwf	128,c	;volatile
   799                           
   800                           ;mainADC.c: 45: LATA = 0;
   801  002BA8  0E00               	movlw	0
   802  002BAA  6E89               	movwf	137,c	;volatile
   803                           
   804                           ;mainADC.c: 46: PORTB = 0;
   805  002BAC  0E00               	movlw	0
   806  002BAE  6E81               	movwf	129,c	;volatile
   807                           
   808                           ;mainADC.c: 47: LATB = 0;
   809  002BB0  0E00               	movlw	0
   810  002BB2  6E8A               	movwf	138,c	;volatile
   811                           
   812                           ;mainADC.c: 48: PORTC = 0;
   813  002BB4  0E00               	movlw	0
   814  002BB6  6E82               	movwf	130,c	;volatile
   815                           
   816                           ;mainADC.c: 49: LATC = 0;
   817  002BB8  0E00               	movlw	0
   818  002BBA  6E8B               	movwf	139,c	;volatile
   819                           
   820                           ;mainADC.c: 50: PORTD = 0;
   821  002BBC  0E00               	movlw	0
   822  002BBE  6E83               	movwf	131,c	;volatile
   823                           
   824                           ;mainADC.c: 51: LATD = 0;
   825  002BC0  0E00               	movlw	0
   826  002BC2  6E8C               	movwf	140,c	;volatile
   827                           
   828                           ;mainADC.c: 52: PORTE = 0;
   829  002BC4  0E00               	movlw	0
   830  002BC6  6E84               	movwf	132,c	;volatile
   831                           
   832                           ;mainADC.c: 53: LATE = 0;
   833  002BC8  0E00               	movlw	0
   834  002BCA  6E8D               	movwf	141,c	;volatile
   835  002BCC                     
   836                           ;mainADC.c: 55: adc_init();
   837  002BCC  EC2E  F01C         	call	_adc_init	;wreg free
   838  002BD0                     
   839                           ;mainADC.c: 56: Lcd_Init();
   840  002BD0  EC91  F017         	call	_Lcd_Init	;wreg free
   841  002BD4                     
   842                           ;mainADC.c: 57: Lcd_Cmd(12);
   843  002BD4  0E0C               	movlw	12
   844  002BD6  ECFB  F016         	call	_Lcd_Cmd
   845  002BDA                     
   846                           ;mainADC.c: 59: LATCbits.LC1 = 1;
   847  002BDA  828B               	bsf	139,1,c	;volatile
   848  002BDC                     l112:
   849  002BDC  0004               	clrwdt		;# 
   850  002BDE                     
   851                           ;mainADC.c: 67: adcResult = (adc_amostra(1));
   852  002BDE  0E01               	movlw	1
   853  002BE0  EC08  F01B         	call	_adc_amostra
   854  002BE4  C001  F078         	movff	?_adc_amostra,_adcResult
   855  002BE8  C002  F079         	movff	?_adc_amostra+1,_adcResult+1
   856  002BEC                     
   857                           ;mainADC.c: 68: volt = (adcResult*5.0)/1023;
   858  002BEC  0E00               	movlw	0
   859  002BEE  6E13               	movwf	___flmul@a^0,c
   860  002BF0  0E00               	movlw	0
   861  002BF2  6E14               	movwf	(___flmul@a+1)^0,c
   862  002BF4  0EA0               	movlw	160
   863  002BF6  6E15               	movwf	(___flmul@a+2)^0,c
   864  002BF8  0E40               	movlw	64
   865  002BFA  6E16               	movwf	(___flmul@a+3)^0,c
   866  002BFC  C078  F001         	movff	_adcResult,___xxtofl@val
   867  002C00  C079  F002         	movff	_adcResult+1,___xxtofl@val+1
   868  002C04  6A03               	clrf	(___xxtofl@val+2)^0,c
   869  002C06  6A04               	clrf	(___xxtofl@val+3)^0,c
   870  002C08  0E00               	movlw	0
   871  002C0A  EC9B  F013         	call	___xxtofl
   872  002C0E  C001  F00F         	movff	?___xxtofl,___flmul@b
   873  002C12  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   874  002C16  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   875  002C1A  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   876  002C1E  EC62  F00C         	call	___flmul	;wreg free
   877  002C22  C00F  F028         	movff	?___flmul,___fldiv@b
   878  002C26  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   879  002C2A  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   880  002C2E  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
   881  002C32  0E00               	movlw	0
   882  002C34  6E2C               	movwf	___fldiv@a^0,c
   883  002C36  0EC0               	movlw	192
   884  002C38  6E2D               	movwf	(___fldiv@a+1)^0,c
   885  002C3A  0E7F               	movlw	127
   886  002C3C  6E2E               	movwf	(___fldiv@a+2)^0,c
   887  002C3E  0E44               	movlw	68
   888  002C40  6E2F               	movwf	(___fldiv@a+3)^0,c
   889  002C42  EC7D  F010         	call	___fldiv	;wreg free
   890  002C46  C028  F074         	movff	?___fldiv,_volt
   891  002C4A  C029  F075         	movff	?___fldiv+1,_volt+1
   892  002C4E  C02A  F076         	movff	?___fldiv+2,_volt+2
   893  002C52  C02B  F077         	movff	?___fldiv+3,_volt+3
   894  002C56                     
   895                           ;mainADC.c: 69: sprintf(str, "ADC = %04d", adcResult);
   896  002C56  0E7C               	movlw	low _str
   897  002C58  6E4D               	movwf	sprintf@sp^0,c
   898  002C5A  0E00               	movlw	high _str
   899  002C5C  6E4E               	movwf	(sprintf@sp+1)^0,c
   900  002C5E  0EA3               	movlw	low STR_1
   901  002C60  6E4F               	movwf	sprintf@f^0,c
   902  002C62  0E06               	movlw	high STR_1
   903  002C64  6E50               	movwf	(sprintf@f+1)^0,c
   904  002C66  C078  F051         	movff	_adcResult,?_sprintf+4
   905  002C6A  C079  F052         	movff	_adcResult+1,?_sprintf+5
   906  002C6E  EC58  F003         	call	_sprintf	;wreg free
   907  002C72                     
   908                           ;mainADC.c: 70: Lcd_Out(1, 0, str);
   909  002C72  0E00               	movlw	0
   910  002C74  6E04               	movwf	Lcd_Out@x^0,c
   911  002C76  0E7C               	movlw	low _str
   912  002C78  6E05               	movwf	Lcd_Out@buffer^0,c
   913  002C7A  0E00               	movlw	high _str
   914  002C7C  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   915  002C7E  0E01               	movlw	1
   916  002C80  EC7F  F01A         	call	_Lcd_Out
   917  002C84                     
   918                           ;mainADC.c: 71: sprintf(str, "Tensao = %05.2f V", volt);
   919  002C84  0E7C               	movlw	low _str
   920  002C86  6E4D               	movwf	sprintf@sp^0,c
   921  002C88  0E00               	movlw	high _str
   922  002C8A  6E4E               	movwf	(sprintf@sp+1)^0,c
   923  002C8C  0E91               	movlw	low STR_2
   924  002C8E  6E4F               	movwf	sprintf@f^0,c
   925  002C90  0E06               	movlw	high STR_2
   926  002C92  6E50               	movwf	(sprintf@f+1)^0,c
   927  002C94  C074  F051         	movff	_volt,?_sprintf+4
   928  002C98  C075  F052         	movff	_volt+1,?_sprintf+5
   929  002C9C  C076  F053         	movff	_volt+2,?_sprintf+6
   930  002CA0  C077  F054         	movff	_volt+3,?_sprintf+7
   931  002CA4  EC58  F003         	call	_sprintf	;wreg free
   932  002CA8                     
   933                           ;mainADC.c: 73: Lcd_Out(2, 0, str);
   934  002CA8  0E00               	movlw	0
   935  002CAA  6E04               	movwf	Lcd_Out@x^0,c
   936  002CAC  0E7C               	movlw	low _str
   937  002CAE  6E05               	movwf	Lcd_Out@buffer^0,c
   938  002CB0  0E00               	movlw	high _str
   939  002CB2  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   940  002CB4  0E02               	movlw	2
   941  002CB6  EC7F  F01A         	call	_Lcd_Out
   942  002CBA  EFEE  F015         	goto	l112
   943  002CBE  EF00  F000         	goto	start
   944  002CC2                     __end_of_main:
   945                           	callstack 0
   946                           
   947 ;; *************** function _sprintf *****************
   948 ;; Defined at:
   949 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
   950 ;; Parameters:    Size  Location     Type
   951 ;;  sp              2   76[COMRAM] PTR unsigned char 
   952 ;;		 -> str(4), 
   953 ;;  f               2   78[COMRAM] PTR const unsigned char 
   954 ;;		 -> STR_2(18), STR_1(11), 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  fval            4  108[COMRAM] PTR const unsigned char 
   957 ;;  val             4   98[COMRAM] unsigned long 
   958 ;;  tmpval          4   94[COMRAM] struct .
   959 ;;  cp              3    0        PTR const unsigned char 
   960 ;;  prec            2  112[COMRAM] int 
   961 ;;  width           2  106[COMRAM] int 
   962 ;;  flag            2  104[COMRAM] unsigned short 
   963 ;;  eexp            2  102[COMRAM] int 
   964 ;;  ap              2   92[COMRAM] PTR void [1]
   965 ;;		 -> ?_sprintf(2), 
   966 ;;  len             2    0        unsigned int 
   967 ;;  c               1  114[COMRAM] unsigned char 
   968 ;;  d               1    0        unsigned char 
   969 ;; Return value:  Size  Location     Type
   970 ;;                  2   76[COMRAM] int 
   971 ;; Registers used:
   972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   973 ;; Tracked objects:
   974 ;;		On entry : 0/0
   975 ;;		On exit  : 0/0
   976 ;;		Unchanged: 0/0
   977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   978 ;;      Params:         8       0       0       0       0       0       0
   979 ;;      Locals:        27       0       0       0       0       0       0
   980 ;;      Temps:          4       0       0       0       0       0       0
   981 ;;      Totals:        39       0       0       0       0       0       0
   982 ;;Total ram usage:       39 bytes
   983 ;; Hardware stack levels used: 1
   984 ;; Hardware stack levels required when called: 2
   985 ;; This function calls:
   986 ;;		___awdiv
   987 ;;		___fladd
   988 ;;		___fleq
   989 ;;		___flge
   990 ;;		___flmul
   991 ;;		___flneg
   992 ;;		___flsub
   993 ;;		___fltol
   994 ;;		___lldiv
   995 ;;		___llmod
   996 ;;		___wmul
   997 ;;		___xxtofl
   998 ;;		__div_to_l_
   999 ;;		__tdiv_to_l_
  1000 ;;		_fround
  1001 ;;		_isdigit
  1002 ;;		_scale
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text1
  1009  0006B0                     __ptext1:
  1010                           	callstack 0
  1011  0006B0                     _sprintf:
  1012                           	callstack 28
  1013  0006B0                     
  1014                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  1015  0006B0  0E51               	movlw	low (?_sprintf+4)
  1016  0006B2  6E5D               	movwf	sprintf@ap^0,c
  1017  0006B4  0E00               	movlw	high (?_sprintf+4)
  1018  0006B6  6E5E               	movwf	(sprintf@ap+1)^0,c
  1019                           
  1020                           ;doprnt.c: 553: while((c = *f++)) {
  1021  0006B8  EFEA  F009         	goto	l3772
  1022  0006BC                     l3446:
  1023                           
  1024                           ;doprnt.c: 555: if(c != '%')
  1025  0006BC  0E25               	movlw	37
  1026  0006BE  1873               	xorwf	sprintf@c^0,w,c
  1027  0006C0  B4D8               	btfsc	status,2,c
  1028  0006C2  EF65  F003         	goto	u3581
  1029  0006C6  EF67  F003         	goto	u3580
  1030  0006CA                     u3581:
  1031  0006CA  EF71  F003         	goto	l3452
  1032  0006CE                     u3580:
  1033  0006CE                     
  1034                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1035  0006CE  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1036  0006D2  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1037  0006D6  C073  FFDF         	movff	sprintf@c,indf2
  1038  0006DA  4A4D               	infsnz	sprintf@sp^0,f,c
  1039  0006DC  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1040                           
  1041                           ;doprnt.c: 559: continue;
  1042  0006DE  EFEA  F009         	goto	l3772
  1043  0006E2                     l3452:
  1044                           
  1045                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  1046  0006E2  0E00               	movlw	0
  1047  0006E4  6E6C               	movwf	(sprintf@width+1)^0,c
  1048  0006E6  0E00               	movlw	0
  1049  0006E8  6E6B               	movwf	sprintf@width^0,c
  1050                           
  1051                           ;doprnt.c: 565: flag = 0;
  1052  0006EA  0E00               	movlw	0
  1053  0006EC  6E6A               	movwf	(sprintf@flag+1)^0,c
  1054  0006EE  0E00               	movlw	0
  1055  0006F0  6E69               	movwf	sprintf@flag^0,c
  1056  0006F2  EF7E  F003         	goto	l3458
  1057  0006F6                     l3454:
  1058                           
  1059                           ;doprnt.c: 597: flag |= 0x04;
  1060  0006F6  8469               	bsf	sprintf@flag^0,2,c
  1061                           
  1062                           ;doprnt.c: 598: f++;
  1063  0006F8  4A4F               	infsnz	sprintf@f^0,f,c
  1064  0006FA  2A50               	incf	(sprintf@f+1)^0,f,c
  1065  0006FC                     l3458:
  1066  0006FC  C04F  FFF6         	movff	sprintf@f,tblptrl
  1067  000700  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1068  000704                     	if	0	;tblptru may be non-zero
  1069  000704                     	endif
  1070  000704                     	if	0	;tblptru may be non-zero
  1071  000704                     	endif
  1072  000704  0008               	tblrd		*
  1073  000706  50F5               	movf	tablat,w,c
  1074                           
  1075                           ; Switch size 1, requested type "simple"
  1076                           ; Number of cases is 1, Range of values is 48 to 48
  1077                           ; switch strategies available:
  1078                           ; Name         Instructions Cycles
  1079                           ; simple_byte            4     3 (average)
  1080                           ;	Chosen strategy is simple_byte
  1081  000708  0A30               	xorlw	48	; case 48
  1082  00070A  B4D8               	btfsc	status,2,c
  1083  00070C  EF7B  F003         	goto	l3454
  1084  000710  EF8A  F003         	goto	l3460
  1085  000714                     l3460:
  1086                           
  1087                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  1088  000714  C04F  FFF6         	movff	sprintf@f,tblptrl
  1089  000718  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1090  00071C                     	if	0	;tblptru may be non-zero
  1091  00071C                     	endif
  1092  00071C                     	if	0	;tblptru may be non-zero
  1093  00071C                     	endif
  1094  00071C  0008               	tblrd		*
  1095  00071E  50F5               	movf	tablat,w,c
  1096  000720  ECF1  F01B         	call	_isdigit
  1097  000724  A0D8               	btfss	status,0,c
  1098  000726  EF97  F003         	goto	u3591
  1099  00072A  EF99  F003         	goto	u3590
  1100  00072E                     u3591:
  1101  00072E  EFD0  F003         	goto	l3472
  1102  000732                     u3590:
  1103  000732                     
  1104                           ;doprnt.c: 615: width = 0;
  1105  000732  0E00               	movlw	0
  1106  000734  6E6C               	movwf	(sprintf@width+1)^0,c
  1107  000736  0E00               	movlw	0
  1108  000738  6E6B               	movwf	sprintf@width^0,c
  1109  00073A                     l3464:
  1110                           
  1111                           ;doprnt.c: 617: width *= 10;
  1112  00073A  C06B  F001         	movff	sprintf@width,___wmul@multiplier
  1113  00073E  C06C  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1114  000742  0E00               	movlw	0
  1115  000744  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1116  000746  0E0A               	movlw	10
  1117  000748  6E03               	movwf	___wmul@multiplicand^0,c
  1118  00074A  EC0A  F01C         	call	___wmul	;wreg free
  1119  00074E  C001  F06B         	movff	?___wmul,sprintf@width
  1120  000752  C002  F06C         	movff	?___wmul+1,sprintf@width+1
  1121  000756                     
  1122                           ;doprnt.c: 618: width += *f++ - '0';
  1123  000756  0ED0               	movlw	208
  1124  000758  6E55               	movwf	??_sprintf^0,c
  1125  00075A  0EFF               	movlw	255
  1126  00075C  6E56               	movwf	(??_sprintf+1)^0,c
  1127  00075E  C04F  FFF6         	movff	sprintf@f,tblptrl
  1128  000762  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1129  000766                     	if	0	;tblptru may be non-zero
  1130  000766                     	endif
  1131  000766                     	if	0	;tblptru may be non-zero
  1132  000766                     	endif
  1133  000766  0008               	tblrd		*
  1134  000768  50F5               	movf	tablat,w,c
  1135  00076A  6E57               	movwf	(??_sprintf+2)^0,c
  1136  00076C  6A58               	clrf	(??_sprintf+3)^0,c
  1137  00076E  5055               	movf	??_sprintf^0,w,c
  1138  000770  2657               	addwf	(??_sprintf+2)^0,f,c
  1139  000772  5056               	movf	(??_sprintf+1)^0,w,c
  1140  000774  2258               	addwfc	(??_sprintf+3)^0,f,c
  1141  000776  5057               	movf	(??_sprintf+2)^0,w,c
  1142  000778  266B               	addwf	sprintf@width^0,f,c
  1143  00077A  5058               	movf	(??_sprintf+3)^0,w,c
  1144  00077C  226C               	addwfc	(sprintf@width+1)^0,f,c
  1145  00077E  4A4F               	infsnz	sprintf@f^0,f,c
  1146  000780  2A50               	incf	(sprintf@f+1)^0,f,c
  1147  000782                     
  1148                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  1149  000782  C04F  FFF6         	movff	sprintf@f,tblptrl
  1150  000786  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1151  00078A                     	if	0	;tblptru may be non-zero
  1152  00078A                     	endif
  1153  00078A                     	if	0	;tblptru may be non-zero
  1154  00078A                     	endif
  1155  00078A  0008               	tblrd		*
  1156  00078C  50F5               	movf	tablat,w,c
  1157  00078E  ECF1  F01B         	call	_isdigit
  1158  000792  B0D8               	btfsc	status,0,c
  1159  000794  EFCE  F003         	goto	u3601
  1160  000798  EFD0  F003         	goto	u3600
  1161  00079C                     u3601:
  1162  00079C  EF9D  F003         	goto	l3464
  1163  0007A0                     u3600:
  1164  0007A0                     l3472:
  1165                           
  1166                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  1167  0007A0  C04F  FFF6         	movff	sprintf@f,tblptrl
  1168  0007A4  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1169  0007A8                     	if	0	;tblptru may be non-zero
  1170  0007A8                     	endif
  1171  0007A8                     	if	0	;tblptru may be non-zero
  1172  0007A8                     	endif
  1173  0007A8  0008               	tblrd		*
  1174  0007AA  50F5               	movf	tablat,w,c
  1175  0007AC  0A2E               	xorlw	46
  1176  0007AE  A4D8               	btfss	status,2,c
  1177  0007B0  EFDC  F003         	goto	u3611
  1178  0007B4  EFDE  F003         	goto	u3610
  1179  0007B8                     u3611:
  1180  0007B8  EF1C  F004         	goto	l3486
  1181  0007BC                     u3610:
  1182  0007BC                     
  1183                           ;doprnt.c: 629: flag |= 0x4000;
  1184  0007BC  8C6A               	bsf	(sprintf@flag+1)^0,6,c
  1185                           
  1186                           ;doprnt.c: 630: f++;
  1187  0007BE  4A4F               	infsnz	sprintf@f^0,f,c
  1188  0007C0  2A50               	incf	(sprintf@f+1)^0,f,c
  1189  0007C2                     
  1190                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  1191  0007C2  0E00               	movlw	0
  1192  0007C4  6E72               	movwf	(sprintf@prec+1)^0,c
  1193  0007C6  0E00               	movlw	0
  1194  0007C8  6E71               	movwf	sprintf@prec^0,c
  1195                           
  1196                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  1197  0007CA  EF0B  F004         	goto	l3484
  1198  0007CE                     l3478:
  1199                           
  1200                           ;doprnt.c: 647: prec *= 10;
  1201  0007CE  C071  F001         	movff	sprintf@prec,___wmul@multiplier
  1202  0007D2  C072  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1203  0007D6  0E00               	movlw	0
  1204  0007D8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1205  0007DA  0E0A               	movlw	10
  1206  0007DC  6E03               	movwf	___wmul@multiplicand^0,c
  1207  0007DE  EC0A  F01C         	call	___wmul	;wreg free
  1208  0007E2  C001  F071         	movff	?___wmul,sprintf@prec
  1209  0007E6  C002  F072         	movff	?___wmul+1,sprintf@prec+1
  1210  0007EA                     
  1211                           ;doprnt.c: 648: prec += *f++ - '0';
  1212  0007EA  0ED0               	movlw	208
  1213  0007EC  6E55               	movwf	??_sprintf^0,c
  1214  0007EE  0EFF               	movlw	255
  1215  0007F0  6E56               	movwf	(??_sprintf+1)^0,c
  1216  0007F2  C04F  FFF6         	movff	sprintf@f,tblptrl
  1217  0007F6  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1218  0007FA                     	if	0	;tblptru may be non-zero
  1219  0007FA                     	endif
  1220  0007FA                     	if	0	;tblptru may be non-zero
  1221  0007FA                     	endif
  1222  0007FA  0008               	tblrd		*
  1223  0007FC  50F5               	movf	tablat,w,c
  1224  0007FE  6E57               	movwf	(??_sprintf+2)^0,c
  1225  000800  6A58               	clrf	(??_sprintf+3)^0,c
  1226  000802  5055               	movf	??_sprintf^0,w,c
  1227  000804  2657               	addwf	(??_sprintf+2)^0,f,c
  1228  000806  5056               	movf	(??_sprintf+1)^0,w,c
  1229  000808  2258               	addwfc	(??_sprintf+3)^0,f,c
  1230  00080A  5057               	movf	(??_sprintf+2)^0,w,c
  1231  00080C  2671               	addwf	sprintf@prec^0,f,c
  1232  00080E  5058               	movf	(??_sprintf+3)^0,w,c
  1233  000810  2272               	addwfc	(sprintf@prec+1)^0,f,c
  1234  000812  4A4F               	infsnz	sprintf@f^0,f,c
  1235  000814  2A50               	incf	(sprintf@f+1)^0,f,c
  1236  000816                     l3484:
  1237  000816  C04F  FFF6         	movff	sprintf@f,tblptrl
  1238  00081A  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1239  00081E                     	if	0	;tblptru may be non-zero
  1240  00081E                     	endif
  1241  00081E                     	if	0	;tblptru may be non-zero
  1242  00081E                     	endif
  1243  00081E  0008               	tblrd		*
  1244  000820  50F5               	movf	tablat,w,c
  1245  000822  ECF1  F01B         	call	_isdigit
  1246  000826  B0D8               	btfsc	status,0,c
  1247  000828  EF18  F004         	goto	u3621
  1248  00082C  EF1A  F004         	goto	u3620
  1249  000830                     u3621:
  1250  000830  EFE7  F003         	goto	l3478
  1251  000834                     u3620:
  1252  000834  EF26  F004         	goto	l3494
  1253  000838                     l3486:
  1254                           
  1255                           ;doprnt.c: 652: prec = 0;
  1256  000838  0E00               	movlw	0
  1257  00083A  6E72               	movwf	(sprintf@prec+1)^0,c
  1258  00083C  0E00               	movlw	0
  1259  00083E  6E71               	movwf	sprintf@prec^0,c
  1260  000840                     
  1261                           ;doprnt.c: 654: flag |= 0x1000;
  1262  000840  886A               	bsf	(sprintf@flag+1)^0,4,c
  1263  000842  EF26  F004         	goto	l3494
  1264  000846                     l3490:
  1265                           
  1266                           ;doprnt.c: 689: flag |= 0x400;
  1267  000846  846A               	bsf	(sprintf@flag+1)^0,2,c
  1268                           
  1269                           ;doprnt.c: 690: break;
  1270  000848  EF42  F004         	goto	l3496
  1271  00084C                     l3494:
  1272  00084C  C04F  FFF6         	movff	sprintf@f,tblptrl
  1273  000850  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1274  000854  4A4F               	infsnz	sprintf@f^0,f,c
  1275  000856  2A50               	incf	(sprintf@f+1)^0,f,c
  1276  000858                     	if	0	;tblptru may be non-zero
  1277  000858                     	endif
  1278  000858                     	if	0	;tblptru may be non-zero
  1279  000858                     	endif
  1280  000858  0008               	tblrd		*
  1281  00085A  CFF5 F073          	movff	tablat,sprintf@c
  1282  00085E  5073               	movf	sprintf@c^0,w,c
  1283                           
  1284                           ; Switch size 1, requested type "simple"
  1285                           ; Number of cases is 4, Range of values is 0 to 105
  1286                           ; switch strategies available:
  1287                           ; Name         Instructions Cycles
  1288                           ; simple_byte           13     7 (average)
  1289                           ;	Chosen strategy is simple_byte
  1290  000860  0A00               	xorlw	0	; case 0
  1291  000862  B4D8               	btfsc	status,2,c
  1292  000864  EFFB  F009         	goto	l3774
  1293  000868  0A64               	xorlw	100	; case 100
  1294  00086A  B4D8               	btfsc	status,2,c
  1295  00086C  EF42  F004         	goto	l3496
  1296  000870  0A02               	xorlw	2	; case 102
  1297  000872  B4D8               	btfsc	status,2,c
  1298  000874  EF23  F004         	goto	l3490
  1299  000878  0A0F               	xorlw	15	; case 105
  1300  00087A  B4D8               	btfsc	status,2,c
  1301  00087C  EF42  F004         	goto	l3496
  1302  000880  EFEA  F009         	goto	l3772
  1303  000884                     l3496:
  1304                           
  1305                           ;doprnt.c: 851: if(flag & (0x700)) {
  1306  000884  0E07               	movlw	7
  1307  000886  146A               	andwf	(sprintf@flag+1)^0,w,c
  1308  000888  B4D8               	btfsc	status,2,c
  1309  00088A  EF49  F004         	goto	u3631
  1310  00088E  EF4B  F004         	goto	u3630
  1311  000892                     u3631:
  1312  000892  EF44  F008         	goto	l3676
  1313  000896                     u3630:
  1314  000896                     
  1315                           ;doprnt.c: 853: if(flag & 0x1000)
  1316  000896  A86A               	btfss	(sprintf@flag+1)^0,4,c
  1317  000898  EF50  F004         	goto	u3641
  1318  00089C  EF52  F004         	goto	u3640
  1319  0008A0                     u3641:
  1320  0008A0  EF56  F004         	goto	l3502
  1321  0008A4                     u3640:
  1322  0008A4                     
  1323                           ;doprnt.c: 855: prec = 6;
  1324  0008A4  0E00               	movlw	0
  1325  0008A6  6E72               	movwf	(sprintf@prec+1)^0,c
  1326  0008A8  0E06               	movlw	6
  1327  0008AA  6E71               	movwf	sprintf@prec^0,c
  1328  0008AC                     l3502:
  1329                           
  1330                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1331  0008AC  C05D  FFD9         	movff	sprintf@ap,fsr2l
  1332  0008B0  C05E  FFDA         	movff	sprintf@ap+1,fsr2h
  1333  0008B4  CFDE F06D          	movff	postinc2,sprintf@fval
  1334  0008B8  CFDE F06E          	movff	postinc2,sprintf@fval+1
  1335  0008BC  CFDE F06F          	movff	postinc2,sprintf@fval+2
  1336  0008C0  CFDE F070          	movff	postinc2,sprintf@fval+3
  1337  0008C4  0E04               	movlw	4
  1338  0008C6  265D               	addwf	sprintf@ap^0,f,c
  1339  0008C8  0E00               	movlw	0
  1340  0008CA  225E               	addwfc	(sprintf@ap+1)^0,f,c
  1341  0008CC                     
  1342                           ;doprnt.c: 857: if(fval < 0.0) {
  1343  0008CC  BE70               	btfsc	(sprintf@fval+3)^0,7,c
  1344  0008CE  EF6D  F004         	goto	u3650
  1345  0008D2  EF6B  F004         	goto	u3651
  1346  0008D6                     u3651:
  1347  0008D6  EF81  F004         	goto	l3512
  1348  0008DA                     u3650:
  1349  0008DA                     
  1350                           ;doprnt.c: 858: fval = -fval;
  1351  0008DA  C06D  F001         	movff	sprintf@fval,___flneg@f1
  1352  0008DE  C06E  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1353  0008E2  C06F  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1354  0008E6  C070  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1355  0008EA  ECD5  F01B         	call	___flneg	;wreg free
  1356  0008EE  C001  F06D         	movff	?___flneg,sprintf@fval
  1357  0008F2  C002  F06E         	movff	?___flneg+1,sprintf@fval+1
  1358  0008F6  C003  F06F         	movff	?___flneg+2,sprintf@fval+2
  1359  0008FA  C004  F070         	movff	?___flneg+3,sprintf@fval+3
  1360  0008FE                     
  1361                           ;doprnt.c: 859: flag |= 0x03;
  1362  0008FE  0E03               	movlw	3
  1363  000900  1269               	iorwf	sprintf@flag^0,f,c
  1364  000902                     l3512:
  1365                           
  1366                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  1367  000902  0E00               	movlw	0
  1368  000904  6E68               	movwf	(sprintf@eexp+1)^0,c
  1369  000906  0E00               	movlw	0
  1370  000908  6E67               	movwf	sprintf@eexp^0,c
  1371  00090A                     
  1372                           ;doprnt.c: 862: if( fval!=0) {
  1373  00090A  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1374  00090E  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1375  000912  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1376  000916  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1377  00091A  0E00               	movlw	0
  1378  00091C  6E05               	movwf	___fleq@ff2^0,c
  1379  00091E  0E00               	movlw	0
  1380  000920  6E06               	movwf	(___fleq@ff2+1)^0,c
  1381  000922  0E00               	movlw	0
  1382  000924  6E07               	movwf	(___fleq@ff2+2)^0,c
  1383  000926  0E00               	movlw	0
  1384  000928  6E08               	movwf	(___fleq@ff2+3)^0,c
  1385  00092A  ECD8  F019         	call	___fleq	;wreg free
  1386  00092E  B0D8               	btfsc	status,0,c
  1387  000930  EF9C  F004         	goto	u3661
  1388  000934  EF9E  F004         	goto	u3660
  1389  000938                     u3661:
  1390  000938  EF2D  F005         	goto	l3540
  1391  00093C                     u3660:
  1392  00093C                     
  1393                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  1394  00093C  346F               	rlcf	(sprintf@fval+2)^0,w,c
  1395  00093E  3470               	rlcf	(sprintf@fval+3)^0,w,c
  1396  000940  0F82               	addlw	130
  1397  000942  6E67               	movwf	sprintf@eexp^0,c
  1398  000944  6A68               	clrf	(sprintf@eexp+1)^0,c
  1399  000946  0EFF               	movlw	255
  1400  000948  2268               	addwfc	(sprintf@eexp+1)^0,f,c
  1401  00094A                     
  1402                           ;doprnt.c: 864: eexp--;
  1403  00094A  0667               	decf	sprintf@eexp^0,f,c
  1404  00094C  A0D8               	btfss	status,0,c
  1405  00094E  0668               	decf	(sprintf@eexp+1)^0,f,c
  1406  000950                     
  1407                           ;doprnt.c: 865: eexp *= 3;
  1408  000950  C067  F001         	movff	sprintf@eexp,___wmul@multiplier
  1409  000954  C068  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  1410  000958  0E00               	movlw	0
  1411  00095A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1412  00095C  0E03               	movlw	3
  1413  00095E  6E03               	movwf	___wmul@multiplicand^0,c
  1414  000960  EC0A  F01C         	call	___wmul	;wreg free
  1415  000964  C001  F067         	movff	?___wmul,sprintf@eexp
  1416  000968  C002  F068         	movff	?___wmul+1,sprintf@eexp+1
  1417  00096C                     
  1418                           ;doprnt.c: 866: eexp /= 10;
  1419  00096C  C067  F007         	movff	sprintf@eexp,___awdiv@dividend
  1420  000970  C068  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  1421  000974  0E00               	movlw	0
  1422  000976  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1423  000978  0E0A               	movlw	10
  1424  00097A  6E09               	movwf	___awdiv@divisor^0,c
  1425  00097C  EC1E  F019         	call	___awdiv	;wreg free
  1426  000980  C007  F067         	movff	?___awdiv,sprintf@eexp
  1427  000984  C008  F068         	movff	?___awdiv+1,sprintf@eexp+1
  1428  000988                     
  1429                           ;doprnt.c: 867: if(eexp < 0)
  1430  000988  BE68               	btfsc	(sprintf@eexp+1)^0,7,c
  1431  00098A  EFCB  F004         	goto	u3670
  1432  00098E  EFC9  F004         	goto	u3671
  1433  000992                     u3671:
  1434  000992  EFCE  F004         	goto	l3528
  1435  000996                     u3670:
  1436  000996                     
  1437                           ;doprnt.c: 868: eexp--;
  1438  000996  0667               	decf	sprintf@eexp^0,f,c
  1439  000998  A0D8               	btfss	status,0,c
  1440  00099A  0668               	decf	(sprintf@eexp+1)^0,f,c
  1441  00099C                     l3528:
  1442                           
  1443                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  1444  00099C  5067               	movf	sprintf@eexp^0,w,c
  1445  00099E  0800               	sublw	0
  1446  0009A0  EC77  F00E         	call	_scale
  1447  0009A4  C028  F05F         	movff	?_scale,sprintf@tmpval
  1448  0009A8  C029  F060         	movff	?_scale+1,sprintf@tmpval+1
  1449  0009AC  C02A  F061         	movff	?_scale+2,sprintf@tmpval+2
  1450  0009B0  C02B  F062         	movff	?_scale+3,sprintf@tmpval+3
  1451  0009B4                     
  1452                           ;doprnt.c: 873: tmpval.integ *= fval;
  1453  0009B4  C05F  F00F         	movff	sprintf@tmpval,___flmul@b
  1454  0009B8  C060  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1455  0009BC  C061  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1456  0009C0  C062  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1457  0009C4  C06D  F013         	movff	sprintf@fval,___flmul@a
  1458  0009C8  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  1459  0009CC  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  1460  0009D0  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  1461  0009D4  EC62  F00C         	call	___flmul	;wreg free
  1462  0009D8  C00F  F05F         	movff	?___flmul,sprintf@tmpval
  1463  0009DC  C010  F060         	movff	?___flmul+1,sprintf@tmpval+1
  1464  0009E0  C011  F061         	movff	?___flmul+2,sprintf@tmpval+2
  1465  0009E4  C012  F062         	movff	?___flmul+3,sprintf@tmpval+3
  1466  0009E8                     
  1467                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  1468  0009E8  C05F  F001         	movff	sprintf@tmpval,___flge@ff1
  1469  0009EC  C060  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1470  0009F0  C061  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1471  0009F4  C062  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1472  0009F8  0E00               	movlw	0
  1473  0009FA  6E05               	movwf	___flge@ff2^0,c
  1474  0009FC  0E00               	movlw	0
  1475  0009FE  6E06               	movwf	(___flge@ff2+1)^0,c
  1476  000A00  0E80               	movlw	128
  1477  000A02  6E07               	movwf	(___flge@ff2+2)^0,c
  1478  000A04  0E3F               	movlw	63
  1479  000A06  6E08               	movwf	(___flge@ff2+3)^0,c
  1480  000A08  EC9C  F018         	call	___flge	;wreg free
  1481  000A0C  B0D8               	btfsc	status,0,c
  1482  000A0E  EF0B  F005         	goto	u3681
  1483  000A12  EF0D  F005         	goto	u3680
  1484  000A16                     u3681:
  1485  000A16  EF12  F005         	goto	l3536
  1486  000A1A                     u3680:
  1487  000A1A                     
  1488                           ;doprnt.c: 875: eexp--;
  1489  000A1A  0667               	decf	sprintf@eexp^0,f,c
  1490  000A1C  A0D8               	btfss	status,0,c
  1491  000A1E  0668               	decf	(sprintf@eexp+1)^0,f,c
  1492  000A20  EF2D  F005         	goto	l3540
  1493  000A24                     l3536:
  1494                           
  1495                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  1496  000A24  C05F  F001         	movff	sprintf@tmpval,___flge@ff1
  1497  000A28  C060  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1498  000A2C  C061  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1499  000A30  C062  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1500  000A34  0E00               	movlw	0
  1501  000A36  6E05               	movwf	___flge@ff2^0,c
  1502  000A38  0E00               	movlw	0
  1503  000A3A  6E06               	movwf	(___flge@ff2+1)^0,c
  1504  000A3C  0E20               	movlw	32
  1505  000A3E  6E07               	movwf	(___flge@ff2+2)^0,c
  1506  000A40  0E41               	movlw	65
  1507  000A42  6E08               	movwf	(___flge@ff2+3)^0,c
  1508  000A44  EC9C  F018         	call	___flge	;wreg free
  1509  000A48  A0D8               	btfss	status,0,c
  1510  000A4A  EF29  F005         	goto	u3691
  1511  000A4E  EF2B  F005         	goto	u3690
  1512  000A52                     u3691:
  1513  000A52  EF2D  F005         	goto	l3540
  1514  000A56                     u3690:
  1515  000A56                     
  1516                           ;doprnt.c: 877: eexp++;
  1517  000A56  4A67               	infsnz	sprintf@eexp^0,f,c
  1518  000A58  2A68               	incf	(sprintf@eexp+1)^0,f,c
  1519  000A5A                     l3540:
  1520                           
  1521                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  1522  000A5A  BE72               	btfsc	(sprintf@prec+1)^0,7,c
  1523  000A5C  EF3B  F005         	goto	u3700
  1524  000A60  5072               	movf	(sprintf@prec+1)^0,w,c
  1525  000A62  E107               	bnz	u3701
  1526  000A64  0E0D               	movlw	13
  1527  000A66  5C71               	subwf	sprintf@prec^0,w,c
  1528  000A68  B0D8               	btfsc	status,0,c
  1529  000A6A  EF39  F005         	goto	u3701
  1530  000A6E  EF3B  F005         	goto	u3700
  1531  000A72                     u3701:
  1532  000A72  EF58  F005         	goto	l3544
  1533  000A76                     u3700:
  1534  000A76                     
  1535                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  1536  000A76  C06D  F035         	movff	sprintf@fval,___fladd@b
  1537  000A7A  C06E  F036         	movff	sprintf@fval+1,___fladd@b+1
  1538  000A7E  C06F  F037         	movff	sprintf@fval+2,___fladd@b+2
  1539  000A82  C070  F038         	movff	sprintf@fval+3,___fladd@b+3
  1540  000A86  5071               	movf	sprintf@prec^0,w,c
  1541  000A88  EC4A  F012         	call	_fround
  1542  000A8C  C028  F039         	movff	?_fround,___fladd@a
  1543  000A90  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1544  000A94  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1545  000A98  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1546  000A9C  EC02  F00A         	call	___fladd	;wreg free
  1547  000AA0  C035  F06D         	movff	?___fladd,sprintf@fval
  1548  000AA4  C036  F06E         	movff	?___fladd+1,sprintf@fval+1
  1549  000AA8  C037  F06F         	movff	?___fladd+2,sprintf@fval+2
  1550  000AAC  C038  F070         	movff	?___fladd+3,sprintf@fval+3
  1551  000AB0                     l3544:
  1552                           
  1553                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1554  000AB0  BE68               	btfsc	(sprintf@eexp+1)^0,7,c
  1555  000AB2  EF66  F005         	goto	u3710
  1556  000AB6  5068               	movf	(sprintf@eexp+1)^0,w,c
  1557  000AB8  E107               	bnz	u3711
  1558  000ABA  0E0A               	movlw	10
  1559  000ABC  5C67               	subwf	sprintf@eexp^0,w,c
  1560  000ABE  B0D8               	btfsc	status,0,c
  1561  000AC0  EF64  F005         	goto	u3711
  1562  000AC4  EF66  F005         	goto	u3710
  1563  000AC8                     u3711:
  1564  000AC8  EFA2  F005         	goto	l3552
  1565  000ACC                     u3710:
  1566  000ACC  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1567  000AD0  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1568  000AD4  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1569  000AD8  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1570  000ADC  0E00               	movlw	0
  1571  000ADE  6E05               	movwf	___fleq@ff2^0,c
  1572  000AE0  0E00               	movlw	0
  1573  000AE2  6E06               	movwf	(___fleq@ff2+1)^0,c
  1574  000AE4  0E00               	movlw	0
  1575  000AE6  6E07               	movwf	(___fleq@ff2+2)^0,c
  1576  000AE8  0E00               	movlw	0
  1577  000AEA  6E08               	movwf	(___fleq@ff2+3)^0,c
  1578  000AEC  ECD8  F019         	call	___fleq	;wreg free
  1579  000AF0  B0D8               	btfsc	status,0,c
  1580  000AF2  EF7D  F005         	goto	u3721
  1581  000AF6  EF7F  F005         	goto	u3720
  1582  000AFA                     u3721:
  1583  000AFA  EFF4  F005         	goto	l3566
  1584  000AFE                     u3720:
  1585  000AFE  C06D  F031         	movff	sprintf@fval,___fltol@f1
  1586  000B02  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1587  000B06  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1588  000B0A  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1589  000B0E  EC19  F018         	call	___fltol	;wreg free
  1590  000B12  5031               	movf	?___fltol^0,w,c
  1591  000B14  1032               	iorwf	(?___fltol+1)^0,w,c
  1592  000B16  1033               	iorwf	(?___fltol+2)^0,w,c
  1593  000B18  1034               	iorwf	(?___fltol+3)^0,w,c
  1594  000B1A  A4D8               	btfss	status,2,c
  1595  000B1C  EF92  F005         	goto	u3731
  1596  000B20  EF94  F005         	goto	u3730
  1597  000B24                     u3731:
  1598  000B24  EFF4  F005         	goto	l3566
  1599  000B28                     u3730:
  1600  000B28  BE68               	btfsc	(sprintf@eexp+1)^0,7,c
  1601  000B2A  EFA0  F005         	goto	u3741
  1602  000B2E  5068               	movf	(sprintf@eexp+1)^0,w,c
  1603  000B30  E109               	bnz	u3740
  1604  000B32  0E02               	movlw	2
  1605  000B34  5C67               	subwf	sprintf@eexp^0,w,c
  1606  000B36  A0D8               	btfss	status,0,c
  1607  000B38  EFA0  F005         	goto	u3741
  1608  000B3C  EFA2  F005         	goto	u3740
  1609  000B40                     u3741:
  1610  000B40  EFF4  F005         	goto	l3566
  1611  000B44                     u3740:
  1612  000B44                     l3552:
  1613                           
  1614                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  1615  000B44  C05F  F001         	movff	sprintf@tmpval,___flge@ff1
  1616  000B48  C060  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1617  000B4C  C061  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1618  000B50  C062  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1619  000B54  0E5F               	movlw	95
  1620  000B56  6E05               	movwf	___flge@ff2^0,c
  1621  000B58  0E70               	movlw	112
  1622  000B5A  6E06               	movwf	(___flge@ff2+1)^0,c
  1623  000B5C  0E89               	movlw	137
  1624  000B5E  6E07               	movwf	(___flge@ff2+2)^0,c
  1625  000B60  0E40               	movlw	64
  1626  000B62  6E08               	movwf	(___flge@ff2+3)^0,c
  1627  000B64  EC9C  F018         	call	___flge	;wreg free
  1628  000B68  B0D8               	btfsc	status,0,c
  1629  000B6A  EFB9  F005         	goto	u3751
  1630  000B6E  EFBB  F005         	goto	u3750
  1631  000B72                     u3751:
  1632  000B72  EFC1  F005         	goto	l3556
  1633  000B76                     u3750:
  1634  000B76                     
  1635                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1636  000B76  0EF7               	movlw	247
  1637  000B78  2667               	addwf	sprintf@eexp^0,f,c
  1638  000B7A  0EFF               	movlw	255
  1639  000B7C  2268               	addwfc	(sprintf@eexp+1)^0,f,c
  1640                           
  1641                           ;doprnt.c: 1148: }else{
  1642  000B7E  EFC5  F005         	goto	l3558
  1643  000B82                     l3556:
  1644                           
  1645                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1646  000B82  0EF8               	movlw	248
  1647  000B84  2667               	addwf	sprintf@eexp^0,f,c
  1648  000B86  0EFF               	movlw	255
  1649  000B88  2268               	addwfc	(sprintf@eexp+1)^0,f,c
  1650  000B8A                     l3558:
  1651                           
  1652                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1653  000B8A  5067               	movf	sprintf@eexp^0,w,c
  1654  000B8C  EC77  F00E         	call	_scale
  1655  000B90  C028  F05F         	movff	?_scale,sprintf@tmpval
  1656  000B94  C029  F060         	movff	?_scale+1,sprintf@tmpval+1
  1657  000B98  C02A  F061         	movff	?_scale+2,sprintf@tmpval+2
  1658  000B9C  C02B  F062         	movff	?_scale+3,sprintf@tmpval+3
  1659  000BA0  C06D  F001         	movff	sprintf@fval,__div_to_l_@f1
  1660  000BA4  C06E  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1661  000BA8  C06F  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1662  000BAC  C070  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1663  000BB0  C05F  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  1664  000BB4  C060  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1665  000BB8  C061  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1666  000BBC  C062  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1667  000BC0  EC20  F015         	call	__div_to_l_	;wreg free
  1668  000BC4  C001  F063         	movff	?__div_to_l_,sprintf@val
  1669  000BC8  C002  F064         	movff	?__div_to_l_+1,sprintf@val+1
  1670  000BCC  C003  F065         	movff	?__div_to_l_+2,sprintf@val+2
  1671  000BD0  C004  F066         	movff	?__div_to_l_+3,sprintf@val+3
  1672  000BD4                     
  1673                           ;doprnt.c: 1155: fval = 0.0;
  1674  000BD4  0E00               	movlw	0
  1675  000BD6  6E6D               	movwf	sprintf@fval^0,c
  1676  000BD8  0E00               	movlw	0
  1677  000BDA  6E6E               	movwf	(sprintf@fval+1)^0,c
  1678  000BDC  0E00               	movlw	0
  1679  000BDE  6E6F               	movwf	(sprintf@fval+2)^0,c
  1680  000BE0  0E00               	movlw	0
  1681  000BE2  6E70               	movwf	(sprintf@fval+3)^0,c
  1682                           
  1683                           ;doprnt.c: 1156: } else {
  1684  000BE4  EF2F  F006         	goto	l3570
  1685  000BE8                     l3566:
  1686                           
  1687                           ;doprnt.c: 1157: val = (unsigned long)fval;
  1688  000BE8  C06D  F031         	movff	sprintf@fval,___fltol@f1
  1689  000BEC  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1690  000BF0  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1691  000BF4  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1692  000BF8  EC19  F018         	call	___fltol	;wreg free
  1693  000BFC  C031  F063         	movff	?___fltol,sprintf@val
  1694  000C00  C032  F064         	movff	?___fltol+1,sprintf@val+1
  1695  000C04  C033  F065         	movff	?___fltol+2,sprintf@val+2
  1696  000C08  C034  F066         	movff	?___fltol+3,sprintf@val+3
  1697                           
  1698                           ;doprnt.c: 1158: fval -= (double)val;
  1699  000C0C  C06D  F045         	movff	sprintf@fval,___flsub@b
  1700  000C10  C06E  F046         	movff	sprintf@fval+1,___flsub@b+1
  1701  000C14  C06F  F047         	movff	sprintf@fval+2,___flsub@b+2
  1702  000C18  C070  F048         	movff	sprintf@fval+3,___flsub@b+3
  1703  000C1C  C063  F001         	movff	sprintf@val,___xxtofl@val
  1704  000C20  C064  F002         	movff	sprintf@val+1,___xxtofl@val+1
  1705  000C24  C065  F003         	movff	sprintf@val+2,___xxtofl@val+2
  1706  000C28  C066  F004         	movff	sprintf@val+3,___xxtofl@val+3
  1707  000C2C  0E00               	movlw	0
  1708  000C2E  EC9B  F013         	call	___xxtofl
  1709  000C32  C001  F049         	movff	?___xxtofl,___flsub@a
  1710  000C36  C002  F04A         	movff	?___xxtofl+1,___flsub@a+1
  1711  000C3A  C003  F04B         	movff	?___xxtofl+2,___flsub@a+2
  1712  000C3E  C004  F04C         	movff	?___xxtofl+3,___flsub@a+3
  1713  000C42  ECB2  F01B         	call	___flsub	;wreg free
  1714  000C46  C045  F06D         	movff	?___flsub,sprintf@fval
  1715  000C4A  C046  F06E         	movff	?___flsub+1,sprintf@fval+1
  1716  000C4E  C047  F06F         	movff	?___flsub+2,sprintf@fval+2
  1717  000C52  C048  F070         	movff	?___flsub+3,sprintf@fval+3
  1718  000C56                     
  1719                           ;doprnt.c: 1159: eexp = 0;
  1720  000C56  0E00               	movlw	0
  1721  000C58  6E68               	movwf	(sprintf@eexp+1)^0,c
  1722  000C5A  0E00               	movlw	0
  1723  000C5C  6E67               	movwf	sprintf@eexp^0,c
  1724  000C5E                     l3570:
  1725                           
  1726                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  1727  000C5E  0E01               	movlw	1
  1728  000C60  6E73               	movwf	sprintf@c^0,c
  1729  000C62                     l3576:
  1730                           
  1731                           ;doprnt.c: 1163: if(val < dpowers[c])
  1732  000C62  5073               	movf	sprintf@c^0,w,c
  1733  000C64  0D04               	mullw	4
  1734  000C66  0E69               	movlw	low _dpowers
  1735  000C68  24F3               	addwf	243,w,c
  1736  000C6A  6EF6               	movwf	tblptrl,c
  1737  000C6C  0E06               	movlw	high _dpowers
  1738  000C6E  20F4               	addwfc	244,w,c
  1739  000C70  6EF7               	movwf	tblptrh,c
  1740  000C72                     	if	0	;There are less than 3 active tblptr bytes
  1741  000C72                     	endif
  1742  000C72  0009               	tblrd		*+
  1743  000C74  50F5               	movf	tablat,w,c
  1744  000C76  5C63               	subwf	sprintf@val^0,w,c
  1745  000C78  0009               	tblrd		*+
  1746  000C7A  50F5               	movf	tablat,w,c
  1747  000C7C  5864               	subwfb	(sprintf@val+1)^0,w,c
  1748  000C7E  0009               	tblrd		*+
  1749  000C80  50F5               	movf	tablat,w,c
  1750  000C82  5865               	subwfb	(sprintf@val+2)^0,w,c
  1751  000C84  0009               	tblrd		*+
  1752  000C86  50F5               	movf	tablat,w,c
  1753  000C88  5866               	subwfb	(sprintf@val+3)^0,w,c
  1754  000C8A  B0D8               	btfsc	status,0,c
  1755  000C8C  EF4A  F006         	goto	u3761
  1756  000C90  EF4C  F006         	goto	u3760
  1757  000C94                     u3761:
  1758  000C94  EF4E  F006         	goto	l3580
  1759  000C98                     u3760:
  1760  000C98  EF58  F006         	goto	l3584
  1761  000C9C                     l3580:
  1762  000C9C  2A73               	incf	sprintf@c^0,f,c
  1763  000C9E  0E0A               	movlw	10
  1764  000CA0  1873               	xorwf	sprintf@c^0,w,c
  1765  000CA2  A4D8               	btfss	status,2,c
  1766  000CA4  EF56  F006         	goto	u3771
  1767  000CA8  EF58  F006         	goto	u3770
  1768  000CAC                     u3771:
  1769  000CAC  EF31  F006         	goto	l3576
  1770  000CB0                     u3770:
  1771  000CB0                     l3584:
  1772                           
  1773                           ;doprnt.c: 1168: width -= prec + c + eexp;
  1774  000CB0  5073               	movf	sprintf@c^0,w,c
  1775  000CB2  2471               	addwf	sprintf@prec^0,w,c
  1776  000CB4  6E55               	movwf	??_sprintf^0,c
  1777  000CB6  0E00               	movlw	0
  1778  000CB8  2072               	addwfc	(sprintf@prec+1)^0,w,c
  1779  000CBA  6E56               	movwf	(??_sprintf+1)^0,c
  1780  000CBC  5067               	movf	sprintf@eexp^0,w,c
  1781  000CBE  2655               	addwf	??_sprintf^0,f,c
  1782  000CC0  5068               	movf	(sprintf@eexp+1)^0,w,c
  1783  000CC2  2256               	addwfc	(??_sprintf+1)^0,f,c
  1784  000CC4  5055               	movf	??_sprintf^0,w,c
  1785  000CC6  5E6B               	subwf	sprintf@width^0,f,c
  1786  000CC8  5056               	movf	(??_sprintf+1)^0,w,c
  1787  000CCA  5A6C               	subwfb	(sprintf@width+1)^0,f,c
  1788                           
  1789                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  1790  000CCC  5071               	movf	sprintf@prec^0,w,c
  1791  000CCE  1072               	iorwf	(sprintf@prec+1)^0,w,c
  1792  000CD0  B4D8               	btfsc	status,2,c
  1793  000CD2  EF6D  F006         	goto	u3781
  1794  000CD6  EF6F  F006         	goto	u3780
  1795  000CDA                     u3781:
  1796  000CDA  EF72  F006         	goto	l3588
  1797  000CDE                     u3780:
  1798  000CDE                     
  1799                           ;doprnt.c: 1174: width--;
  1800  000CDE  066B               	decf	sprintf@width^0,f,c
  1801  000CE0  A0D8               	btfss	status,0,c
  1802  000CE2  066C               	decf	(sprintf@width+1)^0,f,c
  1803  000CE4                     l3588:
  1804                           
  1805                           ;doprnt.c: 1175: if(flag & 0x03)
  1806  000CE4  0E03               	movlw	3
  1807  000CE6  1469               	andwf	sprintf@flag^0,w,c
  1808  000CE8  6E55               	movwf	??_sprintf^0,c
  1809  000CEA  0E00               	movlw	0
  1810  000CEC  146A               	andwf	(sprintf@flag+1)^0,w,c
  1811  000CEE  6E56               	movwf	(??_sprintf+1)^0,c
  1812  000CF0  5055               	movf	??_sprintf^0,w,c
  1813  000CF2  1056               	iorwf	(??_sprintf+1)^0,w,c
  1814  000CF4  B4D8               	btfsc	status,2,c
  1815  000CF6  EF7F  F006         	goto	u3791
  1816  000CFA  EF81  F006         	goto	u3790
  1817  000CFE                     u3791:
  1818  000CFE  EF84  F006         	goto	l3592
  1819  000D02                     u3790:
  1820  000D02                     
  1821                           ;doprnt.c: 1176: width--;
  1822  000D02  066B               	decf	sprintf@width^0,f,c
  1823  000D04  A0D8               	btfss	status,0,c
  1824  000D06  066C               	decf	(sprintf@width+1)^0,f,c
  1825  000D08                     l3592:
  1826                           
  1827                           ;doprnt.c: 1179: if(flag & 0x04) {
  1828  000D08  A469               	btfss	sprintf@flag^0,2,c
  1829  000D0A  EF89  F006         	goto	u3801
  1830  000D0E  EF8B  F006         	goto	u3800
  1831  000D12                     u3801:
  1832  000D12  EFC9  F006         	goto	l3614
  1833  000D16                     u3800:
  1834  000D16                     
  1835                           ;doprnt.c: 1183: if(flag & 0x03)
  1836  000D16  0E03               	movlw	3
  1837  000D18  1469               	andwf	sprintf@flag^0,w,c
  1838  000D1A  6E55               	movwf	??_sprintf^0,c
  1839  000D1C  0E00               	movlw	0
  1840  000D1E  146A               	andwf	(sprintf@flag+1)^0,w,c
  1841  000D20  6E56               	movwf	(??_sprintf+1)^0,c
  1842  000D22  5055               	movf	??_sprintf^0,w,c
  1843  000D24  1056               	iorwf	(??_sprintf+1)^0,w,c
  1844  000D26  B4D8               	btfsc	status,2,c
  1845  000D28  EF98  F006         	goto	u3811
  1846  000D2C  EF9A  F006         	goto	u3810
  1847  000D30                     u3811:
  1848  000D30  EFAF  F006         	goto	l3606
  1849  000D34                     u3810:
  1850  000D34                     
  1851                           ;doprnt.c: 1185: ((*sp++ = ('-')));
  1852  000D34  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1853  000D38  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1854  000D3C  0E2D               	movlw	45
  1855  000D3E  6EDF               	movwf	indf2,c
  1856  000D40  4A4D               	infsnz	sprintf@sp^0,f,c
  1857  000D42  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1858  000D44  EFAF  F006         	goto	l3606
  1859  000D48                     l3600:
  1860                           
  1861                           ;doprnt.c: 1195: ((*sp++ = ('0')));
  1862  000D48  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1863  000D4C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1864  000D50  0E30               	movlw	48
  1865  000D52  6EDF               	movwf	indf2,c
  1866  000D54  4A4D               	infsnz	sprintf@sp^0,f,c
  1867  000D56  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1868  000D58                     
  1869                           ;doprnt.c: 1196: width--;
  1870  000D58  066B               	decf	sprintf@width^0,f,c
  1871  000D5A  A0D8               	btfss	status,0,c
  1872  000D5C  066C               	decf	(sprintf@width+1)^0,f,c
  1873  000D5E                     l3606:
  1874  000D5E  BE6C               	btfsc	(sprintf@width+1)^0,7,c
  1875  000D60  EFBC  F006         	goto	u3820
  1876  000D64  506C               	movf	(sprintf@width+1)^0,w,c
  1877  000D66  E106               	bnz	u3821
  1878  000D68  046B               	decf	sprintf@width^0,w,c
  1879  000D6A  B0D8               	btfsc	status,0,c
  1880  000D6C  EFBA  F006         	goto	u3821
  1881  000D70  EFBC  F006         	goto	u3820
  1882  000D74                     u3821:
  1883  000D74  EFA4  F006         	goto	l3600
  1884  000D78                     u3820:
  1885  000D78  EF38  F007         	goto	l3630
  1886  000D7C                     l3608:
  1887                           
  1888                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  1889  000D7C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1890  000D80  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1891  000D84  0E20               	movlw	32
  1892  000D86  6EDF               	movwf	indf2,c
  1893  000D88  4A4D               	infsnz	sprintf@sp^0,f,c
  1894  000D8A  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1895  000D8C                     
  1896                           ;doprnt.c: 1208: width--;
  1897  000D8C  066B               	decf	sprintf@width^0,f,c
  1898  000D8E  A0D8               	btfss	status,0,c
  1899  000D90  066C               	decf	(sprintf@width+1)^0,f,c
  1900  000D92                     l3614:
  1901  000D92  BE6C               	btfsc	(sprintf@width+1)^0,7,c
  1902  000D94  EFD6  F006         	goto	u3830
  1903  000D98  506C               	movf	(sprintf@width+1)^0,w,c
  1904  000D9A  E106               	bnz	u3831
  1905  000D9C  046B               	decf	sprintf@width^0,w,c
  1906  000D9E  B0D8               	btfsc	status,0,c
  1907  000DA0  EFD4  F006         	goto	u3831
  1908  000DA4  EFD6  F006         	goto	u3830
  1909  000DA8                     u3831:
  1910  000DA8  EFBE  F006         	goto	l3608
  1911  000DAC                     u3830:
  1912  000DAC                     
  1913                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  1914  000DAC  0E03               	movlw	3
  1915  000DAE  1469               	andwf	sprintf@flag^0,w,c
  1916  000DB0  6E55               	movwf	??_sprintf^0,c
  1917  000DB2  0E00               	movlw	0
  1918  000DB4  146A               	andwf	(sprintf@flag+1)^0,w,c
  1919  000DB6  6E56               	movwf	(??_sprintf+1)^0,c
  1920  000DB8  5055               	movf	??_sprintf^0,w,c
  1921  000DBA  1056               	iorwf	(??_sprintf+1)^0,w,c
  1922  000DBC  B4D8               	btfsc	status,2,c
  1923  000DBE  EFE3  F006         	goto	u3841
  1924  000DC2  EFE5  F006         	goto	u3840
  1925  000DC6                     u3841:
  1926  000DC6  EF38  F007         	goto	l3630
  1927  000DCA                     u3840:
  1928  000DCA                     
  1929                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  1930  000DCA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1931  000DCE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1932  000DD2  0E2D               	movlw	45
  1933  000DD4  6EDF               	movwf	indf2,c
  1934  000DD6                     l3620:
  1935  000DD6  4A4D               	infsnz	sprintf@sp^0,f,c
  1936  000DD8  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1937  000DDA  EF38  F007         	goto	l3630
  1938  000DDE                     l3622:
  1939                           
  1940                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  1941  000DDE  C063  F001         	movff	sprintf@val,___lldiv@dividend
  1942  000DE2  C064  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1943  000DE6  C065  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1944  000DEA  C066  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1945  000DEE  5073               	movf	sprintf@c^0,w,c
  1946  000DF0  0D04               	mullw	4
  1947  000DF2  0E69               	movlw	low _dpowers
  1948  000DF4  24F3               	addwf	243,w,c
  1949  000DF6  6EF6               	movwf	tblptrl,c
  1950  000DF8  0E06               	movlw	high _dpowers
  1951  000DFA  20F4               	addwfc	244,w,c
  1952  000DFC  6EF7               	movwf	tblptrh,c
  1953  000DFE                     	if	0	;There are less than 3 active tblptr bytes
  1954  000DFE                     	endif
  1955  000DFE  0009               	tblrd		*+
  1956  000E00  CFF5 F005          	movff	tablat,___lldiv@divisor
  1957  000E04  0009               	tblrd		*+
  1958  000E06  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1959  000E0A  0009               	tblrd		*+
  1960  000E0C  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1961  000E10  000A               	tblrd		*-
  1962  000E12  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1963  000E16  EC2D  F01A         	call	___lldiv	;wreg free
  1964  000E1A  C001  F05F         	movff	?___lldiv,sprintf@tmpval
  1965  000E1E  C002  F060         	movff	?___lldiv+1,sprintf@tmpval+1
  1966  000E22  C003  F061         	movff	?___lldiv+2,sprintf@tmpval+2
  1967  000E26  C004  F062         	movff	?___lldiv+3,sprintf@tmpval+3
  1968  000E2A                     
  1969                           ;doprnt.c: 1228: tmpval.vd %= 10;
  1970  000E2A  C05F  F00E         	movff	sprintf@tmpval,___llmod@dividend
  1971  000E2E  C060  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1972  000E32  C061  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1973  000E36  C062  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1974  000E3A  0E0A               	movlw	10
  1975  000E3C  6E12               	movwf	___llmod@divisor^0,c
  1976  000E3E  0E00               	movlw	0
  1977  000E40  6E13               	movwf	(___llmod@divisor+1)^0,c
  1978  000E42  0E00               	movlw	0
  1979  000E44  6E14               	movwf	(___llmod@divisor+2)^0,c
  1980  000E46  0E00               	movlw	0
  1981  000E48  6E15               	movwf	(___llmod@divisor+3)^0,c
  1982  000E4A  ECC4  F01A         	call	___llmod	;wreg free
  1983  000E4E  C00E  F05F         	movff	?___llmod,sprintf@tmpval
  1984  000E52  C00F  F060         	movff	?___llmod+1,sprintf@tmpval+1
  1985  000E56  C010  F061         	movff	?___llmod+2,sprintf@tmpval+2
  1986  000E5A  C011  F062         	movff	?___llmod+3,sprintf@tmpval+3
  1987  000E5E                     
  1988                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  1989  000E5E  505F               	movf	sprintf@tmpval^0,w,c
  1990  000E60  0F30               	addlw	48
  1991  000E62  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1992  000E66  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1993  000E6A  6EDF               	movwf	indf2,c
  1994  000E6C  EFEB  F006         	goto	l3620
  1995  000E70                     l3630:
  1996  000E70  0673               	decf	sprintf@c^0,f,c
  1997  000E72  2873               	incf	sprintf@c^0,w,c
  1998  000E74  A4D8               	btfss	status,2,c
  1999  000E76  EF3F  F007         	goto	u3851
  2000  000E7A  EF41  F007         	goto	u3850
  2001  000E7E                     u3851:
  2002  000E7E  EFEF  F006         	goto	l3622
  2003  000E82                     u3850:
  2004  000E82  EF4E  F007         	goto	l3638
  2005  000E86                     l3632:
  2006                           
  2007                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  2008  000E86  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2009  000E8A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2010  000E8E  0E30               	movlw	48
  2011  000E90  6EDF               	movwf	indf2,c
  2012  000E92  4A4D               	infsnz	sprintf@sp^0,f,c
  2013  000E94  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2014  000E96                     
  2015                           ;doprnt.c: 1235: eexp--;
  2016  000E96  0667               	decf	sprintf@eexp^0,f,c
  2017  000E98  A0D8               	btfss	status,0,c
  2018  000E9A  0668               	decf	(sprintf@eexp+1)^0,f,c
  2019  000E9C                     l3638:
  2020  000E9C  BE68               	btfsc	(sprintf@eexp+1)^0,7,c
  2021  000E9E  EF5B  F007         	goto	u3860
  2022  000EA2  5068               	movf	(sprintf@eexp+1)^0,w,c
  2023  000EA4  E106               	bnz	u3861
  2024  000EA6  0467               	decf	sprintf@eexp^0,w,c
  2025  000EA8  B0D8               	btfsc	status,0,c
  2026  000EAA  EF59  F007         	goto	u3861
  2027  000EAE  EF5B  F007         	goto	u3860
  2028  000EB2                     u3861:
  2029  000EB2  EF43  F007         	goto	l3632
  2030  000EB6                     u3860:
  2031  000EB6                     
  2032                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2033  000EB6  BE72               	btfsc	(sprintf@prec+1)^0,7,c
  2034  000EB8  EF67  F007         	goto	u3871
  2035  000EBC  5072               	movf	(sprintf@prec+1)^0,w,c
  2036  000EBE  E109               	bnz	u3870
  2037  000EC0  0E09               	movlw	9
  2038  000EC2  5C71               	subwf	sprintf@prec^0,w,c
  2039  000EC4  A0D8               	btfss	status,0,c
  2040  000EC6  EF67  F007         	goto	u3871
  2041  000ECA  EF69  F007         	goto	u3870
  2042  000ECE                     u3871:
  2043  000ECE  EF6D  F007         	goto	l244
  2044  000ED2                     u3870:
  2045  000ED2                     
  2046                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2047  000ED2  0E08               	movlw	8
  2048  000ED4  6E73               	movwf	sprintf@c^0,c
  2049  000ED6  EF6F  F007         	goto	l3644
  2050  000EDA                     l244:
  2051                           
  2052                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  2053  000EDA  C071  F073         	movff	sprintf@prec,sprintf@c
  2054  000EDE                     l3644:
  2055                           
  2056                           ;doprnt.c: 1241: prec -= (int)c;
  2057  000EDE  5073               	movf	sprintf@c^0,w,c
  2058  000EE0  5E71               	subwf	sprintf@prec^0,f,c
  2059  000EE2  0E00               	movlw	0
  2060  000EE4  5A72               	subwfb	(sprintf@prec+1)^0,f,c
  2061  000EE6                     
  2062                           ;doprnt.c: 1245: if(c)
  2063  000EE6  5073               	movf	sprintf@c^0,w,c
  2064  000EE8  B4D8               	btfsc	status,2,c
  2065  000EEA  EF79  F007         	goto	u3881
  2066  000EEE  EF7B  F007         	goto	u3880
  2067  000EF2                     u3881:
  2068  000EF2  EF83  F007         	goto	l3652
  2069  000EF6                     u3880:
  2070  000EF6                     
  2071                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  2072  000EF6  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2073  000EFA  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2074  000EFE  0E2E               	movlw	46
  2075  000F00  6EDF               	movwf	indf2,c
  2076  000F02  4A4D               	infsnz	sprintf@sp^0,f,c
  2077  000F04  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2078  000F06                     l3652:
  2079                           
  2080                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2081  000F06  5073               	movf	sprintf@c^0,w,c
  2082  000F08  EC77  F00E         	call	_scale
  2083  000F0C  C028  F059         	movff	?_scale,_sprintf$1220
  2084  000F10  C029  F05A         	movff	?_scale+1,_sprintf$1220+1
  2085  000F14  C02A  F05B         	movff	?_scale+2,_sprintf$1220+2
  2086  000F18  C02B  F05C         	movff	?_scale+3,_sprintf$1220+3
  2087  000F1C                     
  2088                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2089  000F1C  C06D  F013         	movff	sprintf@fval,___flmul@a
  2090  000F20  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  2091  000F24  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  2092  000F28  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  2093  000F2C  C059  F00F         	movff	_sprintf$1220,___flmul@b
  2094  000F30  C05A  F010         	movff	_sprintf$1220+1,___flmul@b+1
  2095  000F34  C05B  F011         	movff	_sprintf$1220+2,___flmul@b+2
  2096  000F38  C05C  F012         	movff	_sprintf$1220+3,___flmul@b+3
  2097  000F3C  EC62  F00C         	call	___flmul	;wreg free
  2098  000F40  C00F  F031         	movff	?___flmul,___fltol@f1
  2099  000F44  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2100  000F48  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2101  000F4C  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2102  000F50  EC19  F018         	call	___fltol	;wreg free
  2103  000F54  C031  F063         	movff	?___fltol,sprintf@val
  2104  000F58  C032  F064         	movff	?___fltol+1,sprintf@val+1
  2105  000F5C  C033  F065         	movff	?___fltol+2,sprintf@val+2
  2106  000F60  C034  F066         	movff	?___fltol+3,sprintf@val+3
  2107                           
  2108                           ;doprnt.c: 1254: while(c--) {
  2109  000F64  EF23  F008         	goto	l3666
  2110  000F68                     l3656:
  2111                           
  2112                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  2113  000F68  C063  F001         	movff	sprintf@val,___lldiv@dividend
  2114  000F6C  C064  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2115  000F70  C065  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2116  000F74  C066  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2117  000F78  5073               	movf	sprintf@c^0,w,c
  2118  000F7A  0D04               	mullw	4
  2119  000F7C  0E69               	movlw	low _dpowers
  2120  000F7E  24F3               	addwf	243,w,c
  2121  000F80  6EF6               	movwf	tblptrl,c
  2122  000F82  0E06               	movlw	high _dpowers
  2123  000F84  20F4               	addwfc	244,w,c
  2124  000F86  6EF7               	movwf	tblptrh,c
  2125  000F88                     	if	0	;There are less than 3 active tblptr bytes
  2126  000F88                     	endif
  2127  000F88  0009               	tblrd		*+
  2128  000F8A  CFF5 F005          	movff	tablat,___lldiv@divisor
  2129  000F8E  0009               	tblrd		*+
  2130  000F90  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2131  000F94  0009               	tblrd		*+
  2132  000F96  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2133  000F9A  000A               	tblrd		*-
  2134  000F9C  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2135  000FA0  EC2D  F01A         	call	___lldiv	;wreg free
  2136  000FA4  C001  F05F         	movff	?___lldiv,sprintf@tmpval
  2137  000FA8  C002  F060         	movff	?___lldiv+1,sprintf@tmpval+1
  2138  000FAC  C003  F061         	movff	?___lldiv+2,sprintf@tmpval+2
  2139  000FB0  C004  F062         	movff	?___lldiv+3,sprintf@tmpval+3
  2140  000FB4                     
  2141                           ;doprnt.c: 1256: tmpval.vd %= 10;
  2142  000FB4  C05F  F00E         	movff	sprintf@tmpval,___llmod@dividend
  2143  000FB8  C060  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2144  000FBC  C061  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2145  000FC0  C062  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2146  000FC4  0E0A               	movlw	10
  2147  000FC6  6E12               	movwf	___llmod@divisor^0,c
  2148  000FC8  0E00               	movlw	0
  2149  000FCA  6E13               	movwf	(___llmod@divisor+1)^0,c
  2150  000FCC  0E00               	movlw	0
  2151  000FCE  6E14               	movwf	(___llmod@divisor+2)^0,c
  2152  000FD0  0E00               	movlw	0
  2153  000FD2  6E15               	movwf	(___llmod@divisor+3)^0,c
  2154  000FD4  ECC4  F01A         	call	___llmod	;wreg free
  2155  000FD8  C00E  F05F         	movff	?___llmod,sprintf@tmpval
  2156  000FDC  C00F  F060         	movff	?___llmod+1,sprintf@tmpval+1
  2157  000FE0  C010  F061         	movff	?___llmod+2,sprintf@tmpval+2
  2158  000FE4  C011  F062         	movff	?___llmod+3,sprintf@tmpval+3
  2159  000FE8                     
  2160                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  2161  000FE8  505F               	movf	sprintf@tmpval^0,w,c
  2162  000FEA  0F30               	addlw	48
  2163  000FEC  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2164  000FF0  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2165  000FF4  6EDF               	movwf	indf2,c
  2166  000FF6  4A4D               	infsnz	sprintf@sp^0,f,c
  2167  000FF8  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2168  000FFA                     
  2169                           ;doprnt.c: 1258: val %= dpowers[c];
  2170  000FFA  C063  F00E         	movff	sprintf@val,___llmod@dividend
  2171  000FFE  C064  F00F         	movff	sprintf@val+1,___llmod@dividend+1
  2172  001002  C065  F010         	movff	sprintf@val+2,___llmod@dividend+2
  2173  001006  C066  F011         	movff	sprintf@val+3,___llmod@dividend+3
  2174  00100A  5073               	movf	sprintf@c^0,w,c
  2175  00100C  0D04               	mullw	4
  2176  00100E  0E69               	movlw	low _dpowers
  2177  001010  24F3               	addwf	243,w,c
  2178  001012  6EF6               	movwf	tblptrl,c
  2179  001014  0E06               	movlw	high _dpowers
  2180  001016  20F4               	addwfc	244,w,c
  2181  001018  6EF7               	movwf	tblptrh,c
  2182  00101A                     	if	0	;There are less than 3 active tblptr bytes
  2183  00101A                     	endif
  2184  00101A  0009               	tblrd		*+
  2185  00101C  CFF5 F012          	movff	tablat,___llmod@divisor
  2186  001020  0009               	tblrd		*+
  2187  001022  CFF5 F013          	movff	tablat,___llmod@divisor+1
  2188  001026  0009               	tblrd		*+
  2189  001028  CFF5 F014          	movff	tablat,___llmod@divisor+2
  2190  00102C  000A               	tblrd		*-
  2191  00102E  CFF5 F015          	movff	tablat,___llmod@divisor+3
  2192  001032  ECC4  F01A         	call	___llmod	;wreg free
  2193  001036  C00E  F063         	movff	?___llmod,sprintf@val
  2194  00103A  C00F  F064         	movff	?___llmod+1,sprintf@val+1
  2195  00103E  C010  F065         	movff	?___llmod+2,sprintf@val+2
  2196  001042  C011  F066         	movff	?___llmod+3,sprintf@val+3
  2197  001046                     l3666:
  2198  001046  0673               	decf	sprintf@c^0,f,c
  2199  001048  2873               	incf	sprintf@c^0,w,c
  2200  00104A  A4D8               	btfss	status,2,c
  2201  00104C  EF2A  F008         	goto	u3891
  2202  001050  EF2C  F008         	goto	u3890
  2203  001054                     u3891:
  2204  001054  EFB4  F007         	goto	l3656
  2205  001058                     u3890:
  2206  001058  EF39  F008         	goto	l3674
  2207  00105C                     l3668:
  2208                           
  2209                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  2210  00105C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2211  001060  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2212  001064  0E30               	movlw	48
  2213  001066  6EDF               	movwf	indf2,c
  2214  001068  4A4D               	infsnz	sprintf@sp^0,f,c
  2215  00106A  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2216  00106C                     
  2217                           ;doprnt.c: 1263: prec--;
  2218  00106C  0671               	decf	sprintf@prec^0,f,c
  2219  00106E  A0D8               	btfss	status,0,c
  2220  001070  0672               	decf	(sprintf@prec+1)^0,f,c
  2221  001072                     l3674:
  2222  001072  5071               	movf	sprintf@prec^0,w,c
  2223  001074  1072               	iorwf	(sprintf@prec+1)^0,w,c
  2224  001076  A4D8               	btfss	status,2,c
  2225  001078  EF40  F008         	goto	u3901
  2226  00107C  EF42  F008         	goto	u3900
  2227  001080                     u3901:
  2228  001080  EF2E  F008         	goto	l3668
  2229  001084                     u3900:
  2230  001084  EFEA  F009         	goto	l3772
  2231  001088                     l3676:
  2232                           
  2233                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  2234  001088  C05D  FFD9         	movff	sprintf@ap,fsr2l
  2235  00108C  C05E  FFDA         	movff	sprintf@ap+1,fsr2h
  2236  001090  CFDE F063          	movff	postinc2,sprintf@val
  2237  001094  CFDD F064          	movff	postdec2,sprintf@val+1
  2238  001098  0E00               	movlw	0
  2239  00109A  BE64               	btfsc	(sprintf@val+1)^0,7,c
  2240  00109C  0EFF               	movlw	-1
  2241  00109E  6E65               	movwf	(sprintf@val+2)^0,c
  2242  0010A0  6E66               	movwf	(sprintf@val+3)^0,c
  2243  0010A2  0E02               	movlw	2
  2244  0010A4  265D               	addwf	sprintf@ap^0,f,c
  2245  0010A6  0E00               	movlw	0
  2246  0010A8  225E               	addwfc	(sprintf@ap+1)^0,f,c
  2247  0010AA                     
  2248                           ;doprnt.c: 1287: if((long)val < 0) {
  2249  0010AA  BE66               	btfsc	(sprintf@val+3)^0,7,c
  2250  0010AC  EF5C  F008         	goto	u3910
  2251  0010B0  EF5A  F008         	goto	u3911
  2252  0010B4                     u3911:
  2253  0010B4  EF66  F008         	goto	l3686
  2254  0010B8                     u3910:
  2255  0010B8                     
  2256                           ;doprnt.c: 1288: flag |= 0x03;
  2257  0010B8  0E03               	movlw	3
  2258  0010BA  1269               	iorwf	sprintf@flag^0,f,c
  2259  0010BC                     
  2260                           ;doprnt.c: 1289: val = -val;
  2261  0010BC  1E66               	comf	(sprintf@val+3)^0,f,c
  2262  0010BE  1E65               	comf	(sprintf@val+2)^0,f,c
  2263  0010C0  1E64               	comf	(sprintf@val+1)^0,f,c
  2264  0010C2  6C63               	negf	sprintf@val^0,c
  2265  0010C4  0E00               	movlw	0
  2266  0010C6  2264               	addwfc	(sprintf@val+1)^0,f,c
  2267  0010C8  2265               	addwfc	(sprintf@val+2)^0,f,c
  2268  0010CA  2266               	addwfc	(sprintf@val+3)^0,f,c
  2269  0010CC                     l3686:
  2270                           
  2271                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  2272  0010CC  5071               	movf	sprintf@prec^0,w,c
  2273  0010CE  1072               	iorwf	(sprintf@prec+1)^0,w,c
  2274  0010D0  A4D8               	btfss	status,2,c
  2275  0010D2  EF6D  F008         	goto	u3921
  2276  0010D6  EF6F  F008         	goto	u3920
  2277  0010DA                     u3921:
  2278  0010DA  EF7C  F008         	goto	l3692
  2279  0010DE                     u3920:
  2280  0010DE  5063               	movf	sprintf@val^0,w,c
  2281  0010E0  1064               	iorwf	(sprintf@val+1)^0,w,c
  2282  0010E2  1065               	iorwf	(sprintf@val+2)^0,w,c
  2283  0010E4  1066               	iorwf	(sprintf@val+3)^0,w,c
  2284  0010E6  A4D8               	btfss	status,2,c
  2285  0010E8  EF78  F008         	goto	u3931
  2286  0010EC  EF7A  F008         	goto	u3930
  2287  0010F0                     u3931:
  2288  0010F0  EF7C  F008         	goto	l3692
  2289  0010F4                     u3930:
  2290  0010F4                     
  2291                           ;doprnt.c: 1317: prec++;
  2292  0010F4  4A71               	infsnz	sprintf@prec^0,f,c
  2293  0010F6  2A72               	incf	(sprintf@prec+1)^0,f,c
  2294  0010F8                     l3692:
  2295                           
  2296                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2297  0010F8  0E01               	movlw	1
  2298  0010FA  6E73               	movwf	sprintf@c^0,c
  2299  0010FC                     l3698:
  2300                           
  2301                           ;doprnt.c: 1332: if(val < dpowers[c])
  2302  0010FC  5073               	movf	sprintf@c^0,w,c
  2303  0010FE  0D04               	mullw	4
  2304  001100  0E69               	movlw	low _dpowers
  2305  001102  24F3               	addwf	243,w,c
  2306  001104  6EF6               	movwf	tblptrl,c
  2307  001106  0E06               	movlw	high _dpowers
  2308  001108  20F4               	addwfc	244,w,c
  2309  00110A  6EF7               	movwf	tblptrh,c
  2310  00110C                     	if	0	;There are less than 3 active tblptr bytes
  2311  00110C                     	endif
  2312  00110C  0009               	tblrd		*+
  2313  00110E  50F5               	movf	tablat,w,c
  2314  001110  5C63               	subwf	sprintf@val^0,w,c
  2315  001112  0009               	tblrd		*+
  2316  001114  50F5               	movf	tablat,w,c
  2317  001116  5864               	subwfb	(sprintf@val+1)^0,w,c
  2318  001118  0009               	tblrd		*+
  2319  00111A  50F5               	movf	tablat,w,c
  2320  00111C  5865               	subwfb	(sprintf@val+2)^0,w,c
  2321  00111E  0009               	tblrd		*+
  2322  001120  50F5               	movf	tablat,w,c
  2323  001122  5866               	subwfb	(sprintf@val+3)^0,w,c
  2324  001124  B0D8               	btfsc	status,0,c
  2325  001126  EF97  F008         	goto	u3941
  2326  00112A  EF99  F008         	goto	u3940
  2327  00112E                     u3941:
  2328  00112E  EF9B  F008         	goto	l3702
  2329  001132                     u3940:
  2330  001132  EFA5  F008         	goto	l3706
  2331  001136                     l3702:
  2332  001136  2A73               	incf	sprintf@c^0,f,c
  2333  001138  0E0A               	movlw	10
  2334  00113A  1873               	xorwf	sprintf@c^0,w,c
  2335  00113C  A4D8               	btfss	status,2,c
  2336  00113E  EFA3  F008         	goto	u3951
  2337  001142  EFA5  F008         	goto	u3950
  2338  001146                     u3951:
  2339  001146  EF7E  F008         	goto	l3698
  2340  00114A                     u3950:
  2341  00114A                     l3706:
  2342                           
  2343                           ;doprnt.c: 1365: if(c < prec)
  2344  00114A  5073               	movf	sprintf@c^0,w,c
  2345  00114C  6E55               	movwf	??_sprintf^0,c
  2346  00114E  6A56               	clrf	(??_sprintf+1)^0,c
  2347  001150  5071               	movf	sprintf@prec^0,w,c
  2348  001152  5C55               	subwf	??_sprintf^0,w,c
  2349  001154  5056               	movf	(??_sprintf+1)^0,w,c
  2350  001156  0A80               	xorlw	128
  2351  001158  6E57               	movwf	(??_sprintf+2)^0,c
  2352  00115A  5072               	movf	(sprintf@prec+1)^0,w,c
  2353  00115C  0A80               	xorlw	128
  2354  00115E  5857               	subwfb	(??_sprintf+2)^0,w,c
  2355  001160  B0D8               	btfsc	status,0,c
  2356  001162  EFB5  F008         	goto	u3961
  2357  001166  EFB7  F008         	goto	u3960
  2358  00116A                     u3961:
  2359  00116A  EFBB  F008         	goto	l3710
  2360  00116E                     u3960:
  2361  00116E                     
  2362                           ;doprnt.c: 1366: c = (char)prec;
  2363  00116E  C071  F073         	movff	sprintf@prec,sprintf@c
  2364  001172  EFD0  F008         	goto	l3714
  2365  001176                     l3710:
  2366                           
  2367                           ;doprnt.c: 1367: else if(prec < c)
  2368  001176  5073               	movf	sprintf@c^0,w,c
  2369  001178  6E55               	movwf	??_sprintf^0,c
  2370  00117A  6A56               	clrf	(??_sprintf+1)^0,c
  2371  00117C  5055               	movf	??_sprintf^0,w,c
  2372  00117E  5C71               	subwf	sprintf@prec^0,w,c
  2373  001180  5072               	movf	(sprintf@prec+1)^0,w,c
  2374  001182  0A80               	xorlw	128
  2375  001184  6E57               	movwf	(??_sprintf+2)^0,c
  2376  001186  5056               	movf	(??_sprintf+1)^0,w,c
  2377  001188  0A80               	xorlw	128
  2378  00118A  5857               	subwfb	(??_sprintf+2)^0,w,c
  2379  00118C  B0D8               	btfsc	status,0,c
  2380  00118E  EFCB  F008         	goto	u3971
  2381  001192  EFCD  F008         	goto	u3970
  2382  001196                     u3971:
  2383  001196  EFD0  F008         	goto	l3714
  2384  00119A                     u3970:
  2385  00119A                     
  2386                           ;doprnt.c: 1368: prec = c;
  2387  00119A  C073  F071         	movff	sprintf@c,sprintf@prec
  2388  00119E  6A72               	clrf	(sprintf@prec+1)^0,c
  2389  0011A0                     l3714:
  2390                           
  2391                           ;doprnt.c: 1371: if(width && flag & 0x03)
  2392  0011A0  506B               	movf	sprintf@width^0,w,c
  2393  0011A2  106C               	iorwf	(sprintf@width+1)^0,w,c
  2394  0011A4  B4D8               	btfsc	status,2,c
  2395  0011A6  EFD7  F008         	goto	u3981
  2396  0011AA  EFD9  F008         	goto	u3980
  2397  0011AE                     u3981:
  2398  0011AE  EFEB  F008         	goto	l3720
  2399  0011B2                     u3980:
  2400  0011B2  0E03               	movlw	3
  2401  0011B4  1469               	andwf	sprintf@flag^0,w,c
  2402  0011B6  6E55               	movwf	??_sprintf^0,c
  2403  0011B8  0E00               	movlw	0
  2404  0011BA  146A               	andwf	(sprintf@flag+1)^0,w,c
  2405  0011BC  6E56               	movwf	(??_sprintf+1)^0,c
  2406  0011BE  5055               	movf	??_sprintf^0,w,c
  2407  0011C0  1056               	iorwf	(??_sprintf+1)^0,w,c
  2408  0011C2  B4D8               	btfsc	status,2,c
  2409  0011C4  EFE6  F008         	goto	u3991
  2410  0011C8  EFE8  F008         	goto	u3990
  2411  0011CC                     u3991:
  2412  0011CC  EFEB  F008         	goto	l3720
  2413  0011D0                     u3990:
  2414  0011D0                     
  2415                           ;doprnt.c: 1372: width--;
  2416  0011D0  066B               	decf	sprintf@width^0,f,c
  2417  0011D2  A0D8               	btfss	status,0,c
  2418  0011D4  066C               	decf	(sprintf@width+1)^0,f,c
  2419  0011D6                     l3720:
  2420                           
  2421                           ;doprnt.c: 1374: if(flag & 0x4000) {
  2422  0011D6  AC6A               	btfss	(sprintf@flag+1)^0,6,c
  2423  0011D8  EFF0  F008         	goto	u4001
  2424  0011DC  EFF2  F008         	goto	u4000
  2425  0011E0                     u4001:
  2426  0011E0  EF0B  F009         	goto	l3728
  2427  0011E4                     u4000:
  2428  0011E4                     
  2429                           ;doprnt.c: 1375: if(width > prec)
  2430  0011E4  506B               	movf	sprintf@width^0,w,c
  2431  0011E6  5C71               	subwf	sprintf@prec^0,w,c
  2432  0011E8  5072               	movf	(sprintf@prec+1)^0,w,c
  2433  0011EA  0A80               	xorlw	128
  2434  0011EC  6E55               	movwf	??_sprintf^0,c
  2435  0011EE  506C               	movf	(sprintf@width+1)^0,w,c
  2436  0011F0  0A80               	xorlw	128
  2437  0011F2  5855               	subwfb	??_sprintf^0,w,c
  2438  0011F4  B0D8               	btfsc	status,0,c
  2439  0011F6  EFFF  F008         	goto	u4011
  2440  0011FA  EF01  F009         	goto	u4010
  2441  0011FE                     u4011:
  2442  0011FE  EF07  F009         	goto	l3726
  2443  001202                     u4010:
  2444  001202                     
  2445                           ;doprnt.c: 1376: width -= prec;
  2446  001202  5071               	movf	sprintf@prec^0,w,c
  2447  001204  5E6B               	subwf	sprintf@width^0,f,c
  2448  001206  5072               	movf	(sprintf@prec+1)^0,w,c
  2449  001208  5A6C               	subwfb	(sprintf@width+1)^0,f,c
  2450  00120A  EF0B  F009         	goto	l3728
  2451  00120E                     l3726:
  2452                           
  2453                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  2454  00120E  0E00               	movlw	0
  2455  001210  6E6C               	movwf	(sprintf@width+1)^0,c
  2456  001212  0E00               	movlw	0
  2457  001214  6E6B               	movwf	sprintf@width^0,c
  2458  001216                     l3728:
  2459                           
  2460                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  2461  001216  5073               	movf	sprintf@c^0,w,c
  2462  001218  6E55               	movwf	??_sprintf^0,c
  2463  00121A  6A56               	clrf	(??_sprintf+1)^0,c
  2464  00121C  506B               	movf	sprintf@width^0,w,c
  2465  00121E  5C55               	subwf	??_sprintf^0,w,c
  2466  001220  5056               	movf	(??_sprintf+1)^0,w,c
  2467  001222  0A80               	xorlw	128
  2468  001224  6E57               	movwf	(??_sprintf+2)^0,c
  2469  001226  506C               	movf	(sprintf@width+1)^0,w,c
  2470  001228  0A80               	xorlw	128
  2471  00122A  5857               	subwfb	(??_sprintf+2)^0,w,c
  2472  00122C  B0D8               	btfsc	status,0,c
  2473  00122E  EF1B  F009         	goto	u4021
  2474  001232  EF1D  F009         	goto	u4020
  2475  001236                     u4021:
  2476  001236  EF23  F009         	goto	l3732
  2477  00123A                     u4020:
  2478  00123A                     
  2479                           ;doprnt.c: 1408: width -= c;
  2480  00123A  5073               	movf	sprintf@c^0,w,c
  2481  00123C  5E6B               	subwf	sprintf@width^0,f,c
  2482  00123E  0E00               	movlw	0
  2483  001240  5A6C               	subwfb	(sprintf@width+1)^0,f,c
  2484  001242  EF27  F009         	goto	l3734
  2485  001246                     l3732:
  2486                           
  2487                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  2488  001246  0E00               	movlw	0
  2489  001248  6E6C               	movwf	(sprintf@width+1)^0,c
  2490  00124A  0E00               	movlw	0
  2491  00124C  6E6B               	movwf	sprintf@width^0,c
  2492  00124E                     l3734:
  2493                           
  2494                           ;doprnt.c: 1413: if(flag & 0x04) {
  2495  00124E  A469               	btfss	sprintf@flag^0,2,c
  2496  001250  EF2C  F009         	goto	u4031
  2497  001254  EF2E  F009         	goto	u4030
  2498  001258                     u4031:
  2499  001258  EF64  F009         	goto	l3750
  2500  00125C                     u4030:
  2501  00125C                     
  2502                           ;doprnt.c: 1418: if(flag & 0x03)
  2503  00125C  0E03               	movlw	3
  2504  00125E  1469               	andwf	sprintf@flag^0,w,c
  2505  001260  6E55               	movwf	??_sprintf^0,c
  2506  001262  0E00               	movlw	0
  2507  001264  146A               	andwf	(sprintf@flag+1)^0,w,c
  2508  001266  6E56               	movwf	(??_sprintf+1)^0,c
  2509  001268  5055               	movf	??_sprintf^0,w,c
  2510  00126A  1056               	iorwf	(??_sprintf+1)^0,w,c
  2511  00126C  B4D8               	btfsc	status,2,c
  2512  00126E  EF3B  F009         	goto	u4041
  2513  001272  EF3D  F009         	goto	u4040
  2514  001276                     u4041:
  2515  001276  EF45  F009         	goto	l3742
  2516  00127A                     u4040:
  2517  00127A                     
  2518                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  2519  00127A  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2520  00127E  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2521  001282  0E2D               	movlw	45
  2522  001284  6EDF               	movwf	indf2,c
  2523  001286  4A4D               	infsnz	sprintf@sp^0,f,c
  2524  001288  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2525  00128A                     l3742:
  2526                           
  2527                           ;doprnt.c: 1441: if(width)
  2528  00128A  506B               	movf	sprintf@width^0,w,c
  2529  00128C  106C               	iorwf	(sprintf@width+1)^0,w,c
  2530  00128E  B4D8               	btfsc	status,2,c
  2531  001290  EF4C  F009         	goto	u4051
  2532  001294  EF4E  F009         	goto	u4050
  2533  001298                     u4051:
  2534  001298  EFDD  F009         	goto	l3770
  2535  00129C                     u4050:
  2536  00129C                     l3744:
  2537                           
  2538                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  2539  00129C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2540  0012A0  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2541  0012A4  0E30               	movlw	48
  2542  0012A6  6EDF               	movwf	indf2,c
  2543  0012A8  4A4D               	infsnz	sprintf@sp^0,f,c
  2544  0012AA  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2545  0012AC                     
  2546                           ;doprnt.c: 1444: while(--width);
  2547  0012AC  066B               	decf	sprintf@width^0,f,c
  2548  0012AE  A0D8               	btfss	status,0,c
  2549  0012B0  066C               	decf	(sprintf@width+1)^0,f,c
  2550  0012B2  506B               	movf	sprintf@width^0,w,c
  2551  0012B4  106C               	iorwf	(sprintf@width+1)^0,w,c
  2552  0012B6  A4D8               	btfss	status,2,c
  2553  0012B8  EF60  F009         	goto	u4061
  2554  0012BC  EF62  F009         	goto	u4060
  2555  0012C0                     u4061:
  2556  0012C0  EF4E  F009         	goto	l3744
  2557  0012C4                     u4060:
  2558  0012C4  EFDD  F009         	goto	l3770
  2559  0012C8                     l3750:
  2560                           
  2561                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  2562  0012C8  506B               	movf	sprintf@width^0,w,c
  2563  0012CA  106C               	iorwf	(sprintf@width+1)^0,w,c
  2564  0012CC  B4D8               	btfsc	status,2,c
  2565  0012CE  EF6B  F009         	goto	u4071
  2566  0012D2  EF6D  F009         	goto	u4070
  2567  0012D6                     u4071:
  2568  0012D6  EF81  F009         	goto	l3758
  2569  0012DA                     u4070:
  2570  0012DA                     l3752:
  2571                           
  2572                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  2573  0012DA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2574  0012DE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2575  0012E2  0E20               	movlw	32
  2576  0012E4  6EDF               	movwf	indf2,c
  2577  0012E6  4A4D               	infsnz	sprintf@sp^0,f,c
  2578  0012E8  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2579  0012EA                     
  2580                           ;doprnt.c: 1457: while(--width);
  2581  0012EA  066B               	decf	sprintf@width^0,f,c
  2582  0012EC  A0D8               	btfss	status,0,c
  2583  0012EE  066C               	decf	(sprintf@width+1)^0,f,c
  2584  0012F0  506B               	movf	sprintf@width^0,w,c
  2585  0012F2  106C               	iorwf	(sprintf@width+1)^0,w,c
  2586  0012F4  A4D8               	btfss	status,2,c
  2587  0012F6  EF7F  F009         	goto	u4081
  2588  0012FA  EF81  F009         	goto	u4080
  2589  0012FE                     u4081:
  2590  0012FE  EF6D  F009         	goto	l3752
  2591  001302                     u4080:
  2592  001302                     l3758:
  2593                           
  2594                           ;doprnt.c: 1464: if(flag & 0x03)
  2595  001302  0E03               	movlw	3
  2596  001304  1469               	andwf	sprintf@flag^0,w,c
  2597  001306  6E55               	movwf	??_sprintf^0,c
  2598  001308  0E00               	movlw	0
  2599  00130A  146A               	andwf	(sprintf@flag+1)^0,w,c
  2600  00130C  6E56               	movwf	(??_sprintf+1)^0,c
  2601  00130E  5055               	movf	??_sprintf^0,w,c
  2602  001310  1056               	iorwf	(??_sprintf+1)^0,w,c
  2603  001312  B4D8               	btfsc	status,2,c
  2604  001314  EF8E  F009         	goto	u4091
  2605  001318  EF90  F009         	goto	u4090
  2606  00131C                     u4091:
  2607  00131C  EFDD  F009         	goto	l3770
  2608  001320                     u4090:
  2609  001320                     
  2610                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2611  001320  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2612  001324  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2613  001328  0E2D               	movlw	45
  2614  00132A  6EDF               	movwf	indf2,c
  2615  00132C                     l3762:
  2616  00132C  4A4D               	infsnz	sprintf@sp^0,f,c
  2617  00132E  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2618  001330  EFDD  F009         	goto	l3770
  2619  001334                     l3764:
  2620                           
  2621                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  2622  001334  C071  F055         	movff	sprintf@prec,??_sprintf
  2623  001338  C072  F056         	movff	sprintf@prec+1,??_sprintf+1
  2624  00133C  90D8               	bcf	status,0,c
  2625  00133E  3655               	rlcf	??_sprintf^0,f,c
  2626  001340  3656               	rlcf	(??_sprintf+1)^0,f,c
  2627  001342  90D8               	bcf	status,0,c
  2628  001344  3655               	rlcf	??_sprintf^0,f,c
  2629  001346  3656               	rlcf	(??_sprintf+1)^0,f,c
  2630  001348  0E69               	movlw	low _dpowers
  2631  00134A  2455               	addwf	??_sprintf^0,w,c
  2632  00134C  6EF6               	movwf	tblptrl,c
  2633  00134E  0E06               	movlw	high _dpowers
  2634  001350  2056               	addwfc	(??_sprintf+1)^0,w,c
  2635  001352  6EF7               	movwf	tblptrh,c
  2636  001354                     	if	0	;There are less than 3 active tblptr bytes
  2637  001354                     	endif
  2638  001354  0009               	tblrd		*+
  2639  001356  CFF5 F005          	movff	tablat,___lldiv@divisor
  2640  00135A  0009               	tblrd		*+
  2641  00135C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2642  001360  0009               	tblrd		*+
  2643  001362  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2644  001366  000A               	tblrd		*-
  2645  001368  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2646  00136C  C063  F001         	movff	sprintf@val,___lldiv@dividend
  2647  001370  C064  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2648  001374  C065  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2649  001378  C066  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2650  00137C  EC2D  F01A         	call	___lldiv	;wreg free
  2651  001380  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2652  001384  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2653  001388  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2654  00138C  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2655  001390  0E0A               	movlw	10
  2656  001392  6E12               	movwf	___llmod@divisor^0,c
  2657  001394  0E00               	movlw	0
  2658  001396  6E13               	movwf	(___llmod@divisor+1)^0,c
  2659  001398  0E00               	movlw	0
  2660  00139A  6E14               	movwf	(___llmod@divisor+2)^0,c
  2661  00139C  0E00               	movlw	0
  2662  00139E  6E15               	movwf	(___llmod@divisor+3)^0,c
  2663  0013A0  ECC4  F01A         	call	___llmod	;wreg free
  2664  0013A4  500E               	movf	?___llmod^0,w,c
  2665  0013A6  0F30               	addlw	48
  2666  0013A8  6E73               	movwf	sprintf@c^0,c
  2667  0013AA                     
  2668                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2669  0013AA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2670  0013AE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2671  0013B2  C073  FFDF         	movff	sprintf@c,indf2
  2672  0013B6  EF96  F009         	goto	l3762
  2673  0013BA                     l3770:
  2674  0013BA  0671               	decf	sprintf@prec^0,f,c
  2675  0013BC  A0D8               	btfss	status,0,c
  2676  0013BE  0672               	decf	(sprintf@prec+1)^0,f,c
  2677  0013C0  2871               	incf	sprintf@prec^0,w,c
  2678  0013C2  E106               	bnz	u4101
  2679  0013C4  2872               	incf	(sprintf@prec+1)^0,w,c
  2680  0013C6  A4D8               	btfss	status,2,c
  2681  0013C8  EFE8  F009         	goto	u4101
  2682  0013CC  EFEA  F009         	goto	u4100
  2683  0013D0                     u4101:
  2684  0013D0  EF9A  F009         	goto	l3764
  2685  0013D4                     u4100:
  2686  0013D4                     l3772:
  2687  0013D4  C04F  FFF6         	movff	sprintf@f,tblptrl
  2688  0013D8  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2689  0013DC  4A4F               	infsnz	sprintf@f^0,f,c
  2690  0013DE  2A50               	incf	(sprintf@f+1)^0,f,c
  2691  0013E0                     	if	0	;tblptru may be non-zero
  2692  0013E0                     	endif
  2693  0013E0                     	if	0	;tblptru may be non-zero
  2694  0013E0                     	endif
  2695  0013E0  0008               	tblrd		*
  2696  0013E2  CFF5 F073          	movff	tablat,sprintf@c
  2697  0013E6  5073               	movf	sprintf@c^0,w,c
  2698  0013E8  A4D8               	btfss	status,2,c
  2699  0013EA  EFF9  F009         	goto	u4111
  2700  0013EE  EFFB  F009         	goto	u4110
  2701  0013F2                     u4111:
  2702  0013F2  EF5E  F003         	goto	l3446
  2703  0013F6                     u4110:
  2704  0013F6                     l3774:
  2705                           
  2706                           ;doprnt.c: 1564: *sp = 0;
  2707  0013F6  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2708  0013FA  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2709  0013FE  0E00               	movlw	0
  2710  001400  6EDF               	movwf	indf2,c
  2711  001402  0012               	return		;funcret
  2712  001404                     __end_of_sprintf:
  2713                           	callstack 0
  2714                           
  2715 ;; *************** function _scale *****************
  2716 ;; Defined at:
  2717 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  2718 ;; Parameters:    Size  Location     Type
  2719 ;;  scl             1    wreg     char 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;  scl             1   47[COMRAM] char 
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  4   39[COMRAM] char 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2731 ;;      Params:         4       0       0       0       0       0       0
  2732 ;;      Locals:         5       0       0       0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0
  2734 ;;      Totals:         9       0       0       0       0       0       0
  2735 ;;Total ram usage:        9 bytes
  2736 ;; Hardware stack levels used: 1
  2737 ;; Hardware stack levels required when called: 1
  2738 ;; This function calls:
  2739 ;;		___awdiv
  2740 ;;		___awmod
  2741 ;;		___flmul
  2742 ;; This function is called by:
  2743 ;;		_sprintf
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text2
  2748  001CEE                     __ptext2:
  2749                           	callstack 0
  2750  001CEE                     _scale:
  2751                           	callstack 28
  2752                           
  2753                           ;incstack = 0
  2754                           ;scale@scl stored from wreg
  2755  001CEE  6E30               	movwf	scale@scl^0,c
  2756  001CF0                     
  2757                           ;doprnt.c: 436: if(scl < 0) {
  2758  001CF0  BE30               	btfsc	scale@scl^0,7,c
  2759  001CF2  EF7F  F00E         	goto	u3000
  2760  001CF6  EF7D  F00E         	goto	u3001
  2761  001CFA                     u3001:
  2762  001CFA  EF7F  F00F         	goto	l3074
  2763  001CFE                     u3000:
  2764  001CFE                     
  2765                           ;doprnt.c: 437: scl = -scl;
  2766  001CFE  6C30               	negf	scale@scl^0,c
  2767                           
  2768                           ;doprnt.c: 438: if(scl>=110)
  2769  001D00  5030               	movf	scale@scl^0,w,c
  2770  001D02  0A80               	xorlw	128
  2771  001D04  0F12               	addlw	-238
  2772  001D06  A0D8               	btfss	status,0,c
  2773  001D08  EF88  F00E         	goto	u3011
  2774  001D0C  EF8A  F00E         	goto	u3010
  2775  001D10                     u3011:
  2776  001D10  EF13  F00F         	goto	l3064
  2777  001D14                     u3010:
  2778  001D14                     
  2779                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2780  001D14  0E00               	movlw	0
  2781  001D16  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2782  001D18  0E0A               	movlw	10
  2783  001D1A  6E09               	movwf	___awdiv@divisor^0,c
  2784  001D1C  0E00               	movlw	0
  2785  001D1E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2786  001D20  0E64               	movlw	100
  2787  001D22  6E03               	movwf	___awmod@divisor^0,c
  2788  001D24  5030               	movf	scale@scl^0,w,c
  2789  001D26  6E01               	movwf	___awmod@dividend^0,c
  2790  001D28  6A02               	clrf	(___awmod@dividend+1)^0,c
  2791  001D2A  BE01               	btfsc	___awmod@dividend^0,7,c
  2792  001D2C  0602               	decf	(___awmod@dividend+1)^0,f,c
  2793  001D2E  EC80  F019         	call	___awmod	;wreg free
  2794  001D32  C001  F007         	movff	?___awmod,___awdiv@dividend
  2795  001D36  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2796  001D3A  EC1E  F019         	call	___awdiv	;wreg free
  2797  001D3E  0E09               	movlw	9
  2798  001D40  2607               	addwf	?___awdiv^0,f,c
  2799  001D42  5007               	movf	?___awdiv^0,w,c
  2800  001D44  0D04               	mullw	4
  2801  001D46  0E35               	movlw	low __npowers_
  2802  001D48  24F3               	addwf	243,w,c
  2803  001D4A  6EF6               	movwf	tblptrl,c
  2804  001D4C  0E06               	movlw	high __npowers_
  2805  001D4E  20F4               	addwfc	244,w,c
  2806  001D50  6EF7               	movwf	tblptrh,c
  2807  001D52                     	if	0	;There are less than 3 active tblptr bytes
  2808  001D52                     	endif
  2809  001D52  0009               	tblrd		*+
  2810  001D54  CFF5 F013          	movff	tablat,___flmul@a
  2811  001D58  0009               	tblrd		*+
  2812  001D5A  CFF5 F014          	movff	tablat,___flmul@a+1
  2813  001D5E  0009               	tblrd		*+
  2814  001D60  CFF5 F015          	movff	tablat,___flmul@a+2
  2815  001D64  000A               	tblrd		*-
  2816  001D66  CFF5 F016          	movff	tablat,___flmul@a+3
  2817  001D6A  0E00               	movlw	0
  2818  001D6C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2819  001D6E  0E64               	movlw	100
  2820  001D70  6E09               	movwf	___awdiv@divisor^0,c
  2821  001D72  5030               	movf	scale@scl^0,w,c
  2822  001D74  6E07               	movwf	___awdiv@dividend^0,c
  2823  001D76  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2824  001D78  BE07               	btfsc	___awdiv@dividend^0,7,c
  2825  001D7A  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2826  001D7C  EC1E  F019         	call	___awdiv	;wreg free
  2827  001D80  0E12               	movlw	18
  2828  001D82  2607               	addwf	?___awdiv^0,f,c
  2829  001D84  5007               	movf	?___awdiv^0,w,c
  2830  001D86  0D04               	mullw	4
  2831  001D88  0E35               	movlw	low __npowers_
  2832  001D8A  24F3               	addwf	243,w,c
  2833  001D8C  6EF6               	movwf	tblptrl,c
  2834  001D8E  0E06               	movlw	high __npowers_
  2835  001D90  20F4               	addwfc	244,w,c
  2836  001D92  6EF7               	movwf	tblptrh,c
  2837  001D94                     	if	0	;There are less than 3 active tblptr bytes
  2838  001D94                     	endif
  2839  001D94  0009               	tblrd		*+
  2840  001D96  CFF5 F00F          	movff	tablat,___flmul@b
  2841  001D9A  0009               	tblrd		*+
  2842  001D9C  CFF5 F010          	movff	tablat,___flmul@b+1
  2843  001DA0  0009               	tblrd		*+
  2844  001DA2  CFF5 F011          	movff	tablat,___flmul@b+2
  2845  001DA6  000A               	tblrd		*-
  2846  001DA8  CFF5 F012          	movff	tablat,___flmul@b+3
  2847  001DAC  EC62  F00C         	call	___flmul	;wreg free
  2848  001DB0  C00F  F02C         	movff	?___flmul,_scale$1219
  2849  001DB4  C010  F02D         	movff	?___flmul+1,_scale$1219+1
  2850  001DB8  C011  F02E         	movff	?___flmul+2,_scale$1219+2
  2851  001DBC  C012  F02F         	movff	?___flmul+3,_scale$1219+3
  2852                           
  2853                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2854  001DC0  C02C  F00F         	movff	_scale$1219,___flmul@b
  2855  001DC4  C02D  F010         	movff	_scale$1219+1,___flmul@b+1
  2856  001DC8  C02E  F011         	movff	_scale$1219+2,___flmul@b+2
  2857  001DCC  C02F  F012         	movff	_scale$1219+3,___flmul@b+3
  2858  001DD0  0E00               	movlw	0
  2859  001DD2  6E04               	movwf	(___awmod@divisor+1)^0,c
  2860  001DD4  0E0A               	movlw	10
  2861  001DD6  6E03               	movwf	___awmod@divisor^0,c
  2862  001DD8  5030               	movf	scale@scl^0,w,c
  2863  001DDA  6E01               	movwf	___awmod@dividend^0,c
  2864  001DDC  6A02               	clrf	(___awmod@dividend+1)^0,c
  2865  001DDE  BE01               	btfsc	___awmod@dividend^0,7,c
  2866  001DE0  0602               	decf	(___awmod@dividend+1)^0,f,c
  2867  001DE2  EC80  F019         	call	___awmod	;wreg free
  2868  001DE6  5001               	movf	?___awmod^0,w,c
  2869  001DE8  0D04               	mullw	4
  2870  001DEA  0E35               	movlw	low __npowers_
  2871  001DEC  24F3               	addwf	243,w,c
  2872  001DEE  6EF6               	movwf	tblptrl,c
  2873  001DF0  0E06               	movlw	high __npowers_
  2874  001DF2  20F4               	addwfc	244,w,c
  2875  001DF4  6EF7               	movwf	tblptrh,c
  2876  001DF6                     	if	0	;There are less than 3 active tblptr bytes
  2877  001DF6                     	endif
  2878  001DF6  0009               	tblrd		*+
  2879  001DF8  CFF5 F013          	movff	tablat,___flmul@a
  2880  001DFC  0009               	tblrd		*+
  2881  001DFE  CFF5 F014          	movff	tablat,___flmul@a+1
  2882  001E02  0009               	tblrd		*+
  2883  001E04  CFF5 F015          	movff	tablat,___flmul@a+2
  2884  001E08  000A               	tblrd		*-
  2885  001E0A  CFF5 F016          	movff	tablat,___flmul@a+3
  2886  001E0E  EC62  F00C         	call	___flmul	;wreg free
  2887  001E12  C00F  F028         	movff	?___flmul,?_scale
  2888  001E16  C010  F029         	movff	?___flmul+1,?_scale+1
  2889  001E1A  C011  F02A         	movff	?___flmul+2,?_scale+2
  2890  001E1E  C012  F02B         	movff	?___flmul+3,?_scale+3
  2891  001E22  EF7C  F010         	goto	l171
  2892  001E26                     l3064:
  2893                           
  2894                           ;doprnt.c: 440: else if(scl > 10)
  2895  001E26  5030               	movf	scale@scl^0,w,c
  2896  001E28  0A80               	xorlw	128
  2897  001E2A  0F75               	addlw	-139
  2898  001E2C  A0D8               	btfss	status,0,c
  2899  001E2E  EF1B  F00F         	goto	u3021
  2900  001E32  EF1D  F00F         	goto	u3020
  2901  001E36                     u3021:
  2902  001E36  EF69  F00F         	goto	l3070
  2903  001E3A                     u3020:
  2904  001E3A                     
  2905                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  2906  001E3A  0E00               	movlw	0
  2907  001E3C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2908  001E3E  0E0A               	movlw	10
  2909  001E40  6E09               	movwf	___awdiv@divisor^0,c
  2910  001E42  5030               	movf	scale@scl^0,w,c
  2911  001E44  6E07               	movwf	___awdiv@dividend^0,c
  2912  001E46  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2913  001E48  BE07               	btfsc	___awdiv@dividend^0,7,c
  2914  001E4A  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2915  001E4C  EC1E  F019         	call	___awdiv	;wreg free
  2916  001E50  0E09               	movlw	9
  2917  001E52  2607               	addwf	?___awdiv^0,f,c
  2918  001E54  5007               	movf	?___awdiv^0,w,c
  2919  001E56  0D04               	mullw	4
  2920  001E58  0E35               	movlw	low __npowers_
  2921  001E5A  24F3               	addwf	243,w,c
  2922  001E5C  6EF6               	movwf	tblptrl,c
  2923  001E5E  0E06               	movlw	high __npowers_
  2924  001E60  20F4               	addwfc	244,w,c
  2925  001E62  6EF7               	movwf	tblptrh,c
  2926  001E64                     	if	0	;There are less than 3 active tblptr bytes
  2927  001E64                     	endif
  2928  001E64  0009               	tblrd		*+
  2929  001E66  CFF5 F00F          	movff	tablat,___flmul@b
  2930  001E6A  0009               	tblrd		*+
  2931  001E6C  CFF5 F010          	movff	tablat,___flmul@b+1
  2932  001E70  0009               	tblrd		*+
  2933  001E72  CFF5 F011          	movff	tablat,___flmul@b+2
  2934  001E76  000A               	tblrd		*-
  2935  001E78  CFF5 F012          	movff	tablat,___flmul@b+3
  2936  001E7C  0E00               	movlw	0
  2937  001E7E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2938  001E80  0E0A               	movlw	10
  2939  001E82  6E03               	movwf	___awmod@divisor^0,c
  2940  001E84  5030               	movf	scale@scl^0,w,c
  2941  001E86  6E01               	movwf	___awmod@dividend^0,c
  2942  001E88  6A02               	clrf	(___awmod@dividend+1)^0,c
  2943  001E8A  BE01               	btfsc	___awmod@dividend^0,7,c
  2944  001E8C  0602               	decf	(___awmod@dividend+1)^0,f,c
  2945  001E8E  EC80  F019         	call	___awmod	;wreg free
  2946  001E92  5001               	movf	?___awmod^0,w,c
  2947  001E94  0D04               	mullw	4
  2948  001E96  0E35               	movlw	low __npowers_
  2949  001E98  24F3               	addwf	243,w,c
  2950  001E9A  6EF6               	movwf	tblptrl,c
  2951  001E9C  0E06               	movlw	high __npowers_
  2952  001E9E  20F4               	addwfc	244,w,c
  2953  001EA0  6EF7               	movwf	tblptrh,c
  2954  001EA2                     	if	0	;There are less than 3 active tblptr bytes
  2955  001EA2                     	endif
  2956  001EA2  0009               	tblrd		*+
  2957  001EA4  CFF5 F013          	movff	tablat,___flmul@a
  2958  001EA8  0009               	tblrd		*+
  2959  001EAA  CFF5 F014          	movff	tablat,___flmul@a+1
  2960  001EAE  0009               	tblrd		*+
  2961  001EB0  CFF5 F015          	movff	tablat,___flmul@a+2
  2962  001EB4  000A               	tblrd		*-
  2963  001EB6  CFF5 F016          	movff	tablat,___flmul@a+3
  2964  001EBA  EC62  F00C         	call	___flmul	;wreg free
  2965  001EBE  C00F  F028         	movff	?___flmul,?_scale
  2966  001EC2  C010  F029         	movff	?___flmul+1,?_scale+1
  2967  001EC6  C011  F02A         	movff	?___flmul+2,?_scale+2
  2968  001ECA  C012  F02B         	movff	?___flmul+3,?_scale+3
  2969  001ECE  EF7C  F010         	goto	l171
  2970  001ED2                     l3070:
  2971                           
  2972                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  2973  001ED2  5030               	movf	scale@scl^0,w,c
  2974  001ED4  0D04               	mullw	4
  2975  001ED6  0E35               	movlw	low __npowers_
  2976  001ED8  24F3               	addwf	243,w,c
  2977  001EDA  6EF6               	movwf	tblptrl,c
  2978  001EDC  0E06               	movlw	high __npowers_
  2979  001EDE  20F4               	addwfc	244,w,c
  2980  001EE0  6EF7               	movwf	tblptrh,c
  2981  001EE2                     	if	0	;There are less than 3 active tblptr bytes
  2982  001EE2                     	endif
  2983  001EE2  0009               	tblrd		*+
  2984  001EE4  CFF5 F028          	movff	tablat,?_scale
  2985  001EE8  0009               	tblrd		*+
  2986  001EEA  CFF5 F029          	movff	tablat,?_scale+1
  2987  001EEE  0009               	tblrd		*+
  2988  001EF0  CFF5 F02A          	movff	tablat,?_scale+2
  2989  001EF4  000A               	tblrd		*-
  2990  001EF6  CFF5 F02B          	movff	tablat,?_scale+3
  2991  001EFA  EF7C  F010         	goto	l171
  2992  001EFE                     l3074:
  2993                           
  2994                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  2995  001EFE  5030               	movf	scale@scl^0,w,c
  2996  001F00  0A80               	xorlw	128
  2997  001F02  0F12               	addlw	-238
  2998  001F04  A0D8               	btfss	status,0,c
  2999  001F06  EF87  F00F         	goto	u3031
  3000  001F0A  EF89  F00F         	goto	u3030
  3001  001F0E                     u3031:
  3002  001F0E  EF12  F010         	goto	l3082
  3003  001F12                     u3030:
  3004  001F12                     
  3005                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3006  001F12  0E00               	movlw	0
  3007  001F14  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3008  001F16  0E0A               	movlw	10
  3009  001F18  6E09               	movwf	___awdiv@divisor^0,c
  3010  001F1A  0E00               	movlw	0
  3011  001F1C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3012  001F1E  0E64               	movlw	100
  3013  001F20  6E03               	movwf	___awmod@divisor^0,c
  3014  001F22  5030               	movf	scale@scl^0,w,c
  3015  001F24  6E01               	movwf	___awmod@dividend^0,c
  3016  001F26  6A02               	clrf	(___awmod@dividend+1)^0,c
  3017  001F28  BE01               	btfsc	___awmod@dividend^0,7,c
  3018  001F2A  0602               	decf	(___awmod@dividend+1)^0,f,c
  3019  001F2C  EC80  F019         	call	___awmod	;wreg free
  3020  001F30  C001  F007         	movff	?___awmod,___awdiv@dividend
  3021  001F34  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3022  001F38  EC1E  F019         	call	___awdiv	;wreg free
  3023  001F3C  0E09               	movlw	9
  3024  001F3E  2607               	addwf	?___awdiv^0,f,c
  3025  001F40  5007               	movf	?___awdiv^0,w,c
  3026  001F42  0D04               	mullw	4
  3027  001F44  0E01               	movlw	low __powers_
  3028  001F46  24F3               	addwf	243,w,c
  3029  001F48  6EF6               	movwf	tblptrl,c
  3030  001F4A  0E06               	movlw	high __powers_
  3031  001F4C  20F4               	addwfc	244,w,c
  3032  001F4E  6EF7               	movwf	tblptrh,c
  3033  001F50                     	if	0	;There are less than 3 active tblptr bytes
  3034  001F50                     	endif
  3035  001F50  0009               	tblrd		*+
  3036  001F52  CFF5 F013          	movff	tablat,___flmul@a
  3037  001F56  0009               	tblrd		*+
  3038  001F58  CFF5 F014          	movff	tablat,___flmul@a+1
  3039  001F5C  0009               	tblrd		*+
  3040  001F5E  CFF5 F015          	movff	tablat,___flmul@a+2
  3041  001F62  000A               	tblrd		*-
  3042  001F64  CFF5 F016          	movff	tablat,___flmul@a+3
  3043  001F68  0E00               	movlw	0
  3044  001F6A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3045  001F6C  0E64               	movlw	100
  3046  001F6E  6E09               	movwf	___awdiv@divisor^0,c
  3047  001F70  5030               	movf	scale@scl^0,w,c
  3048  001F72  6E07               	movwf	___awdiv@dividend^0,c
  3049  001F74  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3050  001F76  BE07               	btfsc	___awdiv@dividend^0,7,c
  3051  001F78  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3052  001F7A  EC1E  F019         	call	___awdiv	;wreg free
  3053  001F7E  0E12               	movlw	18
  3054  001F80  2607               	addwf	?___awdiv^0,f,c
  3055  001F82  5007               	movf	?___awdiv^0,w,c
  3056  001F84  0D04               	mullw	4
  3057  001F86  0E01               	movlw	low __powers_
  3058  001F88  24F3               	addwf	243,w,c
  3059  001F8A  6EF6               	movwf	tblptrl,c
  3060  001F8C  0E06               	movlw	high __powers_
  3061  001F8E  20F4               	addwfc	244,w,c
  3062  001F90  6EF7               	movwf	tblptrh,c
  3063  001F92                     	if	0	;There are less than 3 active tblptr bytes
  3064  001F92                     	endif
  3065  001F92  0009               	tblrd		*+
  3066  001F94  CFF5 F00F          	movff	tablat,___flmul@b
  3067  001F98  0009               	tblrd		*+
  3068  001F9A  CFF5 F010          	movff	tablat,___flmul@b+1
  3069  001F9E  0009               	tblrd		*+
  3070  001FA0  CFF5 F011          	movff	tablat,___flmul@b+2
  3071  001FA4  000A               	tblrd		*-
  3072  001FA6  CFF5 F012          	movff	tablat,___flmul@b+3
  3073  001FAA  EC62  F00C         	call	___flmul	;wreg free
  3074  001FAE  C00F  F02C         	movff	?___flmul,_scale$1219
  3075  001FB2  C010  F02D         	movff	?___flmul+1,_scale$1219+1
  3076  001FB6  C011  F02E         	movff	?___flmul+2,_scale$1219+2
  3077  001FBA  C012  F02F         	movff	?___flmul+3,_scale$1219+3
  3078                           
  3079                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3080  001FBE  C02C  F00F         	movff	_scale$1219,___flmul@b
  3081  001FC2  C02D  F010         	movff	_scale$1219+1,___flmul@b+1
  3082  001FC6  C02E  F011         	movff	_scale$1219+2,___flmul@b+2
  3083  001FCA  C02F  F012         	movff	_scale$1219+3,___flmul@b+3
  3084  001FCE  0E00               	movlw	0
  3085  001FD0  6E04               	movwf	(___awmod@divisor+1)^0,c
  3086  001FD2  0E0A               	movlw	10
  3087  001FD4  6E03               	movwf	___awmod@divisor^0,c
  3088  001FD6  5030               	movf	scale@scl^0,w,c
  3089  001FD8  6E01               	movwf	___awmod@dividend^0,c
  3090  001FDA  6A02               	clrf	(___awmod@dividend+1)^0,c
  3091  001FDC  BE01               	btfsc	___awmod@dividend^0,7,c
  3092  001FDE  0602               	decf	(___awmod@dividend+1)^0,f,c
  3093  001FE0  EC80  F019         	call	___awmod	;wreg free
  3094  001FE4  5001               	movf	?___awmod^0,w,c
  3095  001FE6  0D04               	mullw	4
  3096  001FE8  0E01               	movlw	low __powers_
  3097  001FEA  24F3               	addwf	243,w,c
  3098  001FEC  6EF6               	movwf	tblptrl,c
  3099  001FEE  0E06               	movlw	high __powers_
  3100  001FF0  20F4               	addwfc	244,w,c
  3101  001FF2  6EF7               	movwf	tblptrh,c
  3102  001FF4                     	if	0	;There are less than 3 active tblptr bytes
  3103  001FF4                     	endif
  3104  001FF4  0009               	tblrd		*+
  3105  001FF6  CFF5 F013          	movff	tablat,___flmul@a
  3106  001FFA  0009               	tblrd		*+
  3107  001FFC  CFF5 F014          	movff	tablat,___flmul@a+1
  3108  002000  0009               	tblrd		*+
  3109  002002  CFF5 F015          	movff	tablat,___flmul@a+2
  3110  002006  000A               	tblrd		*-
  3111  002008  CFF5 F016          	movff	tablat,___flmul@a+3
  3112  00200C  EC62  F00C         	call	___flmul	;wreg free
  3113  002010  C00F  F028         	movff	?___flmul,?_scale
  3114  002014  C010  F029         	movff	?___flmul+1,?_scale+1
  3115  002018  C011  F02A         	movff	?___flmul+2,?_scale+2
  3116  00201C  C012  F02B         	movff	?___flmul+3,?_scale+3
  3117  002020  EF7C  F010         	goto	l171
  3118  002024                     l3082:
  3119                           
  3120                           ;doprnt.c: 446: else if(scl > 10)
  3121  002024  5030               	movf	scale@scl^0,w,c
  3122  002026  0A80               	xorlw	128
  3123  002028  0F75               	addlw	-139
  3124  00202A  A0D8               	btfss	status,0,c
  3125  00202C  EF1A  F010         	goto	u3041
  3126  002030  EF1C  F010         	goto	u3040
  3127  002034                     u3041:
  3128  002034  EF68  F010         	goto	l3088
  3129  002038                     u3040:
  3130  002038                     
  3131                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3132  002038  0E00               	movlw	0
  3133  00203A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3134  00203C  0E0A               	movlw	10
  3135  00203E  6E09               	movwf	___awdiv@divisor^0,c
  3136  002040  5030               	movf	scale@scl^0,w,c
  3137  002042  6E07               	movwf	___awdiv@dividend^0,c
  3138  002044  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3139  002046  BE07               	btfsc	___awdiv@dividend^0,7,c
  3140  002048  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3141  00204A  EC1E  F019         	call	___awdiv	;wreg free
  3142  00204E  0E09               	movlw	9
  3143  002050  2607               	addwf	?___awdiv^0,f,c
  3144  002052  5007               	movf	?___awdiv^0,w,c
  3145  002054  0D04               	mullw	4
  3146  002056  0E01               	movlw	low __powers_
  3147  002058  24F3               	addwf	243,w,c
  3148  00205A  6EF6               	movwf	tblptrl,c
  3149  00205C  0E06               	movlw	high __powers_
  3150  00205E  20F4               	addwfc	244,w,c
  3151  002060  6EF7               	movwf	tblptrh,c
  3152  002062                     	if	0	;There are less than 3 active tblptr bytes
  3153  002062                     	endif
  3154  002062  0009               	tblrd		*+
  3155  002064  CFF5 F00F          	movff	tablat,___flmul@b
  3156  002068  0009               	tblrd		*+
  3157  00206A  CFF5 F010          	movff	tablat,___flmul@b+1
  3158  00206E  0009               	tblrd		*+
  3159  002070  CFF5 F011          	movff	tablat,___flmul@b+2
  3160  002074  000A               	tblrd		*-
  3161  002076  CFF5 F012          	movff	tablat,___flmul@b+3
  3162  00207A  0E00               	movlw	0
  3163  00207C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3164  00207E  0E0A               	movlw	10
  3165  002080  6E03               	movwf	___awmod@divisor^0,c
  3166  002082  5030               	movf	scale@scl^0,w,c
  3167  002084  6E01               	movwf	___awmod@dividend^0,c
  3168  002086  6A02               	clrf	(___awmod@dividend+1)^0,c
  3169  002088  BE01               	btfsc	___awmod@dividend^0,7,c
  3170  00208A  0602               	decf	(___awmod@dividend+1)^0,f,c
  3171  00208C  EC80  F019         	call	___awmod	;wreg free
  3172  002090  5001               	movf	?___awmod^0,w,c
  3173  002092  0D04               	mullw	4
  3174  002094  0E01               	movlw	low __powers_
  3175  002096  24F3               	addwf	243,w,c
  3176  002098  6EF6               	movwf	tblptrl,c
  3177  00209A  0E06               	movlw	high __powers_
  3178  00209C  20F4               	addwfc	244,w,c
  3179  00209E  6EF7               	movwf	tblptrh,c
  3180  0020A0                     	if	0	;There are less than 3 active tblptr bytes
  3181  0020A0                     	endif
  3182  0020A0  0009               	tblrd		*+
  3183  0020A2  CFF5 F013          	movff	tablat,___flmul@a
  3184  0020A6  0009               	tblrd		*+
  3185  0020A8  CFF5 F014          	movff	tablat,___flmul@a+1
  3186  0020AC  0009               	tblrd		*+
  3187  0020AE  CFF5 F015          	movff	tablat,___flmul@a+2
  3188  0020B2  000A               	tblrd		*-
  3189  0020B4  CFF5 F016          	movff	tablat,___flmul@a+3
  3190  0020B8  EC62  F00C         	call	___flmul	;wreg free
  3191  0020BC  C00F  F028         	movff	?___flmul,?_scale
  3192  0020C0  C010  F029         	movff	?___flmul+1,?_scale+1
  3193  0020C4  C011  F02A         	movff	?___flmul+2,?_scale+2
  3194  0020C8  C012  F02B         	movff	?___flmul+3,?_scale+3
  3195  0020CC  EF7C  F010         	goto	l171
  3196  0020D0                     l3088:
  3197                           
  3198                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3199  0020D0  5030               	movf	scale@scl^0,w,c
  3200  0020D2  0D04               	mullw	4
  3201  0020D4  0E01               	movlw	low __powers_
  3202  0020D6  24F3               	addwf	243,w,c
  3203  0020D8  6EF6               	movwf	tblptrl,c
  3204  0020DA  0E06               	movlw	high __powers_
  3205  0020DC  20F4               	addwfc	244,w,c
  3206  0020DE  6EF7               	movwf	tblptrh,c
  3207  0020E0                     	if	0	;There are less than 3 active tblptr bytes
  3208  0020E0                     	endif
  3209  0020E0  0009               	tblrd		*+
  3210  0020E2  CFF5 F028          	movff	tablat,?_scale
  3211  0020E6  0009               	tblrd		*+
  3212  0020E8  CFF5 F029          	movff	tablat,?_scale+1
  3213  0020EC  0009               	tblrd		*+
  3214  0020EE  CFF5 F02A          	movff	tablat,?_scale+2
  3215  0020F2  000A               	tblrd		*-
  3216  0020F4  CFF5 F02B          	movff	tablat,?_scale+3
  3217  0020F8                     l171:
  3218  0020F8  0012               	return		;funcret
  3219  0020FA                     __end_of_scale:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function ___awmod *****************
  3223 ;; Defined at:
  3224 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awmod.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  dividend        2    0[COMRAM] int 
  3227 ;;  divisor         2    2[COMRAM] int 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  sign            1    5[COMRAM] unsigned char 
  3230 ;;  counter         1    4[COMRAM] unsigned char 
  3231 ;; Return value:  Size  Location     Type
  3232 ;;                  2    0[COMRAM] int 
  3233 ;; Registers used:
  3234 ;;		wreg, status,2, status,0
  3235 ;; Tracked objects:
  3236 ;;		On entry : 0/0
  3237 ;;		On exit  : 0/0
  3238 ;;		Unchanged: 0/0
  3239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3240 ;;      Params:         4       0       0       0       0       0       0
  3241 ;;      Locals:         2       0       0       0       0       0       0
  3242 ;;      Temps:          0       0       0       0       0       0       0
  3243 ;;      Totals:         6       0       0       0       0       0       0
  3244 ;;Total ram usage:        6 bytes
  3245 ;; Hardware stack levels used: 1
  3246 ;; This function calls:
  3247 ;;		Nothing
  3248 ;; This function is called by:
  3249 ;;		_scale
  3250 ;; This function uses a non-reentrant model
  3251 ;;
  3252                           
  3253                           	psect	text3
  3254  003300                     __ptext3:
  3255                           	callstack 0
  3256  003300                     ___awmod:
  3257                           	callstack 28
  3258  003300  0E00               	movlw	0
  3259  003302  6E06               	movwf	___awmod@sign^0,c
  3260  003304  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3261  003306  EF89  F019         	goto	u2860
  3262  00330A  EF87  F019         	goto	u2861
  3263  00330E                     u2861:
  3264  00330E  EF8F  F019         	goto	l2970
  3265  003312                     u2860:
  3266  003312  6C01               	negf	___awmod@dividend^0,c
  3267  003314  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3268  003316  B0D8               	btfsc	status,0,c
  3269  003318  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3270  00331A  0E01               	movlw	1
  3271  00331C  6E06               	movwf	___awmod@sign^0,c
  3272  00331E                     l2970:
  3273  00331E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3274  003320  EF96  F019         	goto	u2870
  3275  003324  EF94  F019         	goto	u2871
  3276  003328                     u2871:
  3277  003328  EF9A  F019         	goto	l2974
  3278  00332C                     u2870:
  3279  00332C  6C03               	negf	___awmod@divisor^0,c
  3280  00332E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3281  003330  B0D8               	btfsc	status,0,c
  3282  003332  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3283  003334                     l2974:
  3284  003334  5003               	movf	___awmod@divisor^0,w,c
  3285  003336  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3286  003338  B4D8               	btfsc	status,2,c
  3287  00333A  EFA1  F019         	goto	u2881
  3288  00333E  EFA3  F019         	goto	u2880
  3289  003342                     u2881:
  3290  003342  EFC7  F019         	goto	l2990
  3291  003346                     u2880:
  3292  003346  0E01               	movlw	1
  3293  003348  6E05               	movwf	___awmod@counter^0,c
  3294  00334A  EFAB  F019         	goto	l2980
  3295  00334E                     l2978:
  3296  00334E  90D8               	bcf	status,0,c
  3297  003350  3603               	rlcf	___awmod@divisor^0,f,c
  3298  003352  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3299  003354  2A05               	incf	___awmod@counter^0,f,c
  3300  003356                     l2980:
  3301  003356  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3302  003358  EFB0  F019         	goto	u2891
  3303  00335C  EFB2  F019         	goto	u2890
  3304  003360                     u2891:
  3305  003360  EFA7  F019         	goto	l2978
  3306  003364                     u2890:
  3307  003364                     l2982:
  3308  003364  5003               	movf	___awmod@divisor^0,w,c
  3309  003366  5C01               	subwf	___awmod@dividend^0,w,c
  3310  003368  5004               	movf	(___awmod@divisor+1)^0,w,c
  3311  00336A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3312  00336C  A0D8               	btfss	status,0,c
  3313  00336E  EFBB  F019         	goto	u2901
  3314  003372  EFBD  F019         	goto	u2900
  3315  003376                     u2901:
  3316  003376  EFC1  F019         	goto	l2986
  3317  00337A                     u2900:
  3318  00337A  5003               	movf	___awmod@divisor^0,w,c
  3319  00337C  5E01               	subwf	___awmod@dividend^0,f,c
  3320  00337E  5004               	movf	(___awmod@divisor+1)^0,w,c
  3321  003380  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3322  003382                     l2986:
  3323  003382  90D8               	bcf	status,0,c
  3324  003384  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3325  003386  3203               	rrcf	___awmod@divisor^0,f,c
  3326  003388  2E05               	decfsz	___awmod@counter^0,f,c
  3327  00338A  EFB2  F019         	goto	l2982
  3328  00338E                     l2990:
  3329  00338E  5006               	movf	___awmod@sign^0,w,c
  3330  003390  B4D8               	btfsc	status,2,c
  3331  003392  EFCD  F019         	goto	u2911
  3332  003396  EFCF  F019         	goto	u2910
  3333  00339A                     u2911:
  3334  00339A  EFD3  F019         	goto	l2994
  3335  00339E                     u2910:
  3336  00339E  6C01               	negf	___awmod@dividend^0,c
  3337  0033A0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3338  0033A2  B0D8               	btfsc	status,0,c
  3339  0033A4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3340  0033A6                     l2994:
  3341  0033A6  C001  F001         	movff	___awmod@dividend,?___awmod
  3342  0033AA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3343  0033AE  0012               	return		;funcret
  3344  0033B0                     __end_of___awmod:
  3345                           	callstack 0
  3346                           
  3347 ;; *************** function ___awdiv *****************
  3348 ;; Defined at:
  3349 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\awdiv.c"
  3350 ;; Parameters:    Size  Location     Type
  3351 ;;  dividend        2    6[COMRAM] int 
  3352 ;;  divisor         2    8[COMRAM] int 
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;  quotient        2   12[COMRAM] int 
  3355 ;;  sign            1   11[COMRAM] unsigned char 
  3356 ;;  counter         1   10[COMRAM] unsigned char 
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  2    6[COMRAM] int 
  3359 ;; Registers used:
  3360 ;;		wreg, status,2, status,0
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3366 ;;      Params:         4       0       0       0       0       0       0
  3367 ;;      Locals:         4       0       0       0       0       0       0
  3368 ;;      Temps:          0       0       0       0       0       0       0
  3369 ;;      Totals:         8       0       0       0       0       0       0
  3370 ;;Total ram usage:        8 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; This function calls:
  3373 ;;		Nothing
  3374 ;; This function is called by:
  3375 ;;		_scale
  3376 ;;		_sprintf
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           	psect	text4
  3381  00323C                     __ptext4:
  3382                           	callstack 0
  3383  00323C                     ___awdiv:
  3384                           	callstack 28
  3385  00323C  0E00               	movlw	0
  3386  00323E  6E0C               	movwf	___awdiv@sign^0,c
  3387  003240  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  3388  003242  EF27  F019         	goto	u2800
  3389  003246  EF25  F019         	goto	u2801
  3390  00324A                     u2801:
  3391  00324A  EF2D  F019         	goto	l2926
  3392  00324E                     u2800:
  3393  00324E  6C09               	negf	___awdiv@divisor^0,c
  3394  003250  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  3395  003252  B0D8               	btfsc	status,0,c
  3396  003254  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  3397  003256  0E01               	movlw	1
  3398  003258  6E0C               	movwf	___awdiv@sign^0,c
  3399  00325A                     l2926:
  3400  00325A  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  3401  00325C  EF34  F019         	goto	u2810
  3402  003260  EF32  F019         	goto	u2811
  3403  003264                     u2811:
  3404  003264  EF3A  F019         	goto	l2932
  3405  003268                     u2810:
  3406  003268  6C07               	negf	___awdiv@dividend^0,c
  3407  00326A  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  3408  00326C  B0D8               	btfsc	status,0,c
  3409  00326E  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  3410  003270  0E01               	movlw	1
  3411  003272  1A0C               	xorwf	___awdiv@sign^0,f,c
  3412  003274                     l2932:
  3413  003274  0E00               	movlw	0
  3414  003276  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  3415  003278  0E00               	movlw	0
  3416  00327A  6E0D               	movwf	___awdiv@quotient^0,c
  3417  00327C  5009               	movf	___awdiv@divisor^0,w,c
  3418  00327E  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  3419  003280  B4D8               	btfsc	status,2,c
  3420  003282  EF45  F019         	goto	u2821
  3421  003286  EF47  F019         	goto	u2820
  3422  00328A                     u2821:
  3423  00328A  EF6F  F019         	goto	l2954
  3424  00328E                     u2820:
  3425  00328E  0E01               	movlw	1
  3426  003290  6E0B               	movwf	___awdiv@counter^0,c
  3427  003292  EF4F  F019         	goto	l2940
  3428  003296                     l2938:
  3429  003296  90D8               	bcf	status,0,c
  3430  003298  3609               	rlcf	___awdiv@divisor^0,f,c
  3431  00329A  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  3432  00329C  2A0B               	incf	___awdiv@counter^0,f,c
  3433  00329E                     l2940:
  3434  00329E  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  3435  0032A0  EF54  F019         	goto	u2831
  3436  0032A4  EF56  F019         	goto	u2830
  3437  0032A8                     u2831:
  3438  0032A8  EF4B  F019         	goto	l2938
  3439  0032AC                     u2830:
  3440  0032AC                     l2942:
  3441  0032AC  90D8               	bcf	status,0,c
  3442  0032AE  360D               	rlcf	___awdiv@quotient^0,f,c
  3443  0032B0  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  3444  0032B2  5009               	movf	___awdiv@divisor^0,w,c
  3445  0032B4  5C07               	subwf	___awdiv@dividend^0,w,c
  3446  0032B6  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3447  0032B8  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  3448  0032BA  A0D8               	btfss	status,0,c
  3449  0032BC  EF62  F019         	goto	u2841
  3450  0032C0  EF64  F019         	goto	u2840
  3451  0032C4                     u2841:
  3452  0032C4  EF69  F019         	goto	l2950
  3453  0032C8                     u2840:
  3454  0032C8  5009               	movf	___awdiv@divisor^0,w,c
  3455  0032CA  5E07               	subwf	___awdiv@dividend^0,f,c
  3456  0032CC  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3457  0032CE  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  3458  0032D0  800D               	bsf	___awdiv@quotient^0,0,c
  3459  0032D2                     l2950:
  3460  0032D2  90D8               	bcf	status,0,c
  3461  0032D4  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  3462  0032D6  3209               	rrcf	___awdiv@divisor^0,f,c
  3463  0032D8  2E0B               	decfsz	___awdiv@counter^0,f,c
  3464  0032DA  EF56  F019         	goto	l2942
  3465  0032DE                     l2954:
  3466  0032DE  500C               	movf	___awdiv@sign^0,w,c
  3467  0032E0  B4D8               	btfsc	status,2,c
  3468  0032E2  EF75  F019         	goto	u2851
  3469  0032E6  EF77  F019         	goto	u2850
  3470  0032EA                     u2851:
  3471  0032EA  EF7B  F019         	goto	l2958
  3472  0032EE                     u2850:
  3473  0032EE  6C0D               	negf	___awdiv@quotient^0,c
  3474  0032F0  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  3475  0032F2  B0D8               	btfsc	status,0,c
  3476  0032F4  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  3477  0032F6                     l2958:
  3478  0032F6  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3479  0032FA  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3480  0032FE  0012               	return		;funcret
  3481  003300                     __end_of___awdiv:
  3482                           	callstack 0
  3483                           
  3484 ;; *************** function _isdigit *****************
  3485 ;; Defined at:
  3486 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\isdigit.c"
  3487 ;; Parameters:    Size  Location     Type
  3488 ;;  c               1    wreg     unsigned char 
  3489 ;; Auto vars:     Size  Location     Type
  3490 ;;  c               1    2[COMRAM] unsigned char 
  3491 ;; Return value:  Size  Location     Type
  3492 ;;		None               void
  3493 ;; Registers used:
  3494 ;;		wreg, status,2, status,0
  3495 ;; Tracked objects:
  3496 ;;		On entry : 0/0
  3497 ;;		On exit  : 0/0
  3498 ;;		Unchanged: 0/0
  3499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3500 ;;      Params:         0       0       0       0       0       0       0
  3501 ;;      Locals:         2       0       0       0       0       0       0
  3502 ;;      Temps:          1       0       0       0       0       0       0
  3503 ;;      Totals:         3       0       0       0       0       0       0
  3504 ;;Total ram usage:        3 bytes
  3505 ;; Hardware stack levels used: 1
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_sprintf
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text5
  3514  0037E2                     __ptext5:
  3515                           	callstack 0
  3516  0037E2                     _isdigit:
  3517                           	callstack 29
  3518                           
  3519                           ;incstack = 0
  3520                           ;isdigit@c stored from wreg
  3521  0037E2  6E03               	movwf	isdigit@c^0,c
  3522  0037E4  0E00               	movlw	0
  3523  0037E6  6E02               	movwf	_isdigit$1031^0,c
  3524  0037E8  0E3A               	movlw	58
  3525  0037EA  6003               	cpfslt	isdigit@c^0,c
  3526  0037EC  EFFA  F01B         	goto	u3051
  3527  0037F0  EFFC  F01B         	goto	u3050
  3528  0037F4                     u3051:
  3529  0037F4  EF06  F01C         	goto	l3100
  3530  0037F8                     u3050:
  3531  0037F8  0E2F               	movlw	47
  3532  0037FA  6403               	cpfsgt	isdigit@c^0,c
  3533  0037FC  EF02  F01C         	goto	u3061
  3534  003800  EF04  F01C         	goto	u3060
  3535  003804                     u3061:
  3536  003804  EF06  F01C         	goto	l3100
  3537  003808                     u3060:
  3538  003808  0E01               	movlw	1
  3539  00380A  6E02               	movwf	_isdigit$1031^0,c
  3540  00380C                     l3100:
  3541  00380C  C002  F001         	movff	_isdigit$1031,??_isdigit
  3542  003810  3001               	rrcf	??_isdigit^0,w,c
  3543  003812  0012               	return		;funcret
  3544  003814                     __end_of_isdigit:
  3545                           	callstack 0
  3546                           
  3547 ;; *************** function _fround *****************
  3548 ;; Defined at:
  3549 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\doprnt.c"
  3550 ;; Parameters:    Size  Location     Type
  3551 ;;  prec            1    wreg     unsigned char 
  3552 ;; Auto vars:     Size  Location     Type
  3553 ;;  prec            1   51[COMRAM] unsigned char 
  3554 ;; Return value:  Size  Location     Type
  3555 ;;                  4   39[COMRAM] unsigned char 
  3556 ;; Registers used:
  3557 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3558 ;; Tracked objects:
  3559 ;;		On entry : 0/0
  3560 ;;		On exit  : 0/0
  3561 ;;		Unchanged: 0/0
  3562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3563 ;;      Params:         4       0       0       0       0       0       0
  3564 ;;      Locals:         9       0       0       0       0       0       0
  3565 ;;      Temps:          0       0       0       0       0       0       0
  3566 ;;      Totals:        13       0       0       0       0       0       0
  3567 ;;Total ram usage:       13 bytes
  3568 ;; Hardware stack levels used: 1
  3569 ;; Hardware stack levels required when called: 1
  3570 ;; This function calls:
  3571 ;;		___flmul
  3572 ;;		___lwdiv
  3573 ;;		___lwmod
  3574 ;; This function is called by:
  3575 ;;		_sprintf
  3576 ;; This function uses a non-reentrant model
  3577 ;;
  3578                           
  3579                           	psect	text6
  3580  002494                     __ptext6:
  3581                           	callstack 0
  3582  002494                     _fround:
  3583                           	callstack 28
  3584                           
  3585                           ;incstack = 0
  3586                           ;fround@prec stored from wreg
  3587  002494  6E34               	movwf	fround@prec^0,c
  3588  002496                     
  3589                           ;doprnt.c: 421: if(prec>=110)
  3590  002496  0E6D               	movlw	109
  3591  002498  6434               	cpfsgt	fround@prec^0,c
  3592  00249A  EF51  F012         	goto	u2981
  3593  00249E  EF53  F012         	goto	u2980
  3594  0024A2                     u2981:
  3595  0024A2  EF00  F013         	goto	l3044
  3596  0024A6                     u2980:
  3597  0024A6                     
  3598                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3599  0024A6  0E00               	movlw	0
  3600  0024A8  6E13               	movwf	___flmul@a^0,c
  3601  0024AA  0E00               	movlw	0
  3602  0024AC  6E14               	movwf	(___flmul@a+1)^0,c
  3603  0024AE  0E00               	movlw	0
  3604  0024B0  6E15               	movwf	(___flmul@a+2)^0,c
  3605  0024B2  0E3F               	movlw	63
  3606  0024B4  6E16               	movwf	(___flmul@a+3)^0,c
  3607  0024B6  0E00               	movlw	0
  3608  0024B8  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3609  0024BA  0E64               	movlw	100
  3610  0024BC  6E08               	movwf	___lwdiv@divisor^0,c
  3611  0024BE  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3612  0024C2  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3613  0024C4  EC46  F01B         	call	___lwdiv	;wreg free
  3614  0024C8  90D8               	bcf	status,0,c
  3615  0024CA  3606               	rlcf	?___lwdiv^0,f,c
  3616  0024CC  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3617  0024CE  90D8               	bcf	status,0,c
  3618  0024D0  3606               	rlcf	?___lwdiv^0,f,c
  3619  0024D2  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3620  0024D4  0E48               	movlw	72
  3621  0024D6  2606               	addwf	?___lwdiv^0,f,c
  3622  0024D8  0E00               	movlw	0
  3623  0024DA  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3624  0024DC  0E35               	movlw	low __npowers_
  3625  0024DE  2406               	addwf	?___lwdiv^0,w,c
  3626  0024E0  6EF6               	movwf	tblptrl,c
  3627  0024E2  0E06               	movlw	high __npowers_
  3628  0024E4  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3629  0024E6  6EF7               	movwf	tblptrh,c
  3630  0024E8                     	if	0	;There are less than 3 active tblptr bytes
  3631  0024E8                     	endif
  3632  0024E8  0009               	tblrd		*+
  3633  0024EA  CFF5 F00F          	movff	tablat,___flmul@b
  3634  0024EE  0009               	tblrd		*+
  3635  0024F0  CFF5 F010          	movff	tablat,___flmul@b+1
  3636  0024F4  0009               	tblrd		*+
  3637  0024F6  CFF5 F011          	movff	tablat,___flmul@b+2
  3638  0024FA  000A               	tblrd		*-
  3639  0024FC  CFF5 F012          	movff	tablat,___flmul@b+3
  3640  002500  EC62  F00C         	call	___flmul	;wreg free
  3641  002504  C00F  F030         	movff	?___flmul,_fround$1217
  3642  002508  C010  F031         	movff	?___flmul+1,_fround$1217+1
  3643  00250C  C011  F032         	movff	?___flmul+2,_fround$1217+2
  3644  002510  C012  F033         	movff	?___flmul+3,_fround$1217+3
  3645                           
  3646                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3647  002514  0E00               	movlw	0
  3648  002516  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3649  002518  0E0A               	movlw	10
  3650  00251A  6E08               	movwf	___lwdiv@divisor^0,c
  3651  00251C  0E00               	movlw	0
  3652  00251E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3653  002520  0E64               	movlw	100
  3654  002522  6E03               	movwf	___lwmod@divisor^0,c
  3655  002524  C034  F001         	movff	fround@prec,___lwmod@dividend
  3656  002528  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3657  00252A  EC80  F01B         	call	___lwmod	;wreg free
  3658  00252E  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3659  002532  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3660  002536  EC46  F01B         	call	___lwdiv	;wreg free
  3661  00253A  90D8               	bcf	status,0,c
  3662  00253C  3606               	rlcf	?___lwdiv^0,f,c
  3663  00253E  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3664  002540  90D8               	bcf	status,0,c
  3665  002542  3606               	rlcf	?___lwdiv^0,f,c
  3666  002544  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3667  002546  0E24               	movlw	36
  3668  002548  2606               	addwf	?___lwdiv^0,f,c
  3669  00254A  0E00               	movlw	0
  3670  00254C  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3671  00254E  0E35               	movlw	low __npowers_
  3672  002550  2406               	addwf	?___lwdiv^0,w,c
  3673  002552  6EF6               	movwf	tblptrl,c
  3674  002554  0E06               	movlw	high __npowers_
  3675  002556  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3676  002558  6EF7               	movwf	tblptrh,c
  3677  00255A                     	if	0	;There are less than 3 active tblptr bytes
  3678  00255A                     	endif
  3679  00255A  0009               	tblrd		*+
  3680  00255C  CFF5 F013          	movff	tablat,___flmul@a
  3681  002560  0009               	tblrd		*+
  3682  002562  CFF5 F014          	movff	tablat,___flmul@a+1
  3683  002566  0009               	tblrd		*+
  3684  002568  CFF5 F015          	movff	tablat,___flmul@a+2
  3685  00256C  000A               	tblrd		*-
  3686  00256E  CFF5 F016          	movff	tablat,___flmul@a+3
  3687  002572  C030  F00F         	movff	_fround$1217,___flmul@b
  3688  002576  C031  F010         	movff	_fround$1217+1,___flmul@b+1
  3689  00257A  C032  F011         	movff	_fround$1217+2,___flmul@b+2
  3690  00257E  C033  F012         	movff	_fround$1217+3,___flmul@b+3
  3691  002582  EC62  F00C         	call	___flmul	;wreg free
  3692  002586  C00F  F02C         	movff	?___flmul,_fround$1218
  3693  00258A  C010  F02D         	movff	?___flmul+1,_fround$1218+1
  3694  00258E  C011  F02E         	movff	?___flmul+2,_fround$1218+2
  3695  002592  C012  F02F         	movff	?___flmul+3,_fround$1218+3
  3696                           
  3697                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3698  002596  C02C  F00F         	movff	_fround$1218,___flmul@b
  3699  00259A  C02D  F010         	movff	_fround$1218+1,___flmul@b+1
  3700  00259E  C02E  F011         	movff	_fround$1218+2,___flmul@b+2
  3701  0025A2  C02F  F012         	movff	_fround$1218+3,___flmul@b+3
  3702  0025A6  0E00               	movlw	0
  3703  0025A8  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3704  0025AA  0E0A               	movlw	10
  3705  0025AC  6E03               	movwf	___lwmod@divisor^0,c
  3706  0025AE  C034  F001         	movff	fround@prec,___lwmod@dividend
  3707  0025B2  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3708  0025B4  EC80  F01B         	call	___lwmod	;wreg free
  3709  0025B8  90D8               	bcf	status,0,c
  3710  0025BA  3601               	rlcf	?___lwmod^0,f,c
  3711  0025BC  3602               	rlcf	(?___lwmod+1)^0,f,c
  3712  0025BE  90D8               	bcf	status,0,c
  3713  0025C0  3601               	rlcf	?___lwmod^0,f,c
  3714  0025C2  3602               	rlcf	(?___lwmod+1)^0,f,c
  3715  0025C4  0E35               	movlw	low __npowers_
  3716  0025C6  2401               	addwf	?___lwmod^0,w,c
  3717  0025C8  6EF6               	movwf	tblptrl,c
  3718  0025CA  0E06               	movlw	high __npowers_
  3719  0025CC  2002               	addwfc	(?___lwmod+1)^0,w,c
  3720  0025CE  6EF7               	movwf	tblptrh,c
  3721  0025D0                     	if	0	;There are less than 3 active tblptr bytes
  3722  0025D0                     	endif
  3723  0025D0  0009               	tblrd		*+
  3724  0025D2  CFF5 F013          	movff	tablat,___flmul@a
  3725  0025D6  0009               	tblrd		*+
  3726  0025D8  CFF5 F014          	movff	tablat,___flmul@a+1
  3727  0025DC  0009               	tblrd		*+
  3728  0025DE  CFF5 F015          	movff	tablat,___flmul@a+2
  3729  0025E2  000A               	tblrd		*-
  3730  0025E4  CFF5 F016          	movff	tablat,___flmul@a+3
  3731  0025E8  EC62  F00C         	call	___flmul	;wreg free
  3732  0025EC  C00F  F028         	movff	?___flmul,?_fround
  3733  0025F0  C010  F029         	movff	?___flmul+1,?_fround+1
  3734  0025F4  C011  F02A         	movff	?___flmul+2,?_fround+2
  3735  0025F8  C012  F02B         	movff	?___flmul+3,?_fround+3
  3736  0025FC  EF9A  F013         	goto	l164
  3737  002600                     l3044:
  3738                           
  3739                           ;doprnt.c: 423: else if(prec > 10)
  3740  002600  0E0A               	movlw	10
  3741  002602  6434               	cpfsgt	fround@prec^0,c
  3742  002604  EF06  F013         	goto	u2991
  3743  002608  EF08  F013         	goto	u2990
  3744  00260C                     u2991:
  3745  00260C  EF74  F013         	goto	l3050
  3746  002610                     u2990:
  3747  002610                     
  3748                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3749  002610  0E00               	movlw	0
  3750  002612  6E13               	movwf	___flmul@a^0,c
  3751  002614  0E00               	movlw	0
  3752  002616  6E14               	movwf	(___flmul@a+1)^0,c
  3753  002618  0E00               	movlw	0
  3754  00261A  6E15               	movwf	(___flmul@a+2)^0,c
  3755  00261C  0E3F               	movlw	63
  3756  00261E  6E16               	movwf	(___flmul@a+3)^0,c
  3757  002620  0E00               	movlw	0
  3758  002622  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3759  002624  0E0A               	movlw	10
  3760  002626  6E08               	movwf	___lwdiv@divisor^0,c
  3761  002628  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3762  00262C  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3763  00262E  EC46  F01B         	call	___lwdiv	;wreg free
  3764  002632  90D8               	bcf	status,0,c
  3765  002634  3606               	rlcf	?___lwdiv^0,f,c
  3766  002636  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3767  002638  90D8               	bcf	status,0,c
  3768  00263A  3606               	rlcf	?___lwdiv^0,f,c
  3769  00263C  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3770  00263E  0E24               	movlw	36
  3771  002640  2606               	addwf	?___lwdiv^0,f,c
  3772  002642  0E00               	movlw	0
  3773  002644  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3774  002646  0E35               	movlw	low __npowers_
  3775  002648  2406               	addwf	?___lwdiv^0,w,c
  3776  00264A  6EF6               	movwf	tblptrl,c
  3777  00264C  0E06               	movlw	high __npowers_
  3778  00264E  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3779  002650  6EF7               	movwf	tblptrh,c
  3780  002652                     	if	0	;There are less than 3 active tblptr bytes
  3781  002652                     	endif
  3782  002652  0009               	tblrd		*+
  3783  002654  CFF5 F00F          	movff	tablat,___flmul@b
  3784  002658  0009               	tblrd		*+
  3785  00265A  CFF5 F010          	movff	tablat,___flmul@b+1
  3786  00265E  0009               	tblrd		*+
  3787  002660  CFF5 F011          	movff	tablat,___flmul@b+2
  3788  002664  000A               	tblrd		*-
  3789  002666  CFF5 F012          	movff	tablat,___flmul@b+3
  3790  00266A  EC62  F00C         	call	___flmul	;wreg free
  3791  00266E  C00F  F030         	movff	?___flmul,_fround$1217
  3792  002672  C010  F031         	movff	?___flmul+1,_fround$1217+1
  3793  002676  C011  F032         	movff	?___flmul+2,_fround$1217+2
  3794  00267A  C012  F033         	movff	?___flmul+3,_fround$1217+3
  3795                           
  3796                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3797  00267E  C030  F00F         	movff	_fround$1217,___flmul@b
  3798  002682  C031  F010         	movff	_fround$1217+1,___flmul@b+1
  3799  002686  C032  F011         	movff	_fround$1217+2,___flmul@b+2
  3800  00268A  C033  F012         	movff	_fround$1217+3,___flmul@b+3
  3801  00268E  0E00               	movlw	0
  3802  002690  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3803  002692  0E0A               	movlw	10
  3804  002694  6E03               	movwf	___lwmod@divisor^0,c
  3805  002696  C034  F001         	movff	fround@prec,___lwmod@dividend
  3806  00269A  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3807  00269C  EC80  F01B         	call	___lwmod	;wreg free
  3808  0026A0  90D8               	bcf	status,0,c
  3809  0026A2  3601               	rlcf	?___lwmod^0,f,c
  3810  0026A4  3602               	rlcf	(?___lwmod+1)^0,f,c
  3811  0026A6  90D8               	bcf	status,0,c
  3812  0026A8  3601               	rlcf	?___lwmod^0,f,c
  3813  0026AA  3602               	rlcf	(?___lwmod+1)^0,f,c
  3814  0026AC  0E35               	movlw	low __npowers_
  3815  0026AE  2401               	addwf	?___lwmod^0,w,c
  3816  0026B0  6EF6               	movwf	tblptrl,c
  3817  0026B2  0E06               	movlw	high __npowers_
  3818  0026B4  2002               	addwfc	(?___lwmod+1)^0,w,c
  3819  0026B6  6EF7               	movwf	tblptrh,c
  3820  0026B8                     	if	0	;There are less than 3 active tblptr bytes
  3821  0026B8                     	endif
  3822  0026B8  0009               	tblrd		*+
  3823  0026BA  CFF5 F013          	movff	tablat,___flmul@a
  3824  0026BE  0009               	tblrd		*+
  3825  0026C0  CFF5 F014          	movff	tablat,___flmul@a+1
  3826  0026C4  0009               	tblrd		*+
  3827  0026C6  CFF5 F015          	movff	tablat,___flmul@a+2
  3828  0026CA  000A               	tblrd		*-
  3829  0026CC  CFF5 F016          	movff	tablat,___flmul@a+3
  3830  0026D0  EC62  F00C         	call	___flmul	;wreg free
  3831  0026D4  C00F  F028         	movff	?___flmul,?_fround
  3832  0026D8  C010  F029         	movff	?___flmul+1,?_fround+1
  3833  0026DC  C011  F02A         	movff	?___flmul+2,?_fround+2
  3834  0026E0  C012  F02B         	movff	?___flmul+3,?_fround+3
  3835  0026E4  EF9A  F013         	goto	l164
  3836  0026E8                     l3050:
  3837                           
  3838                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  3839  0026E8  5034               	movf	fround@prec^0,w,c
  3840  0026EA  0D04               	mullw	4
  3841  0026EC  0E35               	movlw	low __npowers_
  3842  0026EE  24F3               	addwf	243,w,c
  3843  0026F0  6EF6               	movwf	tblptrl,c
  3844  0026F2  0E06               	movlw	high __npowers_
  3845  0026F4  20F4               	addwfc	244,w,c
  3846  0026F6  6EF7               	movwf	tblptrh,c
  3847  0026F8                     	if	0	;There are less than 3 active tblptr bytes
  3848  0026F8                     	endif
  3849  0026F8  0009               	tblrd		*+
  3850  0026FA  CFF5 F00F          	movff	tablat,___flmul@b
  3851  0026FE  0009               	tblrd		*+
  3852  002700  CFF5 F010          	movff	tablat,___flmul@b+1
  3853  002704  0009               	tblrd		*+
  3854  002706  CFF5 F011          	movff	tablat,___flmul@b+2
  3855  00270A  000A               	tblrd		*-
  3856  00270C  CFF5 F012          	movff	tablat,___flmul@b+3
  3857  002710  0E00               	movlw	0
  3858  002712  6E13               	movwf	___flmul@a^0,c
  3859  002714  0E00               	movlw	0
  3860  002716  6E14               	movwf	(___flmul@a+1)^0,c
  3861  002718  0E00               	movlw	0
  3862  00271A  6E15               	movwf	(___flmul@a+2)^0,c
  3863  00271C  0E3F               	movlw	63
  3864  00271E  6E16               	movwf	(___flmul@a+3)^0,c
  3865  002720  EC62  F00C         	call	___flmul	;wreg free
  3866  002724  C00F  F028         	movff	?___flmul,?_fround
  3867  002728  C010  F029         	movff	?___flmul+1,?_fround+1
  3868  00272C  C011  F02A         	movff	?___flmul+2,?_fround+2
  3869  002730  C012  F02B         	movff	?___flmul+3,?_fround+3
  3870  002734                     l164:
  3871  002734  0012               	return		;funcret
  3872  002736                     __end_of_fround:
  3873                           	callstack 0
  3874                           
  3875 ;; *************** function ___lwmod *****************
  3876 ;; Defined at:
  3877 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwmod.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;  dividend        2    0[COMRAM] unsigned int 
  3880 ;;  divisor         2    2[COMRAM] unsigned int 
  3881 ;; Auto vars:     Size  Location     Type
  3882 ;;  counter         1    4[COMRAM] unsigned char 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  2    0[COMRAM] unsigned int 
  3885 ;; Registers used:
  3886 ;;		wreg, status,2, status,0
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3892 ;;      Params:         4       0       0       0       0       0       0
  3893 ;;      Locals:         1       0       0       0       0       0       0
  3894 ;;      Temps:          0       0       0       0       0       0       0
  3895 ;;      Totals:         5       0       0       0       0       0       0
  3896 ;;Total ram usage:        5 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; This function calls:
  3899 ;;		Nothing
  3900 ;; This function is called by:
  3901 ;;		_fround
  3902 ;; This function uses a non-reentrant model
  3903 ;;
  3904                           
  3905                           	psect	text7
  3906  003700                     __ptext7:
  3907                           	callstack 0
  3908  003700                     ___lwmod:
  3909                           	callstack 28
  3910  003700  5003               	movf	___lwmod@divisor^0,w,c
  3911  003702  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3912  003704  B4D8               	btfsc	status,2,c
  3913  003706  EF87  F01B         	goto	u2951
  3914  00370A  EF89  F01B         	goto	u2950
  3915  00370E                     u2951:
  3916  00370E  EFAD  F01B         	goto	l807
  3917  003712                     u2950:
  3918  003712  0E01               	movlw	1
  3919  003714  6E05               	movwf	___lwmod@counter^0,c
  3920  003716  EF91  F01B         	goto	l3026
  3921  00371A                     l3024:
  3922  00371A  90D8               	bcf	status,0,c
  3923  00371C  3603               	rlcf	___lwmod@divisor^0,f,c
  3924  00371E  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3925  003720  2A05               	incf	___lwmod@counter^0,f,c
  3926  003722                     l3026:
  3927  003722  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3928  003724  EF96  F01B         	goto	u2961
  3929  003728  EF98  F01B         	goto	u2960
  3930  00372C                     u2961:
  3931  00372C  EF8D  F01B         	goto	l3024
  3932  003730                     u2960:
  3933  003730                     l3028:
  3934  003730  5003               	movf	___lwmod@divisor^0,w,c
  3935  003732  5C01               	subwf	___lwmod@dividend^0,w,c
  3936  003734  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3937  003736  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3938  003738  A0D8               	btfss	status,0,c
  3939  00373A  EFA1  F01B         	goto	u2971
  3940  00373E  EFA3  F01B         	goto	u2970
  3941  003742                     u2971:
  3942  003742  EFA7  F01B         	goto	l3032
  3943  003746                     u2970:
  3944  003746  5003               	movf	___lwmod@divisor^0,w,c
  3945  003748  5E01               	subwf	___lwmod@dividend^0,f,c
  3946  00374A  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3947  00374C  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3948  00374E                     l3032:
  3949  00374E  90D8               	bcf	status,0,c
  3950  003750  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3951  003752  3203               	rrcf	___lwmod@divisor^0,f,c
  3952  003754  2E05               	decfsz	___lwmod@counter^0,f,c
  3953  003756  EF98  F01B         	goto	l3028
  3954  00375A                     l807:
  3955  00375A  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3956  00375E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3957  003762  0012               	return		;funcret
  3958  003764                     __end_of___lwmod:
  3959                           	callstack 0
  3960                           
  3961 ;; *************** function ___lwdiv *****************
  3962 ;; Defined at:
  3963 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\lwdiv.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;  dividend        2    5[COMRAM] unsigned int 
  3966 ;;  divisor         2    7[COMRAM] unsigned int 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  quotient        2    9[COMRAM] unsigned int 
  3969 ;;  counter         1   11[COMRAM] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  2    5[COMRAM] unsigned int 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3979 ;;      Params:         4       0       0       0       0       0       0
  3980 ;;      Locals:         3       0       0       0       0       0       0
  3981 ;;      Temps:          0       0       0       0       0       0       0
  3982 ;;      Totals:         7       0       0       0       0       0       0
  3983 ;;Total ram usage:        7 bytes
  3984 ;; Hardware stack levels used: 1
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_fround
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text8
  3993  00368C                     __ptext8:
  3994                           	callstack 0
  3995  00368C                     ___lwdiv:
  3996                           	callstack 28
  3997  00368C  0E00               	movlw	0
  3998  00368E  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  3999  003690  0E00               	movlw	0
  4000  003692  6E0A               	movwf	___lwdiv@quotient^0,c
  4001  003694  5008               	movf	___lwdiv@divisor^0,w,c
  4002  003696  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4003  003698  B4D8               	btfsc	status,2,c
  4004  00369A  EF51  F01B         	goto	u2921
  4005  00369E  EF53  F01B         	goto	u2920
  4006  0036A2                     u2921:
  4007  0036A2  EF7B  F01B         	goto	l797
  4008  0036A6                     u2920:
  4009  0036A6  0E01               	movlw	1
  4010  0036A8  6E0C               	movwf	___lwdiv@counter^0,c
  4011  0036AA  EF5B  F01B         	goto	l3006
  4012  0036AE                     l3004:
  4013  0036AE  90D8               	bcf	status,0,c
  4014  0036B0  3608               	rlcf	___lwdiv@divisor^0,f,c
  4015  0036B2  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4016  0036B4  2A0C               	incf	___lwdiv@counter^0,f,c
  4017  0036B6                     l3006:
  4018  0036B6  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  4019  0036B8  EF60  F01B         	goto	u2931
  4020  0036BC  EF62  F01B         	goto	u2930
  4021  0036C0                     u2931:
  4022  0036C0  EF57  F01B         	goto	l3004
  4023  0036C4                     u2930:
  4024  0036C4                     l3008:
  4025  0036C4  90D8               	bcf	status,0,c
  4026  0036C6  360A               	rlcf	___lwdiv@quotient^0,f,c
  4027  0036C8  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4028  0036CA  5008               	movf	___lwdiv@divisor^0,w,c
  4029  0036CC  5C06               	subwf	___lwdiv@dividend^0,w,c
  4030  0036CE  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4031  0036D0  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4032  0036D2  A0D8               	btfss	status,0,c
  4033  0036D4  EF6E  F01B         	goto	u2941
  4034  0036D8  EF70  F01B         	goto	u2940
  4035  0036DC                     u2941:
  4036  0036DC  EF75  F01B         	goto	l3016
  4037  0036E0                     u2940:
  4038  0036E0  5008               	movf	___lwdiv@divisor^0,w,c
  4039  0036E2  5E06               	subwf	___lwdiv@dividend^0,f,c
  4040  0036E4  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4041  0036E6  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4042  0036E8  800A               	bsf	___lwdiv@quotient^0,0,c
  4043  0036EA                     l3016:
  4044  0036EA  90D8               	bcf	status,0,c
  4045  0036EC  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4046  0036EE  3208               	rrcf	___lwdiv@divisor^0,f,c
  4047  0036F0  2E0C               	decfsz	___lwdiv@counter^0,f,c
  4048  0036F2  EF62  F01B         	goto	l3008
  4049  0036F6                     l797:
  4050  0036F6  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4051  0036FA  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4052  0036FE  0012               	return		;funcret
  4053  003700                     __end_of___lwdiv:
  4054                           	callstack 0
  4055                           
  4056 ;; *************** function ___flmul *****************
  4057 ;; Defined at:
  4058 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcmul.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;  b               4   14[COMRAM] unsigned int 
  4061 ;;  a               4   18[COMRAM] unsigned int 
  4062 ;; Auto vars:     Size  Location     Type
  4063 ;;  prod            4   33[COMRAM] struct .
  4064 ;;  grs             4   27[COMRAM] unsigned long 
  4065 ;;  temp            2   37[COMRAM] struct .
  4066 ;;  bexp            1   32[COMRAM] unsigned char 
  4067 ;;  aexp            1   31[COMRAM] unsigned char 
  4068 ;;  sign            1   26[COMRAM] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  4   14[COMRAM] unsigned char 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0, prodl, prodh
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4078 ;;      Params:         8       0       0       0       0       0       0
  4079 ;;      Locals:        13       0       0       0       0       0       0
  4080 ;;      Temps:          4       0       0       0       0       0       0
  4081 ;;      Totals:        25       0       0       0       0       0       0
  4082 ;;Total ram usage:       25 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; This function calls:
  4085 ;;		Nothing
  4086 ;; This function is called by:
  4087 ;;		_main
  4088 ;;		_fround
  4089 ;;		_scale
  4090 ;;		_sprintf
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text9
  4095  0018C4                     __ptext9:
  4096                           	callstack 0
  4097  0018C4                     ___flmul:
  4098                           	callstack 28
  4099  0018C4  5012               	movf	(___flmul@b+3)^0,w,c
  4100  0018C6  0B80               	andlw	128
  4101  0018C8  6E1B               	movwf	___flmul@sign^0,c
  4102  0018CA  5012               	movf	(___flmul@b+3)^0,w,c
  4103  0018CC  2412               	addwf	(___flmul@b+3)^0,w,c
  4104  0018CE  6E21               	movwf	___flmul@bexp^0,c
  4105  0018D0  AE11               	btfss	(___flmul@b+2)^0,7,c
  4106  0018D2  EF6D  F00C         	goto	u2611
  4107  0018D6  EF6F  F00C         	goto	u2610
  4108  0018DA                     u2611:
  4109  0018DA  EF70  F00C         	goto	l2794
  4110  0018DE                     u2610:
  4111  0018DE  8021               	bsf	___flmul@bexp^0,0,c
  4112  0018E0                     l2794:
  4113  0018E0  5021               	movf	___flmul@bexp^0,w,c
  4114  0018E2  B4D8               	btfsc	status,2,c
  4115  0018E4  EF76  F00C         	goto	u2621
  4116  0018E8  EF78  F00C         	goto	u2620
  4117  0018EC                     u2621:
  4118  0018EC  EF8B  F00C         	goto	l2802
  4119  0018F0                     u2620:
  4120  0018F0  2821               	incf	___flmul@bexp^0,w,c
  4121  0018F2  A4D8               	btfss	status,2,c
  4122  0018F4  EF7E  F00C         	goto	u2631
  4123  0018F8  EF80  F00C         	goto	u2630
  4124  0018FC                     u2631:
  4125  0018FC  EF88  F00C         	goto	l2800
  4126  001900                     u2630:
  4127  001900  0E00               	movlw	0
  4128  001902  6E0F               	movwf	___flmul@b^0,c
  4129  001904  0E00               	movlw	0
  4130  001906  6E10               	movwf	(___flmul@b+1)^0,c
  4131  001908  0E00               	movlw	0
  4132  00190A  6E11               	movwf	(___flmul@b+2)^0,c
  4133  00190C  0E00               	movlw	0
  4134  00190E  6E12               	movwf	(___flmul@b+3)^0,c
  4135  001910                     l2800:
  4136  001910  8E11               	bsf	(___flmul@b+2)^0,7,c
  4137  001912  EF93  F00C         	goto	l2804
  4138  001916                     l2802:
  4139  001916  0E00               	movlw	0
  4140  001918  6E0F               	movwf	___flmul@b^0,c
  4141  00191A  0E00               	movlw	0
  4142  00191C  6E10               	movwf	(___flmul@b+1)^0,c
  4143  00191E  0E00               	movlw	0
  4144  001920  6E11               	movwf	(___flmul@b+2)^0,c
  4145  001922  0E00               	movlw	0
  4146  001924  6E12               	movwf	(___flmul@b+3)^0,c
  4147  001926                     l2804:
  4148  001926  5016               	movf	(___flmul@a+3)^0,w,c
  4149  001928  0B80               	andlw	128
  4150  00192A  1A1B               	xorwf	___flmul@sign^0,f,c
  4151  00192C  5016               	movf	(___flmul@a+3)^0,w,c
  4152  00192E  2416               	addwf	(___flmul@a+3)^0,w,c
  4153  001930  6E20               	movwf	___flmul@aexp^0,c
  4154  001932  AE15               	btfss	(___flmul@a+2)^0,7,c
  4155  001934  EF9E  F00C         	goto	u2641
  4156  001938  EFA0  F00C         	goto	u2640
  4157  00193C                     u2641:
  4158  00193C  EFA1  F00C         	goto	l2812
  4159  001940                     u2640:
  4160  001940  8020               	bsf	___flmul@aexp^0,0,c
  4161  001942                     l2812:
  4162  001942  5020               	movf	___flmul@aexp^0,w,c
  4163  001944  B4D8               	btfsc	status,2,c
  4164  001946  EFA7  F00C         	goto	u2651
  4165  00194A  EFA9  F00C         	goto	u2650
  4166  00194E                     u2651:
  4167  00194E  EFBC  F00C         	goto	l2820
  4168  001952                     u2650:
  4169  001952  2820               	incf	___flmul@aexp^0,w,c
  4170  001954  A4D8               	btfss	status,2,c
  4171  001956  EFAF  F00C         	goto	u2661
  4172  00195A  EFB1  F00C         	goto	u2660
  4173  00195E                     u2661:
  4174  00195E  EFB9  F00C         	goto	l2818
  4175  001962                     u2660:
  4176  001962  0E00               	movlw	0
  4177  001964  6E13               	movwf	___flmul@a^0,c
  4178  001966  0E00               	movlw	0
  4179  001968  6E14               	movwf	(___flmul@a+1)^0,c
  4180  00196A  0E00               	movlw	0
  4181  00196C  6E15               	movwf	(___flmul@a+2)^0,c
  4182  00196E  0E00               	movlw	0
  4183  001970  6E16               	movwf	(___flmul@a+3)^0,c
  4184  001972                     l2818:
  4185  001972  8E15               	bsf	(___flmul@a+2)^0,7,c
  4186  001974  EFC4  F00C         	goto	l920
  4187  001978                     l2820:
  4188  001978  0E00               	movlw	0
  4189  00197A  6E13               	movwf	___flmul@a^0,c
  4190  00197C  0E00               	movlw	0
  4191  00197E  6E14               	movwf	(___flmul@a+1)^0,c
  4192  001980  0E00               	movlw	0
  4193  001982  6E15               	movwf	(___flmul@a+2)^0,c
  4194  001984  0E00               	movlw	0
  4195  001986  6E16               	movwf	(___flmul@a+3)^0,c
  4196  001988                     l920:
  4197  001988  5020               	movf	___flmul@aexp^0,w,c
  4198  00198A  B4D8               	btfsc	status,2,c
  4199  00198C  EFCA  F00C         	goto	u2671
  4200  001990  EFCC  F00C         	goto	u2670
  4201  001994                     u2671:
  4202  001994  EFD4  F00C         	goto	l2824
  4203  001998                     u2670:
  4204  001998  5021               	movf	___flmul@bexp^0,w,c
  4205  00199A  A4D8               	btfss	status,2,c
  4206  00199C  EFD2  F00C         	goto	u2681
  4207  0019A0  EFD4  F00C         	goto	u2680
  4208  0019A4                     u2681:
  4209  0019A4  EFDE  F00C         	goto	l2828
  4210  0019A8                     u2680:
  4211  0019A8                     l2824:
  4212  0019A8  0E00               	movlw	0
  4213  0019AA  6E0F               	movwf	?___flmul^0,c
  4214  0019AC  0E00               	movlw	0
  4215  0019AE  6E10               	movwf	(?___flmul+1)^0,c
  4216  0019B0  0E00               	movlw	0
  4217  0019B2  6E11               	movwf	(?___flmul+2)^0,c
  4218  0019B4  0E00               	movlw	0
  4219  0019B6  6E12               	movwf	(?___flmul+3)^0,c
  4220  0019B8  EF76  F00E         	goto	l924
  4221  0019BC                     l2828:
  4222  0019BC  5015               	movf	(___flmul@a+2)^0,w,c
  4223  0019BE  020F               	mulwf	___flmul@b^0,c
  4224  0019C0  CFF3 F026          	movff	prodl,___flmul@temp
  4225  0019C4  CFF4 F027          	movff	prodh,___flmul@temp+1
  4226  0019C8  5026               	movf	___flmul@temp^0,w,c
  4227  0019CA  6E1C               	movwf	___flmul@grs^0,c
  4228  0019CC  6A1D               	clrf	(___flmul@grs+1)^0,c
  4229  0019CE  6A1E               	clrf	(___flmul@grs+2)^0,c
  4230  0019D0  6A1F               	clrf	(___flmul@grs+3)^0,c
  4231  0019D2  5027               	movf	(___flmul@temp+1)^0,w,c
  4232  0019D4  6E22               	movwf	___flmul@prod^0,c
  4233  0019D6  6A23               	clrf	(___flmul@prod+1)^0,c
  4234  0019D8  6A24               	clrf	(___flmul@prod+2)^0,c
  4235  0019DA  6A25               	clrf	(___flmul@prod+3)^0,c
  4236  0019DC  5014               	movf	(___flmul@a+1)^0,w,c
  4237  0019DE  0210               	mulwf	(___flmul@b+1)^0,c
  4238  0019E0  CFF3 F026          	movff	prodl,___flmul@temp
  4239  0019E4  CFF4 F027          	movff	prodh,___flmul@temp+1
  4240  0019E8  5026               	movf	___flmul@temp^0,w,c
  4241  0019EA  261C               	addwf	___flmul@grs^0,f,c
  4242  0019EC  0E00               	movlw	0
  4243  0019EE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4244  0019F0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4245  0019F2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4246  0019F4  5027               	movf	(___flmul@temp+1)^0,w,c
  4247  0019F6  2622               	addwf	___flmul@prod^0,f,c
  4248  0019F8  0E00               	movlw	0
  4249  0019FA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4250  0019FC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4251  0019FE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4252  001A00  5013               	movf	___flmul@a^0,w,c
  4253  001A02  0211               	mulwf	(___flmul@b+2)^0,c
  4254  001A04  CFF3 F026          	movff	prodl,___flmul@temp
  4255  001A08  CFF4 F027          	movff	prodh,___flmul@temp+1
  4256  001A0C  5026               	movf	___flmul@temp^0,w,c
  4257  001A0E  261C               	addwf	___flmul@grs^0,f,c
  4258  001A10  0E00               	movlw	0
  4259  001A12  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4260  001A14  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4261  001A16  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4262  001A18  5027               	movf	(___flmul@temp+1)^0,w,c
  4263  001A1A  2622               	addwf	___flmul@prod^0,f,c
  4264  001A1C  0E00               	movlw	0
  4265  001A1E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4266  001A20  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4267  001A22  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4268  001A24  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4269  001A28  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4270  001A2C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4271  001A30  6A1C               	clrf	___flmul@grs^0,c
  4272  001A32  5013               	movf	___flmul@a^0,w,c
  4273  001A34  0210               	mulwf	(___flmul@b+1)^0,c
  4274  001A36  CFF3 F026          	movff	prodl,___flmul@temp
  4275  001A3A  CFF4 F027          	movff	prodh,___flmul@temp+1
  4276  001A3E  5026               	movf	___flmul@temp^0,w,c
  4277  001A40  261C               	addwf	___flmul@grs^0,f,c
  4278  001A42  5027               	movf	(___flmul@temp+1)^0,w,c
  4279  001A44  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4280  001A46  0E00               	movlw	0
  4281  001A48  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4282  001A4A  0E00               	movlw	0
  4283  001A4C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4284  001A4E  5014               	movf	(___flmul@a+1)^0,w,c
  4285  001A50  020F               	mulwf	___flmul@b^0,c
  4286  001A52  CFF3 F026          	movff	prodl,___flmul@temp
  4287  001A56  CFF4 F027          	movff	prodh,___flmul@temp+1
  4288  001A5A  5026               	movf	___flmul@temp^0,w,c
  4289  001A5C  261C               	addwf	___flmul@grs^0,f,c
  4290  001A5E  5027               	movf	(___flmul@temp+1)^0,w,c
  4291  001A60  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4292  001A62  0E00               	movlw	0
  4293  001A64  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4294  001A66  0E00               	movlw	0
  4295  001A68  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4296  001A6A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4297  001A6E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4298  001A72  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4299  001A76  6A1C               	clrf	___flmul@grs^0,c
  4300  001A78  5013               	movf	___flmul@a^0,w,c
  4301  001A7A  020F               	mulwf	___flmul@b^0,c
  4302  001A7C  CFF3 F026          	movff	prodl,___flmul@temp
  4303  001A80  CFF4 F027          	movff	prodh,___flmul@temp+1
  4304  001A84  5026               	movf	___flmul@temp^0,w,c
  4305  001A86  261C               	addwf	___flmul@grs^0,f,c
  4306  001A88  5027               	movf	(___flmul@temp+1)^0,w,c
  4307  001A8A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4308  001A8C  0E00               	movlw	0
  4309  001A8E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4310  001A90  0E00               	movlw	0
  4311  001A92  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4312  001A94  5015               	movf	(___flmul@a+2)^0,w,c
  4313  001A96  0210               	mulwf	(___flmul@b+1)^0,c
  4314  001A98  CFF3 F026          	movff	prodl,___flmul@temp
  4315  001A9C  CFF4 F027          	movff	prodh,___flmul@temp+1
  4316  001AA0  5026               	movf	___flmul@temp^0,w,c
  4317  001AA2  2622               	addwf	___flmul@prod^0,f,c
  4318  001AA4  5027               	movf	(___flmul@temp+1)^0,w,c
  4319  001AA6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4320  001AA8  0E00               	movlw	0
  4321  001AAA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4322  001AAC  0E00               	movlw	0
  4323  001AAE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4324  001AB0  5014               	movf	(___flmul@a+1)^0,w,c
  4325  001AB2  0211               	mulwf	(___flmul@b+2)^0,c
  4326  001AB4  CFF3 F026          	movff	prodl,___flmul@temp
  4327  001AB8  CFF4 F027          	movff	prodh,___flmul@temp+1
  4328  001ABC  5026               	movf	___flmul@temp^0,w,c
  4329  001ABE  2622               	addwf	___flmul@prod^0,f,c
  4330  001AC0  5027               	movf	(___flmul@temp+1)^0,w,c
  4331  001AC2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4332  001AC4  0E00               	movlw	0
  4333  001AC6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4334  001AC8  0E00               	movlw	0
  4335  001ACA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4336  001ACC  5015               	movf	(___flmul@a+2)^0,w,c
  4337  001ACE  0211               	mulwf	(___flmul@b+2)^0,c
  4338  001AD0  CFF3 F026          	movff	prodl,___flmul@temp
  4339  001AD4  CFF4 F027          	movff	prodh,___flmul@temp+1
  4340  001AD8  5026               	movf	___flmul@temp^0,w,c
  4341  001ADA  6E17               	movwf	??___flmul^0,c
  4342  001ADC  5027               	movf	(___flmul@temp+1)^0,w,c
  4343  001ADE  6E18               	movwf	(??___flmul+1)^0,c
  4344  001AE0  6A19               	clrf	(??___flmul+2)^0,c
  4345  001AE2  6A1A               	clrf	(??___flmul+3)^0,c
  4346  001AE4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4347  001AE8  C018  F019         	movff	??___flmul+1,??___flmul+2
  4348  001AEC  C017  F018         	movff	??___flmul,??___flmul+1
  4349  001AF0  6A17               	clrf	??___flmul^0,c
  4350  001AF2  5017               	movf	??___flmul^0,w,c
  4351  001AF4  2622               	addwf	___flmul@prod^0,f,c
  4352  001AF6  5018               	movf	(??___flmul+1)^0,w,c
  4353  001AF8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4354  001AFA  5019               	movf	(??___flmul+2)^0,w,c
  4355  001AFC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4356  001AFE  501A               	movf	(??___flmul+3)^0,w,c
  4357  001B00  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4358  001B02  C01C  F017         	movff	___flmul@grs,??___flmul
  4359  001B06  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4360  001B0A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4361  001B0E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4362  001B12  0E19               	movlw	25
  4363  001B14  EF91  F00D         	goto	u2690
  4364  001B18                     u2695:
  4365  001B18  90D8               	bcf	status,0,c
  4366  001B1A  321A               	rrcf	(??___flmul+3)^0,f,c
  4367  001B1C  3219               	rrcf	(??___flmul+2)^0,f,c
  4368  001B1E  3218               	rrcf	(??___flmul+1)^0,f,c
  4369  001B20  3217               	rrcf	??___flmul^0,f,c
  4370  001B22                     u2690:
  4371  001B22  2EE8               	decfsz	wreg,f,c
  4372  001B24  EF8C  F00D         	goto	u2695
  4373  001B28  5017               	movf	??___flmul^0,w,c
  4374  001B2A  2622               	addwf	___flmul@prod^0,f,c
  4375  001B2C  5018               	movf	(??___flmul+1)^0,w,c
  4376  001B2E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4377  001B30  5019               	movf	(??___flmul+2)^0,w,c
  4378  001B32  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4379  001B34  501A               	movf	(??___flmul+3)^0,w,c
  4380  001B36  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4381  001B38  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4382  001B3C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4383  001B40  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4384  001B44  6A1C               	clrf	___flmul@grs^0,c
  4385  001B46  5020               	movf	___flmul@aexp^0,w,c
  4386  001B48  C021  F017         	movff	___flmul@bexp,??___flmul
  4387  001B4C  6A18               	clrf	(??___flmul+1)^0,c
  4388  001B4E  2617               	addwf	??___flmul^0,f,c
  4389  001B50  0E00               	movlw	0
  4390  001B52  2218               	addwfc	(??___flmul+1)^0,f,c
  4391  001B54  0E82               	movlw	130
  4392  001B56  2417               	addwf	??___flmul^0,w,c
  4393  001B58  6E26               	movwf	___flmul@temp^0,c
  4394  001B5A  0EFF               	movlw	255
  4395  001B5C  2018               	addwfc	(??___flmul+1)^0,w,c
  4396  001B5E  6E27               	movwf	(___flmul@temp+1)^0,c
  4397  001B60  EFC7  F00D         	goto	l2876
  4398  001B64                     l2870:
  4399  001B64  90D8               	bcf	status,0,c
  4400  001B66  3622               	rlcf	___flmul@prod^0,f,c
  4401  001B68  3623               	rlcf	(___flmul@prod+1)^0,f,c
  4402  001B6A  3624               	rlcf	(___flmul@prod+2)^0,f,c
  4403  001B6C  3625               	rlcf	(___flmul@prod+3)^0,f,c
  4404  001B6E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4405  001B70  EFBC  F00D         	goto	u2701
  4406  001B74  EFBE  F00D         	goto	u2700
  4407  001B78                     u2701:
  4408  001B78  EFBF  F00D         	goto	l927
  4409  001B7C                     u2700:
  4410  001B7C  8022               	bsf	___flmul@prod^0,0,c
  4411  001B7E                     l927:
  4412  001B7E  90D8               	bcf	status,0,c
  4413  001B80  361C               	rlcf	___flmul@grs^0,f,c
  4414  001B82  361D               	rlcf	(___flmul@grs+1)^0,f,c
  4415  001B84  361E               	rlcf	(___flmul@grs+2)^0,f,c
  4416  001B86  361F               	rlcf	(___flmul@grs+3)^0,f,c
  4417  001B88  0626               	decf	___flmul@temp^0,f,c
  4418  001B8A  A0D8               	btfss	status,0,c
  4419  001B8C  0627               	decf	(___flmul@temp+1)^0,f,c
  4420  001B8E                     l2876:
  4421  001B8E  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4422  001B90  EFCC  F00D         	goto	u2711
  4423  001B94  EFCE  F00D         	goto	u2710
  4424  001B98                     u2711:
  4425  001B98  EFB2  F00D         	goto	l2870
  4426  001B9C                     u2710:
  4427  001B9C  0E00               	movlw	0
  4428  001B9E  6E20               	movwf	___flmul@aexp^0,c
  4429  001BA0  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4430  001BA2  EFD5  F00D         	goto	u2721
  4431  001BA6  EFD7  F00D         	goto	u2720
  4432  001BAA                     u2721:
  4433  001BAA  EFFB  F00D         	goto	l929
  4434  001BAE                     u2720:
  4435  001BAE  0EFF               	movlw	255
  4436  001BB0  141C               	andwf	___flmul@grs^0,w,c
  4437  001BB2  6E17               	movwf	??___flmul^0,c
  4438  001BB4  0EFF               	movlw	255
  4439  001BB6  141D               	andwf	(___flmul@grs+1)^0,w,c
  4440  001BB8  6E18               	movwf	(??___flmul+1)^0,c
  4441  001BBA  0EFF               	movlw	255
  4442  001BBC  141E               	andwf	(___flmul@grs+2)^0,w,c
  4443  001BBE  6E19               	movwf	(??___flmul+2)^0,c
  4444  001BC0  0E7F               	movlw	127
  4445  001BC2  141F               	andwf	(___flmul@grs+3)^0,w,c
  4446  001BC4  6E1A               	movwf	(??___flmul+3)^0,c
  4447  001BC6  5017               	movf	??___flmul^0,w,c
  4448  001BC8  1018               	iorwf	(??___flmul+1)^0,w,c
  4449  001BCA  1019               	iorwf	(??___flmul+2)^0,w,c
  4450  001BCC  101A               	iorwf	(??___flmul+3)^0,w,c
  4451  001BCE  B4D8               	btfsc	status,2,c
  4452  001BD0  EFEC  F00D         	goto	u2731
  4453  001BD4  EFEE  F00D         	goto	u2730
  4454  001BD8                     u2731:
  4455  001BD8  EFF2  F00D         	goto	l930
  4456  001BDC                     u2730:
  4457  001BDC                     l2884:
  4458  001BDC  0E01               	movlw	1
  4459  001BDE  6E20               	movwf	___flmul@aexp^0,c
  4460  001BE0  EFFB  F00D         	goto	l929
  4461  001BE4                     l930:
  4462  001BE4  A022               	btfss	___flmul@prod^0,0,c
  4463  001BE6  EFF7  F00D         	goto	u2741
  4464  001BEA  EFF9  F00D         	goto	u2740
  4465  001BEE                     u2741:
  4466  001BEE  EFFB  F00D         	goto	l929
  4467  001BF2                     u2740:
  4468  001BF2  EFEE  F00D         	goto	l2884
  4469  001BF6                     l929:
  4470  001BF6  5020               	movf	___flmul@aexp^0,w,c
  4471  001BF8  B4D8               	btfsc	status,2,c
  4472  001BFA  EF01  F00E         	goto	u2751
  4473  001BFE  EF03  F00E         	goto	u2750
  4474  001C02                     u2751:
  4475  001C02  EF27  F00E         	goto	l2896
  4476  001C06                     u2750:
  4477  001C06  0E01               	movlw	1
  4478  001C08  2622               	addwf	___flmul@prod^0,f,c
  4479  001C0A  0E00               	movlw	0
  4480  001C0C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4481  001C0E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4482  001C10  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4483  001C12  A025               	btfss	(___flmul@prod+3)^0,0,c
  4484  001C14  EF0E  F00E         	goto	u2761
  4485  001C18  EF10  F00E         	goto	u2760
  4486  001C1C                     u2761:
  4487  001C1C  EF27  F00E         	goto	l2896
  4488  001C20                     u2760:
  4489  001C20  C022  F017         	movff	___flmul@prod,??___flmul
  4490  001C24  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4491  001C28  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4492  001C2C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4493  001C30  341A               	rlcf	(??___flmul+3)^0,w,c
  4494  001C32  321A               	rrcf	(??___flmul+3)^0,f,c
  4495  001C34  3219               	rrcf	(??___flmul+2)^0,f,c
  4496  001C36  3218               	rrcf	(??___flmul+1)^0,f,c
  4497  001C38  3217               	rrcf	??___flmul^0,f,c
  4498  001C3A  C017  F022         	movff	??___flmul,___flmul@prod
  4499  001C3E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4500  001C42  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4501  001C46  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4502  001C4A  4A26               	infsnz	___flmul@temp^0,f,c
  4503  001C4C  2A27               	incf	(___flmul@temp+1)^0,f,c
  4504  001C4E                     l2896:
  4505  001C4E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4506  001C50  EF32  F00E         	goto	u2771
  4507  001C54  5027               	movf	(___flmul@temp+1)^0,w,c
  4508  001C56  E108               	bnz	u2770
  4509  001C58  2826               	incf	___flmul@temp^0,w,c
  4510  001C5A  A0D8               	btfss	status,0,c
  4511  001C5C  EF32  F00E         	goto	u2771
  4512  001C60  EF34  F00E         	goto	u2770
  4513  001C64                     u2771:
  4514  001C64  EF3E  F00E         	goto	l2900
  4515  001C68                     u2770:
  4516  001C68  0E00               	movlw	0
  4517  001C6A  6E22               	movwf	___flmul@prod^0,c
  4518  001C6C  0E00               	movlw	0
  4519  001C6E  6E23               	movwf	(___flmul@prod+1)^0,c
  4520  001C70  0E80               	movlw	128
  4521  001C72  6E24               	movwf	(___flmul@prod+2)^0,c
  4522  001C74  0E7F               	movlw	127
  4523  001C76  6E25               	movwf	(___flmul@prod+3)^0,c
  4524  001C78  EF6C  F00E         	goto	l2912
  4525  001C7C                     l2900:
  4526  001C7C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4527  001C7E  EF4B  F00E         	goto	u2780
  4528  001C82  5027               	movf	(___flmul@temp+1)^0,w,c
  4529  001C84  E106               	bnz	u2781
  4530  001C86  0426               	decf	___flmul@temp^0,w,c
  4531  001C88  B0D8               	btfsc	status,0,c
  4532  001C8A  EF49  F00E         	goto	u2781
  4533  001C8E  EF4B  F00E         	goto	u2780
  4534  001C92                     u2781:
  4535  001C92  EF57  F00E         	goto	l937
  4536  001C96                     u2780:
  4537  001C96  0E00               	movlw	0
  4538  001C98  6E22               	movwf	___flmul@prod^0,c
  4539  001C9A  0E00               	movlw	0
  4540  001C9C  6E23               	movwf	(___flmul@prod+1)^0,c
  4541  001C9E  0E00               	movlw	0
  4542  001CA0  6E24               	movwf	(___flmul@prod+2)^0,c
  4543  001CA2  0E00               	movlw	0
  4544  001CA4  6E25               	movwf	(___flmul@prod+3)^0,c
  4545  001CA6  0E00               	movlw	0
  4546  001CA8  6E1B               	movwf	___flmul@sign^0,c
  4547  001CAA  EF6C  F00E         	goto	l2912
  4548  001CAE                     l937:
  4549  001CAE  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4550  001CB2  0EFF               	movlw	255
  4551  001CB4  1622               	andwf	___flmul@prod^0,f,c
  4552  001CB6  0EFF               	movlw	255
  4553  001CB8  1623               	andwf	(___flmul@prod+1)^0,f,c
  4554  001CBA  0E7F               	movlw	127
  4555  001CBC  1624               	andwf	(___flmul@prod+2)^0,f,c
  4556  001CBE  0E00               	movlw	0
  4557  001CC0  1625               	andwf	(___flmul@prod+3)^0,f,c
  4558  001CC2  A021               	btfss	___flmul@bexp^0,0,c
  4559  001CC4  EF66  F00E         	goto	u2791
  4560  001CC8  EF68  F00E         	goto	u2790
  4561  001CCC                     u2791:
  4562  001CCC  EF69  F00E         	goto	l2910
  4563  001CD0                     u2790:
  4564  001CD0  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4565  001CD2                     l2910:
  4566  001CD2  90D8               	bcf	status,0,c
  4567  001CD4  3021               	rrcf	___flmul@bexp^0,w,c
  4568  001CD6  6E25               	movwf	(___flmul@prod+3)^0,c
  4569  001CD8                     l2912:
  4570  001CD8  501B               	movf	___flmul@sign^0,w,c
  4571  001CDA  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4572  001CDC  C022  F00F         	movff	___flmul@prod,?___flmul
  4573  001CE0  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4574  001CE4  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4575  001CE8  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4576  001CEC                     l924:
  4577  001CEC  0012               	return		;funcret
  4578  001CEE                     __end_of___flmul:
  4579                           	callstack 0
  4580                           
  4581 ;; *************** function __tdiv_to_l_ *****************
  4582 ;; Defined at:
  4583 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\ftdivl.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;  f1              4    0[COMRAM] float 
  4586 ;;  f2              4    4[COMRAM] float 
  4587 ;; Auto vars:     Size  Location     Type
  4588 ;;  quot            4   11[COMRAM] unsigned long 
  4589 ;;  exp1            1   16[COMRAM] unsigned char 
  4590 ;;  cntr            1   15[COMRAM] unsigned char 
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  4    0[COMRAM] unsigned long 
  4593 ;; Registers used:
  4594 ;;		wreg, status,2, status,0
  4595 ;; Tracked objects:
  4596 ;;		On entry : 0/0
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4600 ;;      Params:         8       0       0       0       0       0       0
  4601 ;;      Locals:         6       0       0       0       0       0       0
  4602 ;;      Temps:          3       0       0       0       0       0       0
  4603 ;;      Totals:        17       0       0       0       0       0       0
  4604 ;;Total ram usage:       17 bytes
  4605 ;; Hardware stack levels used: 1
  4606 ;; This function calls:
  4607 ;;		Nothing
  4608 ;; This function is called by:
  4609 ;;		_sprintf
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text10
  4614  0028EA                     __ptext10:
  4615                           	callstack 0
  4616  0028EA                     __tdiv_to_l_:
  4617                           	callstack 29
  4618  0028EA  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4619  0028EE  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4620  0028F0  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4621  0028F2  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  4622  0028F4  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4623  0028F6  E301               	bnc	u3071
  4624  0028F8  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  4625  0028FA                     u3071:
  4626  0028FA  5009               	movf	??__tdiv_to_l_^0,w,c
  4627  0028FC  6E11               	movwf	__tdiv_to_l_@exp1^0,c
  4628  0028FE  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4629  002900  A4D8               	btfss	status,2,c
  4630  002902  EF85  F014         	goto	u3081
  4631  002906  EF87  F014         	goto	u3080
  4632  00290A                     u3081:
  4633  00290A  EF91  F014         	goto	l3110
  4634  00290E                     u3080:
  4635  00290E                     l3106:
  4636  00290E  0E00               	movlw	0
  4637  002910  6E01               	movwf	?__tdiv_to_l_^0,c
  4638  002912  0E00               	movlw	0
  4639  002914  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  4640  002916  0E00               	movlw	0
  4641  002918  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  4642  00291A  0E00               	movlw	0
  4643  00291C  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  4644  00291E  EF1F  F015         	goto	l647
  4645  002922                     l3110:
  4646  002922  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4647  002926  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4648  002928  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4649  00292A  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  4650  00292C  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4651  00292E  E301               	bnc	u3091
  4652  002930  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  4653  002932                     u3091:
  4654  002932  5009               	movf	??__tdiv_to_l_^0,w,c
  4655  002934  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  4656  002936  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  4657  002938  A4D8               	btfss	status,2,c
  4658  00293A  EFA1  F014         	goto	u3101
  4659  00293E  EFA3  F014         	goto	u3100
  4660  002942                     u3101:
  4661  002942  EFA5  F014         	goto	l3116
  4662  002946                     u3100:
  4663  002946  EF87  F014         	goto	l3106
  4664  00294A                     l3116:
  4665  00294A  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  4666  00294C  0EFF               	movlw	255
  4667  00294E  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  4668  002950  0EFF               	movlw	255
  4669  002952  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  4670  002954  0E00               	movlw	0
  4671  002956  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  4672  002958  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  4673  00295A  0EFF               	movlw	255
  4674  00295C  1605               	andwf	__tdiv_to_l_@f2^0,f,c
  4675  00295E  0EFF               	movlw	255
  4676  002960  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  4677  002962  0E00               	movlw	0
  4678  002964  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  4679  002966  0E00               	movlw	0
  4680  002968  6E0C               	movwf	__tdiv_to_l_@quot^0,c
  4681  00296A  0E00               	movlw	0
  4682  00296C  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
  4683  00296E  0E00               	movlw	0
  4684  002970  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
  4685  002972  0E00               	movlw	0
  4686  002974  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
  4687  002976  0E7F               	movlw	127
  4688  002978  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  4689  00297A  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  4690  00297C  0F98               	addlw	152
  4691  00297E  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  4692  002980  0E18               	movlw	24
  4693  002982  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  4694  002984                     l649:
  4695  002984  90D8               	bcf	status,0,c
  4696  002986  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  4697  002988  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  4698  00298A  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  4699  00298C  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  4700  00298E  5005               	movf	__tdiv_to_l_@f2^0,w,c
  4701  002990  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  4702  002992  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  4703  002994  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  4704  002996  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  4705  002998  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  4706  00299A  A0D8               	btfss	status,0,c
  4707  00299C  EFD2  F014         	goto	u3111
  4708  0029A0  EFD4  F014         	goto	u3110
  4709  0029A4                     u3111:
  4710  0029A4  EFDB  F014         	goto	l650
  4711  0029A8                     u3110:
  4712  0029A8  5005               	movf	__tdiv_to_l_@f2^0,w,c
  4713  0029AA  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  4714  0029AC  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  4715  0029AE  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  4716  0029B0  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  4717  0029B2  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  4718  0029B4  800C               	bsf	__tdiv_to_l_@quot^0,0,c
  4719  0029B6                     l650:
  4720  0029B6  90D8               	bcf	status,0,c
  4721  0029B8  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  4722  0029BA  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  4723  0029BC  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  4724  0029BE  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
  4725  0029C0  EFC2  F014         	goto	l649
  4726  0029C4  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
  4727  0029C6  EFE9  F014         	goto	u3120
  4728  0029CA  EFE7  F014         	goto	u3121
  4729  0029CE                     u3121:
  4730  0029CE  EFFF  F014         	goto	l3150
  4731  0029D2                     u3120:
  4732  0029D2  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4733  0029D4  0A80               	xorlw	128
  4734  0029D6  0F97               	addlw	151
  4735  0029D8  B0D8               	btfsc	status,0,c
  4736  0029DA  EFF1  F014         	goto	u3131
  4737  0029DE  EFF3  F014         	goto	u3130
  4738  0029E2                     u3131:
  4739  0029E2  EFF5  F014         	goto	l3146
  4740  0029E6                     u3130:
  4741  0029E6  EF87  F014         	goto	l3106
  4742  0029EA                     l3146:
  4743  0029EA  90D8               	bcf	status,0,c
  4744  0029EC  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  4745  0029EE  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  4746  0029F0  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  4747  0029F2  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
  4748  0029F4  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
  4749  0029F6  EFF5  F014         	goto	l3146
  4750  0029FA  EF17  F015         	goto	l656
  4751  0029FE                     l3150:
  4752  0029FE  0E17               	movlw	23
  4753  002A00  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
  4754  002A02  EF05  F015         	goto	u3141
  4755  002A06  EF07  F015         	goto	u3140
  4756  002A0A                     u3141:
  4757  002A0A  EF0F  F015         	goto	l3158
  4758  002A0E                     u3140:
  4759  002A0E  EF87  F014         	goto	l3106
  4760  002A12                     l3156:
  4761  002A12  90D8               	bcf	status,0,c
  4762  002A14  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  4763  002A16  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  4764  002A18  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  4765  002A1A  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  4766  002A1C  0611               	decf	__tdiv_to_l_@exp1^0,f,c
  4767  002A1E                     l3158:
  4768  002A1E  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4769  002A20  A4D8               	btfss	status,2,c
  4770  002A22  EF15  F015         	goto	u3151
  4771  002A26  EF17  F015         	goto	u3150
  4772  002A2A                     u3151:
  4773  002A2A  EF09  F015         	goto	l3156
  4774  002A2E                     u3150:
  4775  002A2E                     l656:
  4776  002A2E  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4777  002A32  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4778  002A36  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4779  002A3A  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4780  002A3E                     l647:
  4781  002A3E  0012               	return		;funcret
  4782  002A40                     __end_of__tdiv_to_l_:
  4783                           	callstack 0
  4784                           
  4785 ;; *************** function __div_to_l_ *****************
  4786 ;; Defined at:
  4787 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fldivl.c"
  4788 ;; Parameters:    Size  Location     Type
  4789 ;;  f1              4    0[COMRAM] unsigned long 
  4790 ;;  f2              4    4[COMRAM] unsigned long 
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;  quot            4    8[COMRAM] unsigned long 
  4793 ;;  exp1            1   13[COMRAM] unsigned char 
  4794 ;;  cntr            1   12[COMRAM] unsigned char 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  4    0[COMRAM] unsigned long 
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4804 ;;      Params:         8       0       0       0       0       0       0
  4805 ;;      Locals:         6       0       0       0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0
  4807 ;;      Totals:        14       0       0       0       0       0       0
  4808 ;;Total ram usage:       14 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_sprintf
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text11
  4818  002A40                     __ptext11:
  4819                           	callstack 0
  4820  002A40                     __div_to_l_:
  4821                           	callstack 29
  4822  002A40  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  4823  002A42  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  4824  002A44  6E0E               	movwf	__div_to_l_@exp1^0,c
  4825  002A46  500E               	movf	__div_to_l_@exp1^0,w,c
  4826  002A48  A4D8               	btfss	status,2,c
  4827  002A4A  EF29  F015         	goto	u3161
  4828  002A4E  EF2B  F015         	goto	u3160
  4829  002A52                     u3161:
  4830  002A52  EF35  F015         	goto	l3166
  4831  002A56                     u3160:
  4832  002A56                     l3162:
  4833  002A56  0E00               	movlw	0
  4834  002A58  6E01               	movwf	?__div_to_l_^0,c
  4835  002A5A  0E00               	movlw	0
  4836  002A5C  6E02               	movwf	(?__div_to_l_+1)^0,c
  4837  002A5E  0E00               	movlw	0
  4838  002A60  6E03               	movwf	(?__div_to_l_+2)^0,c
  4839  002A62  0E00               	movlw	0
  4840  002A64  6E04               	movwf	(?__div_to_l_+3)^0,c
  4841  002A66  EFC5  F015         	goto	l538
  4842  002A6A                     l3166:
  4843  002A6A  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
  4844  002A6C  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
  4845  002A6E  6E0D               	movwf	__div_to_l_@cntr^0,c
  4846  002A70  500D               	movf	__div_to_l_@cntr^0,w,c
  4847  002A72  A4D8               	btfss	status,2,c
  4848  002A74  EF3E  F015         	goto	u3171
  4849  002A78  EF40  F015         	goto	u3170
  4850  002A7C                     u3171:
  4851  002A7C  EF42  F015         	goto	l3172
  4852  002A80                     u3170:
  4853  002A80  EF2B  F015         	goto	l3162
  4854  002A84                     l3172:
  4855  002A84  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  4856  002A86  0EFF               	movlw	255
  4857  002A88  1601               	andwf	__div_to_l_@f1^0,f,c
  4858  002A8A  0EFF               	movlw	255
  4859  002A8C  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  4860  002A8E  0EFF               	movlw	255
  4861  002A90  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  4862  002A92  0E00               	movlw	0
  4863  002A94  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  4864  002A96  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
  4865  002A98  0EFF               	movlw	255
  4866  002A9A  1605               	andwf	__div_to_l_@f2^0,f,c
  4867  002A9C  0EFF               	movlw	255
  4868  002A9E  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
  4869  002AA0  0EFF               	movlw	255
  4870  002AA2  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
  4871  002AA4  0E00               	movlw	0
  4872  002AA6  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
  4873  002AA8  0E00               	movlw	0
  4874  002AAA  6E09               	movwf	__div_to_l_@quot^0,c
  4875  002AAC  0E00               	movlw	0
  4876  002AAE  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
  4877  002AB0  0E00               	movlw	0
  4878  002AB2  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
  4879  002AB4  0E00               	movlw	0
  4880  002AB6  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
  4881  002AB8  0E7F               	movlw	127
  4882  002ABA  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  4883  002ABC  500D               	movf	__div_to_l_@cntr^0,w,c
  4884  002ABE  0FA0               	addlw	160
  4885  002AC0  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  4886  002AC2  0E20               	movlw	32
  4887  002AC4  6E0D               	movwf	__div_to_l_@cntr^0,c
  4888  002AC6                     l3186:
  4889  002AC6  90D8               	bcf	status,0,c
  4890  002AC8  3609               	rlcf	__div_to_l_@quot^0,f,c
  4891  002ACA  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  4892  002ACC  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  4893  002ACE  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  4894  002AD0  5005               	movf	__div_to_l_@f2^0,w,c
  4895  002AD2  5C01               	subwf	__div_to_l_@f1^0,w,c
  4896  002AD4  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  4897  002AD6  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  4898  002AD8  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  4899  002ADA  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  4900  002ADC  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  4901  002ADE  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  4902  002AE0  A0D8               	btfss	status,0,c
  4903  002AE2  EF75  F015         	goto	u3181
  4904  002AE6  EF77  F015         	goto	u3180
  4905  002AEA                     u3181:
  4906  002AEA  EF80  F015         	goto	l3194
  4907  002AEE                     u3180:
  4908  002AEE  5005               	movf	__div_to_l_@f2^0,w,c
  4909  002AF0  5E01               	subwf	__div_to_l_@f1^0,f,c
  4910  002AF2  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  4911  002AF4  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  4912  002AF6  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  4913  002AF8  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  4914  002AFA  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  4915  002AFC  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  4916  002AFE  8009               	bsf	__div_to_l_@quot^0,0,c
  4917  002B00                     l3194:
  4918  002B00  90D8               	bcf	status,0,c
  4919  002B02  3601               	rlcf	__div_to_l_@f1^0,f,c
  4920  002B04  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  4921  002B06  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  4922  002B08  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  4923  002B0A  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
  4924  002B0C  EF63  F015         	goto	l3186
  4925  002B10  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
  4926  002B12  EF8F  F015         	goto	u3190
  4927  002B16  EF8D  F015         	goto	u3191
  4928  002B1A                     u3191:
  4929  002B1A  EFA5  F015         	goto	l3210
  4930  002B1E                     u3190:
  4931  002B1E  500E               	movf	__div_to_l_@exp1^0,w,c
  4932  002B20  0A80               	xorlw	128
  4933  002B22  0F9F               	addlw	159
  4934  002B24  B0D8               	btfsc	status,0,c
  4935  002B26  EF97  F015         	goto	u3201
  4936  002B2A  EF99  F015         	goto	u3200
  4937  002B2E                     u3201:
  4938  002B2E  EF9B  F015         	goto	l3206
  4939  002B32                     u3200:
  4940  002B32  EF2B  F015         	goto	l3162
  4941  002B36                     l3206:
  4942  002B36  90D8               	bcf	status,0,c
  4943  002B38  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
  4944  002B3A  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
  4945  002B3C  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
  4946  002B3E  3209               	rrcf	__div_to_l_@quot^0,f,c
  4947  002B40  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
  4948  002B42  EF9B  F015         	goto	l3206
  4949  002B46  EFBD  F015         	goto	l547
  4950  002B4A                     l3210:
  4951  002B4A  0E1F               	movlw	31
  4952  002B4C  640E               	cpfsgt	__div_to_l_@exp1^0,c
  4953  002B4E  EFAB  F015         	goto	u3211
  4954  002B52  EFAD  F015         	goto	u3210
  4955  002B56                     u3211:
  4956  002B56  EFB5  F015         	goto	l3218
  4957  002B5A                     u3210:
  4958  002B5A  EF2B  F015         	goto	l3162
  4959  002B5E                     l3216:
  4960  002B5E  90D8               	bcf	status,0,c
  4961  002B60  3609               	rlcf	__div_to_l_@quot^0,f,c
  4962  002B62  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  4963  002B64  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  4964  002B66  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  4965  002B68  060E               	decf	__div_to_l_@exp1^0,f,c
  4966  002B6A                     l3218:
  4967  002B6A  500E               	movf	__div_to_l_@exp1^0,w,c
  4968  002B6C  A4D8               	btfss	status,2,c
  4969  002B6E  EFBB  F015         	goto	u3221
  4970  002B72  EFBD  F015         	goto	u3220
  4971  002B76                     u3221:
  4972  002B76  EFAF  F015         	goto	l3216
  4973  002B7A                     u3220:
  4974  002B7A                     l547:
  4975  002B7A  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4976  002B7E  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4977  002B82  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4978  002B86  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4979  002B8A                     l538:
  4980  002B8A  0012               	return		;funcret
  4981  002B8C                     __end_of__div_to_l_:
  4982                           	callstack 0
  4983                           
  4984 ;; *************** function ___xxtofl *****************
  4985 ;; Defined at:
  4986 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\xxtofl.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  sign            1    wreg     unsigned char 
  4989 ;;  val             4    0[COMRAM] long 
  4990 ;; Auto vars:     Size  Location     Type
  4991 ;;  sign            1    8[COMRAM] unsigned char 
  4992 ;;  arg             4   10[COMRAM] unsigned long 
  4993 ;;  exp             1    9[COMRAM] unsigned char 
  4994 ;; Return value:  Size  Location     Type
  4995 ;;                  4    0[COMRAM] unsigned char 
  4996 ;; Registers used:
  4997 ;;		wreg, status,2, status,0
  4998 ;; Tracked objects:
  4999 ;;		On entry : 0/0
  5000 ;;		On exit  : 0/0
  5001 ;;		Unchanged: 0/0
  5002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5003 ;;      Params:         4       0       0       0       0       0       0
  5004 ;;      Locals:         6       0       0       0       0       0       0
  5005 ;;      Temps:          4       0       0       0       0       0       0
  5006 ;;      Totals:        14       0       0       0       0       0       0
  5007 ;;Total ram usage:       14 bytes
  5008 ;; Hardware stack levels used: 1
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_main
  5013 ;;		_sprintf
  5014 ;; This function uses a non-reentrant model
  5015 ;;
  5016                           
  5017                           	psect	text12
  5018  002736                     __ptext12:
  5019                           	callstack 0
  5020  002736                     ___xxtofl:
  5021                           	callstack 29
  5022                           
  5023                           ;incstack = 0
  5024                           ;___xxtofl@sign stored from wreg
  5025  002736  6E09               	movwf	___xxtofl@sign^0,c
  5026  002738  5009               	movf	___xxtofl@sign^0,w,c
  5027  00273A  B4D8               	btfsc	status,2,c
  5028  00273C  EFA2  F013         	goto	u3451
  5029  002740  EFA4  F013         	goto	u3450
  5030  002744                     u3451:
  5031  002744  EFC6  F013         	goto	l961
  5032  002748                     u3450:
  5033  002748  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5034  00274A  EFAB  F013         	goto	u3460
  5035  00274E  EFA9  F013         	goto	u3461
  5036  002752                     u3461:
  5037  002752  EFC6  F013         	goto	l961
  5038  002756                     u3460:
  5039  002756  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5040  00275A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5041  00275E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5042  002762  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5043  002766  1E05               	comf	??___xxtofl^0,f,c
  5044  002768  1E06               	comf	(??___xxtofl+1)^0,f,c
  5045  00276A  1E07               	comf	(??___xxtofl+2)^0,f,c
  5046  00276C  1E08               	comf	(??___xxtofl+3)^0,f,c
  5047  00276E  2A05               	incf	??___xxtofl^0,f,c
  5048  002770  0E00               	movlw	0
  5049  002772  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5050  002774  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5051  002776  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5052  002778  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5053  00277C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5054  002780  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5055  002784  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5056  002788  EFCE  F013         	goto	l3366
  5057  00278C                     l961:
  5058  00278C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5059  002790  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5060  002794  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5061  002798  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5062  00279C                     l3366:
  5063  00279C  5001               	movf	___xxtofl@val^0,w,c
  5064  00279E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5065  0027A0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5066  0027A2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5067  0027A4  A4D8               	btfss	status,2,c
  5068  0027A6  EFD7  F013         	goto	u3471
  5069  0027AA  EFD9  F013         	goto	u3470
  5070  0027AE                     u3471:
  5071  0027AE  EFE3  F013         	goto	l3372
  5072  0027B2                     u3470:
  5073  0027B2  0E00               	movlw	0
  5074  0027B4  6E01               	movwf	?___xxtofl^0,c
  5075  0027B6  0E00               	movlw	0
  5076  0027B8  6E02               	movwf	(?___xxtofl+1)^0,c
  5077  0027BA  0E00               	movlw	0
  5078  0027BC  6E03               	movwf	(?___xxtofl+2)^0,c
  5079  0027BE  0E00               	movlw	0
  5080  0027C0  6E04               	movwf	(?___xxtofl+3)^0,c
  5081  0027C2  EF74  F014         	goto	l964
  5082  0027C6                     l3372:
  5083  0027C6  0E96               	movlw	150
  5084  0027C8  6E0A               	movwf	___xxtofl@exp^0,c
  5085  0027CA  EFED  F013         	goto	l3376
  5086  0027CE                     l3374:
  5087  0027CE  2A0A               	incf	___xxtofl@exp^0,f,c
  5088  0027D0  90D8               	bcf	status,0,c
  5089  0027D2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5090  0027D4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5091  0027D6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5092  0027D8  320B               	rrcf	___xxtofl@arg^0,f,c
  5093  0027DA                     l3376:
  5094  0027DA  0E00               	movlw	0
  5095  0027DC  140B               	andwf	___xxtofl@arg^0,w,c
  5096  0027DE  6E05               	movwf	??___xxtofl^0,c
  5097  0027E0  0E00               	movlw	0
  5098  0027E2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5099  0027E4  6E06               	movwf	(??___xxtofl+1)^0,c
  5100  0027E6  0E00               	movlw	0
  5101  0027E8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5102  0027EA  6E07               	movwf	(??___xxtofl+2)^0,c
  5103  0027EC  0EFE               	movlw	254
  5104  0027EE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5105  0027F0  6E08               	movwf	(??___xxtofl+3)^0,c
  5106  0027F2  5005               	movf	??___xxtofl^0,w,c
  5107  0027F4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5108  0027F6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5109  0027F8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5110  0027FA  A4D8               	btfss	status,2,c
  5111  0027FC  EF02  F014         	goto	u3481
  5112  002800  EF04  F014         	goto	u3480
  5113  002804                     u3481:
  5114  002804  EFE7  F013         	goto	l3374
  5115  002808                     u3480:
  5116  002808  EF12  F014         	goto	l968
  5117  00280C                     l3378:
  5118  00280C  2A0A               	incf	___xxtofl@exp^0,f,c
  5119  00280E  0E01               	movlw	1
  5120  002810  260B               	addwf	___xxtofl@arg^0,f,c
  5121  002812  0E00               	movlw	0
  5122  002814  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5123  002816  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5124  002818  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5125  00281A  90D8               	bcf	status,0,c
  5126  00281C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5127  00281E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5128  002820  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5129  002822  320B               	rrcf	___xxtofl@arg^0,f,c
  5130  002824                     l968:
  5131  002824  0E00               	movlw	0
  5132  002826  140B               	andwf	___xxtofl@arg^0,w,c
  5133  002828  6E05               	movwf	??___xxtofl^0,c
  5134  00282A  0E00               	movlw	0
  5135  00282C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5136  00282E  6E06               	movwf	(??___xxtofl+1)^0,c
  5137  002830  0E00               	movlw	0
  5138  002832  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5139  002834  6E07               	movwf	(??___xxtofl+2)^0,c
  5140  002836  0EFF               	movlw	255
  5141  002838  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5142  00283A  6E08               	movwf	(??___xxtofl+3)^0,c
  5143  00283C  5005               	movf	??___xxtofl^0,w,c
  5144  00283E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5145  002840  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5146  002842  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5147  002844  A4D8               	btfss	status,2,c
  5148  002846  EF27  F014         	goto	u3491
  5149  00284A  EF29  F014         	goto	u3490
  5150  00284E                     u3491:
  5151  00284E  EF06  F014         	goto	l3378
  5152  002852                     u3490:
  5153  002852  EF31  F014         	goto	l3386
  5154  002856                     l3384:
  5155  002856  060A               	decf	___xxtofl@exp^0,f,c
  5156  002858  90D8               	bcf	status,0,c
  5157  00285A  360B               	rlcf	___xxtofl@arg^0,f,c
  5158  00285C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5159  00285E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5160  002860  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5161  002862                     l3386:
  5162  002862  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5163  002864  EF36  F014         	goto	u3501
  5164  002868  EF38  F014         	goto	u3500
  5165  00286C                     u3501:
  5166  00286C  EF40  F014         	goto	l975
  5167  002870                     u3500:
  5168  002870  0E02               	movlw	2
  5169  002872  600A               	cpfslt	___xxtofl@exp^0,c
  5170  002874  EF3E  F014         	goto	u3511
  5171  002878  EF40  F014         	goto	u3510
  5172  00287C                     u3511:
  5173  00287C  EF2B  F014         	goto	l3384
  5174  002880                     u3510:
  5175  002880                     l975:
  5176  002880  B00A               	btfsc	___xxtofl@exp^0,0,c
  5177  002882  EF45  F014         	goto	u3521
  5178  002886  EF47  F014         	goto	u3520
  5179  00288A                     u3521:
  5180  00288A  EF48  F014         	goto	l3392
  5181  00288E                     u3520:
  5182  00288E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5183  002890                     l3392:
  5184  002890  90D8               	bcf	status,0,c
  5185  002892  320A               	rrcf	___xxtofl@exp^0,f,c
  5186  002894  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5187  002898  6A06               	clrf	(??___xxtofl+1)^0,c
  5188  00289A  6A07               	clrf	(??___xxtofl+2)^0,c
  5189  00289C  6A08               	clrf	(??___xxtofl+3)^0,c
  5190  00289E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5191  0028A2  6A07               	clrf	(??___xxtofl+2)^0,c
  5192  0028A4  6A06               	clrf	(??___xxtofl+1)^0,c
  5193  0028A6  6A05               	clrf	??___xxtofl^0,c
  5194  0028A8  5005               	movf	??___xxtofl^0,w,c
  5195  0028AA  120B               	iorwf	___xxtofl@arg^0,f,c
  5196  0028AC  5006               	movf	(??___xxtofl+1)^0,w,c
  5197  0028AE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5198  0028B0  5007               	movf	(??___xxtofl+2)^0,w,c
  5199  0028B2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5200  0028B4  5008               	movf	(??___xxtofl+3)^0,w,c
  5201  0028B6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5202  0028B8  5009               	movf	___xxtofl@sign^0,w,c
  5203  0028BA  B4D8               	btfsc	status,2,c
  5204  0028BC  EF62  F014         	goto	u3531
  5205  0028C0  EF64  F014         	goto	u3530
  5206  0028C4                     u3531:
  5207  0028C4  EF6C  F014         	goto	l3402
  5208  0028C8                     u3530:
  5209  0028C8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5210  0028CA  EF6B  F014         	goto	u3540
  5211  0028CE  EF69  F014         	goto	u3541
  5212  0028D2                     u3541:
  5213  0028D2  EF6C  F014         	goto	l3402
  5214  0028D6                     u3540:
  5215  0028D6  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5216  0028D8                     l3402:
  5217  0028D8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5218  0028DC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5219  0028E0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5220  0028E4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5221  0028E8                     l964:
  5222  0028E8  0012               	return		;funcret
  5223  0028EA                     __end_of___xxtofl:
  5224                           	callstack 0
  5225                           
  5226 ;; *************** function ___wmul *****************
  5227 ;; Defined at:
  5228 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\Umul16.c"
  5229 ;; Parameters:    Size  Location     Type
  5230 ;;  multiplier      2    0[COMRAM] unsigned int 
  5231 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  product         2    4[COMRAM] unsigned int 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  2    0[COMRAM] unsigned int 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0, prodl, prodh
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5243 ;;      Params:         4       0       0       0       0       0       0
  5244 ;;      Locals:         2       0       0       0       0       0       0
  5245 ;;      Temps:          0       0       0       0       0       0       0
  5246 ;;      Totals:         6       0       0       0       0       0       0
  5247 ;;Total ram usage:        6 bytes
  5248 ;; Hardware stack levels used: 1
  5249 ;; This function calls:
  5250 ;;		Nothing
  5251 ;; This function is called by:
  5252 ;;		_sprintf
  5253 ;; This function uses a non-reentrant model
  5254 ;;
  5255                           
  5256                           	psect	text13
  5257  003814                     __ptext13:
  5258                           	callstack 0
  5259  003814                     ___wmul:
  5260                           	callstack 29
  5261  003814  5001               	movf	___wmul@multiplier^0,w,c
  5262  003816  0203               	mulwf	___wmul@multiplicand^0,c
  5263  003818  CFF3 F005          	movff	prodl,___wmul@product
  5264  00381C  CFF4 F006          	movff	prodh,___wmul@product+1
  5265  003820  5001               	movf	___wmul@multiplier^0,w,c
  5266  003822  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5267  003824  50F3               	movf	243,w,c
  5268  003826  2606               	addwf	(___wmul@product+1)^0,f,c
  5269  003828  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5270  00382A  0203               	mulwf	___wmul@multiplicand^0,c
  5271  00382C  50F3               	movf	243,w,c
  5272  00382E  2606               	addwf	(___wmul@product+1)^0,f,c
  5273  003830  C005  F001         	movff	___wmul@product,?___wmul
  5274  003834  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5275  003838  0012               	return		;funcret
  5276  00383A                     __end_of___wmul:
  5277                           	callstack 0
  5278                           
  5279 ;; *************** function ___llmod *****************
  5280 ;; Defined at:
  5281 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\llmod.c"
  5282 ;; Parameters:    Size  Location     Type
  5283 ;;  dividend        4   13[COMRAM] unsigned long 
  5284 ;;  divisor         4   17[COMRAM] unsigned long 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;  counter         1   21[COMRAM] unsigned char 
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  4   13[COMRAM] unsigned long 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5296 ;;      Params:         8       0       0       0       0       0       0
  5297 ;;      Locals:         1       0       0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0
  5299 ;;      Totals:         9       0       0       0       0       0       0
  5300 ;;Total ram usage:        9 bytes
  5301 ;; Hardware stack levels used: 1
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_sprintf
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text14
  5310  003588                     __ptext14:
  5311                           	callstack 0
  5312  003588                     ___llmod:
  5313                           	callstack 29
  5314  003588  5012               	movf	___llmod@divisor^0,w,c
  5315  00358A  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  5316  00358C  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  5317  00358E  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  5318  003590  B4D8               	btfsc	status,2,c
  5319  003592  EFCD  F01A         	goto	u3421
  5320  003596  EFCF  F01A         	goto	u3420
  5321  00359A                     u3421:
  5322  00359A  EFFF  F01A         	goto	l726
  5323  00359E                     u3420:
  5324  00359E  0E01               	movlw	1
  5325  0035A0  6E16               	movwf	___llmod@counter^0,c
  5326  0035A2  EFD9  F01A         	goto	l3350
  5327  0035A6                     l3348:
  5328  0035A6  90D8               	bcf	status,0,c
  5329  0035A8  3612               	rlcf	___llmod@divisor^0,f,c
  5330  0035AA  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  5331  0035AC  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  5332  0035AE  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  5333  0035B0  2A16               	incf	___llmod@counter^0,f,c
  5334  0035B2                     l3350:
  5335  0035B2  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  5336  0035B4  EFDE  F01A         	goto	u3431
  5337  0035B8  EFE0  F01A         	goto	u3430
  5338  0035BC                     u3431:
  5339  0035BC  EFD3  F01A         	goto	l3348
  5340  0035C0                     u3430:
  5341  0035C0                     l3352:
  5342  0035C0  5012               	movf	___llmod@divisor^0,w,c
  5343  0035C2  5C0E               	subwf	___llmod@dividend^0,w,c
  5344  0035C4  5013               	movf	(___llmod@divisor+1)^0,w,c
  5345  0035C6  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  5346  0035C8  5014               	movf	(___llmod@divisor+2)^0,w,c
  5347  0035CA  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  5348  0035CC  5015               	movf	(___llmod@divisor+3)^0,w,c
  5349  0035CE  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  5350  0035D0  A0D8               	btfss	status,0,c
  5351  0035D2  EFED  F01A         	goto	u3441
  5352  0035D6  EFEF  F01A         	goto	u3440
  5353  0035DA                     u3441:
  5354  0035DA  EFF7  F01A         	goto	l3356
  5355  0035DE                     u3440:
  5356  0035DE  5012               	movf	___llmod@divisor^0,w,c
  5357  0035E0  5E0E               	subwf	___llmod@dividend^0,f,c
  5358  0035E2  5013               	movf	(___llmod@divisor+1)^0,w,c
  5359  0035E4  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  5360  0035E6  5014               	movf	(___llmod@divisor+2)^0,w,c
  5361  0035E8  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  5362  0035EA  5015               	movf	(___llmod@divisor+3)^0,w,c
  5363  0035EC  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  5364  0035EE                     l3356:
  5365  0035EE  90D8               	bcf	status,0,c
  5366  0035F0  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  5367  0035F2  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  5368  0035F4  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  5369  0035F6  3212               	rrcf	___llmod@divisor^0,f,c
  5370  0035F8  2E16               	decfsz	___llmod@counter^0,f,c
  5371  0035FA  EFE0  F01A         	goto	l3352
  5372  0035FE                     l726:
  5373  0035FE  C00E  F00E         	movff	___llmod@dividend,?___llmod
  5374  003602  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  5375  003606  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  5376  00360A  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  5377  00360E  0012               	return		;funcret
  5378  003610                     __end_of___llmod:
  5379                           	callstack 0
  5380                           
  5381 ;; *************** function ___lldiv *****************
  5382 ;; Defined at:
  5383 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
  5384 ;; Parameters:    Size  Location     Type
  5385 ;;  dividend        4    0[COMRAM] unsigned long 
  5386 ;;  divisor         4    4[COMRAM] unsigned long 
  5387 ;; Auto vars:     Size  Location     Type
  5388 ;;  quotient        4    8[COMRAM] unsigned long 
  5389 ;;  counter         1   12[COMRAM] unsigned char 
  5390 ;; Return value:  Size  Location     Type
  5391 ;;                  4    0[COMRAM] unsigned long 
  5392 ;; Registers used:
  5393 ;;		wreg, status,2, status,0
  5394 ;; Tracked objects:
  5395 ;;		On entry : 0/0
  5396 ;;		On exit  : 0/0
  5397 ;;		Unchanged: 0/0
  5398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5399 ;;      Params:         8       0       0       0       0       0       0
  5400 ;;      Locals:         5       0       0       0       0       0       0
  5401 ;;      Temps:          0       0       0       0       0       0       0
  5402 ;;      Totals:        13       0       0       0       0       0       0
  5403 ;;Total ram usage:       13 bytes
  5404 ;; Hardware stack levels used: 1
  5405 ;; This function calls:
  5406 ;;		Nothing
  5407 ;; This function is called by:
  5408 ;;		_sprintf
  5409 ;; This function uses a non-reentrant model
  5410 ;;
  5411                           
  5412                           	psect	text15
  5413  00345A                     __ptext15:
  5414                           	callstack 0
  5415  00345A                     ___lldiv:
  5416                           	callstack 29
  5417  00345A  0E00               	movlw	0
  5418  00345C  6E09               	movwf	___lldiv@quotient^0,c
  5419  00345E  0E00               	movlw	0
  5420  003460  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5421  003462  0E00               	movlw	0
  5422  003464  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5423  003466  0E00               	movlw	0
  5424  003468  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5425  00346A  5005               	movf	___lldiv@divisor^0,w,c
  5426  00346C  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5427  00346E  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5428  003470  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5429  003472  B4D8               	btfsc	status,2,c
  5430  003474  EF3E  F01A         	goto	u3231
  5431  003478  EF40  F01A         	goto	u3230
  5432  00347C                     u3231:
  5433  00347C  EF76  F01A         	goto	l311
  5434  003480                     u3230:
  5435  003480  0E01               	movlw	1
  5436  003482  6E0D               	movwf	___lldiv@counter^0,c
  5437  003484  EF4A  F01A         	goto	l3234
  5438  003488                     l3232:
  5439  003488  90D8               	bcf	status,0,c
  5440  00348A  3605               	rlcf	___lldiv@divisor^0,f,c
  5441  00348C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5442  00348E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5443  003490  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5444  003492  2A0D               	incf	___lldiv@counter^0,f,c
  5445  003494                     l3234:
  5446  003494  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5447  003496  EF4F  F01A         	goto	u3241
  5448  00349A  EF51  F01A         	goto	u3240
  5449  00349E                     u3241:
  5450  00349E  EF44  F01A         	goto	l3232
  5451  0034A2                     u3240:
  5452  0034A2                     l3236:
  5453  0034A2  90D8               	bcf	status,0,c
  5454  0034A4  3609               	rlcf	___lldiv@quotient^0,f,c
  5455  0034A6  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5456  0034A8  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5457  0034AA  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5458  0034AC  5005               	movf	___lldiv@divisor^0,w,c
  5459  0034AE  5C01               	subwf	___lldiv@dividend^0,w,c
  5460  0034B0  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5461  0034B2  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5462  0034B4  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5463  0034B6  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5464  0034B8  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5465  0034BA  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5466  0034BC  A0D8               	btfss	status,0,c
  5467  0034BE  EF63  F01A         	goto	u3251
  5468  0034C2  EF65  F01A         	goto	u3250
  5469  0034C6                     u3251:
  5470  0034C6  EF6E  F01A         	goto	l3244
  5471  0034CA                     u3250:
  5472  0034CA  5005               	movf	___lldiv@divisor^0,w,c
  5473  0034CC  5E01               	subwf	___lldiv@dividend^0,f,c
  5474  0034CE  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5475  0034D0  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5476  0034D2  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5477  0034D4  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5478  0034D6  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5479  0034D8  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5480  0034DA  8009               	bsf	___lldiv@quotient^0,0,c
  5481  0034DC                     l3244:
  5482  0034DC  90D8               	bcf	status,0,c
  5483  0034DE  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5484  0034E0  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5485  0034E2  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5486  0034E4  3205               	rrcf	___lldiv@divisor^0,f,c
  5487  0034E6  2E0D               	decfsz	___lldiv@counter^0,f,c
  5488  0034E8  EF51  F01A         	goto	l3236
  5489  0034EC                     l311:
  5490  0034EC  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5491  0034F0  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5492  0034F4  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5493  0034F8  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5494  0034FC  0012               	return		;funcret
  5495  0034FE                     __end_of___lldiv:
  5496                           	callstack 0
  5497                           
  5498 ;; *************** function ___fltol *****************
  5499 ;; Defined at:
  5500 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fltol.c"
  5501 ;; Parameters:    Size  Location     Type
  5502 ;;  f1              4   48[COMRAM] unsigned long 
  5503 ;; Auto vars:     Size  Location     Type
  5504 ;;  exp1            1   57[COMRAM] unsigned char 
  5505 ;;  sign1           1   56[COMRAM] unsigned char 
  5506 ;; Return value:  Size  Location     Type
  5507 ;;                  4   48[COMRAM] long 
  5508 ;; Registers used:
  5509 ;;		wreg, status,2, status,0
  5510 ;; Tracked objects:
  5511 ;;		On entry : 0/0
  5512 ;;		On exit  : 0/0
  5513 ;;		Unchanged: 0/0
  5514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5515 ;;      Params:         4       0       0       0       0       0       0
  5516 ;;      Locals:         2       0       0       0       0       0       0
  5517 ;;      Temps:          4       0       0       0       0       0       0
  5518 ;;      Totals:        10       0       0       0       0       0       0
  5519 ;;Total ram usage:       10 bytes
  5520 ;; Hardware stack levels used: 1
  5521 ;; This function calls:
  5522 ;;		Nothing
  5523 ;; This function is called by:
  5524 ;;		_sprintf
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           	psect	text16
  5529  003032                     __ptext16:
  5530                           	callstack 0
  5531  003032                     ___fltol:
  5532                           	callstack 29
  5533  003032  3433               	rlcf	(___fltol@f1+2)^0,w,c
  5534  003034  3434               	rlcf	(___fltol@f1+3)^0,w,c
  5535  003036  6E3A               	movwf	___fltol@exp1^0,c
  5536  003038  503A               	movf	___fltol@exp1^0,w,c
  5537  00303A  A4D8               	btfss	status,2,c
  5538  00303C  EF22  F018         	goto	u3351
  5539  003040  EF24  F018         	goto	u3350
  5540  003044                     u3351:
  5541  003044  EF2E  F018         	goto	l3306
  5542  003048                     u3350:
  5543  003048                     l3302:
  5544  003048  0E00               	movlw	0
  5545  00304A  6E31               	movwf	?___fltol^0,c
  5546  00304C  0E00               	movlw	0
  5547  00304E  6E32               	movwf	(?___fltol+1)^0,c
  5548  003050  0E00               	movlw	0
  5549  003052  6E33               	movwf	(?___fltol+2)^0,c
  5550  003054  0E00               	movlw	0
  5551  003056  6E34               	movwf	(?___fltol+3)^0,c
  5552  003058  EF9B  F018         	goto	l590
  5553  00305C                     l3306:
  5554  00305C  C031  F035         	movff	___fltol@f1,??___fltol
  5555  003060  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  5556  003064  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  5557  003068  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  5558  00306C  0E20               	movlw	32
  5559  00306E  EF3E  F018         	goto	u3360
  5560  003072                     u3365:
  5561  003072  90D8               	bcf	status,0,c
  5562  003074  3238               	rrcf	(??___fltol+3)^0,f,c
  5563  003076  3237               	rrcf	(??___fltol+2)^0,f,c
  5564  003078  3236               	rrcf	(??___fltol+1)^0,f,c
  5565  00307A  3235               	rrcf	??___fltol^0,f,c
  5566  00307C                     u3360:
  5567  00307C  2EE8               	decfsz	wreg,f,c
  5568  00307E  EF39  F018         	goto	u3365
  5569  003082  5035               	movf	??___fltol^0,w,c
  5570  003084  6E39               	movwf	___fltol@sign1^0,c
  5571  003086  8E33               	bsf	(___fltol@f1+2)^0,7,c
  5572  003088  0EFF               	movlw	255
  5573  00308A  1631               	andwf	___fltol@f1^0,f,c
  5574  00308C  0EFF               	movlw	255
  5575  00308E  1632               	andwf	(___fltol@f1+1)^0,f,c
  5576  003090  0EFF               	movlw	255
  5577  003092  1633               	andwf	(___fltol@f1+2)^0,f,c
  5578  003094  0E00               	movlw	0
  5579  003096  1634               	andwf	(___fltol@f1+3)^0,f,c
  5580  003098  0E96               	movlw	150
  5581  00309A  5E3A               	subwf	___fltol@exp1^0,f,c
  5582  00309C  BE3A               	btfsc	___fltol@exp1^0,7,c
  5583  00309E  EF55  F018         	goto	u3370
  5584  0030A2  EF53  F018         	goto	u3371
  5585  0030A6                     u3371:
  5586  0030A6  EF6B  F018         	goto	l3326
  5587  0030AA                     u3370:
  5588  0030AA  503A               	movf	___fltol@exp1^0,w,c
  5589  0030AC  0A80               	xorlw	128
  5590  0030AE  0F97               	addlw	151
  5591  0030B0  B0D8               	btfsc	status,0,c
  5592  0030B2  EF5D  F018         	goto	u3381
  5593  0030B6  EF5F  F018         	goto	u3380
  5594  0030BA                     u3381:
  5595  0030BA  EF61  F018         	goto	l3322
  5596  0030BE                     u3380:
  5597  0030BE  EF24  F018         	goto	l3302
  5598  0030C2                     l3322:
  5599  0030C2  90D8               	bcf	status,0,c
  5600  0030C4  3234               	rrcf	(___fltol@f1+3)^0,f,c
  5601  0030C6  3233               	rrcf	(___fltol@f1+2)^0,f,c
  5602  0030C8  3232               	rrcf	(___fltol@f1+1)^0,f,c
  5603  0030CA  3231               	rrcf	___fltol@f1^0,f,c
  5604  0030CC  3E3A               	incfsz	___fltol@exp1^0,f,c
  5605  0030CE  EF61  F018         	goto	l3322
  5606  0030D2  EF83  F018         	goto	l3336
  5607  0030D6                     l3326:
  5608  0030D6  0E1F               	movlw	31
  5609  0030D8  643A               	cpfsgt	___fltol@exp1^0,c
  5610  0030DA  EF71  F018         	goto	u3391
  5611  0030DE  EF73  F018         	goto	u3390
  5612  0030E2                     u3391:
  5613  0030E2  EF7B  F018         	goto	l3334
  5614  0030E6                     u3390:
  5615  0030E6  EF24  F018         	goto	l3302
  5616  0030EA                     l3332:
  5617  0030EA  90D8               	bcf	status,0,c
  5618  0030EC  3631               	rlcf	___fltol@f1^0,f,c
  5619  0030EE  3632               	rlcf	(___fltol@f1+1)^0,f,c
  5620  0030F0  3633               	rlcf	(___fltol@f1+2)^0,f,c
  5621  0030F2  3634               	rlcf	(___fltol@f1+3)^0,f,c
  5622  0030F4  063A               	decf	___fltol@exp1^0,f,c
  5623  0030F6                     l3334:
  5624  0030F6  503A               	movf	___fltol@exp1^0,w,c
  5625  0030F8  A4D8               	btfss	status,2,c
  5626  0030FA  EF81  F018         	goto	u3401
  5627  0030FE  EF83  F018         	goto	u3400
  5628  003102                     u3401:
  5629  003102  EF75  F018         	goto	l3332
  5630  003106                     u3400:
  5631  003106                     l3336:
  5632  003106  5039               	movf	___fltol@sign1^0,w,c
  5633  003108  B4D8               	btfsc	status,2,c
  5634  00310A  EF89  F018         	goto	u3411
  5635  00310E  EF8B  F018         	goto	u3410
  5636  003112                     u3411:
  5637  003112  EF93  F018         	goto	l3340
  5638  003116                     u3410:
  5639  003116  1E34               	comf	(___fltol@f1+3)^0,f,c
  5640  003118  1E33               	comf	(___fltol@f1+2)^0,f,c
  5641  00311A  1E32               	comf	(___fltol@f1+1)^0,f,c
  5642  00311C  6C31               	negf	___fltol@f1^0,c
  5643  00311E  0E00               	movlw	0
  5644  003120  2232               	addwfc	(___fltol@f1+1)^0,f,c
  5645  003122  2233               	addwfc	(___fltol@f1+2)^0,f,c
  5646  003124  2234               	addwfc	(___fltol@f1+3)^0,f,c
  5647  003126                     l3340:
  5648  003126  C031  F031         	movff	___fltol@f1,?___fltol
  5649  00312A  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  5650  00312E  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  5651  003132  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  5652  003136                     l590:
  5653  003136  0012               	return		;funcret
  5654  003138                     __end_of___fltol:
  5655                           	callstack 0
  5656                           
  5657 ;; *************** function ___flsub *****************
  5658 ;; Defined at:
  5659 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  b               4   68[COMRAM] long 
  5662 ;;  a               4   72[COMRAM] long 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;		None
  5665 ;; Return value:  Size  Location     Type
  5666 ;;                  4   68[COMRAM] long 
  5667 ;; Registers used:
  5668 ;;		wreg, status,2, status,0, cstack
  5669 ;; Tracked objects:
  5670 ;;		On entry : 0/0
  5671 ;;		On exit  : 0/0
  5672 ;;		Unchanged: 0/0
  5673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5674 ;;      Params:         8       0       0       0       0       0       0
  5675 ;;      Locals:         0       0       0       0       0       0       0
  5676 ;;      Temps:          0       0       0       0       0       0       0
  5677 ;;      Totals:         8       0       0       0       0       0       0
  5678 ;;Total ram usage:        8 bytes
  5679 ;; Hardware stack levels used: 1
  5680 ;; Hardware stack levels required when called: 1
  5681 ;; This function calls:
  5682 ;;		___fladd
  5683 ;; This function is called by:
  5684 ;;		_sprintf
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           	psect	text17
  5689  003764                     __ptext17:
  5690                           	callstack 0
  5691  003764                     ___flsub:
  5692                           	callstack 28
  5693  003764  0E00               	movlw	0
  5694  003766  1A49               	xorwf	___flsub@a^0,f,c
  5695  003768  0E00               	movlw	0
  5696  00376A  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  5697  00376C  0E00               	movlw	0
  5698  00376E  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  5699  003770  0E80               	movlw	128
  5700  003772  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  5701  003774  C045  F035         	movff	___flsub@b,___fladd@b
  5702  003778  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  5703  00377C  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  5704  003780  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  5705  003784  C049  F039         	movff	___flsub@a,___fladd@a
  5706  003788  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  5707  00378C  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  5708  003790  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  5709  003794  EC02  F00A         	call	___fladd	;wreg free
  5710  003798  C035  F045         	movff	?___fladd,?___flsub
  5711  00379C  C036  F046         	movff	?___fladd+1,?___flsub+1
  5712  0037A0  C037  F047         	movff	?___fladd+2,?___flsub+2
  5713  0037A4  C038  F048         	movff	?___fladd+3,?___flsub+3
  5714  0037A8  0012               	return		;funcret
  5715  0037AA                     __end_of___flsub:
  5716                           	callstack 0
  5717                           
  5718 ;; *************** function ___fladd *****************
  5719 ;; Defined at:
  5720 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcadd.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;  b               4   52[COMRAM] long 
  5723 ;;  a               4   56[COMRAM] long 
  5724 ;; Auto vars:     Size  Location     Type
  5725 ;;  grs             1   67[COMRAM] unsigned char 
  5726 ;;  bexp            1   66[COMRAM] unsigned char 
  5727 ;;  aexp            1   65[COMRAM] unsigned char 
  5728 ;;  signs           1   64[COMRAM] unsigned char 
  5729 ;; Return value:  Size  Location     Type
  5730 ;;                  4   52[COMRAM] unsigned char 
  5731 ;; Registers used:
  5732 ;;		wreg, status,2, status,0
  5733 ;; Tracked objects:
  5734 ;;		On entry : 0/0
  5735 ;;		On exit  : 0/0
  5736 ;;		Unchanged: 0/0
  5737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5738 ;;      Params:         8       0       0       0       0       0       0
  5739 ;;      Locals:         4       0       0       0       0       0       0
  5740 ;;      Temps:          4       0       0       0       0       0       0
  5741 ;;      Totals:        16       0       0       0       0       0       0
  5742 ;;Total ram usage:       16 bytes
  5743 ;; Hardware stack levels used: 1
  5744 ;; This function calls:
  5745 ;;		Nothing
  5746 ;; This function is called by:
  5747 ;;		_sprintf
  5748 ;;		___flsub
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text18
  5753  001404                     __ptext18:
  5754                           	callstack 0
  5755  001404                     ___fladd:
  5756                           	callstack 28
  5757  001404  5038               	movf	(___fladd@b+3)^0,w,c
  5758  001406  0B80               	andlw	128
  5759  001408  6E41               	movwf	___fladd@signs^0,c
  5760  00140A  5038               	movf	(___fladd@b+3)^0,w,c
  5761  00140C  2438               	addwf	(___fladd@b+3)^0,w,c
  5762  00140E  6E43               	movwf	___fladd@bexp^0,c
  5763  001410  AE37               	btfss	(___fladd@b+2)^0,7,c
  5764  001412  EF0D  F00A         	goto	u2221
  5765  001416  EF0F  F00A         	goto	u2220
  5766  00141A                     u2221:
  5767  00141A  EF10  F00A         	goto	l2592
  5768  00141E                     u2220:
  5769  00141E  8043               	bsf	___fladd@bexp^0,0,c
  5770  001420                     l2592:
  5771  001420  5043               	movf	___fladd@bexp^0,w,c
  5772  001422  B4D8               	btfsc	status,2,c
  5773  001424  EF16  F00A         	goto	u2231
  5774  001428  EF18  F00A         	goto	u2230
  5775  00142C                     u2231:
  5776  00142C  EF2D  F00A         	goto	l2602
  5777  001430                     u2230:
  5778  001430  2843               	incf	___fladd@bexp^0,w,c
  5779  001432  A4D8               	btfss	status,2,c
  5780  001434  EF1E  F00A         	goto	u2241
  5781  001438  EF20  F00A         	goto	u2240
  5782  00143C                     u2241:
  5783  00143C  EF28  F00A         	goto	l2598
  5784  001440                     u2240:
  5785  001440  0E00               	movlw	0
  5786  001442  6E35               	movwf	___fladd@b^0,c
  5787  001444  0E00               	movlw	0
  5788  001446  6E36               	movwf	(___fladd@b+1)^0,c
  5789  001448  0E00               	movlw	0
  5790  00144A  6E37               	movwf	(___fladd@b+2)^0,c
  5791  00144C  0E00               	movlw	0
  5792  00144E  6E38               	movwf	(___fladd@b+3)^0,c
  5793  001450                     l2598:
  5794  001450  8E37               	bsf	(___fladd@b+2)^0,7,c
  5795  001452  0E00               	movlw	0
  5796  001454  6E38               	movwf	(___fladd@b+3)^0,c
  5797  001456  EF35  F00A         	goto	l2604
  5798  00145A                     l2602:
  5799  00145A  0E00               	movlw	0
  5800  00145C  6E35               	movwf	___fladd@b^0,c
  5801  00145E  0E00               	movlw	0
  5802  001460  6E36               	movwf	(___fladd@b+1)^0,c
  5803  001462  0E00               	movlw	0
  5804  001464  6E37               	movwf	(___fladd@b+2)^0,c
  5805  001466  0E00               	movlw	0
  5806  001468  6E38               	movwf	(___fladd@b+3)^0,c
  5807  00146A                     l2604:
  5808  00146A  503C               	movf	(___fladd@a+3)^0,w,c
  5809  00146C  0B80               	andlw	128
  5810  00146E  6E42               	movwf	___fladd@aexp^0,c
  5811  001470  5041               	movf	___fladd@signs^0,w,c
  5812  001472  1842               	xorwf	___fladd@aexp^0,w,c
  5813  001474  B4D8               	btfsc	status,2,c
  5814  001476  EF3F  F00A         	goto	u2251
  5815  00147A  EF41  F00A         	goto	u2250
  5816  00147E                     u2251:
  5817  00147E  EF42  F00A         	goto	l2610
  5818  001482                     u2250:
  5819  001482  8C41               	bsf	___fladd@signs^0,6,c
  5820  001484                     l2610:
  5821  001484  503C               	movf	(___fladd@a+3)^0,w,c
  5822  001486  243C               	addwf	(___fladd@a+3)^0,w,c
  5823  001488  6E42               	movwf	___fladd@aexp^0,c
  5824  00148A  AE3B               	btfss	(___fladd@a+2)^0,7,c
  5825  00148C  EF4A  F00A         	goto	u2261
  5826  001490  EF4C  F00A         	goto	u2260
  5827  001494                     u2261:
  5828  001494  EF4D  F00A         	goto	l2616
  5829  001498                     u2260:
  5830  001498  8042               	bsf	___fladd@aexp^0,0,c
  5831  00149A                     l2616:
  5832  00149A  5042               	movf	___fladd@aexp^0,w,c
  5833  00149C  B4D8               	btfsc	status,2,c
  5834  00149E  EF53  F00A         	goto	u2271
  5835  0014A2  EF55  F00A         	goto	u2270
  5836  0014A6                     u2271:
  5837  0014A6  EF6A  F00A         	goto	l2626
  5838  0014AA                     u2270:
  5839  0014AA  2842               	incf	___fladd@aexp^0,w,c
  5840  0014AC  A4D8               	btfss	status,2,c
  5841  0014AE  EF5B  F00A         	goto	u2281
  5842  0014B2  EF5D  F00A         	goto	u2280
  5843  0014B6                     u2281:
  5844  0014B6  EF65  F00A         	goto	l2622
  5845  0014BA                     u2280:
  5846  0014BA  0E00               	movlw	0
  5847  0014BC  6E39               	movwf	___fladd@a^0,c
  5848  0014BE  0E00               	movlw	0
  5849  0014C0  6E3A               	movwf	(___fladd@a+1)^0,c
  5850  0014C2  0E00               	movlw	0
  5851  0014C4  6E3B               	movwf	(___fladd@a+2)^0,c
  5852  0014C6  0E00               	movlw	0
  5853  0014C8  6E3C               	movwf	(___fladd@a+3)^0,c
  5854  0014CA                     l2622:
  5855  0014CA  8E3B               	bsf	(___fladd@a+2)^0,7,c
  5856  0014CC  0E00               	movlw	0
  5857  0014CE  6E3C               	movwf	(___fladd@a+3)^0,c
  5858  0014D0  EF72  F00A         	goto	l2628
  5859  0014D4                     l2626:
  5860  0014D4  0E00               	movlw	0
  5861  0014D6  6E39               	movwf	___fladd@a^0,c
  5862  0014D8  0E00               	movlw	0
  5863  0014DA  6E3A               	movwf	(___fladd@a+1)^0,c
  5864  0014DC  0E00               	movlw	0
  5865  0014DE  6E3B               	movwf	(___fladd@a+2)^0,c
  5866  0014E0  0E00               	movlw	0
  5867  0014E2  6E3C               	movwf	(___fladd@a+3)^0,c
  5868  0014E4                     l2628:
  5869  0014E4  5043               	movf	___fladd@bexp^0,w,c
  5870  0014E6  5C42               	subwf	___fladd@aexp^0,w,c
  5871  0014E8  B0D8               	btfsc	status,0,c
  5872  0014EA  EF79  F00A         	goto	u2291
  5873  0014EE  EF7B  F00A         	goto	u2290
  5874  0014F2                     u2291:
  5875  0014F2  EFA2  F00A         	goto	l2664
  5876  0014F6                     u2290:
  5877  0014F6  AC41               	btfss	___fladd@signs^0,6,c
  5878  0014F8  EF80  F00A         	goto	u2301
  5879  0014FC  EF82  F00A         	goto	u2300
  5880  001500                     u2301:
  5881  001500  EF84  F00A         	goto	l2634
  5882  001504                     u2300:
  5883  001504  0E80               	movlw	128
  5884  001506  1A41               	xorwf	___fladd@signs^0,f,c
  5885  001508                     l2634:
  5886  001508  C043  F044         	movff	___fladd@bexp,___fladd@grs
  5887  00150C  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  5888  001510  C044  F042         	movff	___fladd@grs,___fladd@aexp
  5889  001514  C035  F044         	movff	___fladd@b,___fladd@grs
  5890  001518  C039  F035         	movff	___fladd@a,___fladd@b
  5891  00151C  C044  F039         	movff	___fladd@grs,___fladd@a
  5892  001520  C036  F044         	movff	___fladd@b+1,___fladd@grs
  5893  001524  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  5894  001528  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  5895  00152C  C037  F044         	movff	___fladd@b+2,___fladd@grs
  5896  001530  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  5897  001534  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  5898  001538  C038  F044         	movff	___fladd@b+3,___fladd@grs
  5899  00153C  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  5900  001540  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  5901  001544                     l2664:
  5902  001544  0E00               	movlw	0
  5903  001546  6E44               	movwf	___fladd@grs^0,c
  5904  001548  5043               	movf	___fladd@bexp^0,w,c
  5905  00154A  C042  F03D         	movff	___fladd@aexp,??___fladd
  5906  00154E  6A3E               	clrf	(??___fladd+1)^0,c
  5907  001550  5E3D               	subwf	??___fladd^0,f,c
  5908  001552  0E00               	movlw	0
  5909  001554  5A3E               	subwfb	(??___fladd+1)^0,f,c
  5910  001556  BE3E               	btfsc	(??___fladd+1)^0,7,c
  5911  001558  EFB7  F00A         	goto	u2311
  5912  00155C  503E               	movf	(??___fladd+1)^0,w,c
  5913  00155E  E109               	bnz	u2310
  5914  001560  0E1A               	movlw	26
  5915  001562  5C3D               	subwf	??___fladd^0,w,c
  5916  001564  A0D8               	btfss	status,0,c
  5917  001566  EFB7  F00A         	goto	u2311
  5918  00156A  EFB9  F00A         	goto	u2310
  5919  00156E                     u2311:
  5920  00156E  EFF0  F00A         	goto	l835
  5921  001572                     u2310:
  5922  001572  5035               	movf	___fladd@b^0,w,c
  5923  001574  1036               	iorwf	(___fladd@b+1)^0,w,c
  5924  001576  1037               	iorwf	(___fladd@b+2)^0,w,c
  5925  001578  1038               	iorwf	(___fladd@b+3)^0,w,c
  5926  00157A  A4D8               	btfss	status,2,c
  5927  00157C  EFC2  F00A         	goto	u2321
  5928  001580  EFC5  F00A         	goto	u2320
  5929  001584                     u2321:
  5930  001584  0E01               	movlw	1
  5931  001586  EFC6  F00A         	goto	u2330
  5932  00158A                     u2320:
  5933  00158A  0E00               	movlw	0
  5934  00158C                     u2330:
  5935  00158C  6E44               	movwf	___fladd@grs^0,c
  5936  00158E  0E00               	movlw	0
  5937  001590  6E35               	movwf	___fladd@b^0,c
  5938  001592  0E00               	movlw	0
  5939  001594  6E36               	movwf	(___fladd@b+1)^0,c
  5940  001596  0E00               	movlw	0
  5941  001598  6E37               	movwf	(___fladd@b+2)^0,c
  5942  00159A  0E00               	movlw	0
  5943  00159C  6E38               	movwf	(___fladd@b+3)^0,c
  5944  00159E  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  5945  0015A2  EFF9  F00A         	goto	l834
  5946  0015A6                     l836:
  5947  0015A6  A044               	btfss	___fladd@grs^0,0,c
  5948  0015A8  EFD8  F00A         	goto	u2341
  5949  0015AC  EFDA  F00A         	goto	u2340
  5950  0015B0                     u2341:
  5951  0015B0  EFE0  F00A         	goto	l2676
  5952  0015B4                     u2340:
  5953  0015B4  90D8               	bcf	status,0,c
  5954  0015B6  3044               	rrcf	___fladd@grs^0,w,c
  5955  0015B8  0901               	iorlw	1
  5956  0015BA  6E44               	movwf	___fladd@grs^0,c
  5957  0015BC  EFE2  F00A         	goto	l2678
  5958  0015C0                     l2676:
  5959  0015C0  90D8               	bcf	status,0,c
  5960  0015C2  3244               	rrcf	___fladd@grs^0,f,c
  5961  0015C4                     l2678:
  5962  0015C4  A035               	btfss	___fladd@b^0,0,c
  5963  0015C6  EFE7  F00A         	goto	u2351
  5964  0015CA  EFE9  F00A         	goto	u2350
  5965  0015CE                     u2351:
  5966  0015CE  EFEA  F00A         	goto	l2682
  5967  0015D2                     u2350:
  5968  0015D2  8E44               	bsf	___fladd@grs^0,7,c
  5969  0015D4                     l2682:
  5970  0015D4  3438               	rlcf	(___fladd@b+3)^0,w,c
  5971  0015D6  3238               	rrcf	(___fladd@b+3)^0,f,c
  5972  0015D8  3237               	rrcf	(___fladd@b+2)^0,f,c
  5973  0015DA  3236               	rrcf	(___fladd@b+1)^0,f,c
  5974  0015DC  3235               	rrcf	___fladd@b^0,f,c
  5975  0015DE  2A43               	incf	___fladd@bexp^0,f,c
  5976  0015E0                     l835:
  5977  0015E0  5042               	movf	___fladd@aexp^0,w,c
  5978  0015E2  5C43               	subwf	___fladd@bexp^0,w,c
  5979  0015E4  A0D8               	btfss	status,0,c
  5980  0015E6  EFF7  F00A         	goto	u2361
  5981  0015EA  EFF9  F00A         	goto	u2360
  5982  0015EE                     u2361:
  5983  0015EE  EFD3  F00A         	goto	l836
  5984  0015F2                     u2360:
  5985  0015F2                     l834:
  5986  0015F2  BC41               	btfsc	___fladd@signs^0,6,c
  5987  0015F4  EFFE  F00A         	goto	u2371
  5988  0015F8  EF00  F00B         	goto	u2370
  5989  0015FC                     u2371:
  5990  0015FC  EF40  F00B         	goto	l2710
  5991  001600                     u2370:
  5992  001600  5043               	movf	___fladd@bexp^0,w,c
  5993  001602  A4D8               	btfss	status,2,c
  5994  001604  EF06  F00B         	goto	u2381
  5995  001608  EF08  F00B         	goto	u2380
  5996  00160C                     u2381:
  5997  00160C  EF12  F00B         	goto	l2692
  5998  001610                     u2380:
  5999  001610  0E00               	movlw	0
  6000  001612  6E35               	movwf	?___fladd^0,c
  6001  001614  0E00               	movlw	0
  6002  001616  6E36               	movwf	(?___fladd+1)^0,c
  6003  001618  0E00               	movlw	0
  6004  00161A  6E37               	movwf	(?___fladd+2)^0,c
  6005  00161C  0E00               	movlw	0
  6006  00161E  6E38               	movwf	(?___fladd+3)^0,c
  6007  001620  EF61  F00C         	goto	l843
  6008  001624                     l2692:
  6009  001624  5039               	movf	___fladd@a^0,w,c
  6010  001626  2635               	addwf	___fladd@b^0,f,c
  6011  001628  503A               	movf	(___fladd@a+1)^0,w,c
  6012  00162A  2236               	addwfc	(___fladd@b+1)^0,f,c
  6013  00162C  503B               	movf	(___fladd@a+2)^0,w,c
  6014  00162E  2237               	addwfc	(___fladd@b+2)^0,f,c
  6015  001630  503C               	movf	(___fladd@a+3)^0,w,c
  6016  001632  2238               	addwfc	(___fladd@b+3)^0,f,c
  6017  001634  A038               	btfss	(___fladd@b+3)^0,0,c
  6018  001636  EF1F  F00B         	goto	u2391
  6019  00163A  EF21  F00B         	goto	u2390
  6020  00163E                     u2391:
  6021  00163E  EFCD  F00B         	goto	l2746
  6022  001642                     u2390:
  6023  001642  A044               	btfss	___fladd@grs^0,0,c
  6024  001644  EF26  F00B         	goto	u2401
  6025  001648  EF28  F00B         	goto	u2400
  6026  00164C                     u2401:
  6027  00164C  EF2E  F00B         	goto	l2700
  6028  001650                     u2400:
  6029  001650  90D8               	bcf	status,0,c
  6030  001652  3044               	rrcf	___fladd@grs^0,w,c
  6031  001654  0901               	iorlw	1
  6032  001656  6E44               	movwf	___fladd@grs^0,c
  6033  001658  EF30  F00B         	goto	l2702
  6034  00165C                     l2700:
  6035  00165C  90D8               	bcf	status,0,c
  6036  00165E  3244               	rrcf	___fladd@grs^0,f,c
  6037  001660                     l2702:
  6038  001660  A035               	btfss	___fladd@b^0,0,c
  6039  001662  EF35  F00B         	goto	u2411
  6040  001666  EF37  F00B         	goto	u2410
  6041  00166A                     u2411:
  6042  00166A  EF38  F00B         	goto	l2706
  6043  00166E                     u2410:
  6044  00166E  8E44               	bsf	___fladd@grs^0,7,c
  6045  001670                     l2706:
  6046  001670  3438               	rlcf	(___fladd@b+3)^0,w,c
  6047  001672  3238               	rrcf	(___fladd@b+3)^0,f,c
  6048  001674  3237               	rrcf	(___fladd@b+2)^0,f,c
  6049  001676  3236               	rrcf	(___fladd@b+1)^0,f,c
  6050  001678  3235               	rrcf	___fladd@b^0,f,c
  6051  00167A  2A43               	incf	___fladd@bexp^0,f,c
  6052  00167C  EFCD  F00B         	goto	l2746
  6053  001680                     l2710:
  6054  001680  5039               	movf	___fladd@a^0,w,c
  6055  001682  5C35               	subwf	___fladd@b^0,w,c
  6056  001684  503A               	movf	(___fladd@a+1)^0,w,c
  6057  001686  5836               	subwfb	(___fladd@b+1)^0,w,c
  6058  001688  503B               	movf	(___fladd@a+2)^0,w,c
  6059  00168A  5837               	subwfb	(___fladd@b+2)^0,w,c
  6060  00168C  5038               	movf	(___fladd@b+3)^0,w,c
  6061  00168E  0A80               	xorlw	128
  6062  001690  6E3D               	movwf	??___fladd^0,c
  6063  001692  503C               	movf	(___fladd@a+3)^0,w,c
  6064  001694  0A80               	xorlw	128
  6065  001696  583D               	subwfb	??___fladd^0,w,c
  6066  001698  B0D8               	btfsc	status,0,c
  6067  00169A  EF51  F00B         	goto	u2421
  6068  00169E  EF53  F00B         	goto	u2420
  6069  0016A2                     u2421:
  6070  0016A2  EF7E  F00B         	goto	l2720
  6071  0016A6                     u2420:
  6072  0016A6  5035               	movf	___fladd@b^0,w,c
  6073  0016A8  5C39               	subwf	___fladd@a^0,w,c
  6074  0016AA  6E3D               	movwf	??___fladd^0,c
  6075  0016AC  5036               	movf	(___fladd@b+1)^0,w,c
  6076  0016AE  583A               	subwfb	(___fladd@a+1)^0,w,c
  6077  0016B0  6E3E               	movwf	(??___fladd+1)^0,c
  6078  0016B2  5037               	movf	(___fladd@b+2)^0,w,c
  6079  0016B4  583B               	subwfb	(___fladd@a+2)^0,w,c
  6080  0016B6  6E3F               	movwf	(??___fladd+2)^0,c
  6081  0016B8  5038               	movf	(___fladd@b+3)^0,w,c
  6082  0016BA  583C               	subwfb	(___fladd@a+3)^0,w,c
  6083  0016BC  6E40               	movwf	(??___fladd+3)^0,c
  6084  0016BE  0EFF               	movlw	255
  6085  0016C0  243D               	addwf	??___fladd^0,w,c
  6086  0016C2  6E35               	movwf	___fladd@b^0,c
  6087  0016C4  0EFF               	movlw	255
  6088  0016C6  203E               	addwfc	(??___fladd+1)^0,w,c
  6089  0016C8  6E36               	movwf	(___fladd@b+1)^0,c
  6090  0016CA  0EFF               	movlw	255
  6091  0016CC  203F               	addwfc	(??___fladd+2)^0,w,c
  6092  0016CE  6E37               	movwf	(___fladd@b+2)^0,c
  6093  0016D0  0EFF               	movlw	255
  6094  0016D2  2040               	addwfc	(??___fladd+3)^0,w,c
  6095  0016D4  6E38               	movwf	(___fladd@b+3)^0,c
  6096  0016D6  0E80               	movlw	128
  6097  0016D8  1A41               	xorwf	___fladd@signs^0,f,c
  6098  0016DA  6C44               	negf	___fladd@grs^0,c
  6099  0016DC  5044               	movf	___fladd@grs^0,w,c
  6100  0016DE  A4D8               	btfss	status,2,c
  6101  0016E0  EF74  F00B         	goto	u2431
  6102  0016E4  EF76  F00B         	goto	u2430
  6103  0016E8                     u2431:
  6104  0016E8  EF86  F00B         	goto	l851
  6105  0016EC                     u2430:
  6106  0016EC  0E01               	movlw	1
  6107  0016EE  2635               	addwf	___fladd@b^0,f,c
  6108  0016F0  0E00               	movlw	0
  6109  0016F2  2236               	addwfc	(___fladd@b+1)^0,f,c
  6110  0016F4  2237               	addwfc	(___fladd@b+2)^0,f,c
  6111  0016F6  2238               	addwfc	(___fladd@b+3)^0,f,c
  6112  0016F8  EF86  F00B         	goto	l851
  6113  0016FC                     l2720:
  6114  0016FC  5039               	movf	___fladd@a^0,w,c
  6115  0016FE  5E35               	subwf	___fladd@b^0,f,c
  6116  001700  503A               	movf	(___fladd@a+1)^0,w,c
  6117  001702  5A36               	subwfb	(___fladd@b+1)^0,f,c
  6118  001704  503B               	movf	(___fladd@a+2)^0,w,c
  6119  001706  5A37               	subwfb	(___fladd@b+2)^0,f,c
  6120  001708  503C               	movf	(___fladd@a+3)^0,w,c
  6121  00170A  5A38               	subwfb	(___fladd@b+3)^0,f,c
  6122  00170C                     l851:
  6123  00170C  5035               	movf	___fladd@b^0,w,c
  6124  00170E  1036               	iorwf	(___fladd@b+1)^0,w,c
  6125  001710  1037               	iorwf	(___fladd@b+2)^0,w,c
  6126  001712  1038               	iorwf	(___fladd@b+3)^0,w,c
  6127  001714  A4D8               	btfss	status,2,c
  6128  001716  EF8F  F00B         	goto	u2441
  6129  00171A  EF91  F00B         	goto	u2440
  6130  00171E                     u2441:
  6131  00171E  EFC6  F00B         	goto	l2744
  6132  001722                     u2440:
  6133  001722  5044               	movf	___fladd@grs^0,w,c
  6134  001724  A4D8               	btfss	status,2,c
  6135  001726  EF97  F00B         	goto	u2451
  6136  00172A  EF99  F00B         	goto	u2450
  6137  00172E                     u2451:
  6138  00172E  EFC6  F00B         	goto	l2744
  6139  001732                     u2450:
  6140  001732  0E00               	movlw	0
  6141  001734  6E35               	movwf	?___fladd^0,c
  6142  001736  0E00               	movlw	0
  6143  001738  6E36               	movwf	(?___fladd+1)^0,c
  6144  00173A  0E00               	movlw	0
  6145  00173C  6E37               	movwf	(?___fladd+2)^0,c
  6146  00173E  0E00               	movlw	0
  6147  001740  6E38               	movwf	(?___fladd+3)^0,c
  6148  001742  EF61  F00C         	goto	l843
  6149  001746                     l2728:
  6150  001746  90D8               	bcf	status,0,c
  6151  001748  3635               	rlcf	___fladd@b^0,f,c
  6152  00174A  3636               	rlcf	(___fladd@b+1)^0,f,c
  6153  00174C  3637               	rlcf	(___fladd@b+2)^0,f,c
  6154  00174E  3638               	rlcf	(___fladd@b+3)^0,f,c
  6155  001750  AE44               	btfss	___fladd@grs^0,7,c
  6156  001752  EFAD  F00B         	goto	u2461
  6157  001756  EFAF  F00B         	goto	u2460
  6158  00175A                     u2461:
  6159  00175A  EFB0  F00B         	goto	l2734
  6160  00175E                     u2460:
  6161  00175E  8035               	bsf	___fladd@b^0,0,c
  6162  001760                     l2734:
  6163  001760  A044               	btfss	___fladd@grs^0,0,c
  6164  001762  EFB5  F00B         	goto	u2471
  6165  001766  EFB7  F00B         	goto	u2470
  6166  00176A                     u2471:
  6167  00176A  EFBB  F00B         	goto	l2738
  6168  00176E                     u2470:
  6169  00176E  80D8               	bsf	status,0,c
  6170  001770  3644               	rlcf	___fladd@grs^0,f,c
  6171  001772  EFBD  F00B         	goto	l2740
  6172  001776                     l2738:
  6173  001776  90D8               	bcf	status,0,c
  6174  001778  3644               	rlcf	___fladd@grs^0,f,c
  6175  00177A                     l2740:
  6176  00177A  5043               	movf	___fladd@bexp^0,w,c
  6177  00177C  B4D8               	btfsc	status,2,c
  6178  00177E  EFC3  F00B         	goto	u2481
  6179  001782  EFC5  F00B         	goto	u2480
  6180  001786                     u2481:
  6181  001786  EFC6  F00B         	goto	l2744
  6182  00178A                     u2480:
  6183  00178A  0643               	decf	___fladd@bexp^0,f,c
  6184  00178C                     l2744:
  6185  00178C  AE37               	btfss	(___fladd@b+2)^0,7,c
  6186  00178E  EFCB  F00B         	goto	u2491
  6187  001792  EFCD  F00B         	goto	u2490
  6188  001796                     u2491:
  6189  001796  EFA3  F00B         	goto	l2728
  6190  00179A                     u2490:
  6191  00179A                     l2746:
  6192  00179A  0E00               	movlw	0
  6193  00179C  6E42               	movwf	___fladd@aexp^0,c
  6194  00179E  AE44               	btfss	___fladd@grs^0,7,c
  6195  0017A0  EFD4  F00B         	goto	u2501
  6196  0017A4  EFD6  F00B         	goto	u2500
  6197  0017A8                     u2501:
  6198  0017A8  EFEE  F00B         	goto	l860
  6199  0017AC                     u2500:
  6200  0017AC  C044  F03D         	movff	___fladd@grs,??___fladd
  6201  0017B0  0E7F               	movlw	127
  6202  0017B2  163D               	andwf	??___fladd^0,f,c
  6203  0017B4  B4D8               	btfsc	status,2,c
  6204  0017B6  EFDF  F00B         	goto	u2511
  6205  0017BA  EFE1  F00B         	goto	u2510
  6206  0017BE                     u2511:
  6207  0017BE  EFE5  F00B         	goto	l861
  6208  0017C2                     u2510:
  6209  0017C2                     l2752:
  6210  0017C2  0E01               	movlw	1
  6211  0017C4  6E42               	movwf	___fladd@aexp^0,c
  6212  0017C6  EFEE  F00B         	goto	l860
  6213  0017CA                     l861:
  6214  0017CA  A035               	btfss	___fladd@b^0,0,c
  6215  0017CC  EFEA  F00B         	goto	u2521
  6216  0017D0  EFEC  F00B         	goto	u2520
  6217  0017D4                     u2521:
  6218  0017D4  EFEE  F00B         	goto	l860
  6219  0017D8                     u2520:
  6220  0017D8  EFE1  F00B         	goto	l2752
  6221  0017DC                     l860:
  6222  0017DC  5042               	movf	___fladd@aexp^0,w,c
  6223  0017DE  B4D8               	btfsc	status,2,c
  6224  0017E0  EFF4  F00B         	goto	u2531
  6225  0017E4  EFF6  F00B         	goto	u2530
  6226  0017E8                     u2531:
  6227  0017E8  EF21  F00C         	goto	l2764
  6228  0017EC                     u2530:
  6229  0017EC  0E01               	movlw	1
  6230  0017EE  2635               	addwf	___fladd@b^0,f,c
  6231  0017F0  0E00               	movlw	0
  6232  0017F2  2236               	addwfc	(___fladd@b+1)^0,f,c
  6233  0017F4  2237               	addwfc	(___fladd@b+2)^0,f,c
  6234  0017F6  2238               	addwfc	(___fladd@b+3)^0,f,c
  6235  0017F8  A038               	btfss	(___fladd@b+3)^0,0,c
  6236  0017FA  EF01  F00C         	goto	u2541
  6237  0017FE  EF03  F00C         	goto	u2540
  6238  001802                     u2541:
  6239  001802  EF21  F00C         	goto	l2764
  6240  001806                     u2540:
  6241  001806  C035  F03D         	movff	___fladd@b,??___fladd
  6242  00180A  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  6243  00180E  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  6244  001812  C038  F040         	movff	___fladd@b+3,??___fladd+3
  6245  001816  3440               	rlcf	(??___fladd+3)^0,w,c
  6246  001818  3240               	rrcf	(??___fladd+3)^0,f,c
  6247  00181A  323F               	rrcf	(??___fladd+2)^0,f,c
  6248  00181C  323E               	rrcf	(??___fladd+1)^0,f,c
  6249  00181E  323D               	rrcf	??___fladd^0,f,c
  6250  001820  C03D  F035         	movff	??___fladd,___fladd@b
  6251  001824  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  6252  001828  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  6253  00182C  C040  F038         	movff	??___fladd+3,___fladd@b+3
  6254  001830  2843               	incf	___fladd@bexp^0,w,c
  6255  001832  B4D8               	btfsc	status,2,c
  6256  001834  EF1E  F00C         	goto	u2551
  6257  001838  EF20  F00C         	goto	u2550
  6258  00183C                     u2551:
  6259  00183C  EF21  F00C         	goto	l2764
  6260  001840                     u2550:
  6261  001840  2A43               	incf	___fladd@bexp^0,f,c
  6262  001842                     l2764:
  6263  001842  2843               	incf	___fladd@bexp^0,w,c
  6264  001844  B4D8               	btfsc	status,2,c
  6265  001846  EF27  F00C         	goto	u2561
  6266  00184A  EF29  F00C         	goto	u2560
  6267  00184E                     u2561:
  6268  00184E  EF31  F00C         	goto	l2768
  6269  001852                     u2560:
  6270  001852  5043               	movf	___fladd@bexp^0,w,c
  6271  001854  A4D8               	btfss	status,2,c
  6272  001856  EF2F  F00C         	goto	u2571
  6273  00185A  EF31  F00C         	goto	u2570
  6274  00185E                     u2571:
  6275  00185E  EF43  F00C         	goto	l2772
  6276  001862                     u2570:
  6277  001862                     l2768:
  6278  001862  0E00               	movlw	0
  6279  001864  6E35               	movwf	___fladd@b^0,c
  6280  001866  0E00               	movlw	0
  6281  001868  6E36               	movwf	(___fladd@b+1)^0,c
  6282  00186A  0E00               	movlw	0
  6283  00186C  6E37               	movwf	(___fladd@b+2)^0,c
  6284  00186E  0E00               	movlw	0
  6285  001870  6E38               	movwf	(___fladd@b+3)^0,c
  6286  001872  5043               	movf	___fladd@bexp^0,w,c
  6287  001874  A4D8               	btfss	status,2,c
  6288  001876  EF3F  F00C         	goto	u2581
  6289  00187A  EF41  F00C         	goto	u2580
  6290  00187E                     u2581:
  6291  00187E  EF43  F00C         	goto	l2772
  6292  001882                     u2580:
  6293  001882  0E00               	movlw	0
  6294  001884  6E41               	movwf	___fladd@signs^0,c
  6295  001886                     l2772:
  6296  001886  A043               	btfss	___fladd@bexp^0,0,c
  6297  001888  EF48  F00C         	goto	u2591
  6298  00188C  EF4A  F00C         	goto	u2590
  6299  001890                     u2591:
  6300  001890  EF4D  F00C         	goto	l2776
  6301  001894                     u2590:
  6302  001894  8E37               	bsf	(___fladd@b+2)^0,7,c
  6303  001896  EF4E  F00C         	goto	l2778
  6304  00189A                     l2776:
  6305  00189A  9E37               	bcf	(___fladd@b+2)^0,7,c
  6306  00189C                     l2778:
  6307  00189C  90D8               	bcf	status,0,c
  6308  00189E  3043               	rrcf	___fladd@bexp^0,w,c
  6309  0018A0  6E38               	movwf	(___fladd@b+3)^0,c
  6310  0018A2  AE41               	btfss	___fladd@signs^0,7,c
  6311  0018A4  EF56  F00C         	goto	u2601
  6312  0018A8  EF58  F00C         	goto	u2600
  6313  0018AC                     u2601:
  6314  0018AC  EF59  F00C         	goto	l2784
  6315  0018B0                     u2600:
  6316  0018B0  8E38               	bsf	(___fladd@b+3)^0,7,c
  6317  0018B2                     l2784:
  6318  0018B2  C035  F035         	movff	___fladd@b,?___fladd
  6319  0018B6  C036  F036         	movff	___fladd@b+1,?___fladd+1
  6320  0018BA  C037  F037         	movff	___fladd@b+2,?___fladd+2
  6321  0018BE  C038  F038         	movff	___fladd@b+3,?___fladd+3
  6322  0018C2                     l843:
  6323  0018C2  0012               	return		;funcret
  6324  0018C4                     __end_of___fladd:
  6325                           	callstack 0
  6326                           
  6327 ;; *************** function ___flneg *****************
  6328 ;; Defined at:
  6329 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flneg.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;  f1              4    0[COMRAM] unsigned char 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;		None
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  4    0[COMRAM] unsigned char 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6343 ;;      Params:         4       0       0       0       0       0       0
  6344 ;;      Locals:         0       0       0       0       0       0       0
  6345 ;;      Temps:          0       0       0       0       0       0       0
  6346 ;;      Totals:         4       0       0       0       0       0       0
  6347 ;;Total ram usage:        4 bytes
  6348 ;; Hardware stack levels used: 1
  6349 ;; This function calls:
  6350 ;;		Nothing
  6351 ;; This function is called by:
  6352 ;;		_sprintf
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           	psect	text19
  6357  0037AA                     __ptext19:
  6358                           	callstack 0
  6359  0037AA                     ___flneg:
  6360                           	callstack 29
  6361  0037AA  5001               	movf	___flneg@f1^0,w,c
  6362  0037AC  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6363  0037AE  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6364  0037B0  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6365  0037B2  B4D8               	btfsc	status,2,c
  6366  0037B4  EFDE  F01B         	goto	u3341
  6367  0037B8  EFE0  F01B         	goto	u3340
  6368  0037BC                     u3341:
  6369  0037BC  EFE8  F01B         	goto	l3296
  6370  0037C0                     u3340:
  6371  0037C0  0E00               	movlw	0
  6372  0037C2  1A01               	xorwf	___flneg@f1^0,f,c
  6373  0037C4  0E00               	movlw	0
  6374  0037C6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6375  0037C8  0E00               	movlw	0
  6376  0037CA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6377  0037CC  0E80               	movlw	128
  6378  0037CE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6379  0037D0                     l3296:
  6380  0037D0  C001  F001         	movff	___flneg@f1,?___flneg
  6381  0037D4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6382  0037D8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6383  0037DC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6384  0037E0  0012               	return		;funcret
  6385  0037E2                     __end_of___flneg:
  6386                           	callstack 0
  6387                           
  6388 ;; *************** function ___flge *****************
  6389 ;; Defined at:
  6390 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\flge.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  ff1             4    0[COMRAM] unsigned char 
  6393 ;;  ff2             4    4[COMRAM] unsigned char 
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;		None
  6396 ;; Return value:  Size  Location     Type
  6397 ;;		None               void
  6398 ;; Registers used:
  6399 ;;		wreg, status,2, status,0
  6400 ;; Tracked objects:
  6401 ;;		On entry : 0/0
  6402 ;;		On exit  : 0/0
  6403 ;;		Unchanged: 0/0
  6404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6405 ;;      Params:         8       0       0       0       0       0       0
  6406 ;;      Locals:         0       0       0       0       0       0       0
  6407 ;;      Temps:          4       0       0       0       0       0       0
  6408 ;;      Totals:        12       0       0       0       0       0       0
  6409 ;;Total ram usage:       12 bytes
  6410 ;; Hardware stack levels used: 1
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		_sprintf
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text20
  6419  003138                     __ptext20:
  6420                           	callstack 0
  6421  003138                     ___flge:
  6422                           	callstack 29
  6423  003138  0E00               	movlw	0
  6424  00313A  1401               	andwf	___flge@ff1^0,w,c
  6425  00313C  6E09               	movwf	??___flge^0,c
  6426  00313E  0E00               	movlw	0
  6427  003140  1402               	andwf	(___flge@ff1+1)^0,w,c
  6428  003142  6E0A               	movwf	(??___flge+1)^0,c
  6429  003144  0E80               	movlw	128
  6430  003146  1403               	andwf	(___flge@ff1+2)^0,w,c
  6431  003148  6E0B               	movwf	(??___flge+2)^0,c
  6432  00314A  0E7F               	movlw	127
  6433  00314C  1404               	andwf	(___flge@ff1+3)^0,w,c
  6434  00314E  6E0C               	movwf	(??___flge+3)^0,c
  6435  003150  5009               	movf	??___flge^0,w,c
  6436  003152  100A               	iorwf	(??___flge+1)^0,w,c
  6437  003154  100B               	iorwf	(??___flge+2)^0,w,c
  6438  003156  100C               	iorwf	(??___flge+3)^0,w,c
  6439  003158  A4D8               	btfss	status,2,c
  6440  00315A  EFB1  F018         	goto	u3291
  6441  00315E  EFB3  F018         	goto	u3290
  6442  003162                     u3291:
  6443  003162  EFBB  F018         	goto	l3274
  6444  003166                     u3290:
  6445  003166  0E00               	movlw	0
  6446  003168  6E01               	movwf	___flge@ff1^0,c
  6447  00316A  0E00               	movlw	0
  6448  00316C  6E02               	movwf	(___flge@ff1+1)^0,c
  6449  00316E  0E00               	movlw	0
  6450  003170  6E03               	movwf	(___flge@ff1+2)^0,c
  6451  003172  0E00               	movlw	0
  6452  003174  6E04               	movwf	(___flge@ff1+3)^0,c
  6453  003176                     l3274:
  6454  003176  0E00               	movlw	0
  6455  003178  1405               	andwf	___flge@ff2^0,w,c
  6456  00317A  6E09               	movwf	??___flge^0,c
  6457  00317C  0E00               	movlw	0
  6458  00317E  1406               	andwf	(___flge@ff2+1)^0,w,c
  6459  003180  6E0A               	movwf	(??___flge+1)^0,c
  6460  003182  0E80               	movlw	128
  6461  003184  1407               	andwf	(___flge@ff2+2)^0,w,c
  6462  003186  6E0B               	movwf	(??___flge+2)^0,c
  6463  003188  0E7F               	movlw	127
  6464  00318A  1408               	andwf	(___flge@ff2+3)^0,w,c
  6465  00318C  6E0C               	movwf	(??___flge+3)^0,c
  6466  00318E  5009               	movf	??___flge^0,w,c
  6467  003190  100A               	iorwf	(??___flge+1)^0,w,c
  6468  003192  100B               	iorwf	(??___flge+2)^0,w,c
  6469  003194  100C               	iorwf	(??___flge+3)^0,w,c
  6470  003196  A4D8               	btfss	status,2,c
  6471  003198  EFD0  F018         	goto	u3301
  6472  00319C  EFD2  F018         	goto	u3300
  6473  0031A0                     u3301:
  6474  0031A0  EFDA  F018         	goto	l3278
  6475  0031A4                     u3300:
  6476  0031A4  0E00               	movlw	0
  6477  0031A6  6E05               	movwf	___flge@ff2^0,c
  6478  0031A8  0E00               	movlw	0
  6479  0031AA  6E06               	movwf	(___flge@ff2+1)^0,c
  6480  0031AC  0E00               	movlw	0
  6481  0031AE  6E07               	movwf	(___flge@ff2+2)^0,c
  6482  0031B0  0E00               	movlw	0
  6483  0031B2  6E08               	movwf	(___flge@ff2+3)^0,c
  6484  0031B4                     l3278:
  6485  0031B4  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6486  0031B6  EFDF  F018         	goto	u3311
  6487  0031BA  EFE1  F018         	goto	u3310
  6488  0031BE                     u3311:
  6489  0031BE  EFEA  F018         	goto	l3282
  6490  0031C2                     u3310:
  6491  0031C2  6C01               	negf	___flge@ff1^0,c
  6492  0031C4  1E02               	comf	(___flge@ff1+1)^0,f,c
  6493  0031C6  B0D8               	btfsc	status,0,c
  6494  0031C8  2A02               	incf	(___flge@ff1+1)^0,f,c
  6495  0031CA  1E03               	comf	(___flge@ff1+2)^0,f,c
  6496  0031CC  B0D8               	btfsc	status,0,c
  6497  0031CE  2A03               	incf	(___flge@ff1+2)^0,f,c
  6498  0031D0  0E80               	movlw	128
  6499  0031D2  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6500  0031D4                     l3282:
  6501  0031D4  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6502  0031D6  EFEF  F018         	goto	u3321
  6503  0031DA  EFF1  F018         	goto	u3320
  6504  0031DE                     u3321:
  6505  0031DE  EFFA  F018         	goto	l562
  6506  0031E2                     u3320:
  6507  0031E2  6C05               	negf	___flge@ff2^0,c
  6508  0031E4  1E06               	comf	(___flge@ff2+1)^0,f,c
  6509  0031E6  B0D8               	btfsc	status,0,c
  6510  0031E8  2A06               	incf	(___flge@ff2+1)^0,f,c
  6511  0031EA  1E07               	comf	(___flge@ff2+2)^0,f,c
  6512  0031EC  B0D8               	btfsc	status,0,c
  6513  0031EE  2A07               	incf	(___flge@ff2+2)^0,f,c
  6514  0031F0  0E80               	movlw	128
  6515  0031F2  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6516  0031F4                     l562:
  6517  0031F4  0E00               	movlw	0
  6518  0031F6  1A01               	xorwf	___flge@ff1^0,f,c
  6519  0031F8  0E00               	movlw	0
  6520  0031FA  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6521  0031FC  0E00               	movlw	0
  6522  0031FE  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6523  003200  0E80               	movlw	128
  6524  003202  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6525  003204  0E00               	movlw	0
  6526  003206  1A05               	xorwf	___flge@ff2^0,f,c
  6527  003208  0E00               	movlw	0
  6528  00320A  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6529  00320C  0E00               	movlw	0
  6530  00320E  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6531  003210  0E80               	movlw	128
  6532  003212  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6533  003214  5005               	movf	___flge@ff2^0,w,c
  6534  003216  5C01               	subwf	___flge@ff1^0,w,c
  6535  003218  5006               	movf	(___flge@ff2+1)^0,w,c
  6536  00321A  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6537  00321C  5007               	movf	(___flge@ff2+2)^0,w,c
  6538  00321E  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6539  003220  5008               	movf	(___flge@ff2+3)^0,w,c
  6540  003222  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6541  003224  B0D8               	btfsc	status,0,c
  6542  003226  EF17  F019         	goto	u3331
  6543  00322A  EF19  F019         	goto	u3330
  6544  00322E                     u3331:
  6545  00322E  EF1C  F019         	goto	l3288
  6546  003232                     u3330:
  6547  003232  90D8               	bcf	status,0,c
  6548  003234  EF1D  F019         	goto	l563
  6549  003238                     l3288:
  6550  003238  80D8               	bsf	status,0,c
  6551  00323A                     l563:
  6552  00323A  0012               	return		;funcret
  6553  00323C                     __end_of___flge:
  6554                           	callstack 0
  6555                           
  6556 ;; *************** function ___fleq *****************
  6557 ;; Defined at:
  6558 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\fleq.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  ff1             4    0[COMRAM] unsigned char 
  6561 ;;  ff2             4    4[COMRAM] unsigned char 
  6562 ;; Auto vars:     Size  Location     Type
  6563 ;;		None
  6564 ;; Return value:  Size  Location     Type
  6565 ;;		None               void
  6566 ;; Registers used:
  6567 ;;		wreg, status,2, status,0
  6568 ;; Tracked objects:
  6569 ;;		On entry : 0/0
  6570 ;;		On exit  : 0/0
  6571 ;;		Unchanged: 0/0
  6572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6573 ;;      Params:         8       0       0       0       0       0       0
  6574 ;;      Locals:         0       0       0       0       0       0       0
  6575 ;;      Temps:          4       0       0       0       0       0       0
  6576 ;;      Totals:        12       0       0       0       0       0       0
  6577 ;;Total ram usage:       12 bytes
  6578 ;; Hardware stack levels used: 1
  6579 ;; This function calls:
  6580 ;;		Nothing
  6581 ;; This function is called by:
  6582 ;;		_sprintf
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text21
  6587  0033B0                     __ptext21:
  6588                           	callstack 0
  6589  0033B0                     ___fleq:
  6590                           	callstack 29
  6591  0033B0  0E00               	movlw	0
  6592  0033B2  1401               	andwf	___fleq@ff1^0,w,c
  6593  0033B4  6E09               	movwf	??___fleq^0,c
  6594  0033B6  0E00               	movlw	0
  6595  0033B8  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6596  0033BA  6E0A               	movwf	(??___fleq+1)^0,c
  6597  0033BC  0E80               	movlw	128
  6598  0033BE  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6599  0033C0  6E0B               	movwf	(??___fleq+2)^0,c
  6600  0033C2  0E7F               	movlw	127
  6601  0033C4  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6602  0033C6  6E0C               	movwf	(??___fleq+3)^0,c
  6603  0033C8  5009               	movf	??___fleq^0,w,c
  6604  0033CA  100A               	iorwf	(??___fleq+1)^0,w,c
  6605  0033CC  100B               	iorwf	(??___fleq+2)^0,w,c
  6606  0033CE  100C               	iorwf	(??___fleq+3)^0,w,c
  6607  0033D0  A4D8               	btfss	status,2,c
  6608  0033D2  EFED  F019         	goto	u3261
  6609  0033D6  EFEF  F019         	goto	u3260
  6610  0033DA                     u3261:
  6611  0033DA  EFF7  F019         	goto	l3258
  6612  0033DE                     u3260:
  6613  0033DE  0E00               	movlw	0
  6614  0033E0  6E01               	movwf	___fleq@ff1^0,c
  6615  0033E2  0E00               	movlw	0
  6616  0033E4  6E02               	movwf	(___fleq@ff1+1)^0,c
  6617  0033E6  0E00               	movlw	0
  6618  0033E8  6E03               	movwf	(___fleq@ff1+2)^0,c
  6619  0033EA  0E00               	movlw	0
  6620  0033EC  6E04               	movwf	(___fleq@ff1+3)^0,c
  6621  0033EE                     l3258:
  6622  0033EE  0E00               	movlw	0
  6623  0033F0  1405               	andwf	___fleq@ff2^0,w,c
  6624  0033F2  6E09               	movwf	??___fleq^0,c
  6625  0033F4  0E00               	movlw	0
  6626  0033F6  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6627  0033F8  6E0A               	movwf	(??___fleq+1)^0,c
  6628  0033FA  0E80               	movlw	128
  6629  0033FC  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6630  0033FE  6E0B               	movwf	(??___fleq+2)^0,c
  6631  003400  0E7F               	movlw	127
  6632  003402  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6633  003404  6E0C               	movwf	(??___fleq+3)^0,c
  6634  003406  5009               	movf	??___fleq^0,w,c
  6635  003408  100A               	iorwf	(??___fleq+1)^0,w,c
  6636  00340A  100B               	iorwf	(??___fleq+2)^0,w,c
  6637  00340C  100C               	iorwf	(??___fleq+3)^0,w,c
  6638  00340E  A4D8               	btfss	status,2,c
  6639  003410  EF0C  F01A         	goto	u3271
  6640  003414  EF0E  F01A         	goto	u3270
  6641  003418                     u3271:
  6642  003418  EF16  F01A         	goto	l3262
  6643  00341C                     u3270:
  6644  00341C  0E00               	movlw	0
  6645  00341E  6E05               	movwf	___fleq@ff2^0,c
  6646  003420  0E00               	movlw	0
  6647  003422  6E06               	movwf	(___fleq@ff2+1)^0,c
  6648  003424  0E00               	movlw	0
  6649  003426  6E07               	movwf	(___fleq@ff2+2)^0,c
  6650  003428  0E00               	movlw	0
  6651  00342A  6E08               	movwf	(___fleq@ff2+3)^0,c
  6652  00342C                     l3262:
  6653  00342C  5005               	movf	___fleq@ff2^0,w,c
  6654  00342E  1801               	xorwf	___fleq@ff1^0,w,c
  6655  003430  E10F               	bnz	u3280
  6656  003432  5006               	movf	(___fleq@ff2+1)^0,w,c
  6657  003434  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6658  003436  E10C               	bnz	u3280
  6659  003438  5007               	movf	(___fleq@ff2+2)^0,w,c
  6660  00343A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6661  00343C  E109               	bnz	u3280
  6662  00343E  5008               	movf	(___fleq@ff2+3)^0,w,c
  6663  003440  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6664  003442  B4D8               	btfsc	status,2,c
  6665  003444  EF26  F01A         	goto	u3281
  6666  003448  EF28  F01A         	goto	u3280
  6667  00344C                     u3281:
  6668  00344C  EF2B  F01A         	goto	l3266
  6669  003450                     u3280:
  6670  003450  90D8               	bcf	status,0,c
  6671  003452  EF2C  F01A         	goto	l556
  6672  003456                     l3266:
  6673  003456  80D8               	bsf	status,0,c
  6674  003458                     l556:
  6675  003458  0012               	return		;funcret
  6676  00345A                     __end_of___fleq:
  6677                           	callstack 0
  6678                           
  6679 ;; *************** function _adc_init *****************
  6680 ;; Defined at:
  6681 ;;		line 30 in file "adc.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, status,2
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6695 ;;      Params:         0       0       0       0       0       0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used: 1
  6701 ;; This function calls:
  6702 ;;		Nothing
  6703 ;; This function is called by:
  6704 ;;		_main
  6705 ;; This function uses a non-reentrant model
  6706 ;;
  6707                           
  6708                           	psect	text22
  6709  00385C                     __ptext22:
  6710                           	callstack 0
  6711  00385C                     _adc_init:
  6712                           	callstack 30
  6713  00385C                     
  6714                           ;adc.c: 36: ADCON0=0x01;
  6715  00385C  0E01               	movlw	1
  6716  00385E  6EC2               	movwf	194,c	;volatile
  6717                           
  6718                           ;adc.c: 37: ADCON1=0x0B;
  6719  003860  0E0B               	movlw	11
  6720  003862  6EC1               	movwf	193,c	;volatile
  6721                           
  6722                           ;adc.c: 38: ADCON2=0x01;
  6723  003864  0E01               	movlw	1
  6724  003866  6EC0               	movwf	192,c	;volatile
  6725  003868  0012               	return		;funcret
  6726  00386A                     __end_of_adc_init:
  6727                           	callstack 0
  6728                           
  6729 ;; *************** function _adc_amostra *****************
  6730 ;; Defined at:
  6731 ;;		line 44 in file "adc.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  canal           1    wreg     unsigned char 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  canal           1    6[COMRAM] unsigned char 
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  2    0[COMRAM] unsigned int 
  6738 ;; Registers used:
  6739 ;;		wreg, status,2, status,0
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6745 ;;      Params:         2       0       0       0       0       0       0
  6746 ;;      Locals:         1       0       0       0       0       0       0
  6747 ;;      Temps:          4       0       0       0       0       0       0
  6748 ;;      Totals:         7       0       0       0       0       0       0
  6749 ;;Total ram usage:        7 bytes
  6750 ;; Hardware stack levels used: 1
  6751 ;; This function calls:
  6752 ;;		Nothing
  6753 ;; This function is called by:
  6754 ;;		_main
  6755 ;; This function uses a non-reentrant model
  6756 ;;
  6757                           
  6758                           	psect	text23
  6759  003610                     __ptext23:
  6760                           	callstack 0
  6761  003610                     _adc_amostra:
  6762                           	callstack 30
  6763                           
  6764                           ;incstack = 0
  6765                           ;adc_amostra@canal stored from wreg
  6766  003610  6E07               	movwf	adc_amostra@canal^0,c
  6767  003612                     
  6768                           ;adc.c: 62: switch(canal)
  6769  003612  EF17  F01B         	goto	l3438
  6770  003616                     l3430:
  6771                           
  6772                           ;adc.c: 65: ADCON0=0x01;
  6773  003616  0E01               	movlw	1
  6774  003618  6EC2               	movwf	194,c	;volatile
  6775                           
  6776                           ;adc.c: 66: break;
  6777  00361A  EF26  F01B         	goto	l135
  6778  00361E                     l3432:
  6779                           
  6780                           ;adc.c: 68: ADCON0=0x09;
  6781  00361E  0E09               	movlw	9
  6782  003620  6EC2               	movwf	194,c	;volatile
  6783                           
  6784                           ;adc.c: 69: break;
  6785  003622  EF26  F01B         	goto	l135
  6786  003626                     l3434:
  6787                           
  6788                           ;adc.c: 71: ADCON0=0x11;
  6789  003626  0E11               	movlw	17
  6790  003628  6EC2               	movwf	194,c	;volatile
  6791                           
  6792                           ;adc.c: 72: break;
  6793  00362A  EF26  F01B         	goto	l135
  6794  00362E                     l3438:
  6795  00362E  5007               	movf	adc_amostra@canal^0,w,c
  6796                           
  6797                           ; Switch size 1, requested type "simple"
  6798                           ; Number of cases is 3, Range of values is 0 to 2
  6799                           ; switch strategies available:
  6800                           ; Name         Instructions Cycles
  6801                           ; simple_byte           10     6 (average)
  6802                           ;	Chosen strategy is simple_byte
  6803  003630  0A00               	xorlw	0	; case 0
  6804  003632  B4D8               	btfsc	status,2,c
  6805  003634  EF0B  F01B         	goto	l3430
  6806  003638  0A01               	xorlw	1	; case 1
  6807  00363A  B4D8               	btfsc	status,2,c
  6808  00363C  EF0F  F01B         	goto	l3432
  6809  003640  0A03               	xorlw	3	; case 2
  6810  003642  B4D8               	btfsc	status,2,c
  6811  003644  EF13  F01B         	goto	l3434
  6812  003648  EF26  F01B         	goto	l135
  6813  00364C                     l135:
  6814                           
  6815                           ;adc.c: 77: ADCON0bits.GO=1;
  6816  00364C  82C2               	bsf	194,1,c	;volatile
  6817  00364E                     l138:
  6818  00364E  B2C2               	btfsc	194,1,c	;volatile
  6819  003650  EF2C  F01B         	goto	u3561
  6820  003654  EF2E  F01B         	goto	u3560
  6821  003658                     u3561:
  6822  003658  EF27  F01B         	goto	l138
  6823  00365C                     u3560:
  6824  00365C                     
  6825                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  6826  00365C  CFC3 F003          	movff	4035,??_adc_amostra	;volatile
  6827  003660  0E06               	movlw	6
  6828  003662  6E04               	movwf	(??_adc_amostra+1)^0,c
  6829  003664                     u3575:
  6830  003664  90D8               	bcf	status,0,c
  6831  003666  3203               	rrcf	??_adc_amostra^0,f,c
  6832  003668  2E04               	decfsz	(??_adc_amostra+1)^0,f,c
  6833  00366A  EF32  F01B         	goto	u3575
  6834  00366E  5003               	movf	??_adc_amostra^0,w,c
  6835  003670  CFC4 F005          	movff	4036,??_adc_amostra+2	;volatile
  6836  003674  6A06               	clrf	(??_adc_amostra+3)^0,c
  6837  003676  90D8               	bcf	status,0,c
  6838  003678  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  6839  00367A  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  6840  00367C  90D8               	bcf	status,0,c
  6841  00367E  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  6842  003680  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  6843  003682  1005               	iorwf	(??_adc_amostra+2)^0,w,c
  6844  003684  6E01               	movwf	?_adc_amostra^0,c
  6845  003686  5006               	movf	(??_adc_amostra+3)^0,w,c
  6846  003688  6E02               	movwf	(?_adc_amostra+1)^0,c
  6847  00368A  0012               	return		;funcret
  6848  00368C                     __end_of_adc_amostra:
  6849                           	callstack 0
  6850                           
  6851 ;; *************** function ___fldiv *****************
  6852 ;; Defined at:
  6853 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\sprcdiv.c"
  6854 ;; Parameters:    Size  Location     Type
  6855 ;;  b               4   39[COMRAM] unsigned int 
  6856 ;;  a               4   43[COMRAM] unsigned int 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  grs             4   58[COMRAM] unsigned long 
  6859 ;;  rem             4   51[COMRAM] unsigned long 
  6860 ;;  new_exp         2   56[COMRAM] int 
  6861 ;;  aexp            1   63[COMRAM] unsigned char 
  6862 ;;  bexp            1   62[COMRAM] unsigned char 
  6863 ;;  sign            1   55[COMRAM] unsigned char 
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  4   39[COMRAM] unsigned char 
  6866 ;; Registers used:
  6867 ;;		wreg, status,2, status,0
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6873 ;;      Params:         8       0       0       0       0       0       0
  6874 ;;      Locals:        13       0       0       0       0       0       0
  6875 ;;      Temps:          4       0       0       0       0       0       0
  6876 ;;      Totals:        25       0       0       0       0       0       0
  6877 ;;Total ram usage:       25 bytes
  6878 ;; Hardware stack levels used: 1
  6879 ;; This function calls:
  6880 ;;		Nothing
  6881 ;; This function is called by:
  6882 ;;		_main
  6883 ;; This function uses a non-reentrant model
  6884 ;;
  6885                           
  6886                           	psect	text24
  6887  0020FA                     __ptext24:
  6888                           	callstack 0
  6889  0020FA                     ___fldiv:
  6890                           	callstack 30
  6891  0020FA  502B               	movf	(___fldiv@b+3)^0,w,c
  6892  0020FC  0B80               	andlw	128
  6893  0020FE  6E38               	movwf	___fldiv@sign^0,c
  6894  002100  502B               	movf	(___fldiv@b+3)^0,w,c
  6895  002102  242B               	addwf	(___fldiv@b+3)^0,w,c
  6896  002104  6E3F               	movwf	___fldiv@bexp^0,c
  6897  002106  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6898  002108  EF88  F010         	goto	u4121
  6899  00210C  EF8A  F010         	goto	u4120
  6900  002110                     u4121:
  6901  002110  EF8B  F010         	goto	l3784
  6902  002114                     u4120:
  6903  002114  803F               	bsf	___fldiv@bexp^0,0,c
  6904  002116                     l3784:
  6905  002116  503F               	movf	___fldiv@bexp^0,w,c
  6906  002118  B4D8               	btfsc	status,2,c
  6907  00211A  EF91  F010         	goto	u4131
  6908  00211E  EF93  F010         	goto	u4130
  6909  002122                     u4131:
  6910  002122  EFA8  F010         	goto	l3794
  6911  002126                     u4130:
  6912  002126  283F               	incf	___fldiv@bexp^0,w,c
  6913  002128  A4D8               	btfss	status,2,c
  6914  00212A  EF99  F010         	goto	u4141
  6915  00212E  EF9B  F010         	goto	u4140
  6916  002132                     u4141:
  6917  002132  EFA3  F010         	goto	l3790
  6918  002136                     u4140:
  6919  002136  0E00               	movlw	0
  6920  002138  6E28               	movwf	___fldiv@b^0,c
  6921  00213A  0E00               	movlw	0
  6922  00213C  6E29               	movwf	(___fldiv@b+1)^0,c
  6923  00213E  0E00               	movlw	0
  6924  002140  6E2A               	movwf	(___fldiv@b+2)^0,c
  6925  002142  0E00               	movlw	0
  6926  002144  6E2B               	movwf	(___fldiv@b+3)^0,c
  6927  002146                     l3790:
  6928  002146  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6929  002148  0E00               	movlw	0
  6930  00214A  6E2B               	movwf	(___fldiv@b+3)^0,c
  6931  00214C  EFB0  F010         	goto	l3796
  6932  002150                     l3794:
  6933  002150  0E00               	movlw	0
  6934  002152  6E28               	movwf	___fldiv@b^0,c
  6935  002154  0E00               	movlw	0
  6936  002156  6E29               	movwf	(___fldiv@b+1)^0,c
  6937  002158  0E00               	movlw	0
  6938  00215A  6E2A               	movwf	(___fldiv@b+2)^0,c
  6939  00215C  0E00               	movlw	0
  6940  00215E  6E2B               	movwf	(___fldiv@b+3)^0,c
  6941  002160                     l3796:
  6942  002160  502F               	movf	(___fldiv@a+3)^0,w,c
  6943  002162  0B80               	andlw	128
  6944  002164  1A38               	xorwf	___fldiv@sign^0,f,c
  6945  002166  502F               	movf	(___fldiv@a+3)^0,w,c
  6946  002168  242F               	addwf	(___fldiv@a+3)^0,w,c
  6947  00216A  6E40               	movwf	___fldiv@aexp^0,c
  6948  00216C  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6949  00216E  EFBB  F010         	goto	u4151
  6950  002172  EFBD  F010         	goto	u4150
  6951  002176                     u4151:
  6952  002176  EFBE  F010         	goto	l3804
  6953  00217A                     u4150:
  6954  00217A  8040               	bsf	___fldiv@aexp^0,0,c
  6955  00217C                     l3804:
  6956  00217C  5040               	movf	___fldiv@aexp^0,w,c
  6957  00217E  B4D8               	btfsc	status,2,c
  6958  002180  EFC4  F010         	goto	u4161
  6959  002184  EFC6  F010         	goto	u4160
  6960  002188                     u4161:
  6961  002188  EFDB  F010         	goto	l3814
  6962  00218C                     u4160:
  6963  00218C  2840               	incf	___fldiv@aexp^0,w,c
  6964  00218E  A4D8               	btfss	status,2,c
  6965  002190  EFCC  F010         	goto	u4171
  6966  002194  EFCE  F010         	goto	u4170
  6967  002198                     u4171:
  6968  002198  EFD6  F010         	goto	l3810
  6969  00219C                     u4170:
  6970  00219C  0E00               	movlw	0
  6971  00219E  6E2C               	movwf	___fldiv@a^0,c
  6972  0021A0  0E00               	movlw	0
  6973  0021A2  6E2D               	movwf	(___fldiv@a+1)^0,c
  6974  0021A4  0E00               	movlw	0
  6975  0021A6  6E2E               	movwf	(___fldiv@a+2)^0,c
  6976  0021A8  0E00               	movlw	0
  6977  0021AA  6E2F               	movwf	(___fldiv@a+3)^0,c
  6978  0021AC                     l3810:
  6979  0021AC  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6980  0021AE  0E00               	movlw	0
  6981  0021B0  6E2F               	movwf	(___fldiv@a+3)^0,c
  6982  0021B2  EFE3  F010         	goto	l3816
  6983  0021B6                     l3814:
  6984  0021B6  0E00               	movlw	0
  6985  0021B8  6E2C               	movwf	___fldiv@a^0,c
  6986  0021BA  0E00               	movlw	0
  6987  0021BC  6E2D               	movwf	(___fldiv@a+1)^0,c
  6988  0021BE  0E00               	movlw	0
  6989  0021C0  6E2E               	movwf	(___fldiv@a+2)^0,c
  6990  0021C2  0E00               	movlw	0
  6991  0021C4  6E2F               	movwf	(___fldiv@a+3)^0,c
  6992  0021C6                     l3816:
  6993  0021C6  502C               	movf	___fldiv@a^0,w,c
  6994  0021C8  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6995  0021CA  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6996  0021CC  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6997  0021CE  A4D8               	btfss	status,2,c
  6998  0021D0  EFEC  F010         	goto	u4181
  6999  0021D4  EFEE  F010         	goto	u4180
  7000  0021D8                     u4181:
  7001  0021D8  EF06  F011         	goto	l3828
  7002  0021DC                     u4180:
  7003  0021DC  0E00               	movlw	0
  7004  0021DE  6E28               	movwf	___fldiv@b^0,c
  7005  0021E0  0E00               	movlw	0
  7006  0021E2  6E29               	movwf	(___fldiv@b+1)^0,c
  7007  0021E4  0E00               	movlw	0
  7008  0021E6  6E2A               	movwf	(___fldiv@b+2)^0,c
  7009  0021E8  0E00               	movlw	0
  7010  0021EA  6E2B               	movwf	(___fldiv@b+3)^0,c
  7011  0021EC  0E80               	movlw	128
  7012  0021EE  122A               	iorwf	(___fldiv@b+2)^0,f,c
  7013  0021F0  0E7F               	movlw	127
  7014  0021F2  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7015  0021F4                     l3822:
  7016  0021F4  5038               	movf	___fldiv@sign^0,w,c
  7017  0021F6  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7018  0021F8  C028  F028         	movff	___fldiv@b,?___fldiv
  7019  0021FC  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7020  002200  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7021  002204  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7022  002208  EF49  F012         	goto	l888
  7023  00220C                     l3828:
  7024  00220C  503F               	movf	___fldiv@bexp^0,w,c
  7025  00220E  A4D8               	btfss	status,2,c
  7026  002210  EF0C  F011         	goto	u4191
  7027  002214  EF0E  F011         	goto	u4190
  7028  002218                     u4191:
  7029  002218  EF18  F011         	goto	l3836
  7030  00221C                     u4190:
  7031  00221C  0E00               	movlw	0
  7032  00221E  6E28               	movwf	?___fldiv^0,c
  7033  002220  0E00               	movlw	0
  7034  002222  6E29               	movwf	(?___fldiv+1)^0,c
  7035  002224  0E00               	movlw	0
  7036  002226  6E2A               	movwf	(?___fldiv+2)^0,c
  7037  002228  0E00               	movlw	0
  7038  00222A  6E2B               	movwf	(?___fldiv+3)^0,c
  7039  00222C  EF49  F012         	goto	l888
  7040  002230                     l3836:
  7041  002230  5040               	movf	___fldiv@aexp^0,w,c
  7042  002232  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7043  002236  6A31               	clrf	(??___fldiv+1)^0,c
  7044  002238  5E30               	subwf	??___fldiv^0,f,c
  7045  00223A  0E00               	movlw	0
  7046  00223C  5A31               	subwfb	(??___fldiv+1)^0,f,c
  7047  00223E  0E7F               	movlw	127
  7048  002240  2430               	addwf	??___fldiv^0,w,c
  7049  002242  6E39               	movwf	___fldiv@new_exp^0,c
  7050  002244  0E00               	movlw	0
  7051  002246  2031               	addwfc	(??___fldiv+1)^0,w,c
  7052  002248  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7053  00224A  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7054  00224E  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7055  002252  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7056  002256  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7057  00225A  0E00               	movlw	0
  7058  00225C  6E28               	movwf	___fldiv@b^0,c
  7059  00225E  0E00               	movlw	0
  7060  002260  6E29               	movwf	(___fldiv@b+1)^0,c
  7061  002262  0E00               	movlw	0
  7062  002264  6E2A               	movwf	(___fldiv@b+2)^0,c
  7063  002266  0E00               	movlw	0
  7064  002268  6E2B               	movwf	(___fldiv@b+3)^0,c
  7065  00226A  0E00               	movlw	0
  7066  00226C  6E3B               	movwf	___fldiv@grs^0,c
  7067  00226E  0E00               	movlw	0
  7068  002270  6E3C               	movwf	(___fldiv@grs+1)^0,c
  7069  002272  0E00               	movlw	0
  7070  002274  6E3D               	movwf	(___fldiv@grs+2)^0,c
  7071  002276  0E00               	movlw	0
  7072  002278  6E3E               	movwf	(___fldiv@grs+3)^0,c
  7073  00227A  0E00               	movlw	0
  7074  00227C  6E40               	movwf	___fldiv@aexp^0,c
  7075  00227E  EF79  F011         	goto	l890
  7076  002282                     l3846:
  7077  002282  5040               	movf	___fldiv@aexp^0,w,c
  7078  002284  B4D8               	btfsc	status,2,c
  7079  002286  EF47  F011         	goto	u4201
  7080  00228A  EF49  F011         	goto	u4200
  7081  00228E                     u4201:
  7082  00228E  EF60  F011         	goto	l3854
  7083  002292                     u4200:
  7084  002292  90D8               	bcf	status,0,c
  7085  002294  3634               	rlcf	___fldiv@rem^0,f,c
  7086  002296  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  7087  002298  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  7088  00229A  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  7089  00229C  90D8               	bcf	status,0,c
  7090  00229E  3628               	rlcf	___fldiv@b^0,f,c
  7091  0022A0  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7092  0022A2  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7093  0022A4  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7094  0022A6  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7095  0022A8  EF58  F011         	goto	u4211
  7096  0022AC  EF5A  F011         	goto	u4210
  7097  0022B0                     u4211:
  7098  0022B0  EF5B  F011         	goto	l893
  7099  0022B4                     u4210:
  7100  0022B4  8028               	bsf	___fldiv@b^0,0,c
  7101  0022B6                     l893:
  7102  0022B6  90D8               	bcf	status,0,c
  7103  0022B8  363B               	rlcf	___fldiv@grs^0,f,c
  7104  0022BA  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7105  0022BC  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7106  0022BE  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7107  0022C0                     l3854:
  7108  0022C0  502C               	movf	___fldiv@a^0,w,c
  7109  0022C2  5C34               	subwf	___fldiv@rem^0,w,c
  7110  0022C4  502D               	movf	(___fldiv@a+1)^0,w,c
  7111  0022C6  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  7112  0022C8  502E               	movf	(___fldiv@a+2)^0,w,c
  7113  0022CA  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  7114  0022CC  502F               	movf	(___fldiv@a+3)^0,w,c
  7115  0022CE  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  7116  0022D0  A0D8               	btfss	status,0,c
  7117  0022D2  EF6D  F011         	goto	u4221
  7118  0022D6  EF6F  F011         	goto	u4220
  7119  0022DA                     u4221:
  7120  0022DA  EF78  F011         	goto	l3860
  7121  0022DE                     u4220:
  7122  0022DE  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  7123  0022E0  502C               	movf	___fldiv@a^0,w,c
  7124  0022E2  5E34               	subwf	___fldiv@rem^0,f,c
  7125  0022E4  502D               	movf	(___fldiv@a+1)^0,w,c
  7126  0022E6  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  7127  0022E8  502E               	movf	(___fldiv@a+2)^0,w,c
  7128  0022EA  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  7129  0022EC  502F               	movf	(___fldiv@a+3)^0,w,c
  7130  0022EE  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  7131  0022F0                     l3860:
  7132  0022F0  2A40               	incf	___fldiv@aexp^0,f,c
  7133  0022F2                     l890:
  7134  0022F2  0E19               	movlw	25
  7135  0022F4  6440               	cpfsgt	___fldiv@aexp^0,c
  7136  0022F6  EF7F  F011         	goto	u4231
  7137  0022FA  EF81  F011         	goto	u4230
  7138  0022FE                     u4231:
  7139  0022FE  EF41  F011         	goto	l3846
  7140  002302                     u4230:
  7141  002302  5034               	movf	___fldiv@rem^0,w,c
  7142  002304  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7143  002306  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7144  002308  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7145  00230A  B4D8               	btfsc	status,2,c
  7146  00230C  EF8A  F011         	goto	u4241
  7147  002310  EF8C  F011         	goto	u4240
  7148  002314                     u4241:
  7149  002314  EFA4  F011         	goto	l3872
  7150  002318                     u4240:
  7151  002318  803B               	bsf	___fldiv@grs^0,0,c
  7152  00231A  EFA4  F011         	goto	l3872
  7153  00231E                     l3866:
  7154  00231E  90D8               	bcf	status,0,c
  7155  002320  3628               	rlcf	___fldiv@b^0,f,c
  7156  002322  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7157  002324  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7158  002326  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7159  002328  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7160  00232A  EF99  F011         	goto	u4251
  7161  00232E  EF9B  F011         	goto	u4250
  7162  002332                     u4251:
  7163  002332  EF9C  F011         	goto	l899
  7164  002336                     u4250:
  7165  002336  8028               	bsf	___fldiv@b^0,0,c
  7166  002338                     l899:
  7167  002338  90D8               	bcf	status,0,c
  7168  00233A  363B               	rlcf	___fldiv@grs^0,f,c
  7169  00233C  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7170  00233E  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7171  002340  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7172  002342  0639               	decf	___fldiv@new_exp^0,f,c
  7173  002344  A0D8               	btfss	status,0,c
  7174  002346  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7175  002348                     l3872:
  7176  002348  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7177  00234A  EFA9  F011         	goto	u4261
  7178  00234E  EFAB  F011         	goto	u4260
  7179  002352                     u4261:
  7180  002352  EF8F  F011         	goto	l3866
  7181  002356                     u4260:
  7182  002356  0E00               	movlw	0
  7183  002358  6E40               	movwf	___fldiv@aexp^0,c
  7184  00235A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7185  00235C  EFB2  F011         	goto	u4271
  7186  002360  EFB4  F011         	goto	u4270
  7187  002364                     u4271:
  7188  002364  EFD8  F011         	goto	l901
  7189  002368                     u4270:
  7190  002368  0EFF               	movlw	255
  7191  00236A  143B               	andwf	___fldiv@grs^0,w,c
  7192  00236C  6E30               	movwf	??___fldiv^0,c
  7193  00236E  0EFF               	movlw	255
  7194  002370  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7195  002372  6E31               	movwf	(??___fldiv+1)^0,c
  7196  002374  0EFF               	movlw	255
  7197  002376  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7198  002378  6E32               	movwf	(??___fldiv+2)^0,c
  7199  00237A  0E7F               	movlw	127
  7200  00237C  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7201  00237E  6E33               	movwf	(??___fldiv+3)^0,c
  7202  002380  5030               	movf	??___fldiv^0,w,c
  7203  002382  1031               	iorwf	(??___fldiv+1)^0,w,c
  7204  002384  1032               	iorwf	(??___fldiv+2)^0,w,c
  7205  002386  1033               	iorwf	(??___fldiv+3)^0,w,c
  7206  002388  B4D8               	btfsc	status,2,c
  7207  00238A  EFC9  F011         	goto	u4281
  7208  00238E  EFCB  F011         	goto	u4280
  7209  002392                     u4281:
  7210  002392  EFCF  F011         	goto	l902
  7211  002396                     u4280:
  7212  002396                     l3880:
  7213  002396  0E01               	movlw	1
  7214  002398  6E40               	movwf	___fldiv@aexp^0,c
  7215  00239A  EFD8  F011         	goto	l901
  7216  00239E                     l902:
  7217  00239E  A028               	btfss	___fldiv@b^0,0,c
  7218  0023A0  EFD4  F011         	goto	u4291
  7219  0023A4  EFD6  F011         	goto	u4290
  7220  0023A8                     u4291:
  7221  0023A8  EFD8  F011         	goto	l901
  7222  0023AC                     u4290:
  7223  0023AC  EFCB  F011         	goto	l3880
  7224  0023B0                     l901:
  7225  0023B0  5040               	movf	___fldiv@aexp^0,w,c
  7226  0023B2  B4D8               	btfsc	status,2,c
  7227  0023B4  EFDE  F011         	goto	u4301
  7228  0023B8  EFE0  F011         	goto	u4300
  7229  0023BC                     u4301:
  7230  0023BC  EF04  F012         	goto	l3892
  7231  0023C0                     u4300:
  7232  0023C0  0E01               	movlw	1
  7233  0023C2  2628               	addwf	___fldiv@b^0,f,c
  7234  0023C4  0E00               	movlw	0
  7235  0023C6  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7236  0023C8  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7237  0023CA  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7238  0023CC  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7239  0023CE  EFEB  F011         	goto	u4311
  7240  0023D2  EFED  F011         	goto	u4310
  7241  0023D6                     u4311:
  7242  0023D6  EF04  F012         	goto	l3892
  7243  0023DA                     u4310:
  7244  0023DA  C028  F030         	movff	___fldiv@b,??___fldiv
  7245  0023DE  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7246  0023E2  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7247  0023E6  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7248  0023EA  3433               	rlcf	(??___fldiv+3)^0,w,c
  7249  0023EC  3233               	rrcf	(??___fldiv+3)^0,f,c
  7250  0023EE  3232               	rrcf	(??___fldiv+2)^0,f,c
  7251  0023F0  3231               	rrcf	(??___fldiv+1)^0,f,c
  7252  0023F2  3230               	rrcf	??___fldiv^0,f,c
  7253  0023F4  C030  F028         	movff	??___fldiv,___fldiv@b
  7254  0023F8  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7255  0023FC  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7256  002400  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7257  002404  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7258  002406  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7259  002408                     l3892:
  7260  002408  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7261  00240A  EF0F  F012         	goto	u4321
  7262  00240E  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7263  002410  E108               	bnz	u4320
  7264  002412  2839               	incf	___fldiv@new_exp^0,w,c
  7265  002414  A0D8               	btfss	status,0,c
  7266  002416  EF0F  F012         	goto	u4321
  7267  00241A  EF11  F012         	goto	u4320
  7268  00241E                     u4321:
  7269  00241E  EF1C  F012         	goto	l3896
  7270  002422                     u4320:
  7271  002422  0E00               	movlw	0
  7272  002424  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7273  002426  6839               	setf	___fldiv@new_exp^0,c
  7274  002428  0E00               	movlw	0
  7275  00242A  6E28               	movwf	___fldiv@b^0,c
  7276  00242C  0E00               	movlw	0
  7277  00242E  6E29               	movwf	(___fldiv@b+1)^0,c
  7278  002430  0E00               	movlw	0
  7279  002432  6E2A               	movwf	(___fldiv@b+2)^0,c
  7280  002434  0E00               	movlw	0
  7281  002436  6E2B               	movwf	(___fldiv@b+3)^0,c
  7282  002438                     l3896:
  7283  002438  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7284  00243A  EF29  F012         	goto	u4330
  7285  00243E  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7286  002440  E106               	bnz	u4331
  7287  002442  0439               	decf	___fldiv@new_exp^0,w,c
  7288  002444  B0D8               	btfsc	status,0,c
  7289  002446  EF27  F012         	goto	u4331
  7290  00244A  EF29  F012         	goto	u4330
  7291  00244E                     u4331:
  7292  00244E  EF37  F012         	goto	l3900
  7293  002452                     u4330:
  7294  002452  0E00               	movlw	0
  7295  002454  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7296  002456  0E00               	movlw	0
  7297  002458  6E39               	movwf	___fldiv@new_exp^0,c
  7298  00245A  0E00               	movlw	0
  7299  00245C  6E28               	movwf	___fldiv@b^0,c
  7300  00245E  0E00               	movlw	0
  7301  002460  6E29               	movwf	(___fldiv@b+1)^0,c
  7302  002462  0E00               	movlw	0
  7303  002464  6E2A               	movwf	(___fldiv@b+2)^0,c
  7304  002466  0E00               	movlw	0
  7305  002468  6E2B               	movwf	(___fldiv@b+3)^0,c
  7306  00246A  0E00               	movlw	0
  7307  00246C  6E38               	movwf	___fldiv@sign^0,c
  7308  00246E                     l3900:
  7309  00246E  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7310  002472  A03F               	btfss	___fldiv@bexp^0,0,c
  7311  002474  EF3E  F012         	goto	u4341
  7312  002478  EF40  F012         	goto	u4340
  7313  00247C                     u4341:
  7314  00247C  EF43  F012         	goto	l3906
  7315  002480                     u4340:
  7316  002480  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7317  002482  EF44  F012         	goto	l3908
  7318  002486                     l3906:
  7319  002486  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7320  002488                     l3908:
  7321  002488  90D8               	bcf	status,0,c
  7322  00248A  303F               	rrcf	___fldiv@bexp^0,w,c
  7323  00248C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7324  00248E  EFFA  F010         	goto	l3822
  7325  002492                     l888:
  7326  002492  0012               	return		;funcret
  7327  002494                     __end_of___fldiv:
  7328                           	callstack 0
  7329                           
  7330 ;; *************** function _Lcd_Out *****************
  7331 ;; Defined at:
  7332 ;;		line 118 in file "flexlcd.h"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  y               1    wreg     unsigned char 
  7335 ;;  x               1    3[COMRAM] unsigned char 
  7336 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  7337 ;;		 -> str(4), 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;  y               1    6[COMRAM] unsigned char 
  7340 ;;  data            1    7[COMRAM] unsigned char 
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1    wreg      void 
  7343 ;; Registers used:
  7344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7350 ;;      Params:         3       0       0       0       0       0       0
  7351 ;;      Locals:         2       0       0       0       0       0       0
  7352 ;;      Temps:          0       0       0       0       0       0       0
  7353 ;;      Totals:         5       0       0       0       0       0       0
  7354 ;;Total ram usage:        5 bytes
  7355 ;; Hardware stack levels used: 1
  7356 ;; Hardware stack levels required when called: 1
  7357 ;; This function calls:
  7358 ;;		_Lcd_Chr_CP
  7359 ;;		_Lcd_Cmd
  7360 ;; This function is called by:
  7361 ;;		_main
  7362 ;; This function uses a non-reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text25
  7366  0034FE                     __ptext25:
  7367                           	callstack 0
  7368  0034FE                     _Lcd_Out:
  7369                           	callstack 29
  7370                           
  7371                           ;incstack = 0
  7372                           ;Lcd_Out@y stored from wreg
  7373  0034FE  6E07               	movwf	Lcd_Out@y^0,c
  7374  003500                     
  7375                           ;flexlcd.h: 120: unsigned char data;;flexlcd.h: 121: switch (y)
  7376  003500  EF96  F01A         	goto	l3418
  7377  003504                     l3408:
  7378  003504  5004               	movf	Lcd_Out@x^0,w,c
  7379  003506  0F80               	addlw	128
  7380  003508  6E08               	movwf	Lcd_Out@data^0,c
  7381  00350A  EFA9  F01A         	goto	l3420
  7382  00350E                     l3410:
  7383  00350E  5004               	movf	Lcd_Out@x^0,w,c
  7384  003510  0FC0               	addlw	192
  7385  003512  6E08               	movwf	Lcd_Out@data^0,c
  7386  003514  EFA9  F01A         	goto	l3420
  7387  003518                     l3412:
  7388  003518  5004               	movf	Lcd_Out@x^0,w,c
  7389  00351A  0F94               	addlw	148
  7390  00351C  6E08               	movwf	Lcd_Out@data^0,c
  7391  00351E  EFA9  F01A         	goto	l3420
  7392  003522                     l3414:
  7393  003522  5004               	movf	Lcd_Out@x^0,w,c
  7394  003524  0FD4               	addlw	212
  7395  003526  6E08               	movwf	Lcd_Out@data^0,c
  7396  003528  EFA9  F01A         	goto	l3420
  7397  00352C                     l3418:
  7398  00352C  5007               	movf	Lcd_Out@y^0,w,c
  7399                           
  7400                           ; Switch size 1, requested type "simple"
  7401                           ; Number of cases is 4, Range of values is 1 to 4
  7402                           ; switch strategies available:
  7403                           ; Name         Instructions Cycles
  7404                           ; simple_byte           13     7 (average)
  7405                           ;	Chosen strategy is simple_byte
  7406  00352E  0A01               	xorlw	1	; case 1
  7407  003530  B4D8               	btfsc	status,2,c
  7408  003532  EF82  F01A         	goto	l3408
  7409  003536  0A03               	xorlw	3	; case 2
  7410  003538  B4D8               	btfsc	status,2,c
  7411  00353A  EF87  F01A         	goto	l3410
  7412  00353E  0A01               	xorlw	1	; case 3
  7413  003540  B4D8               	btfsc	status,2,c
  7414  003542  EF8C  F01A         	goto	l3412
  7415  003546  0A07               	xorlw	7	; case 4
  7416  003548  B4D8               	btfsc	status,2,c
  7417  00354A  EF91  F01A         	goto	l3414
  7418  00354E  EFA9  F01A         	goto	l3420
  7419  003552                     l3420:
  7420                           
  7421                           ;flexlcd.h: 129: Lcd_Cmd(data);
  7422  003552  5008               	movf	Lcd_Out@data^0,w,c
  7423  003554  ECFB  F016         	call	_Lcd_Cmd
  7424                           
  7425                           ;flexlcd.h: 130: while(*buffer)
  7426  003558  EFB7  F01A         	goto	l3426
  7427  00355C                     l3422:
  7428                           
  7429                           ;flexlcd.h: 131: {;flexlcd.h: 132: Lcd_Chr_CP(*buffer);
  7430  00355C  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  7431  003560  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  7432  003564  50DF               	movf	indf2,w,c
  7433  003566  EC61  F016         	call	_Lcd_Chr_CP
  7434  00356A                     
  7435                           ;flexlcd.h: 133: buffer++;
  7436  00356A  4A05               	infsnz	Lcd_Out@buffer^0,f,c
  7437  00356C  2A06               	incf	(Lcd_Out@buffer+1)^0,f,c
  7438  00356E                     l3426:
  7439  00356E  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  7440  003572  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  7441  003576  50DF               	movf	indf2,w,c
  7442  003578  A4D8               	btfss	status,2,c
  7443  00357A  EFC1  F01A         	goto	u3551
  7444  00357E  EFC3  F01A         	goto	u3550
  7445  003582                     u3551:
  7446  003582  EFAE  F01A         	goto	l3422
  7447  003586                     u3550:
  7448  003586  0012               	return		;funcret
  7449  003588                     __end_of_Lcd_Out:
  7450                           	callstack 0
  7451                           
  7452 ;; *************** function _Lcd_Chr_CP *****************
  7453 ;; Defined at:
  7454 ;;		line 160 in file "flexlcd.h"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  data            1    wreg     unsigned char 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  data            1    2[COMRAM] unsigned char 
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7468 ;;      Params:         0       0       0       0       0       0       0
  7469 ;;      Locals:         1       0       0       0       0       0       0
  7470 ;;      Temps:          2       0       0       0       0       0       0
  7471 ;;      Totals:         3       0       0       0       0       0       0
  7472 ;;Total ram usage:        3 bytes
  7473 ;; Hardware stack levels used: 1
  7474 ;; This function calls:
  7475 ;;		Nothing
  7476 ;; This function is called by:
  7477 ;;		_Lcd_Out
  7478 ;;		_Lcd_Out2
  7479 ;; This function uses a non-reentrant model
  7480 ;;
  7481                           
  7482                           	psect	text26
  7483  002CC2                     __ptext26:
  7484                           	callstack 0
  7485  002CC2                     _Lcd_Chr_CP:
  7486                           	callstack 29
  7487                           
  7488                           ;incstack = 0
  7489                           ;Lcd_Chr_CP@data stored from wreg
  7490  002CC2  6E03               	movwf	Lcd_Chr_CP@data^0,c
  7491  002CC4                     
  7492                           ;flexlcd.h: 161: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
  7493  002CC4  9284               	bcf	132,1,c	;volatile
  7494  002CC6  8484               	bsf	132,2,c	;volatile
  7495  002CC8                     
  7496                           ;flexlcd.h: 162: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  7497  002CC8  6A01               	clrf	??_Lcd_Chr_CP^0,c
  7498  002CCA  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
  7499  002CCC  D001               	bra	u805
  7500  002CCE  2A01               	incf	??_Lcd_Chr_CP^0,f,c
  7501  002CD0                     u805:
  7502  002CD0  0E01               	movlw	1
  7503  002CD2  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7504  002CD4  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7505  002CD6  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7506  002CD8  5083               	movf	131,w,c	;volatile
  7507  002CDA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7508  002CDC  0B7F               	andlw	-129
  7509  002CDE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7510  002CE0  6E83               	movwf	131,c	;volatile
  7511  002CE2  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7512  002CE6  0E06               	movlw	6
  7513  002CE8  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7514  002CEA                     u815:
  7515  002CEA  90D8               	bcf	status,0,c
  7516  002CEC  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7517  002CEE  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7518  002CF0  EF75  F016         	goto	u815
  7519  002CF4  0E01               	movlw	1
  7520  002CF6  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7521  002CF8  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7522  002CFA  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7523  002CFC  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7524  002CFE  5083               	movf	131,w,c	;volatile
  7525  002D00  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7526  002D02  0BBF               	andlw	-65
  7527  002D04  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7528  002D06  6E83               	movwf	131,c	;volatile
  7529                           
  7530                           ;flexlcd.h: 163: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  7531  002D08  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7532  002D0C  0E05               	movlw	5
  7533  002D0E  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7534  002D10                     u825:
  7535  002D10  90D8               	bcf	status,0,c
  7536  002D12  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7537  002D14  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7538  002D16  EF88  F016         	goto	u825
  7539  002D1A  0E01               	movlw	1
  7540  002D1C  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7541  002D1E  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7542  002D20  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7543  002D22  5083               	movf	131,w,c	;volatile
  7544  002D24  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7545  002D26  0BDF               	andlw	-33
  7546  002D28  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7547  002D2A  6E83               	movwf	131,c	;volatile
  7548  002D2C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7549  002D30  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7550  002D32  0E0F               	movlw	15
  7551  002D34  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7552  002D36  0E01               	movlw	1
  7553  002D38  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7554  002D3A  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7555  002D3C  5083               	movf	131,w,c	;volatile
  7556  002D3E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7557  002D40  0BEF               	andlw	-17
  7558  002D42  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7559  002D44  6E83               	movwf	131,c	;volatile
  7560  002D46                     
  7561                           ;flexlcd.h: 164: _delay(10);
  7562  002D46  0E03               	movlw	3
  7563  002D48                     u4357:
  7564  002D48  2EE8               	decfsz	wreg,f,c
  7565  002D4A  D7FE               	bra	u4357
  7566  002D4C  F000               	nop	
  7567  002D4E                     
  7568                           ;flexlcd.h: 165: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  7569  002D4E  8284               	bsf	132,1,c	;volatile
  7570  002D50  0E03               	movlw	3
  7571  002D52                     u4367:
  7572  002D52  2EE8               	decfsz	wreg,f,c
  7573  002D54  D7FE               	bra	u4367
  7574  002D56  F000               	nop	
  7575  002D58  9284               	bcf	132,1,c	;volatile
  7576                           
  7577                           ;flexlcd.h: 166: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  7578  002D5A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7579  002D5E  90D8               	bcf	status,0,c
  7580  002D60  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7581  002D62  90D8               	bcf	status,0,c
  7582  002D64  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7583  002D66  90D8               	bcf	status,0,c
  7584  002D68  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7585  002D6A  0E01               	movlw	1
  7586  002D6C  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7587  002D6E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7588  002D70  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7589  002D72  5083               	movf	131,w,c	;volatile
  7590  002D74  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7591  002D76  0B7F               	andlw	-129
  7592  002D78  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7593  002D7A  6E83               	movwf	131,c	;volatile
  7594  002D7C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7595  002D80  90D8               	bcf	status,0,c
  7596  002D82  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7597  002D84  90D8               	bcf	status,0,c
  7598  002D86  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7599  002D88  0E01               	movlw	1
  7600  002D8A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7601  002D8C  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7602  002D8E  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7603  002D90  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7604  002D92  5083               	movf	131,w,c	;volatile
  7605  002D94  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7606  002D96  0BBF               	andlw	-65
  7607  002D98  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7608  002D9A  6E83               	movwf	131,c	;volatile
  7609                           
  7610                           ;flexlcd.h: 167: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  7611  002D9C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7612  002DA0  90D8               	bcf	status,0,c
  7613  002DA2  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7614  002DA4  0E01               	movlw	1
  7615  002DA6  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7616  002DA8  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7617  002DAA  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7618  002DAC  5083               	movf	131,w,c	;volatile
  7619  002DAE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7620  002DB0  0BDF               	andlw	-33
  7621  002DB2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7622  002DB4  6E83               	movwf	131,c	;volatile
  7623  002DB6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7624  002DBA  0E01               	movlw	1
  7625  002DBC  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7626  002DBE  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7627  002DC0  5083               	movf	131,w,c	;volatile
  7628  002DC2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7629  002DC4  0BEF               	andlw	-17
  7630  002DC6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7631  002DC8  6E83               	movwf	131,c	;volatile
  7632  002DCA                     
  7633                           ;flexlcd.h: 168: _delay(10);
  7634  002DCA  0E03               	movlw	3
  7635  002DCC                     u4377:
  7636  002DCC  2EE8               	decfsz	wreg,f,c
  7637  002DCE  D7FE               	bra	u4377
  7638  002DD0  F000               	nop	
  7639  002DD2                     
  7640                           ;flexlcd.h: 169: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  7641  002DD2  8284               	bsf	132,1,c	;volatile
  7642  002DD4  0E03               	movlw	3
  7643  002DD6                     u4387:
  7644  002DD6  2EE8               	decfsz	wreg,f,c
  7645  002DD8  D7FE               	bra	u4387
  7646  002DDA  F000               	nop	
  7647  002DDC  9284               	bcf	132,1,c	;volatile
  7648  002DDE                     
  7649                           ;flexlcd.h: 170: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  7650  002DDE  0E03               	movlw	3
  7651  002DE0                     u4397:
  7652  002DE0  2EE8               	decfsz	wreg,f,c
  7653  002DE2  D7FE               	bra	u4397
  7654  002DE4  F000               	nop	
  7655  002DE6  0E0F               	movlw	15
  7656  002DE8  6E01               	movwf	??_Lcd_Chr_CP^0,c
  7657  002DEA  0E48               	movlw	72
  7658  002DEC                     u4407:
  7659  002DEC  2EE8               	decfsz	wreg,f,c
  7660  002DEE  D7FE               	bra	u4407
  7661  002DF0  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  7662  002DF2  D7FC               	bra	u4407
  7663  002DF4  0012               	return		;funcret
  7664  002DF6                     __end_of_Lcd_Chr_CP:
  7665                           	callstack 0
  7666                           
  7667 ;; *************** function _Lcd_Init *****************
  7668 ;; Defined at:
  7669 ;;		line 76 in file "flexlcd.h"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;		None
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;  data            1    4[COMRAM] unsigned char 
  7674 ;; Return value:  Size  Location     Type
  7675 ;;                  1    wreg      void 
  7676 ;; Registers used:
  7677 ;;		wreg, status,2, status,0, cstack
  7678 ;; Tracked objects:
  7679 ;;		On entry : 0/0
  7680 ;;		On exit  : 0/0
  7681 ;;		Unchanged: 0/0
  7682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7683 ;;      Params:         0       0       0       0       0       0       0
  7684 ;;      Locals:         1       0       0       0       0       0       0
  7685 ;;      Temps:          1       0       0       0       0       0       0
  7686 ;;      Totals:         2       0       0       0       0       0       0
  7687 ;;Total ram usage:        2 bytes
  7688 ;; Hardware stack levels used: 1
  7689 ;; Hardware stack levels required when called: 1
  7690 ;; This function calls:
  7691 ;;		_Lcd_Cmd
  7692 ;; This function is called by:
  7693 ;;		_main
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text27
  7698  002F22                     __ptext27:
  7699                           	callstack 0
  7700  002F22                     _Lcd_Init:
  7701                           	callstack 29
  7702  002F22                     
  7703                           ;flexlcd.h: 77: unsigned char data;;flexlcd.h: 78: TRISDbits.TRISD7 = 0;
  7704  002F22  9E95               	bcf	149,7,c	;volatile
  7705                           
  7706                           ;flexlcd.h: 79: TRISDbits.TRISD6 = 0;
  7707  002F24  9C95               	bcf	149,6,c	;volatile
  7708                           
  7709                           ;flexlcd.h: 80: TRISDbits.TRISD5 = 0;
  7710  002F26  9A95               	bcf	149,5,c	;volatile
  7711                           
  7712                           ;flexlcd.h: 81: TRISDbits.TRISD4 = 0;
  7713  002F28  9895               	bcf	149,4,c	;volatile
  7714                           
  7715                           ;flexlcd.h: 82: TRISEbits.TRISE2 = 0;
  7716  002F2A  9496               	bcf	150,2,c	;volatile
  7717                           
  7718                           ;flexlcd.h: 83: TRISEbits.TRISE1 = 0;
  7719  002F2C  9296               	bcf	150,1,c	;volatile
  7720                           
  7721                           ;flexlcd.h: 84: PORTDbits.RD7 = 0;
  7722  002F2E  9E83               	bcf	131,7,c	;volatile
  7723                           
  7724                           ;flexlcd.h: 85: PORTDbits.RD6 = 0;
  7725  002F30  9C83               	bcf	131,6,c	;volatile
  7726                           
  7727                           ;flexlcd.h: 86: PORTDbits.RD5 = 0;
  7728  002F32  9A83               	bcf	131,5,c	;volatile
  7729                           
  7730                           ;flexlcd.h: 87: PORTDbits.RD4 = 0;
  7731  002F34  9883               	bcf	131,4,c	;volatile
  7732                           
  7733                           ;flexlcd.h: 88: PORTEbits.RE1 = 0;
  7734  002F36  9284               	bcf	132,1,c	;volatile
  7735                           
  7736                           ;flexlcd.h: 89: PORTEbits.RE2 = 0;
  7737  002F38  9484               	bcf	132,2,c	;volatile
  7738  002F3A                     
  7739                           ;flexlcd.h: 90: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7740  002F3A  0E0F               	movlw	15
  7741  002F3C  6E04               	movwf	??_Lcd_Init^0,c
  7742  002F3E  0E48               	movlw	72
  7743  002F40                     u4417:
  7744  002F40  2EE8               	decfsz	wreg,f,c
  7745  002F42  D7FE               	bra	u4417
  7746  002F44  2E04               	decfsz	??_Lcd_Init^0,f,c
  7747  002F46  D7FC               	bra	u4417
  7748                           
  7749                           ;flexlcd.h: 91: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7750  002F48  0E0F               	movlw	15
  7751  002F4A  6E04               	movwf	??_Lcd_Init^0,c
  7752  002F4C  0E48               	movlw	72
  7753  002F4E                     u4427:
  7754  002F4E  2EE8               	decfsz	wreg,f,c
  7755  002F50  D7FE               	bra	u4427
  7756  002F52  2E04               	decfsz	??_Lcd_Init^0,f,c
  7757  002F54  D7FC               	bra	u4427
  7758                           
  7759                           ;flexlcd.h: 92: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7760  002F56  0E0F               	movlw	15
  7761  002F58  6E04               	movwf	??_Lcd_Init^0,c
  7762  002F5A  0E48               	movlw	72
  7763  002F5C                     u4437:
  7764  002F5C  2EE8               	decfsz	wreg,f,c
  7765  002F5E  D7FE               	bra	u4437
  7766  002F60  2E04               	decfsz	??_Lcd_Init^0,f,c
  7767  002F62  D7FC               	bra	u4437
  7768                           
  7769                           ;flexlcd.h: 93: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7770  002F64  0E0F               	movlw	15
  7771  002F66  6E04               	movwf	??_Lcd_Init^0,c
  7772  002F68  0E48               	movlw	72
  7773  002F6A                     u4447:
  7774  002F6A  2EE8               	decfsz	wreg,f,c
  7775  002F6C  D7FE               	bra	u4447
  7776  002F6E  2E04               	decfsz	??_Lcd_Init^0,f,c
  7777  002F70  D7FC               	bra	u4447
  7778                           
  7779                           ;flexlcd.h: 94: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7780  002F72  0E0F               	movlw	15
  7781  002F74  6E04               	movwf	??_Lcd_Init^0,c
  7782  002F76  0E48               	movlw	72
  7783  002F78                     u4457:
  7784  002F78  2EE8               	decfsz	wreg,f,c
  7785  002F7A  D7FE               	bra	u4457
  7786  002F7C  2E04               	decfsz	??_Lcd_Init^0,f,c
  7787  002F7E  D7FC               	bra	u4457
  7788                           
  7789                           ;flexlcd.h: 95: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7790  002F80  0E0F               	movlw	15
  7791  002F82  6E04               	movwf	??_Lcd_Init^0,c
  7792  002F84  0E48               	movlw	72
  7793  002F86                     u4467:
  7794  002F86  2EE8               	decfsz	wreg,f,c
  7795  002F88  D7FE               	bra	u4467
  7796  002F8A  2E04               	decfsz	??_Lcd_Init^0,f,c
  7797  002F8C  D7FC               	bra	u4467
  7798  002F8E                     
  7799                           ;flexlcd.h: 96: for(data = 1; data < 4; data ++)
  7800  002F8E  0E01               	movlw	1
  7801  002F90  6E05               	movwf	Lcd_Init@data^0,c
  7802  002F92                     l57:
  7803                           
  7804                           ;flexlcd.h: 97: {;flexlcd.h: 98: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  7805  002F92  9E83               	bcf	131,7,c	;volatile
  7806  002F94  9C83               	bcf	131,6,c	;volatile
  7807  002F96  8A83               	bsf	131,5,c	;volatile
  7808  002F98  8883               	bsf	131,4,c	;volatile
  7809  002F9A  9284               	bcf	132,1,c	;volatile
  7810                           
  7811                           ;flexlcd.h: 99: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
  7812  002F9C  9484               	bcf	132,2,c	;volatile
  7813  002F9E  9E83               	bcf	131,7,c	;volatile
  7814  002FA0  9C83               	bcf	131,6,c	;volatile
  7815  002FA2  8A83               	bsf	131,5,c	;volatile
  7816  002FA4  8883               	bsf	131,4,c	;volatile
  7817                           
  7818                           ;flexlcd.h: 100: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  7819  002FA6  8284               	bsf	132,1,c	;volatile
  7820  002FA8  9484               	bcf	132,2,c	;volatile
  7821  002FAA                     
  7822                           ;flexlcd.h: 101: _delay((unsigned long)((5)*(8000000/4000000.0)));
  7823  002FAA  0E03               	movlw	3
  7824  002FAC                     u4477:
  7825  002FAC  2EE8               	decfsz	wreg,f,c
  7826  002FAE  D7FE               	bra	u4477
  7827  002FB0  F000               	nop	
  7828  002FB2                     
  7829                           ;flexlcd.h: 102: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 1; PORTEbits.RE1 = 0;
  7830  002FB2  9E83               	bcf	131,7,c	;volatile
  7831  002FB4  9C83               	bcf	131,6,c	;volatile
  7832  002FB6  8A83               	bsf	131,5,c	;volatile
  7833  002FB8  8883               	bsf	131,4,c	;volatile
  7834  002FBA  9284               	bcf	132,1,c	;volatile
  7835  002FBC                     
  7836                           ;flexlcd.h: 103: PORTEbits.RE2 = 0;
  7837  002FBC  9484               	bcf	132,2,c	;volatile
  7838                           
  7839                           ;flexlcd.h: 104: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7840  002FBE  0E0F               	movlw	15
  7841  002FC0  6E04               	movwf	??_Lcd_Init^0,c
  7842  002FC2  0E48               	movlw	72
  7843  002FC4                     u4487:
  7844  002FC4  2EE8               	decfsz	wreg,f,c
  7845  002FC6  D7FE               	bra	u4487
  7846  002FC8  2E04               	decfsz	??_Lcd_Init^0,f,c
  7847  002FCA  D7FC               	bra	u4487
  7848  002FCC  2A05               	incf	Lcd_Init@data^0,f,c
  7849  002FCE  0E03               	movlw	3
  7850  002FD0  6405               	cpfsgt	Lcd_Init@data^0,c
  7851  002FD2  EFED  F017         	goto	u1401
  7852  002FD6  EFEF  F017         	goto	u1400
  7853  002FDA                     u1401:
  7854  002FDA  EFC9  F017         	goto	l57
  7855  002FDE                     u1400:
  7856  002FDE                     
  7857                           ;flexlcd.h: 105: };flexlcd.h: 106: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  7858  002FDE  9E83               	bcf	131,7,c	;volatile
  7859  002FE0  9C83               	bcf	131,6,c	;volatile
  7860  002FE2  8A83               	bsf	131,5,c	;volatile
  7861  002FE4  9883               	bcf	131,4,c	;volatile
  7862  002FE6  9284               	bcf	132,1,c	;volatile
  7863  002FE8  9484               	bcf	132,2,c	;volatile
  7864                           
  7865                           ;flexlcd.h: 107: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  7866  002FEA  9E83               	bcf	131,7,c	;volatile
  7867  002FEC  9C83               	bcf	131,6,c	;volatile
  7868  002FEE  8A83               	bsf	131,5,c	;volatile
  7869  002FF0  9883               	bcf	131,4,c	;volatile
  7870  002FF2  8284               	bsf	132,1,c	;volatile
  7871  002FF4  9484               	bcf	132,2,c	;volatile
  7872  002FF6                     
  7873                           ;flexlcd.h: 108: _delay((unsigned long)((5)*(8000000/4000000.0)));
  7874  002FF6  0E03               	movlw	3
  7875  002FF8                     u4497:
  7876  002FF8  2EE8               	decfsz	wreg,f,c
  7877  002FFA  D7FE               	bra	u4497
  7878  002FFC  F000               	nop	
  7879  002FFE                     
  7880                           ;flexlcd.h: 109: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  7881  002FFE  9E83               	bcf	131,7,c	;volatile
  7882  003000  9C83               	bcf	131,6,c	;volatile
  7883  003002  8A83               	bsf	131,5,c	;volatile
  7884  003004  9883               	bcf	131,4,c	;volatile
  7885  003006  9284               	bcf	132,1,c	;volatile
  7886  003008  9484               	bcf	132,2,c	;volatile
  7887                           
  7888                           ;flexlcd.h: 110: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7889  00300A  0E0F               	movlw	15
  7890  00300C  6E04               	movwf	??_Lcd_Init^0,c
  7891  00300E  0E48               	movlw	72
  7892  003010                     u4507:
  7893  003010  2EE8               	decfsz	wreg,f,c
  7894  003012  D7FE               	bra	u4507
  7895  003014  2E04               	decfsz	??_Lcd_Init^0,f,c
  7896  003016  D7FC               	bra	u4507
  7897  003018  0E28               	movlw	40
  7898  00301A  ECFB  F016         	call	_Lcd_Cmd
  7899  00301E  0E10               	movlw	16
  7900  003020  ECFB  F016         	call	_Lcd_Cmd
  7901  003024  0E01               	movlw	1
  7902  003026  ECFB  F016         	call	_Lcd_Cmd
  7903  00302A  0E0F               	movlw	15
  7904  00302C  ECFB  F016         	call	_Lcd_Cmd
  7905  003030  0012               	return		;funcret
  7906  003032                     __end_of_Lcd_Init:
  7907                           	callstack 0
  7908                           
  7909 ;; *************** function _Lcd_Cmd *****************
  7910 ;; Defined at:
  7911 ;;		line 174 in file "flexlcd.h"
  7912 ;; Parameters:    Size  Location     Type
  7913 ;;  data            1    wreg     unsigned char 
  7914 ;; Auto vars:     Size  Location     Type
  7915 ;;  data            1    2[COMRAM] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  1    wreg      void 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7925 ;;      Params:         0       0       0       0       0       0       0
  7926 ;;      Locals:         1       0       0       0       0       0       0
  7927 ;;      Temps:          2       0       0       0       0       0       0
  7928 ;;      Totals:         3       0       0       0       0       0       0
  7929 ;;Total ram usage:        3 bytes
  7930 ;; Hardware stack levels used: 1
  7931 ;; This function calls:
  7932 ;;		Nothing
  7933 ;; This function is called by:
  7934 ;;		_Lcd_Init
  7935 ;;		_Lcd_Out
  7936 ;;		_main
  7937 ;;		_Lcd_Out2
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text28
  7942  002DF6                     __ptext28:
  7943                           	callstack 0
  7944  002DF6                     _Lcd_Cmd:
  7945                           	callstack 29
  7946                           
  7947                           ;incstack = 0
  7948                           ;Lcd_Cmd@data stored from wreg
  7949  002DF6  6E03               	movwf	Lcd_Cmd@data^0,c
  7950  002DF8                     
  7951                           ;flexlcd.h: 175: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  7952  002DF8  9284               	bcf	132,1,c	;volatile
  7953  002DFA  9484               	bcf	132,2,c	;volatile
  7954  002DFC                     
  7955                           ;flexlcd.h: 176: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  7956  002DFC  6A01               	clrf	??_Lcd_Cmd^0,c
  7957  002DFE  AE03               	btfss	Lcd_Cmd@data^0,7,c
  7958  002E00  D001               	bra	u775
  7959  002E02  2A01               	incf	??_Lcd_Cmd^0,f,c
  7960  002E04                     u775:
  7961  002E04  0E01               	movlw	1
  7962  002E06  1601               	andwf	??_Lcd_Cmd^0,f,c
  7963  002E08  3201               	rrcf	??_Lcd_Cmd^0,f,c
  7964  002E0A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  7965  002E0C  5083               	movf	131,w,c	;volatile
  7966  002E0E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  7967  002E10  0B7F               	andlw	-129
  7968  002E12  1801               	xorwf	??_Lcd_Cmd^0,w,c
  7969  002E14  6E83               	movwf	131,c	;volatile
  7970  002E16  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7971  002E1A  0E06               	movlw	6
  7972  002E1C  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  7973  002E1E                     u785:
  7974  002E1E  90D8               	bcf	status,0,c
  7975  002E20  3201               	rrcf	??_Lcd_Cmd^0,f,c
  7976  002E22  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7977  002E24  EF0F  F017         	goto	u785
  7978  002E28  0E01               	movlw	1
  7979  002E2A  1601               	andwf	??_Lcd_Cmd^0,f,c
  7980  002E2C  3A01               	swapf	??_Lcd_Cmd^0,f,c
  7981  002E2E  4601               	rlncf	??_Lcd_Cmd^0,f,c
  7982  002E30  4601               	rlncf	??_Lcd_Cmd^0,f,c
  7983  002E32  5083               	movf	131,w,c	;volatile
  7984  002E34  1801               	xorwf	??_Lcd_Cmd^0,w,c
  7985  002E36  0BBF               	andlw	-65
  7986  002E38  1801               	xorwf	??_Lcd_Cmd^0,w,c
  7987  002E3A  6E83               	movwf	131,c	;volatile
  7988                           
  7989                           ;flexlcd.h: 177: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  7990  002E3C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7991  002E40  0E05               	movlw	5
  7992  002E42  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  7993  002E44                     u795:
  7994  002E44  90D8               	bcf	status,0,c
  7995  002E46  3201               	rrcf	??_Lcd_Cmd^0,f,c
  7996  002E48  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7997  002E4A  EF22  F017         	goto	u795
  7998  002E4E  0E01               	movlw	1
  7999  002E50  1601               	andwf	??_Lcd_Cmd^0,f,c
  8000  002E52  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8001  002E54  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8002  002E56  5083               	movf	131,w,c	;volatile
  8003  002E58  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8004  002E5A  0BDF               	andlw	-33
  8005  002E5C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8006  002E5E  6E83               	movwf	131,c	;volatile
  8007  002E60  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8008  002E64  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8009  002E66  0E0F               	movlw	15
  8010  002E68  1601               	andwf	??_Lcd_Cmd^0,f,c
  8011  002E6A  0E01               	movlw	1
  8012  002E6C  1601               	andwf	??_Lcd_Cmd^0,f,c
  8013  002E6E  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8014  002E70  5083               	movf	131,w,c	;volatile
  8015  002E72  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8016  002E74  0BEF               	andlw	-17
  8017  002E76  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8018  002E78  6E83               	movwf	131,c	;volatile
  8019  002E7A                     
  8020                           ;flexlcd.h: 178: _delay(10);
  8021  002E7A  0E03               	movlw	3
  8022  002E7C                     u4517:
  8023  002E7C  2EE8               	decfsz	wreg,f,c
  8024  002E7E  D7FE               	bra	u4517
  8025  002E80  F000               	nop	
  8026  002E82                     
  8027                           ;flexlcd.h: 179: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  8028  002E82  8284               	bsf	132,1,c	;volatile
  8029  002E84  0E03               	movlw	3
  8030  002E86                     u4527:
  8031  002E86  2EE8               	decfsz	wreg,f,c
  8032  002E88  D7FE               	bra	u4527
  8033  002E8A  F000               	nop	
  8034  002E8C  9284               	bcf	132,1,c	;volatile
  8035                           
  8036                           ;flexlcd.h: 180: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  8037  002E8E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8038  002E92  90D8               	bcf	status,0,c
  8039  002E94  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8040  002E96  90D8               	bcf	status,0,c
  8041  002E98  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8042  002E9A  90D8               	bcf	status,0,c
  8043  002E9C  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8044  002E9E  0E01               	movlw	1
  8045  002EA0  1601               	andwf	??_Lcd_Cmd^0,f,c
  8046  002EA2  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8047  002EA4  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8048  002EA6  5083               	movf	131,w,c	;volatile
  8049  002EA8  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8050  002EAA  0B7F               	andlw	-129
  8051  002EAC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8052  002EAE  6E83               	movwf	131,c	;volatile
  8053  002EB0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8054  002EB4  90D8               	bcf	status,0,c
  8055  002EB6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8056  002EB8  90D8               	bcf	status,0,c
  8057  002EBA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8058  002EBC  0E01               	movlw	1
  8059  002EBE  1601               	andwf	??_Lcd_Cmd^0,f,c
  8060  002EC0  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8061  002EC2  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8062  002EC4  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8063  002EC6  5083               	movf	131,w,c	;volatile
  8064  002EC8  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8065  002ECA  0BBF               	andlw	-65
  8066  002ECC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8067  002ECE  6E83               	movwf	131,c	;volatile
  8068                           
  8069                           ;flexlcd.h: 181: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  8070  002ED0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8071  002ED4  90D8               	bcf	status,0,c
  8072  002ED6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8073  002ED8  0E01               	movlw	1
  8074  002EDA  1601               	andwf	??_Lcd_Cmd^0,f,c
  8075  002EDC  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8076  002EDE  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8077  002EE0  5083               	movf	131,w,c	;volatile
  8078  002EE2  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8079  002EE4  0BDF               	andlw	-33
  8080  002EE6  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8081  002EE8  6E83               	movwf	131,c	;volatile
  8082  002EEA  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8083  002EEE  0E01               	movlw	1
  8084  002EF0  1601               	andwf	??_Lcd_Cmd^0,f,c
  8085  002EF2  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8086  002EF4  5083               	movf	131,w,c	;volatile
  8087  002EF6  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8088  002EF8  0BEF               	andlw	-17
  8089  002EFA  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8090  002EFC  6E83               	movwf	131,c	;volatile
  8091  002EFE                     
  8092                           ;flexlcd.h: 182: _delay(10);
  8093  002EFE  0E03               	movlw	3
  8094  002F00                     u4537:
  8095  002F00  2EE8               	decfsz	wreg,f,c
  8096  002F02  D7FE               	bra	u4537
  8097  002F04  F000               	nop	
  8098  002F06                     
  8099                           ;flexlcd.h: 183: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  8100  002F06  8284               	bsf	132,1,c	;volatile
  8101  002F08  0E03               	movlw	3
  8102  002F0A                     u4547:
  8103  002F0A  2EE8               	decfsz	wreg,f,c
  8104  002F0C  D7FE               	bra	u4547
  8105  002F0E  F000               	nop	
  8106  002F10  9284               	bcf	132,1,c	;volatile
  8107  002F12                     
  8108                           ;flexlcd.h: 184: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  8109  002F12  0E0F               	movlw	15
  8110  002F14  6E01               	movwf	??_Lcd_Cmd^0,c
  8111  002F16  0E48               	movlw	72
  8112  002F18                     u4557:
  8113  002F18  2EE8               	decfsz	wreg,f,c
  8114  002F1A  D7FE               	bra	u4557
  8115  002F1C  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  8116  002F1E  D7FC               	bra	u4557
  8117  002F20  0012               	return		;funcret
  8118  002F22                     __end_of_Lcd_Cmd:
  8119                           	callstack 0
  8120                           
  8121                           	psect	rparam
  8122  0000                     
  8123                           	psect	idloc
  8124                           
  8125                           ;Config register IDLOC0 @ 0x200000
  8126                           ;	unspecified, using default values
  8127  200000                     	org	2097152
  8128  200000  FF                 	db	255
  8129                           
  8130                           ;Config register IDLOC1 @ 0x200001
  8131                           ;	unspecified, using default values
  8132  200001                     	org	2097153
  8133  200001  FF                 	db	255
  8134                           
  8135                           ;Config register IDLOC2 @ 0x200002
  8136                           ;	unspecified, using default values
  8137  200002                     	org	2097154
  8138  200002  FF                 	db	255
  8139                           
  8140                           ;Config register IDLOC3 @ 0x200003
  8141                           ;	unspecified, using default values
  8142  200003                     	org	2097155
  8143  200003  FF                 	db	255
  8144                           
  8145                           ;Config register IDLOC4 @ 0x200004
  8146                           ;	unspecified, using default values
  8147  200004                     	org	2097156
  8148  200004  FF                 	db	255
  8149                           
  8150                           ;Config register IDLOC5 @ 0x200005
  8151                           ;	unspecified, using default values
  8152  200005                     	org	2097157
  8153  200005  FF                 	db	255
  8154                           
  8155                           ;Config register IDLOC6 @ 0x200006
  8156                           ;	unspecified, using default values
  8157  200006                     	org	2097158
  8158  200006  FF                 	db	255
  8159                           
  8160                           ;Config register IDLOC7 @ 0x200007
  8161                           ;	unspecified, using default values
  8162  200007                     	org	2097159
  8163  200007  FF                 	db	255
  8164                           
  8165                           	psect	config
  8166                           
  8167                           ; Padding undefined space
  8168  300000                     	org	3145728
  8169  300000  FF                 	db	255
  8170                           
  8171                           ;Config register CONFIG1H @ 0x300001
  8172                           ;	Oscillator Selection bits
  8173                           ;	OSC = HS, HS oscillator
  8174                           ;	Fail-Safe Clock Monitor Enable bit
  8175                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8176                           ;	Internal/External Oscillator Switchover bit
  8177                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8178  300001                     	org	3145729
  8179  300001  02                 	db	2
  8180                           
  8181                           ;Config register CONFIG2L @ 0x300002
  8182                           ;	Power-up Timer Enable bit
  8183                           ;	PWRT = OFF, PWRT disabled
  8184                           ;	Brown-out Reset Enable bits
  8185                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8186                           ;	Brown Out Reset Voltage bits
  8187                           ;	BORV = 3, Minimum setting
  8188  300002                     	org	3145730
  8189  300002  1F                 	db	31
  8190                           
  8191                           ;Config register CONFIG2H @ 0x300003
  8192                           ;	Watchdog Timer Enable bit
  8193                           ;	WDT = ON, WDT enabled
  8194                           ;	Watchdog Timer Postscale Select bits
  8195                           ;	WDTPS = 32768, 1:32768
  8196  300003                     	org	3145731
  8197  300003  1F                 	db	31
  8198                           
  8199                           ; Padding undefined space
  8200  300004                     	org	3145732
  8201  300004  FF                 	db	255
  8202                           
  8203                           ;Config register CONFIG3H @ 0x300005
  8204                           ;	CCP2 MUX bit
  8205                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8206                           ;	PORTB A/D Enable bit
  8207                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8208                           ;	Low-Power Timer1 Oscillator Enable bit
  8209                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8210                           ;	MCLR Pin Enable bit
  8211                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  8212  300005                     	org	3145733
  8213  300005  01                 	db	1
  8214                           
  8215                           ;Config register CONFIG4L @ 0x300006
  8216                           ;	Stack Full/Underflow Reset Enable bit
  8217                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8218                           ;	Single-Supply ICSP Enable bit
  8219                           ;	LVP = ON, Single-Supply ICSP enabled
  8220                           ;	Extended Instruction Set Enable bit
  8221                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8222                           ;	Background Debugger Enable bit
  8223                           ;	DEBUG = 0x1, unprogrammed default
  8224  300006                     	org	3145734
  8225  300006  85                 	db	133
  8226                           
  8227                           ; Padding undefined space
  8228  300007                     	org	3145735
  8229  300007  FF                 	db	255
  8230                           
  8231                           ;Config register CONFIG5L @ 0x300008
  8232                           ;	Code Protection bit
  8233                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8234                           ;	Code Protection bit
  8235                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8236                           ;	Code Protection bit
  8237                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8238                           ;	Code Protection bit
  8239                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8240  300008                     	org	3145736
  8241  300008  0F                 	db	15
  8242                           
  8243                           ;Config register CONFIG5H @ 0x300009
  8244                           ;	Boot Block Code Protection bit
  8245                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8246                           ;	Data EEPROM Code Protection bit
  8247                           ;	CPD = OFF, Data EEPROM not code-protected
  8248  300009                     	org	3145737
  8249  300009  C0                 	db	192
  8250                           
  8251                           ;Config register CONFIG6L @ 0x30000A
  8252                           ;	Write Protection bit
  8253                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8254                           ;	Write Protection bit
  8255                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8256                           ;	Write Protection bit
  8257                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8258                           ;	Write Protection bit
  8259                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8260  30000A                     	org	3145738
  8261  30000A  0F                 	db	15
  8262                           
  8263                           ;Config register CONFIG6H @ 0x30000B
  8264                           ;	Configuration Register Write Protection bit
  8265                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8266                           ;	Boot Block Write Protection bit
  8267                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8268                           ;	Data EEPROM Write Protection bit
  8269                           ;	WRTD = OFF, Data EEPROM not write-protected
  8270  30000B                     	org	3145739
  8271  30000B  E0                 	db	224
  8272                           
  8273                           ;Config register CONFIG7L @ 0x30000C
  8274                           ;	Table Read Protection bit
  8275                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8276                           ;	Table Read Protection bit
  8277                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8278                           ;	Table Read Protection bit
  8279                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8280                           ;	Table Read Protection bit
  8281                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8282  30000C                     	org	3145740
  8283  30000C  0F                 	db	15
  8284                           
  8285                           ;Config register CONFIG7H @ 0x30000D
  8286                           ;	Boot Block Table Read Protection bit
  8287                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8288  30000D                     	org	3145741
  8289  30000D  40                 	db	64
  8290                           tosu	equ	0xFFF
  8291                           tosh	equ	0xFFE
  8292                           tosl	equ	0xFFD
  8293                           stkptr	equ	0xFFC
  8294                           pclatu	equ	0xFFB
  8295                           pclath	equ	0xFFA
  8296                           pcl	equ	0xFF9
  8297                           tblptru	equ	0xFF8
  8298                           tblptrh	equ	0xFF7
  8299                           tblptrl	equ	0xFF6
  8300                           tablat	equ	0xFF5
  8301                           prodh	equ	0xFF4
  8302                           prodl	equ	0xFF3
  8303                           indf0	equ	0xFEF
  8304                           postinc0	equ	0xFEE
  8305                           postdec0	equ	0xFED
  8306                           preinc0	equ	0xFEC
  8307                           plusw0	equ	0xFEB
  8308                           fsr0h	equ	0xFEA
  8309                           fsr0l	equ	0xFE9
  8310                           wreg	equ	0xFE8
  8311                           indf1	equ	0xFE7
  8312                           postinc1	equ	0xFE6
  8313                           postdec1	equ	0xFE5
  8314                           preinc1	equ	0xFE4
  8315                           plusw1	equ	0xFE3
  8316                           fsr1h	equ	0xFE2
  8317                           fsr1l	equ	0xFE1
  8318                           bsr	equ	0xFE0
  8319                           indf2	equ	0xFDF
  8320                           postinc2	equ	0xFDE
  8321                           postdec2	equ	0xFDD
  8322                           preinc2	equ	0xFDC
  8323                           plusw2	equ	0xFDB
  8324                           fsr2h	equ	0xFDA
  8325                           fsr2l	equ	0xFD9
  8326                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    144
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    115     127
    BANK0           128      0      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 4
		 -> str(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 4
		 -> str(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39202
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _adc_amostra
                           _adc_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   32380
                                             76 COMRAM    39    31      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    6887
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    6534
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1207
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1210
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3872
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2737
                                             68 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2414
                                             52 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_amostra                                          7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     725
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _adc_amostra
   _adc_init
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      14       5       15.6%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     73      7F       1      100.0%
BITBIGSFRhhlh       2C      0       0      17        0.0%
BITBIGSFRhl         29      0       0      18        0.0%
BITBIGSFRhhh         E      0       0      16        0.0%
BITBIGSFRlhlh        4      0       0      19        0.0%
BITBIGSFRlhll        4      0       0      20        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      93      21        0.0%
DATA                 0      0      93       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Nov 25 17:06:37 2022

           ___fldiv@aexp 0040             ___fldiv@bexp 003F             ___fldiv@sign 0038  
                     l72 3586                       l57 2F92                       l58 2FDE  
                     l91 2F20                       l59 3030                       l88 2DF4  
           ___awdiv@sign 000C      ___wmul@multiplicand 0003                      l112 2BDC  
                    l130 3868                      l141 368A                      l135 364C  
                    l311 34EC                      l138 364E                      l171 20F8  
                    l164 2734                      l244 0EDA                      l318 34FC  
                    l281 1402                      l515 32FE                      l284 3838  
                    l528 33AE                      l562 31F4                      l538 2B8A  
                    l650 29B6                      l563 323A                      l547 2B7A  
                    l556 3458                      l804 36FE                      l901 23B0  
                    l733 360E                      l902 239E                      l590 3136  
                    l726 35FE                      l814 3762                      l567 37E0  
                    l647 2A3E                      l807 375A                      l656 2A2E  
                    l920 1988                      l649 2984                      l834 15F2  
                    l930 1BE4                      l851 170C                      l843 18C2  
                    l835 15E0                      l860 17DC                      l836 15A6  
                    l924 1CEC                      l861 17CA                      l927 1B7E  
                    l961 278C                      l937 1CAE                      l929 1BF6  
                    l890 22F2                      l876 37A8                      l964 28E8  
                    l893 22B6                      l797 36F6                      l982 3812  
                    l975 2880                      l888 2492                      l968 2824  
                    l899 2338                      u805 2CD0                      u815 2CEA  
                    u825 2D10                      u775 2E04                      u785 2E1E  
                    u795 2E44                      _key 007A                      _str 007C  
           ___awmod@sign 0006                      wreg 000FE8             ___flmul@aexp 0020  
           ___flmul@bexp 0021             ___flmul@sign 001B             ___flmul@temp 0026  
           ___flmul@prod 0022             ___fltol@exp1 003A                     l2000 3008  
                   l2010 3024                     l2002 3018                     l2012 3024  
                   l2004 3018                     l2014 302A                     l2006 301E  
                   l2016 302A                     l2008 301E                     l2040 385C  
                   l3000 3694                     l3010 36CA                     l3002 36A6  
                   l3012 36E0                     l3004 36AE                     l3020 3700  
                   l3100 380C                     l3110 2922                     l3014 36E8  
                   l3006 36B6                     l3030 3746                     l3022 3712  
                   l3200 2B1E                     l3120 295A                     l3104 28EA  
                   l3016 36EA                     l3008 36C4                     l3032 374E  
                   l3024 371A                     l3210 2B4A                     l3130 298E  
                   l3122 2966                     l3106 290E                     l3018 36F0  
                   l3034 3754                     l3026 3722                     l3050 26E8  
                   l3300 3032                     l3220 3814                     l3140 29D2  
                   l3132 29A8                     l3124 2976                     l3116 294A  
                   l3028 3730                     l3044 2600                     l3036 2496  
                   l1550 2E7A                     l3310 3088                     l3302 3048  
                   l3230 3480                     l3222 3830                     l3206 2B36  
                   l3150 29FE                     l3134 29B4                     l3126 297A  
                   l3118 294C                     l3046 2610                     l3038 24A6  
                   l3070 1ED2                     l3054 1CF0                     l1560 2F06  
                   l1552 2E82                     l2600 1452                     l3312 3098  
                   l3240 34CA                     l3232 3488                     l3400 28D6  
                   l3216 2B5E                     l3208 2B40                     l3160 2A40  
                   l3136 29BE                     l3128 2980                     l3064 1E26  
                   l3056 1CFE                     l1562 2F08                     l1554 2E84  
                   l1546 2DF8                     l1570 2CC8                     l3410 350E  
                   l2610 1484                     l2602 145A                     l3250 3774  
                   l3322 30C2                     l3314 309C                     l3306 305C  
                   l3242 34DA                     l3234 3494                     l3226 345A  
                   l3402 28D8                     l3218 2B6A                     l3162 2A56  
                   l3146 29EA                     l3138 29C4                     l3082 2024  
                   l3066 1E3A                     l3058 1D14                     l3074 1EFE  
                   l1564 2F10                     l1556 2E8C                     l1548 2DFC  
                   l1580 2DCA                     l1572 2D46                     l3412 3518  
                   l3420 3552                     l3260 341C                     l2700 165C  
                   l2620 14BA                     l2612 148A                     l2604 146A  
                   l3340 3126                     l3332 30EA                     l3324 30CC  
                   l3316 30AA                     l3308 3086                     l3244 34DC  
                   l3236 34A2                     l3228 346A                     l3180 2AB8  
                   l3172 2A84                     l3156 2A12                     l3148 29F4  
                   l3092 37E4                     l3084 2038                     l3076 1F12  
                   l3500 08A4                     l1566 2F12                     l1558 2EFE  
                   l1590 2DE6                     l1582 2DD2                     l1574 2D4E  
                   l3422 355C                     l3414 3522                     l3406 3500  
                   l3430 3616                     l3262 342C                     l3254 33B0  
                   l3270 3138                     l2702 1660                     l2710 1680  
                   l2630 14F6                     l2622 14CA                     l2614 1498  
                   l2606 1470                     l3334 30F6                     l3326 30D6  
                   l3246 34E6                     l3238 34AC                     l3350 35B2  
                   l3190 2AEE                     l3182 2ABC                     l3174 2A86  
                   l3166 2A6A                     l3158 2A1E                     l3094 37E8  
                   l3510 08FE                     l3502 08AC                     l1584 2DD4  
                   l1576 2D50                     l1568 2CC4                     l3424 356A  
                   l3408 3504                     l3440 365C                     l3432 361E  
                   l3264 3450                     l3256 33DE                     l3280 31C2  
                   l3272 3166                     l2712 16A6                     l2720 16FC  
                   l2704 166E                     l2640 1514                     l2632 1504  
                   l2624 14CC                     l2616 149A                     l2608 1482  
                   l3248 3764                     l3336 3106                     l3352 35C0  
                   l3344 3588                     l3360 2738                     l3192 2AFE  
                   l3184 2AC2                     l3176 2A96                     l2800 1910  
                   l3096 37F8                     l3088 20D0                     l3600 0D48  
                   l3520 0950                     l3512 0902                     l3504 08C4  
                   l1586 2DDC                     l1578 2D58                     l3426 356E  
                   l3418 352C                     l3434 3626                     l3266 3456  
                   l3258 33EE                     l3282 31D4                     l3274 3176  
                   l2730 1750                     l2722 1722                     l2714 16DA  
                   l2706 1670                     l2650 1528                     l2642 1518  
                   l2634 1508                     l2618 14AA                     l2626 14D4  
                   l3338 3116                     l3354 35DE                     l3346 359E  
                   l3362 2748                     l3194 2B00                     l3186 2AC6  
                   l3178 2AA8                     l2810 1940                     l2802 1916  
                   l3098 3808                     l3610 0D88                     l3602 0D54  
                   l3530 09B4                     l3522 096C                     l3514 090A  
                   l3506 08CC                     l3450 06DA                     l1588 2DDE  
                   l3428 3612                     l3284 31E2                     l3276 31A4  
                   l3292 37AA                     l2740 177A                     l2732 175E  
                   l2724 1732                     l2716 16DC                     l2708 167A  
                   l2660 153C                     l2652 152C                     l2644 151C  
                   l2636 150C                     l2628 14E4                     l3356 35EE  
                   l3348 35A6                     l3380 280E                     l3372 27C6  
                   l3364 2756                     l3196 2B0A                     l3188 2AD0  
                   l2900 1C7C                     l2820 1978                     l2812 1942  
                   l2804 1926                     l3620 0DD6                     l3612 0D8C  
                   l3604 0D58                     l3532 09E8                     l3524 0988  
                   l3516 093C                     l3540 0A5A                     l3508 08DA  
                   l3460 0714                     l3452 06E2                     l3444 06B0  
                   l3438 362E                     l3286 3232                     l3278 31B4  
                   l3294 37C0                     l2750 17AC                     l2742 178A  
                   l2734 1760                     l2718 16EC                     l2670 158E  
                   l2662 1540                     l2654 1530                     l2646 1520  
                   l2638 1510                     l2590 141E                     l3358 35F8  
                   l3390 288E                     l3382 281A                     l3374 27CE  
                   l3366 279C                     l3198 2B10                     l2910 1CD2  
                   l2902 1C96                     l2830 19C8                     l2822 1998  
                   l2814 1952                     l2806 192C                     l3710 1176  
                   l3702 1136                     l3622 0DDE                     l3630 0E70  
                   l3606 0D5E                     l3614 0D92                     l3550 0B28  
                   l3542 0A76                     l3534 0A1A                     l3526 0996  
                   l3518 094A                     l3470 0782                     l3462 0732  
                   l3454 06F6                     l3446 06BC                     l3800 216C  
                   l3288 3238                     l3296 37D0                     l2760 1806  
                   l2752 17C2                     l2736 176E                     l2728 1746  
                   l2744 178C                     l2680 15D2                     l2672 159E  
                   l2656 1534                     l2648 1524                     l2664 1544  
                   l2592 1420                     l3392 2890                     l3384 2856  
                   l3376 27DA                     l3368 27B2                     l2904 1CB2  
                   l2912 1CD8                     l2840 1A18                     l2832 19D2  
                   l2824 19A8                     l2816 1962                     l2808 1932  
                   l2920 3240                     l3720 11D6                     l3712 119A  
                   l3704 1138                     l3640 0EB6                     l3632 0E86  
                   l3624 0E2A                     l3616 0DAC                     l3608 0D7C  
                   l3560 0BA0                     l3552 0B44                     l3544 0AB0  
                   l3536 0A24                     l3528 099C                     l3480 07EA  
                   l3464 073A                     l3472 07A0                     l3448 06CE  
                   l1962 2F22                     l3810 21AC                     l3802 217A  
                   l2770 1882                     l2762 1840                     l2738 1776  
                   l2746 179A                     l2682 15D4                     l2674 15B4  
                   l2666 1548                     l2658 1538                     l2594 1430  
                   l2586 1404                     l3394 2894                     l3386 2862  
                   l3378 280C                     l2914 1CDC                     l2906 1CC2  
                   l2850 1A5A                     l2842 1A24                     l2834 19E8  
                   l2818 1972                     l2930 3270                     l2922 324E  
                   l3730 123A                     l3722 11E4                     l3714 11A0  
                   l3706 114A                     l3650 0F02                     l3642 0ED2  
                   l3634 0E92                     l3626 0E5E                     l3618 0DCA  
                   l3570 0C5E                     l3554 0B76                     l3546 0ACC  
                   l3538 0A56                     l3490 0846                     l3482 0812  
                   l3474 07BC                     l3466 0756                     l3458 06FC  
                   l1980 2FB8                     l1972 2FAA                     l1964 2F3A  
                   l3900 246E                     l3820 21EC                     l3812 21AE  
                   l3804 217C                     l2780 18A2                     l2772 1886  
                   l2756 17EC                     l2764 1842                     l2748 179E  
                   l2692 1624                     l2684 15DE                     l2676 15C0  
                   l2668 1572                     l2596 1440                     l2588 1410  
                   l3396 28B8                     l3388 2870                     l2908 1CD0  
                   l2860 1ABC                     l2852 1A6A                     l2844 1A32  
                   l2836 19F4                     l2828 19BC                     l2940 329E  
                   l2932 3274                     l2924 3256                     l3740 1286  
                   l3732 1246                     l3724 1202                     l3716 11B2  
                   l3708 116E                     l3660 0FE8                     l3652 0F06  
                   l3644 0EDE                     l3636 0E96                     l3580 0C9C  
                   l3564 0BD4                     l3556 0B82                     l3548 0AFE  
                   l3484 0816                     l3476 07C2                     l3468 077E  
                   l1990 2FFE                     l1982 2FBA                     l1974 2FB2  
                   l1966 2F8E                     l3902 2472                     l3830 221C  
                   l3822 21F4                     l3806 218C                     l3814 21B6  
                   l2782 18B0                     l2774 1894                     l2766 1852  
                   l2758 17F8                     l2694 1634                     l2686 1600  
                   l2678 15C4                     l2598 1450                     l3398 28C8  
                   l2870 1B64                     l2862 1AD8                     l2854 1A84  
                   l2846 1A3E                     l2838 1A0C                     l2790 18D0  
                   l2950 32D2                     l2942 32AC                     l2934 327C  
                   l2926 325A                     l2918 323C                     l3742 128A  
                   l3750 12C8                     l3734 124E                     l3726 120E  
                   l3718 11D0                     l3670 1068                     l3662 0FF6  
                   l3654 0F1C                     l3646 0EE6                     l3638 0E9C  
                   l3590 0D02                     l3582 0C9E                     l3558 0B8A  
                   l3566 0BE8                     l3494 084C                     l3478 07CE  
                   l3486 0838                     l1992 3000                     l1984 2FBC  
                   l1976 2FB4                     l3904 2480                     l3840 225A  
                   l3832 221C                     l3824 21F8                     l3816 21C6  
                   l3808 219C                     l2784 18B2                     l2776 189A  
                   l2768 1862                     l2696 1642                     l2688 1610  
                   l2880 1BA0                     l2872 1B6E                     l2864 1B02  
                   l2856 1A94                     l2848 1A4E                     l2792 18DE  
                   l2952 32D8                     l2944 32B2                     l2936 328E  
                   l2928 3268                     l3760 1320                     l3752 12DA  
                   l3744 129C                     l3736 125C                     l3728 1216  
                   l3680 10AA                     l3672 106C                     l3664 0FFA  
                   l3656 0F68                     l3648 0EF6                     l3592 0D08  
                   l3584 0CB0                     l3576 0C62                     l3568 0C56  
                   l3496 0884                     l3488 0840                     l3920 2B92  
                   l1994 3002                     l1986 2FCC                     l1978 2FB6  
                   l3906 2486                     l3850 22A6                     l3842 226A  
                   l3818 21DC                     l2778 189C                     l2698 1650  
                   l2890 1C12                     l2882 1BAE                     l2874 1B7C  
                   l2866 1B38                     l2858 1AB0                     l2794 18E0  
                   l2946 32C8                     l2938 3296                     l2954 32DE  
                   l2970 331E                     l2962 3300                     l3762 132C  
                   l3754 12E6                     l3746 12A8                     l3770 13BA  
                   l3738 127A                     l3690 10F4                     l3682 10B8  
                   l3674 1072                     l3658 0FB4                     l3666 1046  
                   l3594 0D16                     l3586 0CDE                     l3498 0896  
                   l3930 2BDE                     l3922 2BCC                     l1996 3004  
                   l1988 2FF6                     l3908 2488                     l3860 22F0  
                   l3852 22B4                     l3844 227A                     l3836 2230  
                   l3828 220C                     l3780 2106                     l2892 1C20  
                   l2884 1BDC                     l2876 1B8E                     l2868 1B46  
                   l2796 18F0                     l2788 18C4                     l2956 32EE  
                   l2948 32D0                     l2980 3356                     l2972 332C  
                   l2964 3304                     l3764 1334                     l3756 12EA  
                   l3748 12AC                     l3692 10F8                     l3684 10BC  
                   l3668 105C                     l3596 0D34                     l3588 0CE4  
                   l3676 1088                     l3772 13D4                     l3940 2CA8  
                   l3932 2BEC                     l3924 2BD0                     l3916 2B8C  
                   l1998 3006                     l3870 2336                     l3862 2302  
                   l3854 22C0                     l3846 2282                     l3838 224A  
                   l3790 2146                     l3782 2114                     l2894 1C4A  
                   l2878 1B9C                     l2798 1900                     l2958 32F6  
                   l2982 3364                     l2990 338E                     l2974 3334  
                   l2966 3312                     l3766 13AA                     l3758 1302  
                   l3686 10CC                     l3678 10A2                     l3598 0D40  
                   l3774 13F6                     l3934 2C56                     l3926 2BD4  
                   l3918 2B90                     l3880 2396                     l3864 2318  
                   l3872 2348                     l3856 22DE                     l3848 2292  
                   l3792 2148                     l3784 2116                     l2888 1C06  
                   l2896 1C4E                     l2992 339E                     l2984 337A  
                   l2976 3346                     l2968 331A                     l3688 10DE  
                   l3936 2C72                     l3928 2BDA                     l3890 2404  
                   l3874 2356                     l3866 231E                     l3858 22E0  
                   l3786 2126                     l3794 2150                     l3778 20FA  
                   l2898 1C68                     l2994 33A6                     l2986 3382  
                   l2978 334E                     l3698 10FC                     l3938 2C84  
                   l3884 23C0                     l3892 2408                     l3876 235A  
                   l3868 2328                     l3796 2160                     l3788 2136  
                   l2988 3388                     l3894 2422                     l3886 23CC  
                   l3878 2368                     l3798 2166                     l2998 368C  
                   l3896 2438                     l3888 23DA                     l3898 2452  
                   STR_1 06A3                     STR_2 0691                     u1400 2FDE  
                   u3000 1CFE                     u1401 2FDA                     u3001 1CFA  
                   u3010 1D14                     u3011 1D10                     u2300 1504  
                   u2220 141E                     u3100 2946                     u3020 1E3A  
                   u2301 1500                     u2221 141A                     u3101 2942  
                   u3021 1E36                     _LATA 000F89                     u2310 1572  
                   u2230 1430                     u3110 29A8                     u3030 1F12  
                   _LATB 000F8A                     u2311 156E                     u2231 142C  
                   u3111 29A4                     u3031 1F0E                     _LATC 000F8B  
                   u2400 1650                     u2320 158A                     u2240 1440  
                   u3200 2B32                     u3120 29D2                     u3040 2038  
                   u4000 11E4                     _LATD 000F8C                     u2401 164C  
                   u2321 1584                     u2241 143C                     u3201 2B2E  
                   u3121 29CE                     u3041 2034                     u4001 11E0  
                   _LATE 000F8D                     u2410 166E                     u2330 158C  
                   u2250 1482                     u3210 2B5A                     u3130 29E6  
                   u3050 37F8                     u4010 1202                     u2411 166A  
                   u2251 147E                     u3211 2B56                     u3131 29E2  
                   u3051 37F4                     u4011 11FE                     u3300 31A4  
                   u2500 17AC                     u2420 16A6                     u2340 15B4  
                   u2260 1498                     u3220 2B7A                     u3140 2A0E  
                   u3060 3808                     u4100 13D4                     u4020 123A  
                   u3301 31A0                     u2501 17A8                     u2421 16A2  
                   u2341 15B0                     u2261 1494                     u3221 2B76  
                   u3141 2A0A                     u3061 3804                     u4101 13D0  
                   u4021 1236                     u3310 31C2                     u2510 17C2  
                   u2430 16EC                     u2350 15D2                     u2270 14AA  
                   u3230 3480                     u3150 2A2E                     u4110 13F6  
                   u4030 125C                     u3311 31BE                     u2511 17BE  
                   u2431 16E8                     u2351 15CE                     u2271 14A6  
                   u3231 347C                     u3151 2A2A                     u3071 28FA  
                   u4111 13F2                     u4031 1258                     u4200 2292  
                   u4120 2114                     u3320 31E2                     u2600 18B0  
                   u2520 17D8                     u2440 1722                     u2360 15F2  
                   u2280 14BA                     u3400 3106                     u3240 34A2  
                   u3160 2A56                     u3080 290E                     u4040 127A  
                   u4201 228E                     u4121 2110                     u3321 31DE  
                   u2601 18AC                     u2521 17D4                     u2441 171E  
                   u2361 15EE                     u2281 14B6                     u3401 3102  
                   u3241 349E                     u3161 2A52                     u3081 290A  
                   u4041 1276                     u4210 22B4                     u4130 2126  
                   u3330 3232                     u2530 17EC                     u2450 1732  
                   u2370 1600                     u2290 14F6                     u3410 3116  
                   u3250 34CA                     u3170 2A80                     u2610 18DE  
                   u4050 129C                     u4211 22B0                     u4131 2122  
                   u3331 322E                     u2531 17E8                     u2451 172E  
                   u2371 15FC                     u2291 14F2                     u3411 3112  
                   u3251 34C6                     u3171 2A7C                     u3091 2932  
                   u2611 18DA                     u4051 1298                     u4300 23C0  
                   u4220 22DE                     u4140 2136                     u3260 33DE  
                   u3340 37C0                     u2540 1806                     u2460 175E  
                   u2380 1610                     u3420 359E                     u3500 2870  
                   u3180 2AEE                     u2700 1B7C                     u2620 18F0  
                   u4060 12C4                     u4301 23BC                     u4221 22DA  
                   u4141 2132                     u3261 33DA                     u3341 37BC  
                   u2541 1802                     u2461 175A                     u2381 160C  
                   u3421 359A                     u3501 286C                     u3181 2AEA  
                   u2701 1B78                     u2621 18EC                     u4061 12C0  
                   u4310 23DA                     u4230 2302                     u4150 217A  
                   u3270 341C                     u2550 1840                     u2470 176E  
                   u2390 1642                     u3350 3048                     u3430 35C0  
                   u3510 2880                     u3190 2B1E                     u2710 1B9C  
                   u2630 1900                     u4070 12DA                     u4311 23D6  
                   u4231 22FE                     u4151 2176                     u3271 3418  
                   u2551 183C                     u2471 176A                     u2391 163E  
                   u3351 3044                     u3431 35BC                     u3511 287C  
                   u3191 2B1A                     u2711 1B98                     u2631 18FC  
                   u4071 12D6                     u4320 2422                     u4240 2318  
                   u4160 218C                     u3280 3450                     u2560 1852  
                   u2480 178A                     u3360 307C                     u3440 35DE  
                   u3520 288E                     u2720 1BAE                     u2640 1940  
                   u2800 324E                     u4080 1302                     u3600 07A0  
                   u4321 241E                     u4241 2314                     u4161 2188  
                   u3281 344C                     u2561 184E                     u2481 1786  
                   u3441 35DA                     u3521 288A                     u2721 1BAA  
                   u2641 193C                     u2801 324A                     u4081 12FE  
                   u3601 079C                     u4330 2452                     u4250 2336  
                   u4170 219C                     u3290 3166                     u2570 1862  
                   u2490 179A                     u3370 30AA                     u3530 28C8  
                   u3450 2748                     u2730 1BDC                     u2650 1952  
                   u2810 3268                     u4090 1320                     u3610 07BC  
                   u4331 244E                     u4251 2332                     u4171 2198  
                   u3291 3162                     u2571 185E                     u2491 1796  
                   u3371 30A6                     u3531 28C4                     u3451 2744  
                   u2731 1BD8                     u2651 194E                     u2811 3264  
                   u4091 131C                     u3611 07B8                     u4340 2480  
                   u4260 2356                     u4180 21DC                     u2580 1882  
                   u3380 30BE                     u3540 28D6                     u3460 2756  
                   u2740 1BF2                     u2660 1962                     u2820 328E  
                   u2900 337A                     u3700 0A76                     u3620 0834  
                   u4341 247C                     u4261 2352                     u4181 21D8  
                   u2581 187E                     u3381 30BA                     u3365 3072  
                   u3541 28D2                     u3461 2752                     u2741 1BEE  
                   u2661 195E                     u2821 328A                     u2901 3376  
                   u3701 0A72                     u3621 0830                     u3550 3586  
                   u4270 2368                     u4190 221C                     u2590 1894  
                   u3390 30E6                     u3470 27B2                     u2750 1C06  
                   u2670 1998                     u2830 32AC                     u2910 339E  
                   u3710 0ACC                     u3630 0896                     u4407 2DEC  
                   u3551 3582                     u4271 2364                     u4191 2218  
                   u2591 1890                     u3391 30E2                     u3471 27AE  
                   u2751 1C02                     u2671 1994                     u2831 32A8  
                   u2911 339A                     u3711 0AC8                     u3631 0892  
                   u4280 2396                     u3560 365C                     u3480 2808  
                   u2760 1C20                     u2680 19A8                     u2920 36A6  
                   u2840 32C8                     u3800 0D16                     u3720 0AFE  
                   u3640 08A4                     u4417 2F40                     u4281 2392  
                   u3561 3658                     u3481 2804                     u2761 1C1C  
                   u2681 19A4                     u2921 36A2                     u2841 32C4  
                   u3801 0D12                     u3721 0AFA                     u3641 08A0  
                   u4290 23AC                     u3490 2852                     u2770 1C68  
                   u2690 1B22                     u2930 36C4                     u2850 32EE  
                   u3810 0D34                     u3730 0B28                     u3650 08DA  
                   u4507 3010                     u4427 2F4E                     u4291 23A8  
                   u3491 284E                     u2771 1C64                     u2931 36C0  
                   u2851 32EA                     u3811 0D30                     u3731 0B24  
                   u3651 08D6                     u2780 1C96                     u2940 36E0  
                   u2860 3312                     u3900 1084                     u3820 0D78  
                   u3740 0B44                     u3660 093C                     u3580 06CE  
                   u4517 2E7C                     u4437 2F5C                     u4357 2D48  
                   u2781 1C92                     u2941 36DC                     u2861 330E  
                   u3901 1080                     u3821 0D74                     u3741 0B40  
                   u3661 0938                     u3581 06CA                     u2790 1CD0  
                   u2950 3712                     u2870 332C                     u3910 10B8  
                   u3830 0DAC                     u3750 0B76                     u3670 0996  
                   u3590 0732                     u4527 2E86                     u4447 2F6A  
                   u4367 2D52                     u3575 3664                     u2791 1CCC  
                   u2695 1B18                     u2951 370E                     u2871 3328  
                   u3911 10B4                     u3831 0DA8                     u3751 0B72  
                   u3671 0992                     u3591 072E                     u2960 3730  
                   u2880 3346                     u3920 10DE                     u3840 0DCA  
                   u3760 0C98                     u3680 0A1A                     u4537 2F00  
                   u4457 2F78                     u4377 2DCC                     u2961 372C  
                   u2881 3342                     u3921 10DA                     u3841 0DC6  
                   u3761 0C94                     u3681 0A16                     u2970 3746  
                   u2890 3364                     u3930 10F4                     u3850 0E82  
                   u3770 0CB0                     u3690 0A56                     u4547 2F0A  
                   u4467 2F86                     u4387 2DD6                     u2971 3742  
                   u2891 3360                     u3931 10F0                     u3851 0E7E  
                   u3771 0CAC                     u3691 0A52                     u2980 24A6  
                   u3940 1132                     u3860 0EB6                     u3780 0CDE  
                   u4557 2F18                     u4477 2FAC                     u4397 2DE0  
                   u2981 24A2                     u3941 112E                     u3861 0EB2  
                   u3781 0CDA                     u2990 2610                     u3950 114A  
                   u3870 0ED2                     u3790 0D02                     u4487 2FC4  
                   u2991 260C                     u3951 1146                     u3871 0ECE  
                   u3791 0CFE                     u3960 116E                     u3880 0EF6  
                   u4497 2FF8                     u3961 116A                     u3881 0EF2  
                   u3970 119A                     u3890 1058                     u3971 1196  
                   u3891 1054                     u3980 11B2                     u3981 11AE  
                   u3990 11D0                     u3991 11CC                     _date 008A  
                   _main 2B8C                     _time 0080                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     _volt 0074  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        ___fldiv@new_exp 0039             _sprintf$1220 0059          __end_of_Lcd_Cmd 2F22  
        __end_of_Lcd_Out 3588             ___param_bank 000000               _Lcd_Chr_CP 2CC2  
          ___fltol@sign1 0039          __end_of___fladd 18C4                    ?_main 0001  
        __end_of___fldiv 2494          __end_of___awdiv 3300          __end_of___flneg 37E2  
        __end_of___awmod 33B0          __end_of___flmul 1CEE          __end_of___flsub 37AA  
        __end_of___fltol 3138          __end_of___lldiv 34FE          ___awdiv@divisor 0009  
        __end_of___llmod 3610          __end_of___lwdiv 3700          __end_of___lwmod 3764  
        ___awdiv@counter 000B                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96          __end_of_dpowers 0691  
                  _scale 1CEE          __end_of_isdigit 3814                    _tecla 007B  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 1404  
       __end_of_Lcd_Init 3032          __initialization 383A             __end_of_main 2CC2  
                 ??_main 0074            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0         ___llmod@dividend 000E  
                 ?_scale 0028                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0007         __end_of_adc_init 386A                ??_Lcd_Cmd 0001  
              ??_Lcd_Out 0007         __end_of___xxtofl 28EA         __end_of__powers_ 0635  
                 ___flge 3138                   ___fleq 33B0              ?_Lcd_Chr_CP 0001  
              ??___fladd 003D                   ___wmul 3814                ??___fldiv 0030  
              ??___awdiv 000B                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0017                ??___flsub 004D                ??___fltol 0035  
              ??___lldiv 0009                ??___llmod 0016                ??___lwdiv 000A  
              ??___lwmod 0005                   _fround 2494                   clear_0 3840  
                 clear_1 384C         ___awdiv@quotient 000D          ___awmod@divisor 0003  
                 isa$std 000001          ___awmod@counter 0005                ??_isdigit 0001  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_sprintf 0055               ___flge@ff1 0001  
             ___flge@ff2 0005             ___xxtofl@arg 000B             ___xxtofl@exp 000A  
           ___xxtofl@val 0001               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0080  __end_of__initialization 3852               ___flneg@f1 0001  
          ___rparam_used 000001               ___fltol@f1 0031           __pcstackCOMRAM 0001  
          __end_of_scale 20FA               __div_to_l_ 2A40                ?_Lcd_Init 0001  
        __div_to_l_@exp1 000E          __div_to_l_@cntr 000D                  ??_scale 002C  
        __div_to_l_@quot 0009             sprintf@width 006B               __pbssBANK0 0080  
          __div_to_l_@f1 0001            __div_to_l_@f2 0005                  ?___flge 0001  
                ?___fleq 0001                  ?___wmul 0001            ??_adc_amostra 0003  
                ?_fround 0028                ?_adc_init 0001                ?___xxtofl 0001  
             ??_Lcd_Init 0004                  _Lcd_Cmd 2DF6                  _Lcd_Out 34FE  
      __end_of__npowers_ 0669                  __Hparam 0000               _scale$1219 002C  
                __Lparam 0000                  ___fladd 1404                  ___fldiv 20FA  
                ___awdiv 323C                  ___flneg 37AA                  ___awmod 3300  
                ___flmul 18C4                  ___flsub 3764                  ___fltol 3032  
                ___lldiv 345A                  ___llmod 3588                  ___lwdiv 368C  
                ___lwmod 3700             __psmallconst 0600                  __pcinit 383A  
                __ramtop 0600               ??_adc_init 0001                  __ptext0 2B8C  
                __ptext1 06B0                  __ptext2 1CEE                  __ptext3 3300  
                __ptext4 323C                  __ptext5 37E2                  __ptext6 2494  
                __ptext7 3700                  __ptext8 368C                  __ptext9 18C4  
            ?__div_to_l_ 0001                  _dpowers 0669      __end_of_adc_amostra 368C  
                _isdigit 37E2               ??___xxtofl 0005         ___awmod@dividend 0001  
                _sprintf 06B0     end_of_initialization 3852            __Lmediumconst 0000  
        ___lldiv@divisor 0005          ___lldiv@counter 000D             ??_Lcd_Chr_CP 0001  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
         __tdiv_to_l_@f1 0001           __tdiv_to_l_@f2 0005            ??__tdiv_to_l_ 0009  
              _PORTDbits 000F83                _PORTEbits 000F84              ___fladd@grs 0044  
          ___xxtofl@sign 0009                _TRISDbits 000F95                _TRISEbits 000F96  
            ___fldiv@grs 003B              ___fldiv@rem 0034       __end_of_Lcd_Chr_CP 2DF6  
            ___flmul@grs 001C           __end_of___flge 323C           __end_of___fleq 345A  
            _adc_amostra 3610           __end_of___wmul 383A           __end_of_fround 2736  
    start_initialization 383A      __end_of__tdiv_to_l_ 2A40            Lcd_Out@buffer 0005  
        ___llmod@divisor 0012          ___llmod@counter 0016                 ??___flge 0009  
               ??___fleq 0009                 ??___wmul 0005                 ??_fround 002C  
          sprintf@tmpval 005F                ___fladd@a 0039                ___fladd@b 0035  
             fround@prec 0034                ___fldiv@a 002C                ___fldiv@b 0028  
              ___flmul@a 0013                ___flmul@b 000F              __pbssCOMRAM 0074  
              ___flsub@a 0049                ___flsub@b 0045                _adcResult 0078  
           _isdigit$1031 0002                 ?_Lcd_Cmd 0001              sprintf@flag 0069  
               ?_Lcd_Out 0004              sprintf@eexp 0067              sprintf@fval 006D  
            sprintf@prec 0071         ___lwdiv@dividend 0006                 ?___fladd 0035  
               ?___fldiv 0028                 ?___awdiv 0007                 ?___flneg 0001  
               ?___awmod 0001                 ?___flmul 000F                 ?___flsub 0045  
               ?___fltol 0031                 ?___lldiv 0001                 ?___llmod 000E  
              __npowers_ 0635                 ?___lwdiv 0006                 ?___lwmod 0001  
            __tdiv_to_l_ 28EA             ??__div_to_l_ 0009              __smallconst 0600  
               ?_isdigit 0001         ___lwdiv@quotient 000A                 ?_sprintf 004D  
         ___wmul@product 0005                 _LATCbits 000F8B       __end_of__div_to_l_ 2B8C  
               Lcd_Out@x 0004                 Lcd_Out@y 0007             Lcd_Init@data 0005  
             _ADCON0bits 000FC2        ___wmul@multiplier 0001                 _Lcd_Init 2F22  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
           ?_adc_amostra 0001              _fround$1217 0030              _fround$1218 002C  
               _adc_init 385C               sprintf@val 0063                 ___xxtofl 2736  
         Lcd_Chr_CP@data 0003          ___lwdiv@divisor 0008          ___lwdiv@counter 000C  
               __ptext10 28EA                 __ptext11 2A40                 __ptext20 3138  
               __ptext12 2736                 __ptext21 33B0                 __ptext13 3814  
               __ptext22 385C                 __ptext14 3588                 __ptext23 3610  
               __ptext15 345A                 __ptext24 20FA                 __ptext16 3032  
               __ptext25 34FE                 __ptext17 3764                 __ptext26 2CC2  
               __ptext18 1404                 __ptext27 2F22                 __ptext19 37AA  
               __ptext28 2DF6                 __powers_ 0601              Lcd_Cmd@data 0003  
               isa$xinst 000000              Lcd_Out@data 0008                 isdigit@c 0003  
               scale@scl 0030                sprintf@ap 005D         __tdiv_to_l_@exp1 0011  
              sprintf@sp 004D         __tdiv_to_l_@cntr 0010         __tdiv_to_l_@quot 000C  
       ___lwmod@dividend 0001         ___lldiv@dividend 0001             ?__tdiv_to_l_ 0001  
               sprintf@c 0073                 sprintf@f 004F         ___lldiv@quotient 0009  
        ___lwmod@divisor 0003          ___lwmod@counter 0005         adc_amostra@canal 0007  
          ___fladd@signs 0041             ___fladd@aexp 0042             ___fladd@bexp 0043  
