

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Nov 24 14:56:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F4520 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     
    79                           	psect	smallconst
    80  000600                     __psmallconst:
    81                           	callstack 0
    82  000600  00                 	db	0
    83  000601                     __powers_:
    84                           	callstack 0
    85  000601  0000               	dw	0
    86  000603  3F80               	dw	16256
    87  000605  0000               	dw	0
    88  000607  4120               	dw	16672
    89  000609  0000               	dw	0
    90  00060B  42C8               	dw	17096
    91  00060D  0000               	dw	0
    92  00060F  447A               	dw	17530
    93  000611  4000               	dw	16384
    94  000613  461C               	dw	17948
    95  000615  5000               	dw	20480
    96  000617  47C3               	dw	18371
    97  000619  2400               	dw	9216
    98  00061B  4974               	dw	18804
    99  00061D  9680               	dw	38528
   100  00061F  4B18               	dw	19224
   101  000621  BC20               	dw	48160
   102  000623  4CBE               	dw	19646
   103  000625  6B28               	dw	27432
   104  000627  4E6E               	dw	20078
   105  000629  02F9               	dw	761
   106  00062B  5015               	dw	20501
   107  00062D  78EC               	dw	30956
   108  00062F  60AD               	dw	24749
   109  000631  F2CA               	dw	62154
   110  000633  7149               	dw	29001
   111  000635                     __end_of__powers_:
   112                           	callstack 0
   113  000635                     __npowers_:
   114                           	callstack 0
   115  000635  0000               	dw	0
   116  000637  3F80               	dw	16256
   117  000639  CCCD               	dw	52429
   118  00063B  3DCC               	dw	15820
   119  00063D  D70A               	dw	55050
   120  00063F  3C23               	dw	15395
   121  000641  126F               	dw	4719
   122  000643  3A83               	dw	14979
   123  000645  B717               	dw	46871
   124  000647  38D1               	dw	14545
   125  000649  C5AC               	dw	50604
   126  00064B  3727               	dw	14119
   127  00064D  37BD               	dw	14269
   128  00064F  3586               	dw	13702
   129  000651  BF95               	dw	49045
   130  000653  33D6               	dw	13270
   131  000655  CC77               	dw	52343
   132  000657  322B               	dw	12843
   133  000659  705F               	dw	28767
   134  00065B  3089               	dw	12425
   135  00065D  E6FF               	dw	59135
   136  00065F  2EDB               	dw	11995
   137  000661  E508               	dw	58632
   138  000663  1E3C               	dw	7740
   139  000665  4260               	dw	16992
   140  000667  0DA2               	dw	3490
   141  000669                     __end_of__npowers_:
   142                           	callstack 0
   143  000669                     _dpowers:
   144                           	callstack 0
   145  000669  0001               	dw	1
   146  00066B  0000               	dw	0
   147  00066D  000A               	dw	10
   148  00066F  0000               	dw	0
   149  000671  0064               	dw	100
   150  000673  0000               	dw	0
   151  000675  03E8               	dw	1000
   152  000677  0000               	dw	0
   153  000679  2710               	dw	10000
   154  00067B  0000               	dw	0
   155  00067D  86A0               	dw	34464
   156  00067F  0001               	dw	1
   157  000681  4240               	dw	16960
   158  000683  000F               	dw	15
   159  000685  9680               	dw	38528
   160  000687  0098               	dw	152
   161  000689  E100               	dw	57600
   162  00068B  05F5               	dw	1525
   163  00068D  CA00               	dw	51712
   164  00068F  3B9A               	dw	15258
   165  000691                     __end_of_dpowers:
   166                           	callstack 0
   167  0000                     _ADRESL	set	4035
   168  0000                     _ADRESH	set	4036
   169  0000                     _ADCON0bits	set	4034
   170  0000                     _ADCON2	set	4032
   171  0000                     _ADCON1	set	4033
   172  0000                     _ADCON0	set	4034
   173  0000                     _LATE	set	3981
   174  0000                     _PORTE	set	3972
   175  0000                     _LATD	set	3980
   176  0000                     _PORTD	set	3971
   177  0000                     _LATC	set	3979
   178  0000                     _PORTC	set	3970
   179  0000                     _LATB	set	3978
   180  0000                     _PORTB	set	3969
   181  0000                     _LATA	set	3977
   182  0000                     _PORTA	set	3968
   183  0000                     _TRISE	set	3990
   184  0000                     _TRISD	set	3989
   185  0000                     _TRISC	set	3988
   186  0000                     _TRISB	set	3987
   187  0000                     _TRISA	set	3986
   188  0000                     _INTCON2bits	set	4081
   189  0000                     _PORTEbits	set	3972
   190  0000                     _PORTDbits	set	3971
   191  0000                     _TRISEbits	set	3990
   192  0000                     _TRISDbits	set	3989
   193  000691                     STR_2:
   194  000691  54                 	db	84	;'T'
   195  000692  65                 	db	101	;'e'
   196  000693  6E                 	db	110	;'n'
   197  000694  73                 	db	115	;'s'
   198  000695  61                 	db	97	;'a'
   199  000696  6F                 	db	111	;'o'
   200  000697  20                 	db	32
   201  000698  3D                 	db	61	;'='
   202  000699  20                 	db	32
   203  00069A  25                 	db	37
   204  00069B  30                 	db	48	;'0'
   205  00069C  35                 	db	53	;'5'
   206  00069D  2E                 	db	46
   207  00069E  32                 	db	50	;'2'
   208  00069F  66                 	db	102	;'f'
   209  0006A0  20                 	db	32
   210  0006A1  56                 	db	86	;'V'
   211  0006A2  00                 	db	0
   212  0006A3                     STR_1:
   213  0006A3  41                 	db	65	;'A'
   214  0006A4  44                 	db	68	;'D'
   215  0006A5  43                 	db	67	;'C'
   216  0006A6  20                 	db	32
   217  0006A7  3D                 	db	61	;'='
   218  0006A8  20                 	db	32
   219  0006A9  25                 	db	37
   220  0006AA  30                 	db	48	;'0'
   221  0006AB  34                 	db	52	;'4'
   222  0006AC  64                 	db	100	;'d'
   223  0006AD  00                 	db	0
   224  0006AE  00                 	db	0	; dummy byte at the end
   225  0000                     
   226                           ; #config settings
   227                           
   228                           	psect	cinit
   229  003834                     __pcinit:
   230                           	callstack 0
   231  003834                     start_initialization:
   232                           	callstack 0
   233  003834                     __initialization:
   234                           	callstack 0
   235                           
   236                           ; Clear objects allocated to BANK0 (40 bytes)
   237  003834  EE00  F080         	lfsr	0,__pbssBANK0
   238  003838  0E28               	movlw	40
   239  00383A                     clear_0:
   240  00383A  6AEE               	clrf	postinc0,c
   241  00383C  06E8               	decf	wreg,f,c
   242  00383E  E1FD               	bnz	clear_0
   243                           
   244                           ; Clear objects allocated to COMRAM (12 bytes)
   245  003840  EE00  F074         	lfsr	0,__pbssCOMRAM
   246  003844  0E0C               	movlw	12
   247  003846                     clear_1:
   248  003846  6AEE               	clrf	postinc0,c
   249  003848  06E8               	decf	wreg,f,c
   250  00384A  E1FD               	bnz	clear_1
   251  00384C                     end_of_initialization:
   252                           	callstack 0
   253  00384C                     __end_of__initialization:
   254                           	callstack 0
   255  00384C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256  00384E  6EF8               	movwf	tblptru,c
   257  003850  0100               	movlb	0
   258  003852  EF60  F016         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bssCOMRAM
   261  000074                     __pbssCOMRAM:
   262                           	callstack 0
   263  000074                     _volt:
   264                           	callstack 0
   265  000074                     	ds	4
   266  000078                     _adcResult:
   267                           	callstack 0
   268  000078                     	ds	2
   269  00007A                     _key:
   270                           	callstack 0
   271  00007A                     	ds	1
   272  00007B                     _tecla:
   273                           	callstack 0
   274  00007B                     	ds	1
   275  00007C                     _str:
   276                           	callstack 0
   277  00007C                     	ds	4
   278                           
   279                           	psect	bssBANK0
   280  000080                     __pbssBANK0:
   281                           	callstack 0
   282  000080                     _time:
   283                           	callstack 0
   284  000080                     	ds	20
   285  000094                     _date:
   286                           	callstack 0
   287  000094                     	ds	20
   288                           
   289                           	psect	cstackCOMRAM
   290  000001                     __pcstackCOMRAM:
   291                           	callstack 0
   292  000001                     ??_Lcd_Cmd:
   293  000001                     ??_Lcd_Chr_CP:
   294  000001                     ??_isdigit:
   295  000001                     ?_adc_amostra:
   296                           	callstack 0
   297  000001                     ?___wmul:
   298                           	callstack 0
   299  000001                     ?___awmod:
   300                           	callstack 0
   301  000001                     ?___lwmod:
   302                           	callstack 0
   303  000001                     ?__tdiv_to_l_:
   304                           	callstack 0
   305  000001                     ?__div_to_l_:
   306                           	callstack 0
   307  000001                     ?___lldiv:
   308                           	callstack 0
   309  000001                     ?___flneg:
   310                           	callstack 0
   311  000001                     ?___xxtofl:
   312                           	callstack 0
   313  000001                     ___wmul@multiplier:
   314                           	callstack 0
   315  000001                     ___awmod@dividend:
   316                           	callstack 0
   317  000001                     ___lwmod@dividend:
   318                           	callstack 0
   319  000001                     ___lldiv@dividend:
   320                           	callstack 0
   321  000001                     __div_to_l_@f1:
   322                           	callstack 0
   323  000001                     ___fleq@ff1:
   324                           	callstack 0
   325  000001                     ___flge@ff1:
   326                           	callstack 0
   327  000001                     ___flneg@f1:
   328                           	callstack 0
   329  000001                     __tdiv_to_l_@f1:
   330                           	callstack 0
   331  000001                     ___xxtofl@val:
   332                           	callstack 0
   333                           
   334                           ; 4 bytes @ 0x0
   335  000001                     	ds	1
   336  000002                     _isdigit$982:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x1
   340  000002                     	ds	1
   341  000003                     ??_adc_amostra:
   342  000003                     Lcd_Chr_CP@data:
   343                           	callstack 0
   344  000003                     Lcd_Cmd@data:
   345                           	callstack 0
   346  000003                     isdigit@c:
   347                           	callstack 0
   348  000003                     ___wmul@multiplicand:
   349                           	callstack 0
   350  000003                     ___awmod@divisor:
   351                           	callstack 0
   352  000003                     ___lwmod@divisor:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x2
   356  000003                     	ds	1
   357  000004                     ??_Lcd_Init:
   358  000004                     Lcd_Out@x:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x3
   362  000004                     	ds	1
   363  000005                     ??___xxtofl:
   364  000005                     Lcd_Init@data:
   365                           	callstack 0
   366  000005                     ___awmod@counter:
   367                           	callstack 0
   368  000005                     ___lwmod@counter:
   369                           	callstack 0
   370  000005                     Lcd_Out@buffer:
   371                           	callstack 0
   372  000005                     ___wmul@product:
   373                           	callstack 0
   374  000005                     ___lldiv@divisor:
   375                           	callstack 0
   376  000005                     __div_to_l_@f2:
   377                           	callstack 0
   378  000005                     ___fleq@ff2:
   379                           	callstack 0
   380  000005                     ___flge@ff2:
   381                           	callstack 0
   382  000005                     __tdiv_to_l_@f2:
   383                           	callstack 0
   384                           
   385                           ; 4 bytes @ 0x4
   386  000005                     	ds	1
   387  000006                     ?___lwdiv:
   388                           	callstack 0
   389  000006                     ___awmod@sign:
   390                           	callstack 0
   391  000006                     ___lwdiv@dividend:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x5
   395  000006                     	ds	1
   396  000007                     ?___awdiv:
   397                           	callstack 0
   398  000007                     Lcd_Out@y:
   399                           	callstack 0
   400  000007                     adc_amostra@canal:
   401                           	callstack 0
   402  000007                     ___awdiv@dividend:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x6
   406  000007                     	ds	1
   407  000008                     Lcd_Out@data:
   408                           	callstack 0
   409  000008                     ___lwdiv@divisor:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x7
   413  000008                     	ds	1
   414  000009                     ??__tdiv_to_l_:
   415  000009                     ??___fleq:
   416  000009                     ??___flge:
   417  000009                     ___xxtofl@sign:
   418                           	callstack 0
   419  000009                     ___awdiv@divisor:
   420                           	callstack 0
   421  000009                     ___lldiv@quotient:
   422                           	callstack 0
   423  000009                     __div_to_l_@quot:
   424                           	callstack 0
   425                           
   426                           ; 4 bytes @ 0x8
   427  000009                     	ds	1
   428  00000A                     ___xxtofl@exp:
   429                           	callstack 0
   430  00000A                     ___lwdiv@quotient:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x9
   434  00000A                     	ds	1
   435  00000B                     ___awdiv@counter:
   436                           	callstack 0
   437  00000B                     ___xxtofl@arg:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0xA
   441  00000B                     	ds	1
   442  00000C                     ___awdiv@sign:
   443                           	callstack 0
   444  00000C                     ___lwdiv@counter:
   445                           	callstack 0
   446  00000C                     __tdiv_to_l_@quot:
   447                           	callstack 0
   448                           
   449                           ; 4 bytes @ 0xB
   450  00000C                     	ds	1
   451  00000D                     ___lldiv@counter:
   452                           	callstack 0
   453  00000D                     __div_to_l_@cntr:
   454                           	callstack 0
   455  00000D                     ___awdiv@quotient:
   456                           	callstack 0
   457                           
   458                           ; 2 bytes @ 0xC
   459  00000D                     	ds	1
   460  00000E                     ?___llmod:
   461                           	callstack 0
   462  00000E                     __div_to_l_@exp1:
   463                           	callstack 0
   464  00000E                     ___llmod@dividend:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0xD
   468  00000E                     	ds	1
   469  00000F                     ?___flmul:
   470                           	callstack 0
   471  00000F                     ___flmul@b:
   472                           	callstack 0
   473                           
   474                           ; 4 bytes @ 0xE
   475  00000F                     	ds	1
   476  000010                     __tdiv_to_l_@cntr:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0xF
   480  000010                     	ds	1
   481  000011                     __tdiv_to_l_@exp1:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x10
   485  000011                     	ds	1
   486  000012                     ___llmod@divisor:
   487                           	callstack 0
   488                           
   489                           ; 4 bytes @ 0x11
   490  000012                     	ds	1
   491  000013                     ___flmul@a:
   492                           	callstack 0
   493                           
   494                           ; 4 bytes @ 0x12
   495  000013                     	ds	3
   496  000016                     ___llmod@counter:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x15
   500  000016                     	ds	1
   501  000017                     ??___flmul:
   502                           
   503                           ; 1 bytes @ 0x16
   504  000017                     	ds	4
   505  00001B                     ___flmul@sign:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x1A
   509  00001B                     	ds	1
   510  00001C                     ___flmul@grs:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x1B
   514  00001C                     	ds	4
   515  000020                     ___flmul@aexp:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x1F
   519  000020                     	ds	1
   520  000021                     ___flmul@bexp:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x20
   524  000021                     	ds	1
   525  000022                     ___flmul@prod:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x21
   529  000022                     	ds	4
   530  000026                     ___flmul@temp:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x25
   534  000026                     	ds	2
   535  000028                     ?___fldiv:
   536                           	callstack 0
   537  000028                     ?_fround:
   538                           	callstack 0
   539  000028                     ?_scale:
   540                           	callstack 0
   541  000028                     ___fldiv@b:
   542                           	callstack 0
   543                           
   544                           ; 4 bytes @ 0x27
   545  000028                     	ds	4
   546  00002C                     ___fldiv@a:
   547                           	callstack 0
   548  00002C                     _fround$1169:
   549                           	callstack 0
   550  00002C                     _scale$1170:
   551                           	callstack 0
   552                           
   553                           ; 4 bytes @ 0x2B
   554  00002C                     	ds	4
   555  000030                     ??___fldiv:
   556  000030                     scale@scl:
   557                           	callstack 0
   558  000030                     _fround$1168:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x2F
   562  000030                     	ds	1
   563  000031                     ?___fltol:
   564                           	callstack 0
   565  000031                     ___fltol@f1:
   566                           	callstack 0
   567                           
   568                           ; 4 bytes @ 0x30
   569  000031                     	ds	3
   570  000034                     fround@prec:
   571                           	callstack 0
   572  000034                     ___fldiv@rem:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x33
   576  000034                     	ds	1
   577  000035                     ??___fltol:
   578  000035                     ?___fladd:
   579                           	callstack 0
   580  000035                     ___fladd@b:
   581                           	callstack 0
   582                           
   583                           ; 4 bytes @ 0x34
   584  000035                     	ds	3
   585  000038                     ___fldiv@sign:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x37
   589  000038                     	ds	1
   590  000039                     ___fltol@sign1:
   591                           	callstack 0
   592  000039                     ___fldiv@new_exp:
   593                           	callstack 0
   594  000039                     ___fladd@a:
   595                           	callstack 0
   596                           
   597                           ; 4 bytes @ 0x38
   598  000039                     	ds	1
   599  00003A                     ___fltol@exp1:
   600                           	callstack 0
   601                           
   602                           ; 1 bytes @ 0x39
   603  00003A                     	ds	1
   604  00003B                     ___fldiv@grs:
   605                           	callstack 0
   606                           
   607                           ; 4 bytes @ 0x3A
   608  00003B                     	ds	2
   609  00003D                     ??___fladd:
   610                           
   611                           ; 1 bytes @ 0x3C
   612  00003D                     	ds	2
   613  00003F                     ___fldiv@bexp:
   614                           	callstack 0
   615                           
   616                           ; 1 bytes @ 0x3E
   617  00003F                     	ds	1
   618  000040                     ___fldiv@aexp:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0x3F
   622  000040                     	ds	1
   623  000041                     ___fladd@signs:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0x40
   627  000041                     	ds	1
   628  000042                     ___fladd@aexp:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x41
   632  000042                     	ds	1
   633  000043                     ___fladd@bexp:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x42
   637  000043                     	ds	1
   638  000044                     ___fladd@grs:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0x43
   642  000044                     	ds	1
   643  000045                     ?___flsub:
   644                           	callstack 0
   645  000045                     ___flsub@b:
   646                           	callstack 0
   647                           
   648                           ; 4 bytes @ 0x44
   649  000045                     	ds	4
   650  000049                     ___flsub@a:
   651                           	callstack 0
   652                           
   653                           ; 4 bytes @ 0x48
   654  000049                     	ds	4
   655  00004D                     ?_sprintf:
   656                           	callstack 0
   657  00004D                     sprintf@sp:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x4C
   661  00004D                     	ds	2
   662  00004F                     sprintf@f:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x4E
   666  00004F                     	ds	6
   667  000055                     ??_sprintf:
   668                           
   669                           ; 1 bytes @ 0x54
   670  000055                     	ds	4
   671  000059                     _sprintf$1171:
   672                           	callstack 0
   673                           
   674                           ; 4 bytes @ 0x58
   675  000059                     	ds	4
   676  00005D                     sprintf@ap:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x5C
   680  00005D                     	ds	2
   681  00005F                     sprintf@tmpval:
   682                           	callstack 0
   683                           
   684                           ; 4 bytes @ 0x5E
   685  00005F                     	ds	4
   686  000063                     sprintf@val:
   687                           	callstack 0
   688                           
   689                           ; 4 bytes @ 0x62
   690  000063                     	ds	4
   691  000067                     sprintf@eexp:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x66
   695  000067                     	ds	2
   696  000069                     sprintf@flag:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x68
   700  000069                     	ds	2
   701  00006B                     sprintf@width:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x6A
   705  00006B                     	ds	2
   706  00006D                     sprintf@fval:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0x6C
   710  00006D                     	ds	4
   711  000071                     sprintf@prec:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x70
   715  000071                     	ds	2
   716  000073                     sprintf@c:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x72
   720  000073                     	ds	1
   721  000074                     
   722                           ; 1 bytes @ 0x73
   723 ;;
   724 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   725 ;;
   726 ;; *************** function _main *****************
   727 ;; Defined at:
   728 ;;		line 36 in file "mainADC.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   742 ;;      Params:         0       0       0       0       0       0       0
   743 ;;      Locals:         0       0       0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0       0       0
   745 ;;      Totals:         0       0       0       0       0       0       0
   746 ;;Total ram usage:        0 bytes
   747 ;; Hardware stack levels required when called: 3
   748 ;; This function calls:
   749 ;;		_Lcd_Cmd
   750 ;;		_Lcd_Init
   751 ;;		_Lcd_Out
   752 ;;		___fldiv
   753 ;;		___flmul
   754 ;;		___xxtofl
   755 ;;		_adc_amostra
   756 ;;		_adc_init
   757 ;;		_sprintf
   758 ;; This function is called by:
   759 ;;		Startup code after reset
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           	psect	text0
   764  002CC0                     __ptext0:
   765                           	callstack 0
   766  002CC0                     _main:
   767                           	callstack 28
   768  002CC0                     
   769                           ;mainADC.c: 43: INTCON2bits.RBPU = 1;
   770  002CC0  8EF1               	bsf	241,7,c	;volatile
   771                           
   772                           ;mainADC.c: 46: TRISA = 0xFF;
   773  002CC2  6892               	setf	146,c	;volatile
   774  002CC4                     
   775                           ;mainADC.c: 47: TRISB = 0b00000000;
   776  002CC4  0E00               	movlw	0
   777  002CC6  6E93               	movwf	147,c	;volatile
   778                           
   779                           ;mainADC.c: 48: TRISC = 0b00000000;
   780  002CC8  0E00               	movlw	0
   781  002CCA  6E94               	movwf	148,c	;volatile
   782                           
   783                           ;mainADC.c: 49: TRISD = 0b00001111;
   784  002CCC  0E0F               	movlw	15
   785  002CCE  6E95               	movwf	149,c	;volatile
   786                           
   787                           ;mainADC.c: 50: TRISE = 0b00000000;
   788  002CD0  0E00               	movlw	0
   789  002CD2  6E96               	movwf	150,c	;volatile
   790                           
   791                           ;mainADC.c: 52: PORTA = 0;
   792  002CD4  0E00               	movlw	0
   793  002CD6  6E80               	movwf	128,c	;volatile
   794                           
   795                           ;mainADC.c: 53: LATA = 0;
   796  002CD8  0E00               	movlw	0
   797  002CDA  6E89               	movwf	137,c	;volatile
   798                           
   799                           ;mainADC.c: 54: PORTB = 0;
   800  002CDC  0E00               	movlw	0
   801  002CDE  6E81               	movwf	129,c	;volatile
   802                           
   803                           ;mainADC.c: 55: LATB = 0;
   804  002CE0  0E00               	movlw	0
   805  002CE2  6E8A               	movwf	138,c	;volatile
   806                           
   807                           ;mainADC.c: 56: PORTC = 0;
   808  002CE4  0E00               	movlw	0
   809  002CE6  6E82               	movwf	130,c	;volatile
   810                           
   811                           ;mainADC.c: 57: LATC = 0;
   812  002CE8  0E00               	movlw	0
   813  002CEA  6E8B               	movwf	139,c	;volatile
   814                           
   815                           ;mainADC.c: 58: PORTD = 0;
   816  002CEC  0E00               	movlw	0
   817  002CEE  6E83               	movwf	131,c	;volatile
   818                           
   819                           ;mainADC.c: 59: LATD = 0;
   820  002CF0  0E00               	movlw	0
   821  002CF2  6E8C               	movwf	140,c	;volatile
   822                           
   823                           ;mainADC.c: 60: PORTE = 0;
   824  002CF4  0E00               	movlw	0
   825  002CF6  6E84               	movwf	132,c	;volatile
   826                           
   827                           ;mainADC.c: 61: LATE = 0;
   828  002CF8  0E00               	movlw	0
   829  002CFA  6E8D               	movwf	141,c	;volatile
   830  002CFC                     
   831                           ;mainADC.c: 63: adc_init();
   832  002CFC  EC2B  F01C         	call	_adc_init	;wreg free
   833  002D00                     
   834                           ;mainADC.c: 64: Lcd_Init();
   835  002D00  EC8E  F017         	call	_Lcd_Init	;wreg free
   836  002D04                     
   837                           ;mainADC.c: 65: Lcd_Cmd(12);
   838  002D04  0E0C               	movlw	12
   839  002D06  ECF8  F016         	call	_Lcd_Cmd
   840  002D0A                     l108:
   841  002D0A  0004               	clrwdt		;# 
   842  002D0C                     
   843                           ;mainADC.c: 71: adcResult = (adc_amostra(0));
   844  002D0C  0E00               	movlw	0
   845  002D0E  EC05  F01B         	call	_adc_amostra
   846  002D12  C001  F078         	movff	?_adc_amostra,_adcResult
   847  002D16  C002  F079         	movff	?_adc_amostra+1,_adcResult+1
   848  002D1A                     
   849                           ;mainADC.c: 72: volt = (adcResult*5.0)/1023;
   850  002D1A  0E00               	movlw	0
   851  002D1C  6E13               	movwf	___flmul@a^0,c
   852  002D1E  0E00               	movlw	0
   853  002D20  6E14               	movwf	(___flmul@a+1)^0,c
   854  002D22  0EA0               	movlw	160
   855  002D24  6E15               	movwf	(___flmul@a+2)^0,c
   856  002D26  0E40               	movlw	64
   857  002D28  6E16               	movwf	(___flmul@a+3)^0,c
   858  002D2A  C078  F001         	movff	_adcResult,___xxtofl@val
   859  002D2E  C079  F002         	movff	_adcResult+1,___xxtofl@val+1
   860  002D32  6A03               	clrf	(___xxtofl@val+2)^0,c
   861  002D34  6A04               	clrf	(___xxtofl@val+3)^0,c
   862  002D36  0E00               	movlw	0
   863  002D38  EC9B  F013         	call	___xxtofl
   864  002D3C  C001  F00F         	movff	?___xxtofl,___flmul@b
   865  002D40  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   866  002D44  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   867  002D48  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   868  002D4C  EC62  F00C         	call	___flmul	;wreg free
   869  002D50  C00F  F028         	movff	?___flmul,___fldiv@b
   870  002D54  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   871  002D58  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   872  002D5C  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
   873  002D60  0E00               	movlw	0
   874  002D62  6E2C               	movwf	___fldiv@a^0,c
   875  002D64  0EC0               	movlw	192
   876  002D66  6E2D               	movwf	(___fldiv@a+1)^0,c
   877  002D68  0E7F               	movlw	127
   878  002D6A  6E2E               	movwf	(___fldiv@a+2)^0,c
   879  002D6C  0E44               	movlw	68
   880  002D6E  6E2F               	movwf	(___fldiv@a+3)^0,c
   881  002D70  EC7D  F010         	call	___fldiv	;wreg free
   882  002D74  C028  F074         	movff	?___fldiv,_volt
   883  002D78  C029  F075         	movff	?___fldiv+1,_volt+1
   884  002D7C  C02A  F076         	movff	?___fldiv+2,_volt+2
   885  002D80  C02B  F077         	movff	?___fldiv+3,_volt+3
   886  002D84                     
   887                           ;mainADC.c: 73: sprintf(str, "ADC = %04d", adcResult);
   888  002D84  0E7C               	movlw	low _str
   889  002D86  6E4D               	movwf	sprintf@sp^0,c
   890  002D88  0E00               	movlw	high _str
   891  002D8A  6E4E               	movwf	(sprintf@sp+1)^0,c
   892  002D8C  0EA3               	movlw	low STR_1
   893  002D8E  6E4F               	movwf	sprintf@f^0,c
   894  002D90  0E06               	movlw	high STR_1
   895  002D92  6E50               	movwf	(sprintf@f+1)^0,c
   896  002D94  C078  F051         	movff	_adcResult,?_sprintf+4
   897  002D98  C079  F052         	movff	_adcResult+1,?_sprintf+5
   898  002D9C  EC58  F003         	call	_sprintf	;wreg free
   899  002DA0                     
   900                           ;mainADC.c: 74: Lcd_Out(1, 0, str);
   901  002DA0  0E00               	movlw	0
   902  002DA2  6E04               	movwf	Lcd_Out@x^0,c
   903  002DA4  0E7C               	movlw	low _str
   904  002DA6  6E05               	movwf	Lcd_Out@buffer^0,c
   905  002DA8  0E00               	movlw	high _str
   906  002DAA  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   907  002DAC  0E01               	movlw	1
   908  002DAE  EC7C  F01A         	call	_Lcd_Out
   909  002DB2                     
   910                           ;mainADC.c: 75: sprintf(str, "Tensao = %05.2f V", volt);
   911  002DB2  0E7C               	movlw	low _str
   912  002DB4  6E4D               	movwf	sprintf@sp^0,c
   913  002DB6  0E00               	movlw	high _str
   914  002DB8  6E4E               	movwf	(sprintf@sp+1)^0,c
   915  002DBA  0E91               	movlw	low STR_2
   916  002DBC  6E4F               	movwf	sprintf@f^0,c
   917  002DBE  0E06               	movlw	high STR_2
   918  002DC0  6E50               	movwf	(sprintf@f+1)^0,c
   919  002DC2  C074  F051         	movff	_volt,?_sprintf+4
   920  002DC6  C075  F052         	movff	_volt+1,?_sprintf+5
   921  002DCA  C076  F053         	movff	_volt+2,?_sprintf+6
   922  002DCE  C077  F054         	movff	_volt+3,?_sprintf+7
   923  002DD2  EC58  F003         	call	_sprintf	;wreg free
   924  002DD6                     
   925                           ;mainADC.c: 77: Lcd_Out(2, 0, str);
   926  002DD6  0E00               	movlw	0
   927  002DD8  6E04               	movwf	Lcd_Out@x^0,c
   928  002DDA  0E7C               	movlw	low _str
   929  002DDC  6E05               	movwf	Lcd_Out@buffer^0,c
   930  002DDE  0E00               	movlw	high _str
   931  002DE0  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   932  002DE2  0E02               	movlw	2
   933  002DE4  EC7C  F01A         	call	_Lcd_Out
   934  002DE8  EF85  F016         	goto	l108
   935  002DEC  EF00  F000         	goto	start
   936  002DF0                     __end_of_main:
   937                           	callstack 0
   938                           
   939 ;; *************** function _sprintf *****************
   940 ;; Defined at:
   941 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  sp              2   76[COMRAM] PTR unsigned char 
   944 ;;		 -> str(4), 
   945 ;;  f               2   78[COMRAM] PTR const unsigned char 
   946 ;;		 -> STR_2(18), STR_1(11), 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  fval            4  108[COMRAM] PTR const unsigned char 
   949 ;;  val             4   98[COMRAM] unsigned long 
   950 ;;  tmpval          4   94[COMRAM] struct .
   951 ;;  cp              3    0        PTR const unsigned char 
   952 ;;  prec            2  112[COMRAM] int 
   953 ;;  width           2  106[COMRAM] int 
   954 ;;  flag            2  104[COMRAM] unsigned short 
   955 ;;  eexp            2  102[COMRAM] int 
   956 ;;  ap              2   92[COMRAM] PTR void [1]
   957 ;;		 -> ?_sprintf(2), 
   958 ;;  len             2    0        unsigned int 
   959 ;;  c               1  114[COMRAM] unsigned char 
   960 ;;  d               1    0        unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  2   76[COMRAM] int 
   963 ;; Registers used:
   964 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         8       0       0       0       0       0       0
   971 ;;      Locals:        27       0       0       0       0       0       0
   972 ;;      Temps:          4       0       0       0       0       0       0
   973 ;;      Totals:        39       0       0       0       0       0       0
   974 ;;Total ram usage:       39 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; Hardware stack levels required when called: 2
   977 ;; This function calls:
   978 ;;		___awdiv
   979 ;;		___fladd
   980 ;;		___fleq
   981 ;;		___flge
   982 ;;		___flmul
   983 ;;		___flneg
   984 ;;		___flsub
   985 ;;		___fltol
   986 ;;		___lldiv
   987 ;;		___llmod
   988 ;;		___wmul
   989 ;;		___xxtofl
   990 ;;		__div_to_l_
   991 ;;		__tdiv_to_l_
   992 ;;		_fround
   993 ;;		_isdigit
   994 ;;		_scale
   995 ;; This function is called by:
   996 ;;		_main
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text1
  1001  0006B0                     __ptext1:
  1002                           	callstack 0
  1003  0006B0                     _sprintf:
  1004                           	callstack 28
  1005  0006B0                     
  1006                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  1007  0006B0  0E51               	movlw	low (?_sprintf+4)
  1008  0006B2  6E5D               	movwf	sprintf@ap^0,c
  1009  0006B4  0E00               	movlw	high (?_sprintf+4)
  1010  0006B6  6E5E               	movwf	(sprintf@ap+1)^0,c
  1011                           
  1012                           ;doprnt.c: 553: while((c = *f++)) {
  1013  0006B8  EFEA  F009         	goto	l3764
  1014  0006BC                     l3438:
  1015                           
  1016                           ;doprnt.c: 555: if(c != '%')
  1017  0006BC  0E25               	movlw	37
  1018  0006BE  1873               	xorwf	sprintf@c^0,w,c
  1019  0006C0  B4D8               	btfsc	status,2,c
  1020  0006C2  EF65  F003         	goto	u3581
  1021  0006C6  EF67  F003         	goto	u3580
  1022  0006CA                     u3581:
  1023  0006CA  EF71  F003         	goto	l3444
  1024  0006CE                     u3580:
  1025  0006CE                     
  1026                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1027  0006CE  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1028  0006D2  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1029  0006D6  C073  FFDF         	movff	sprintf@c,indf2
  1030  0006DA  4A4D               	infsnz	sprintf@sp^0,f,c
  1031  0006DC  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1032                           
  1033                           ;doprnt.c: 559: continue;
  1034  0006DE  EFEA  F009         	goto	l3764
  1035  0006E2                     l3444:
  1036                           
  1037                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  1038  0006E2  0E00               	movlw	0
  1039  0006E4  6E6C               	movwf	(sprintf@width+1)^0,c
  1040  0006E6  0E00               	movlw	0
  1041  0006E8  6E6B               	movwf	sprintf@width^0,c
  1042                           
  1043                           ;doprnt.c: 565: flag = 0;
  1044  0006EA  0E00               	movlw	0
  1045  0006EC  6E6A               	movwf	(sprintf@flag+1)^0,c
  1046  0006EE  0E00               	movlw	0
  1047  0006F0  6E69               	movwf	sprintf@flag^0,c
  1048  0006F2  EF7E  F003         	goto	l3450
  1049  0006F6                     l3446:
  1050                           
  1051                           ;doprnt.c: 597: flag |= 0x04;
  1052  0006F6  8469               	bsf	sprintf@flag^0,2,c
  1053                           
  1054                           ;doprnt.c: 598: f++;
  1055  0006F8  4A4F               	infsnz	sprintf@f^0,f,c
  1056  0006FA  2A50               	incf	(sprintf@f+1)^0,f,c
  1057  0006FC                     l3450:
  1058  0006FC  C04F  FFF6         	movff	sprintf@f,tblptrl
  1059  000700  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1060  000704                     	if	0	;tblptru may be non-zero
  1061  000704                     	endif
  1062  000704                     	if	0	;tblptru may be non-zero
  1063  000704                     	endif
  1064  000704  0008               	tblrd		*
  1065  000706  50F5               	movf	tablat,w,c
  1066                           
  1067                           ; Switch size 1, requested type "simple"
  1068                           ; Number of cases is 1, Range of values is 48 to 48
  1069                           ; switch strategies available:
  1070                           ; Name         Instructions Cycles
  1071                           ; simple_byte            4     3 (average)
  1072                           ;	Chosen strategy is simple_byte
  1073  000708  0A30               	xorlw	48	; case 48
  1074  00070A  B4D8               	btfsc	status,2,c
  1075  00070C  EF7B  F003         	goto	l3446
  1076  000710  EF8A  F003         	goto	l3452
  1077  000714                     l3452:
  1078                           
  1079                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  1080  000714  C04F  FFF6         	movff	sprintf@f,tblptrl
  1081  000718  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1082  00071C                     	if	0	;tblptru may be non-zero
  1083  00071C                     	endif
  1084  00071C                     	if	0	;tblptru may be non-zero
  1085  00071C                     	endif
  1086  00071C  0008               	tblrd		*
  1087  00071E  50F5               	movf	tablat,w,c
  1088  000720  ECEE  F01B         	call	_isdigit
  1089  000724  A0D8               	btfss	status,0,c
  1090  000726  EF97  F003         	goto	u3591
  1091  00072A  EF99  F003         	goto	u3590
  1092  00072E                     u3591:
  1093  00072E  EFD0  F003         	goto	l3464
  1094  000732                     u3590:
  1095  000732                     
  1096                           ;doprnt.c: 615: width = 0;
  1097  000732  0E00               	movlw	0
  1098  000734  6E6C               	movwf	(sprintf@width+1)^0,c
  1099  000736  0E00               	movlw	0
  1100  000738  6E6B               	movwf	sprintf@width^0,c
  1101  00073A                     l3456:
  1102                           
  1103                           ;doprnt.c: 617: width *= 10;
  1104  00073A  C06B  F001         	movff	sprintf@width,___wmul@multiplier
  1105  00073E  C06C  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1106  000742  0E00               	movlw	0
  1107  000744  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1108  000746  0E0A               	movlw	10
  1109  000748  6E03               	movwf	___wmul@multiplicand^0,c
  1110  00074A  EC07  F01C         	call	___wmul	;wreg free
  1111  00074E  C001  F06B         	movff	?___wmul,sprintf@width
  1112  000752  C002  F06C         	movff	?___wmul+1,sprintf@width+1
  1113  000756                     
  1114                           ;doprnt.c: 618: width += *f++ - '0';
  1115  000756  0ED0               	movlw	208
  1116  000758  6E55               	movwf	??_sprintf^0,c
  1117  00075A  0EFF               	movlw	255
  1118  00075C  6E56               	movwf	(??_sprintf+1)^0,c
  1119  00075E  C04F  FFF6         	movff	sprintf@f,tblptrl
  1120  000762  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1121  000766                     	if	0	;tblptru may be non-zero
  1122  000766                     	endif
  1123  000766                     	if	0	;tblptru may be non-zero
  1124  000766                     	endif
  1125  000766  0008               	tblrd		*
  1126  000768  50F5               	movf	tablat,w,c
  1127  00076A  6E57               	movwf	(??_sprintf+2)^0,c
  1128  00076C  6A58               	clrf	(??_sprintf+3)^0,c
  1129  00076E  5055               	movf	??_sprintf^0,w,c
  1130  000770  2657               	addwf	(??_sprintf+2)^0,f,c
  1131  000772  5056               	movf	(??_sprintf+1)^0,w,c
  1132  000774  2258               	addwfc	(??_sprintf+3)^0,f,c
  1133  000776  5057               	movf	(??_sprintf+2)^0,w,c
  1134  000778  266B               	addwf	sprintf@width^0,f,c
  1135  00077A  5058               	movf	(??_sprintf+3)^0,w,c
  1136  00077C  226C               	addwfc	(sprintf@width+1)^0,f,c
  1137  00077E  4A4F               	infsnz	sprintf@f^0,f,c
  1138  000780  2A50               	incf	(sprintf@f+1)^0,f,c
  1139  000782                     
  1140                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  1141  000782  C04F  FFF6         	movff	sprintf@f,tblptrl
  1142  000786  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1143  00078A                     	if	0	;tblptru may be non-zero
  1144  00078A                     	endif
  1145  00078A                     	if	0	;tblptru may be non-zero
  1146  00078A                     	endif
  1147  00078A  0008               	tblrd		*
  1148  00078C  50F5               	movf	tablat,w,c
  1149  00078E  ECEE  F01B         	call	_isdigit
  1150  000792  B0D8               	btfsc	status,0,c
  1151  000794  EFCE  F003         	goto	u3601
  1152  000798  EFD0  F003         	goto	u3600
  1153  00079C                     u3601:
  1154  00079C  EF9D  F003         	goto	l3456
  1155  0007A0                     u3600:
  1156  0007A0                     l3464:
  1157                           
  1158                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  1159  0007A0  C04F  FFF6         	movff	sprintf@f,tblptrl
  1160  0007A4  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1161  0007A8                     	if	0	;tblptru may be non-zero
  1162  0007A8                     	endif
  1163  0007A8                     	if	0	;tblptru may be non-zero
  1164  0007A8                     	endif
  1165  0007A8  0008               	tblrd		*
  1166  0007AA  50F5               	movf	tablat,w,c
  1167  0007AC  0A2E               	xorlw	46
  1168  0007AE  A4D8               	btfss	status,2,c
  1169  0007B0  EFDC  F003         	goto	u3611
  1170  0007B4  EFDE  F003         	goto	u3610
  1171  0007B8                     u3611:
  1172  0007B8  EF1C  F004         	goto	l3478
  1173  0007BC                     u3610:
  1174  0007BC                     
  1175                           ;doprnt.c: 629: flag |= 0x4000;
  1176  0007BC  8C6A               	bsf	(sprintf@flag+1)^0,6,c
  1177                           
  1178                           ;doprnt.c: 630: f++;
  1179  0007BE  4A4F               	infsnz	sprintf@f^0,f,c
  1180  0007C0  2A50               	incf	(sprintf@f+1)^0,f,c
  1181  0007C2                     
  1182                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  1183  0007C2  0E00               	movlw	0
  1184  0007C4  6E72               	movwf	(sprintf@prec+1)^0,c
  1185  0007C6  0E00               	movlw	0
  1186  0007C8  6E71               	movwf	sprintf@prec^0,c
  1187                           
  1188                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  1189  0007CA  EF0B  F004         	goto	l3476
  1190  0007CE                     l3470:
  1191                           
  1192                           ;doprnt.c: 647: prec *= 10;
  1193  0007CE  C071  F001         	movff	sprintf@prec,___wmul@multiplier
  1194  0007D2  C072  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1195  0007D6  0E00               	movlw	0
  1196  0007D8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1197  0007DA  0E0A               	movlw	10
  1198  0007DC  6E03               	movwf	___wmul@multiplicand^0,c
  1199  0007DE  EC07  F01C         	call	___wmul	;wreg free
  1200  0007E2  C001  F071         	movff	?___wmul,sprintf@prec
  1201  0007E6  C002  F072         	movff	?___wmul+1,sprintf@prec+1
  1202  0007EA                     
  1203                           ;doprnt.c: 648: prec += *f++ - '0';
  1204  0007EA  0ED0               	movlw	208
  1205  0007EC  6E55               	movwf	??_sprintf^0,c
  1206  0007EE  0EFF               	movlw	255
  1207  0007F0  6E56               	movwf	(??_sprintf+1)^0,c
  1208  0007F2  C04F  FFF6         	movff	sprintf@f,tblptrl
  1209  0007F6  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1210  0007FA                     	if	0	;tblptru may be non-zero
  1211  0007FA                     	endif
  1212  0007FA                     	if	0	;tblptru may be non-zero
  1213  0007FA                     	endif
  1214  0007FA  0008               	tblrd		*
  1215  0007FC  50F5               	movf	tablat,w,c
  1216  0007FE  6E57               	movwf	(??_sprintf+2)^0,c
  1217  000800  6A58               	clrf	(??_sprintf+3)^0,c
  1218  000802  5055               	movf	??_sprintf^0,w,c
  1219  000804  2657               	addwf	(??_sprintf+2)^0,f,c
  1220  000806  5056               	movf	(??_sprintf+1)^0,w,c
  1221  000808  2258               	addwfc	(??_sprintf+3)^0,f,c
  1222  00080A  5057               	movf	(??_sprintf+2)^0,w,c
  1223  00080C  2671               	addwf	sprintf@prec^0,f,c
  1224  00080E  5058               	movf	(??_sprintf+3)^0,w,c
  1225  000810  2272               	addwfc	(sprintf@prec+1)^0,f,c
  1226  000812  4A4F               	infsnz	sprintf@f^0,f,c
  1227  000814  2A50               	incf	(sprintf@f+1)^0,f,c
  1228  000816                     l3476:
  1229  000816  C04F  FFF6         	movff	sprintf@f,tblptrl
  1230  00081A  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1231  00081E                     	if	0	;tblptru may be non-zero
  1232  00081E                     	endif
  1233  00081E                     	if	0	;tblptru may be non-zero
  1234  00081E                     	endif
  1235  00081E  0008               	tblrd		*
  1236  000820  50F5               	movf	tablat,w,c
  1237  000822  ECEE  F01B         	call	_isdigit
  1238  000826  B0D8               	btfsc	status,0,c
  1239  000828  EF18  F004         	goto	u3621
  1240  00082C  EF1A  F004         	goto	u3620
  1241  000830                     u3621:
  1242  000830  EFE7  F003         	goto	l3470
  1243  000834                     u3620:
  1244  000834  EF26  F004         	goto	l3486
  1245  000838                     l3478:
  1246                           
  1247                           ;doprnt.c: 652: prec = 0;
  1248  000838  0E00               	movlw	0
  1249  00083A  6E72               	movwf	(sprintf@prec+1)^0,c
  1250  00083C  0E00               	movlw	0
  1251  00083E  6E71               	movwf	sprintf@prec^0,c
  1252  000840                     
  1253                           ;doprnt.c: 654: flag |= 0x1000;
  1254  000840  886A               	bsf	(sprintf@flag+1)^0,4,c
  1255  000842  EF26  F004         	goto	l3486
  1256  000846                     l3482:
  1257                           
  1258                           ;doprnt.c: 689: flag |= 0x400;
  1259  000846  846A               	bsf	(sprintf@flag+1)^0,2,c
  1260                           
  1261                           ;doprnt.c: 690: break;
  1262  000848  EF42  F004         	goto	l3488
  1263  00084C                     l3486:
  1264  00084C  C04F  FFF6         	movff	sprintf@f,tblptrl
  1265  000850  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1266  000854  4A4F               	infsnz	sprintf@f^0,f,c
  1267  000856  2A50               	incf	(sprintf@f+1)^0,f,c
  1268  000858                     	if	0	;tblptru may be non-zero
  1269  000858                     	endif
  1270  000858                     	if	0	;tblptru may be non-zero
  1271  000858                     	endif
  1272  000858  0008               	tblrd		*
  1273  00085A  CFF5 F073          	movff	tablat,sprintf@c
  1274  00085E  5073               	movf	sprintf@c^0,w,c
  1275                           
  1276                           ; Switch size 1, requested type "simple"
  1277                           ; Number of cases is 4, Range of values is 0 to 105
  1278                           ; switch strategies available:
  1279                           ; Name         Instructions Cycles
  1280                           ; simple_byte           13     7 (average)
  1281                           ;	Chosen strategy is simple_byte
  1282  000860  0A00               	xorlw	0	; case 0
  1283  000862  B4D8               	btfsc	status,2,c
  1284  000864  EFFB  F009         	goto	l3766
  1285  000868  0A64               	xorlw	100	; case 100
  1286  00086A  B4D8               	btfsc	status,2,c
  1287  00086C  EF42  F004         	goto	l3488
  1288  000870  0A02               	xorlw	2	; case 102
  1289  000872  B4D8               	btfsc	status,2,c
  1290  000874  EF23  F004         	goto	l3482
  1291  000878  0A0F               	xorlw	15	; case 105
  1292  00087A  B4D8               	btfsc	status,2,c
  1293  00087C  EF42  F004         	goto	l3488
  1294  000880  EFEA  F009         	goto	l3764
  1295  000884                     l3488:
  1296                           
  1297                           ;doprnt.c: 851: if(flag & (0x700)) {
  1298  000884  0E07               	movlw	7
  1299  000886  146A               	andwf	(sprintf@flag+1)^0,w,c
  1300  000888  B4D8               	btfsc	status,2,c
  1301  00088A  EF49  F004         	goto	u3631
  1302  00088E  EF4B  F004         	goto	u3630
  1303  000892                     u3631:
  1304  000892  EF44  F008         	goto	l3668
  1305  000896                     u3630:
  1306  000896                     
  1307                           ;doprnt.c: 853: if(flag & 0x1000)
  1308  000896  A86A               	btfss	(sprintf@flag+1)^0,4,c
  1309  000898  EF50  F004         	goto	u3641
  1310  00089C  EF52  F004         	goto	u3640
  1311  0008A0                     u3641:
  1312  0008A0  EF56  F004         	goto	l3494
  1313  0008A4                     u3640:
  1314  0008A4                     
  1315                           ;doprnt.c: 855: prec = 6;
  1316  0008A4  0E00               	movlw	0
  1317  0008A6  6E72               	movwf	(sprintf@prec+1)^0,c
  1318  0008A8  0E06               	movlw	6
  1319  0008AA  6E71               	movwf	sprintf@prec^0,c
  1320  0008AC                     l3494:
  1321                           
  1322                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1323  0008AC  C05D  FFD9         	movff	sprintf@ap,fsr2l
  1324  0008B0  C05E  FFDA         	movff	sprintf@ap+1,fsr2h
  1325  0008B4  CFDE F06D          	movff	postinc2,sprintf@fval
  1326  0008B8  CFDE F06E          	movff	postinc2,sprintf@fval+1
  1327  0008BC  CFDE F06F          	movff	postinc2,sprintf@fval+2
  1328  0008C0  CFDE F070          	movff	postinc2,sprintf@fval+3
  1329  0008C4  0E04               	movlw	4
  1330  0008C6  265D               	addwf	sprintf@ap^0,f,c
  1331  0008C8  0E00               	movlw	0
  1332  0008CA  225E               	addwfc	(sprintf@ap+1)^0,f,c
  1333  0008CC                     
  1334                           ;doprnt.c: 857: if(fval < 0.0) {
  1335  0008CC  BE70               	btfsc	(sprintf@fval+3)^0,7,c
  1336  0008CE  EF6D  F004         	goto	u3650
  1337  0008D2  EF6B  F004         	goto	u3651
  1338  0008D6                     u3651:
  1339  0008D6  EF81  F004         	goto	l3504
  1340  0008DA                     u3650:
  1341  0008DA                     
  1342                           ;doprnt.c: 858: fval = -fval;
  1343  0008DA  C06D  F001         	movff	sprintf@fval,___flneg@f1
  1344  0008DE  C06E  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1345  0008E2  C06F  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1346  0008E6  C070  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1347  0008EA  ECD2  F01B         	call	___flneg	;wreg free
  1348  0008EE  C001  F06D         	movff	?___flneg,sprintf@fval
  1349  0008F2  C002  F06E         	movff	?___flneg+1,sprintf@fval+1
  1350  0008F6  C003  F06F         	movff	?___flneg+2,sprintf@fval+2
  1351  0008FA  C004  F070         	movff	?___flneg+3,sprintf@fval+3
  1352  0008FE                     
  1353                           ;doprnt.c: 859: flag |= 0x03;
  1354  0008FE  0E03               	movlw	3
  1355  000900  1269               	iorwf	sprintf@flag^0,f,c
  1356  000902                     l3504:
  1357                           
  1358                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  1359  000902  0E00               	movlw	0
  1360  000904  6E68               	movwf	(sprintf@eexp+1)^0,c
  1361  000906  0E00               	movlw	0
  1362  000908  6E67               	movwf	sprintf@eexp^0,c
  1363  00090A                     
  1364                           ;doprnt.c: 862: if( fval!=0) {
  1365  00090A  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1366  00090E  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1367  000912  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1368  000916  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1369  00091A  0E00               	movlw	0
  1370  00091C  6E05               	movwf	___fleq@ff2^0,c
  1371  00091E  0E00               	movlw	0
  1372  000920  6E06               	movwf	(___fleq@ff2+1)^0,c
  1373  000922  0E00               	movlw	0
  1374  000924  6E07               	movwf	(___fleq@ff2+2)^0,c
  1375  000926  0E00               	movlw	0
  1376  000928  6E08               	movwf	(___fleq@ff2+3)^0,c
  1377  00092A  ECD5  F019         	call	___fleq	;wreg free
  1378  00092E  B0D8               	btfsc	status,0,c
  1379  000930  EF9C  F004         	goto	u3661
  1380  000934  EF9E  F004         	goto	u3660
  1381  000938                     u3661:
  1382  000938  EF2D  F005         	goto	l3532
  1383  00093C                     u3660:
  1384  00093C                     
  1385                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  1386  00093C  346F               	rlcf	(sprintf@fval+2)^0,w,c
  1387  00093E  3470               	rlcf	(sprintf@fval+3)^0,w,c
  1388  000940  0F82               	addlw	130
  1389  000942  6E67               	movwf	sprintf@eexp^0,c
  1390  000944  6A68               	clrf	(sprintf@eexp+1)^0,c
  1391  000946  0EFF               	movlw	255
  1392  000948  2268               	addwfc	(sprintf@eexp+1)^0,f,c
  1393  00094A                     
  1394                           ;doprnt.c: 864: eexp--;
  1395  00094A  0667               	decf	sprintf@eexp^0,f,c
  1396  00094C  A0D8               	btfss	status,0,c
  1397  00094E  0668               	decf	(sprintf@eexp+1)^0,f,c
  1398  000950                     
  1399                           ;doprnt.c: 865: eexp *= 3;
  1400  000950  C067  F001         	movff	sprintf@eexp,___wmul@multiplier
  1401  000954  C068  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  1402  000958  0E00               	movlw	0
  1403  00095A  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1404  00095C  0E03               	movlw	3
  1405  00095E  6E03               	movwf	___wmul@multiplicand^0,c
  1406  000960  EC07  F01C         	call	___wmul	;wreg free
  1407  000964  C001  F067         	movff	?___wmul,sprintf@eexp
  1408  000968  C002  F068         	movff	?___wmul+1,sprintf@eexp+1
  1409  00096C                     
  1410                           ;doprnt.c: 866: eexp /= 10;
  1411  00096C  C067  F007         	movff	sprintf@eexp,___awdiv@dividend
  1412  000970  C068  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  1413  000974  0E00               	movlw	0
  1414  000976  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1415  000978  0E0A               	movlw	10
  1416  00097A  6E09               	movwf	___awdiv@divisor^0,c
  1417  00097C  EC1B  F019         	call	___awdiv	;wreg free
  1418  000980  C007  F067         	movff	?___awdiv,sprintf@eexp
  1419  000984  C008  F068         	movff	?___awdiv+1,sprintf@eexp+1
  1420  000988                     
  1421                           ;doprnt.c: 867: if(eexp < 0)
  1422  000988  BE68               	btfsc	(sprintf@eexp+1)^0,7,c
  1423  00098A  EFCB  F004         	goto	u3670
  1424  00098E  EFC9  F004         	goto	u3671
  1425  000992                     u3671:
  1426  000992  EFCE  F004         	goto	l3520
  1427  000996                     u3670:
  1428  000996                     
  1429                           ;doprnt.c: 868: eexp--;
  1430  000996  0667               	decf	sprintf@eexp^0,f,c
  1431  000998  A0D8               	btfss	status,0,c
  1432  00099A  0668               	decf	(sprintf@eexp+1)^0,f,c
  1433  00099C                     l3520:
  1434                           
  1435                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  1436  00099C  5067               	movf	sprintf@eexp^0,w,c
  1437  00099E  0800               	sublw	0
  1438  0009A0  EC77  F00E         	call	_scale
  1439  0009A4  C028  F05F         	movff	?_scale,sprintf@tmpval
  1440  0009A8  C029  F060         	movff	?_scale+1,sprintf@tmpval+1
  1441  0009AC  C02A  F061         	movff	?_scale+2,sprintf@tmpval+2
  1442  0009B0  C02B  F062         	movff	?_scale+3,sprintf@tmpval+3
  1443  0009B4                     
  1444                           ;doprnt.c: 873: tmpval.integ *= fval;
  1445  0009B4  C05F  F00F         	movff	sprintf@tmpval,___flmul@b
  1446  0009B8  C060  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1447  0009BC  C061  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1448  0009C0  C062  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1449  0009C4  C06D  F013         	movff	sprintf@fval,___flmul@a
  1450  0009C8  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  1451  0009CC  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  1452  0009D0  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  1453  0009D4  EC62  F00C         	call	___flmul	;wreg free
  1454  0009D8  C00F  F05F         	movff	?___flmul,sprintf@tmpval
  1455  0009DC  C010  F060         	movff	?___flmul+1,sprintf@tmpval+1
  1456  0009E0  C011  F061         	movff	?___flmul+2,sprintf@tmpval+2
  1457  0009E4  C012  F062         	movff	?___flmul+3,sprintf@tmpval+3
  1458  0009E8                     
  1459                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  1460  0009E8  C05F  F001         	movff	sprintf@tmpval,___flge@ff1
  1461  0009EC  C060  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1462  0009F0  C061  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1463  0009F4  C062  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1464  0009F8  0E00               	movlw	0
  1465  0009FA  6E05               	movwf	___flge@ff2^0,c
  1466  0009FC  0E00               	movlw	0
  1467  0009FE  6E06               	movwf	(___flge@ff2+1)^0,c
  1468  000A00  0E80               	movlw	128
  1469  000A02  6E07               	movwf	(___flge@ff2+2)^0,c
  1470  000A04  0E3F               	movlw	63
  1471  000A06  6E08               	movwf	(___flge@ff2+3)^0,c
  1472  000A08  EC99  F018         	call	___flge	;wreg free
  1473  000A0C  B0D8               	btfsc	status,0,c
  1474  000A0E  EF0B  F005         	goto	u3681
  1475  000A12  EF0D  F005         	goto	u3680
  1476  000A16                     u3681:
  1477  000A16  EF12  F005         	goto	l3528
  1478  000A1A                     u3680:
  1479  000A1A                     
  1480                           ;doprnt.c: 875: eexp--;
  1481  000A1A  0667               	decf	sprintf@eexp^0,f,c
  1482  000A1C  A0D8               	btfss	status,0,c
  1483  000A1E  0668               	decf	(sprintf@eexp+1)^0,f,c
  1484  000A20  EF2D  F005         	goto	l3532
  1485  000A24                     l3528:
  1486                           
  1487                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  1488  000A24  C05F  F001         	movff	sprintf@tmpval,___flge@ff1
  1489  000A28  C060  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1490  000A2C  C061  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1491  000A30  C062  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1492  000A34  0E00               	movlw	0
  1493  000A36  6E05               	movwf	___flge@ff2^0,c
  1494  000A38  0E00               	movlw	0
  1495  000A3A  6E06               	movwf	(___flge@ff2+1)^0,c
  1496  000A3C  0E20               	movlw	32
  1497  000A3E  6E07               	movwf	(___flge@ff2+2)^0,c
  1498  000A40  0E41               	movlw	65
  1499  000A42  6E08               	movwf	(___flge@ff2+3)^0,c
  1500  000A44  EC99  F018         	call	___flge	;wreg free
  1501  000A48  A0D8               	btfss	status,0,c
  1502  000A4A  EF29  F005         	goto	u3691
  1503  000A4E  EF2B  F005         	goto	u3690
  1504  000A52                     u3691:
  1505  000A52  EF2D  F005         	goto	l3532
  1506  000A56                     u3690:
  1507  000A56                     
  1508                           ;doprnt.c: 877: eexp++;
  1509  000A56  4A67               	infsnz	sprintf@eexp^0,f,c
  1510  000A58  2A68               	incf	(sprintf@eexp+1)^0,f,c
  1511  000A5A                     l3532:
  1512                           
  1513                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  1514  000A5A  BE72               	btfsc	(sprintf@prec+1)^0,7,c
  1515  000A5C  EF3B  F005         	goto	u3700
  1516  000A60  5072               	movf	(sprintf@prec+1)^0,w,c
  1517  000A62  E107               	bnz	u3701
  1518  000A64  0E0D               	movlw	13
  1519  000A66  5C71               	subwf	sprintf@prec^0,w,c
  1520  000A68  B0D8               	btfsc	status,0,c
  1521  000A6A  EF39  F005         	goto	u3701
  1522  000A6E  EF3B  F005         	goto	u3700
  1523  000A72                     u3701:
  1524  000A72  EF58  F005         	goto	l3536
  1525  000A76                     u3700:
  1526  000A76                     
  1527                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  1528  000A76  C06D  F035         	movff	sprintf@fval,___fladd@b
  1529  000A7A  C06E  F036         	movff	sprintf@fval+1,___fladd@b+1
  1530  000A7E  C06F  F037         	movff	sprintf@fval+2,___fladd@b+2
  1531  000A82  C070  F038         	movff	sprintf@fval+3,___fladd@b+3
  1532  000A86  5071               	movf	sprintf@prec^0,w,c
  1533  000A88  EC4A  F012         	call	_fround
  1534  000A8C  C028  F039         	movff	?_fround,___fladd@a
  1535  000A90  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1536  000A94  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1537  000A98  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1538  000A9C  EC02  F00A         	call	___fladd	;wreg free
  1539  000AA0  C035  F06D         	movff	?___fladd,sprintf@fval
  1540  000AA4  C036  F06E         	movff	?___fladd+1,sprintf@fval+1
  1541  000AA8  C037  F06F         	movff	?___fladd+2,sprintf@fval+2
  1542  000AAC  C038  F070         	movff	?___fladd+3,sprintf@fval+3
  1543  000AB0                     l3536:
  1544                           
  1545                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1546  000AB0  BE68               	btfsc	(sprintf@eexp+1)^0,7,c
  1547  000AB2  EF66  F005         	goto	u3710
  1548  000AB6  5068               	movf	(sprintf@eexp+1)^0,w,c
  1549  000AB8  E107               	bnz	u3711
  1550  000ABA  0E0A               	movlw	10
  1551  000ABC  5C67               	subwf	sprintf@eexp^0,w,c
  1552  000ABE  B0D8               	btfsc	status,0,c
  1553  000AC0  EF64  F005         	goto	u3711
  1554  000AC4  EF66  F005         	goto	u3710
  1555  000AC8                     u3711:
  1556  000AC8  EFA2  F005         	goto	l3544
  1557  000ACC                     u3710:
  1558  000ACC  C06D  F001         	movff	sprintf@fval,___fleq@ff1
  1559  000AD0  C06E  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1560  000AD4  C06F  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1561  000AD8  C070  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1562  000ADC  0E00               	movlw	0
  1563  000ADE  6E05               	movwf	___fleq@ff2^0,c
  1564  000AE0  0E00               	movlw	0
  1565  000AE2  6E06               	movwf	(___fleq@ff2+1)^0,c
  1566  000AE4  0E00               	movlw	0
  1567  000AE6  6E07               	movwf	(___fleq@ff2+2)^0,c
  1568  000AE8  0E00               	movlw	0
  1569  000AEA  6E08               	movwf	(___fleq@ff2+3)^0,c
  1570  000AEC  ECD5  F019         	call	___fleq	;wreg free
  1571  000AF0  B0D8               	btfsc	status,0,c
  1572  000AF2  EF7D  F005         	goto	u3721
  1573  000AF6  EF7F  F005         	goto	u3720
  1574  000AFA                     u3721:
  1575  000AFA  EFF4  F005         	goto	l3558
  1576  000AFE                     u3720:
  1577  000AFE  C06D  F031         	movff	sprintf@fval,___fltol@f1
  1578  000B02  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1579  000B06  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1580  000B0A  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1581  000B0E  EC16  F018         	call	___fltol	;wreg free
  1582  000B12  5031               	movf	?___fltol^0,w,c
  1583  000B14  1032               	iorwf	(?___fltol+1)^0,w,c
  1584  000B16  1033               	iorwf	(?___fltol+2)^0,w,c
  1585  000B18  1034               	iorwf	(?___fltol+3)^0,w,c
  1586  000B1A  A4D8               	btfss	status,2,c
  1587  000B1C  EF92  F005         	goto	u3731
  1588  000B20  EF94  F005         	goto	u3730
  1589  000B24                     u3731:
  1590  000B24  EFF4  F005         	goto	l3558
  1591  000B28                     u3730:
  1592  000B28  BE68               	btfsc	(sprintf@eexp+1)^0,7,c
  1593  000B2A  EFA0  F005         	goto	u3741
  1594  000B2E  5068               	movf	(sprintf@eexp+1)^0,w,c
  1595  000B30  E109               	bnz	u3740
  1596  000B32  0E02               	movlw	2
  1597  000B34  5C67               	subwf	sprintf@eexp^0,w,c
  1598  000B36  A0D8               	btfss	status,0,c
  1599  000B38  EFA0  F005         	goto	u3741
  1600  000B3C  EFA2  F005         	goto	u3740
  1601  000B40                     u3741:
  1602  000B40  EFF4  F005         	goto	l3558
  1603  000B44                     u3740:
  1604  000B44                     l3544:
  1605                           
  1606                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  1607  000B44  C05F  F001         	movff	sprintf@tmpval,___flge@ff1
  1608  000B48  C060  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1609  000B4C  C061  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1610  000B50  C062  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1611  000B54  0E5F               	movlw	95
  1612  000B56  6E05               	movwf	___flge@ff2^0,c
  1613  000B58  0E70               	movlw	112
  1614  000B5A  6E06               	movwf	(___flge@ff2+1)^0,c
  1615  000B5C  0E89               	movlw	137
  1616  000B5E  6E07               	movwf	(___flge@ff2+2)^0,c
  1617  000B60  0E40               	movlw	64
  1618  000B62  6E08               	movwf	(___flge@ff2+3)^0,c
  1619  000B64  EC99  F018         	call	___flge	;wreg free
  1620  000B68  B0D8               	btfsc	status,0,c
  1621  000B6A  EFB9  F005         	goto	u3751
  1622  000B6E  EFBB  F005         	goto	u3750
  1623  000B72                     u3751:
  1624  000B72  EFC1  F005         	goto	l3548
  1625  000B76                     u3750:
  1626  000B76                     
  1627                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1628  000B76  0EF7               	movlw	247
  1629  000B78  2667               	addwf	sprintf@eexp^0,f,c
  1630  000B7A  0EFF               	movlw	255
  1631  000B7C  2268               	addwfc	(sprintf@eexp+1)^0,f,c
  1632                           
  1633                           ;doprnt.c: 1148: }else{
  1634  000B7E  EFC5  F005         	goto	l3550
  1635  000B82                     l3548:
  1636                           
  1637                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1638  000B82  0EF8               	movlw	248
  1639  000B84  2667               	addwf	sprintf@eexp^0,f,c
  1640  000B86  0EFF               	movlw	255
  1641  000B88  2268               	addwfc	(sprintf@eexp+1)^0,f,c
  1642  000B8A                     l3550:
  1643                           
  1644                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1645  000B8A  5067               	movf	sprintf@eexp^0,w,c
  1646  000B8C  EC77  F00E         	call	_scale
  1647  000B90  C028  F05F         	movff	?_scale,sprintf@tmpval
  1648  000B94  C029  F060         	movff	?_scale+1,sprintf@tmpval+1
  1649  000B98  C02A  F061         	movff	?_scale+2,sprintf@tmpval+2
  1650  000B9C  C02B  F062         	movff	?_scale+3,sprintf@tmpval+3
  1651  000BA0  C06D  F001         	movff	sprintf@fval,__div_to_l_@f1
  1652  000BA4  C06E  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1653  000BA8  C06F  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1654  000BAC  C070  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1655  000BB0  C05F  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  1656  000BB4  C060  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1657  000BB8  C061  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1658  000BBC  C062  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1659  000BC0  EC20  F015         	call	__div_to_l_	;wreg free
  1660  000BC4  C001  F063         	movff	?__div_to_l_,sprintf@val
  1661  000BC8  C002  F064         	movff	?__div_to_l_+1,sprintf@val+1
  1662  000BCC  C003  F065         	movff	?__div_to_l_+2,sprintf@val+2
  1663  000BD0  C004  F066         	movff	?__div_to_l_+3,sprintf@val+3
  1664  000BD4                     
  1665                           ;doprnt.c: 1155: fval = 0.0;
  1666  000BD4  0E00               	movlw	0
  1667  000BD6  6E6D               	movwf	sprintf@fval^0,c
  1668  000BD8  0E00               	movlw	0
  1669  000BDA  6E6E               	movwf	(sprintf@fval+1)^0,c
  1670  000BDC  0E00               	movlw	0
  1671  000BDE  6E6F               	movwf	(sprintf@fval+2)^0,c
  1672  000BE0  0E00               	movlw	0
  1673  000BE2  6E70               	movwf	(sprintf@fval+3)^0,c
  1674                           
  1675                           ;doprnt.c: 1156: } else {
  1676  000BE4  EF2F  F006         	goto	l3562
  1677  000BE8                     l3558:
  1678                           
  1679                           ;doprnt.c: 1157: val = (unsigned long)fval;
  1680  000BE8  C06D  F031         	movff	sprintf@fval,___fltol@f1
  1681  000BEC  C06E  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1682  000BF0  C06F  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1683  000BF4  C070  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1684  000BF8  EC16  F018         	call	___fltol	;wreg free
  1685  000BFC  C031  F063         	movff	?___fltol,sprintf@val
  1686  000C00  C032  F064         	movff	?___fltol+1,sprintf@val+1
  1687  000C04  C033  F065         	movff	?___fltol+2,sprintf@val+2
  1688  000C08  C034  F066         	movff	?___fltol+3,sprintf@val+3
  1689                           
  1690                           ;doprnt.c: 1158: fval -= (double)val;
  1691  000C0C  C06D  F045         	movff	sprintf@fval,___flsub@b
  1692  000C10  C06E  F046         	movff	sprintf@fval+1,___flsub@b+1
  1693  000C14  C06F  F047         	movff	sprintf@fval+2,___flsub@b+2
  1694  000C18  C070  F048         	movff	sprintf@fval+3,___flsub@b+3
  1695  000C1C  C063  F001         	movff	sprintf@val,___xxtofl@val
  1696  000C20  C064  F002         	movff	sprintf@val+1,___xxtofl@val+1
  1697  000C24  C065  F003         	movff	sprintf@val+2,___xxtofl@val+2
  1698  000C28  C066  F004         	movff	sprintf@val+3,___xxtofl@val+3
  1699  000C2C  0E00               	movlw	0
  1700  000C2E  EC9B  F013         	call	___xxtofl
  1701  000C32  C001  F049         	movff	?___xxtofl,___flsub@a
  1702  000C36  C002  F04A         	movff	?___xxtofl+1,___flsub@a+1
  1703  000C3A  C003  F04B         	movff	?___xxtofl+2,___flsub@a+2
  1704  000C3E  C004  F04C         	movff	?___xxtofl+3,___flsub@a+3
  1705  000C42  ECAF  F01B         	call	___flsub	;wreg free
  1706  000C46  C045  F06D         	movff	?___flsub,sprintf@fval
  1707  000C4A  C046  F06E         	movff	?___flsub+1,sprintf@fval+1
  1708  000C4E  C047  F06F         	movff	?___flsub+2,sprintf@fval+2
  1709  000C52  C048  F070         	movff	?___flsub+3,sprintf@fval+3
  1710  000C56                     
  1711                           ;doprnt.c: 1159: eexp = 0;
  1712  000C56  0E00               	movlw	0
  1713  000C58  6E68               	movwf	(sprintf@eexp+1)^0,c
  1714  000C5A  0E00               	movlw	0
  1715  000C5C  6E67               	movwf	sprintf@eexp^0,c
  1716  000C5E                     l3562:
  1717                           
  1718                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  1719  000C5E  0E01               	movlw	1
  1720  000C60  6E73               	movwf	sprintf@c^0,c
  1721  000C62                     l3568:
  1722                           
  1723                           ;doprnt.c: 1163: if(val < dpowers[c])
  1724  000C62  5073               	movf	sprintf@c^0,w,c
  1725  000C64  0D04               	mullw	4
  1726  000C66  0E69               	movlw	low _dpowers
  1727  000C68  24F3               	addwf	243,w,c
  1728  000C6A  6EF6               	movwf	tblptrl,c
  1729  000C6C  0E06               	movlw	high _dpowers
  1730  000C6E  20F4               	addwfc	244,w,c
  1731  000C70  6EF7               	movwf	tblptrh,c
  1732  000C72                     	if	0	;There are less than 3 active tblptr bytes
  1733  000C72                     	endif
  1734  000C72  0009               	tblrd		*+
  1735  000C74  50F5               	movf	tablat,w,c
  1736  000C76  5C63               	subwf	sprintf@val^0,w,c
  1737  000C78  0009               	tblrd		*+
  1738  000C7A  50F5               	movf	tablat,w,c
  1739  000C7C  5864               	subwfb	(sprintf@val+1)^0,w,c
  1740  000C7E  0009               	tblrd		*+
  1741  000C80  50F5               	movf	tablat,w,c
  1742  000C82  5865               	subwfb	(sprintf@val+2)^0,w,c
  1743  000C84  0009               	tblrd		*+
  1744  000C86  50F5               	movf	tablat,w,c
  1745  000C88  5866               	subwfb	(sprintf@val+3)^0,w,c
  1746  000C8A  B0D8               	btfsc	status,0,c
  1747  000C8C  EF4A  F006         	goto	u3761
  1748  000C90  EF4C  F006         	goto	u3760
  1749  000C94                     u3761:
  1750  000C94  EF4E  F006         	goto	l3572
  1751  000C98                     u3760:
  1752  000C98  EF58  F006         	goto	l3576
  1753  000C9C                     l3572:
  1754  000C9C  2A73               	incf	sprintf@c^0,f,c
  1755  000C9E  0E0A               	movlw	10
  1756  000CA0  1873               	xorwf	sprintf@c^0,w,c
  1757  000CA2  A4D8               	btfss	status,2,c
  1758  000CA4  EF56  F006         	goto	u3771
  1759  000CA8  EF58  F006         	goto	u3770
  1760  000CAC                     u3771:
  1761  000CAC  EF31  F006         	goto	l3568
  1762  000CB0                     u3770:
  1763  000CB0                     l3576:
  1764                           
  1765                           ;doprnt.c: 1168: width -= prec + c + eexp;
  1766  000CB0  5073               	movf	sprintf@c^0,w,c
  1767  000CB2  2471               	addwf	sprintf@prec^0,w,c
  1768  000CB4  6E55               	movwf	??_sprintf^0,c
  1769  000CB6  0E00               	movlw	0
  1770  000CB8  2072               	addwfc	(sprintf@prec+1)^0,w,c
  1771  000CBA  6E56               	movwf	(??_sprintf+1)^0,c
  1772  000CBC  5067               	movf	sprintf@eexp^0,w,c
  1773  000CBE  2655               	addwf	??_sprintf^0,f,c
  1774  000CC0  5068               	movf	(sprintf@eexp+1)^0,w,c
  1775  000CC2  2256               	addwfc	(??_sprintf+1)^0,f,c
  1776  000CC4  5055               	movf	??_sprintf^0,w,c
  1777  000CC6  5E6B               	subwf	sprintf@width^0,f,c
  1778  000CC8  5056               	movf	(??_sprintf+1)^0,w,c
  1779  000CCA  5A6C               	subwfb	(sprintf@width+1)^0,f,c
  1780                           
  1781                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  1782  000CCC  5071               	movf	sprintf@prec^0,w,c
  1783  000CCE  1072               	iorwf	(sprintf@prec+1)^0,w,c
  1784  000CD0  B4D8               	btfsc	status,2,c
  1785  000CD2  EF6D  F006         	goto	u3781
  1786  000CD6  EF6F  F006         	goto	u3780
  1787  000CDA                     u3781:
  1788  000CDA  EF72  F006         	goto	l3580
  1789  000CDE                     u3780:
  1790  000CDE                     
  1791                           ;doprnt.c: 1174: width--;
  1792  000CDE  066B               	decf	sprintf@width^0,f,c
  1793  000CE0  A0D8               	btfss	status,0,c
  1794  000CE2  066C               	decf	(sprintf@width+1)^0,f,c
  1795  000CE4                     l3580:
  1796                           
  1797                           ;doprnt.c: 1175: if(flag & 0x03)
  1798  000CE4  0E03               	movlw	3
  1799  000CE6  1469               	andwf	sprintf@flag^0,w,c
  1800  000CE8  6E55               	movwf	??_sprintf^0,c
  1801  000CEA  0E00               	movlw	0
  1802  000CEC  146A               	andwf	(sprintf@flag+1)^0,w,c
  1803  000CEE  6E56               	movwf	(??_sprintf+1)^0,c
  1804  000CF0  5055               	movf	??_sprintf^0,w,c
  1805  000CF2  1056               	iorwf	(??_sprintf+1)^0,w,c
  1806  000CF4  B4D8               	btfsc	status,2,c
  1807  000CF6  EF7F  F006         	goto	u3791
  1808  000CFA  EF81  F006         	goto	u3790
  1809  000CFE                     u3791:
  1810  000CFE  EF84  F006         	goto	l3584
  1811  000D02                     u3790:
  1812  000D02                     
  1813                           ;doprnt.c: 1176: width--;
  1814  000D02  066B               	decf	sprintf@width^0,f,c
  1815  000D04  A0D8               	btfss	status,0,c
  1816  000D06  066C               	decf	(sprintf@width+1)^0,f,c
  1817  000D08                     l3584:
  1818                           
  1819                           ;doprnt.c: 1179: if(flag & 0x04) {
  1820  000D08  A469               	btfss	sprintf@flag^0,2,c
  1821  000D0A  EF89  F006         	goto	u3801
  1822  000D0E  EF8B  F006         	goto	u3800
  1823  000D12                     u3801:
  1824  000D12  EFC9  F006         	goto	l3606
  1825  000D16                     u3800:
  1826  000D16                     
  1827                           ;doprnt.c: 1183: if(flag & 0x03)
  1828  000D16  0E03               	movlw	3
  1829  000D18  1469               	andwf	sprintf@flag^0,w,c
  1830  000D1A  6E55               	movwf	??_sprintf^0,c
  1831  000D1C  0E00               	movlw	0
  1832  000D1E  146A               	andwf	(sprintf@flag+1)^0,w,c
  1833  000D20  6E56               	movwf	(??_sprintf+1)^0,c
  1834  000D22  5055               	movf	??_sprintf^0,w,c
  1835  000D24  1056               	iorwf	(??_sprintf+1)^0,w,c
  1836  000D26  B4D8               	btfsc	status,2,c
  1837  000D28  EF98  F006         	goto	u3811
  1838  000D2C  EF9A  F006         	goto	u3810
  1839  000D30                     u3811:
  1840  000D30  EFAF  F006         	goto	l3598
  1841  000D34                     u3810:
  1842  000D34                     
  1843                           ;doprnt.c: 1185: ((*sp++ = ('-')));
  1844  000D34  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1845  000D38  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1846  000D3C  0E2D               	movlw	45
  1847  000D3E  6EDF               	movwf	indf2,c
  1848  000D40  4A4D               	infsnz	sprintf@sp^0,f,c
  1849  000D42  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1850  000D44  EFAF  F006         	goto	l3598
  1851  000D48                     l3592:
  1852                           
  1853                           ;doprnt.c: 1195: ((*sp++ = ('0')));
  1854  000D48  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1855  000D4C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1856  000D50  0E30               	movlw	48
  1857  000D52  6EDF               	movwf	indf2,c
  1858  000D54  4A4D               	infsnz	sprintf@sp^0,f,c
  1859  000D56  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1860  000D58                     
  1861                           ;doprnt.c: 1196: width--;
  1862  000D58  066B               	decf	sprintf@width^0,f,c
  1863  000D5A  A0D8               	btfss	status,0,c
  1864  000D5C  066C               	decf	(sprintf@width+1)^0,f,c
  1865  000D5E                     l3598:
  1866  000D5E  BE6C               	btfsc	(sprintf@width+1)^0,7,c
  1867  000D60  EFBC  F006         	goto	u3820
  1868  000D64  506C               	movf	(sprintf@width+1)^0,w,c
  1869  000D66  E106               	bnz	u3821
  1870  000D68  046B               	decf	sprintf@width^0,w,c
  1871  000D6A  B0D8               	btfsc	status,0,c
  1872  000D6C  EFBA  F006         	goto	u3821
  1873  000D70  EFBC  F006         	goto	u3820
  1874  000D74                     u3821:
  1875  000D74  EFA4  F006         	goto	l3592
  1876  000D78                     u3820:
  1877  000D78  EF38  F007         	goto	l3622
  1878  000D7C                     l3600:
  1879                           
  1880                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  1881  000D7C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1882  000D80  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1883  000D84  0E20               	movlw	32
  1884  000D86  6EDF               	movwf	indf2,c
  1885  000D88  4A4D               	infsnz	sprintf@sp^0,f,c
  1886  000D8A  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1887  000D8C                     
  1888                           ;doprnt.c: 1208: width--;
  1889  000D8C  066B               	decf	sprintf@width^0,f,c
  1890  000D8E  A0D8               	btfss	status,0,c
  1891  000D90  066C               	decf	(sprintf@width+1)^0,f,c
  1892  000D92                     l3606:
  1893  000D92  BE6C               	btfsc	(sprintf@width+1)^0,7,c
  1894  000D94  EFD6  F006         	goto	u3830
  1895  000D98  506C               	movf	(sprintf@width+1)^0,w,c
  1896  000D9A  E106               	bnz	u3831
  1897  000D9C  046B               	decf	sprintf@width^0,w,c
  1898  000D9E  B0D8               	btfsc	status,0,c
  1899  000DA0  EFD4  F006         	goto	u3831
  1900  000DA4  EFD6  F006         	goto	u3830
  1901  000DA8                     u3831:
  1902  000DA8  EFBE  F006         	goto	l3600
  1903  000DAC                     u3830:
  1904  000DAC                     
  1905                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  1906  000DAC  0E03               	movlw	3
  1907  000DAE  1469               	andwf	sprintf@flag^0,w,c
  1908  000DB0  6E55               	movwf	??_sprintf^0,c
  1909  000DB2  0E00               	movlw	0
  1910  000DB4  146A               	andwf	(sprintf@flag+1)^0,w,c
  1911  000DB6  6E56               	movwf	(??_sprintf+1)^0,c
  1912  000DB8  5055               	movf	??_sprintf^0,w,c
  1913  000DBA  1056               	iorwf	(??_sprintf+1)^0,w,c
  1914  000DBC  B4D8               	btfsc	status,2,c
  1915  000DBE  EFE3  F006         	goto	u3841
  1916  000DC2  EFE5  F006         	goto	u3840
  1917  000DC6                     u3841:
  1918  000DC6  EF38  F007         	goto	l3622
  1919  000DCA                     u3840:
  1920  000DCA                     
  1921                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  1922  000DCA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1923  000DCE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1924  000DD2  0E2D               	movlw	45
  1925  000DD4  6EDF               	movwf	indf2,c
  1926  000DD6                     l3612:
  1927  000DD6  4A4D               	infsnz	sprintf@sp^0,f,c
  1928  000DD8  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1929  000DDA  EF38  F007         	goto	l3622
  1930  000DDE                     l3614:
  1931                           
  1932                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  1933  000DDE  C063  F001         	movff	sprintf@val,___lldiv@dividend
  1934  000DE2  C064  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  1935  000DE6  C065  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  1936  000DEA  C066  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  1937  000DEE  5073               	movf	sprintf@c^0,w,c
  1938  000DF0  0D04               	mullw	4
  1939  000DF2  0E69               	movlw	low _dpowers
  1940  000DF4  24F3               	addwf	243,w,c
  1941  000DF6  6EF6               	movwf	tblptrl,c
  1942  000DF8  0E06               	movlw	high _dpowers
  1943  000DFA  20F4               	addwfc	244,w,c
  1944  000DFC  6EF7               	movwf	tblptrh,c
  1945  000DFE                     	if	0	;There are less than 3 active tblptr bytes
  1946  000DFE                     	endif
  1947  000DFE  0009               	tblrd		*+
  1948  000E00  CFF5 F005          	movff	tablat,___lldiv@divisor
  1949  000E04  0009               	tblrd		*+
  1950  000E06  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1951  000E0A  0009               	tblrd		*+
  1952  000E0C  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1953  000E10  000A               	tblrd		*-
  1954  000E12  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1955  000E16  EC2A  F01A         	call	___lldiv	;wreg free
  1956  000E1A  C001  F05F         	movff	?___lldiv,sprintf@tmpval
  1957  000E1E  C002  F060         	movff	?___lldiv+1,sprintf@tmpval+1
  1958  000E22  C003  F061         	movff	?___lldiv+2,sprintf@tmpval+2
  1959  000E26  C004  F062         	movff	?___lldiv+3,sprintf@tmpval+3
  1960  000E2A                     
  1961                           ;doprnt.c: 1228: tmpval.vd %= 10;
  1962  000E2A  C05F  F00E         	movff	sprintf@tmpval,___llmod@dividend
  1963  000E2E  C060  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  1964  000E32  C061  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  1965  000E36  C062  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  1966  000E3A  0E0A               	movlw	10
  1967  000E3C  6E12               	movwf	___llmod@divisor^0,c
  1968  000E3E  0E00               	movlw	0
  1969  000E40  6E13               	movwf	(___llmod@divisor+1)^0,c
  1970  000E42  0E00               	movlw	0
  1971  000E44  6E14               	movwf	(___llmod@divisor+2)^0,c
  1972  000E46  0E00               	movlw	0
  1973  000E48  6E15               	movwf	(___llmod@divisor+3)^0,c
  1974  000E4A  ECC1  F01A         	call	___llmod	;wreg free
  1975  000E4E  C00E  F05F         	movff	?___llmod,sprintf@tmpval
  1976  000E52  C00F  F060         	movff	?___llmod+1,sprintf@tmpval+1
  1977  000E56  C010  F061         	movff	?___llmod+2,sprintf@tmpval+2
  1978  000E5A  C011  F062         	movff	?___llmod+3,sprintf@tmpval+3
  1979  000E5E                     
  1980                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  1981  000E5E  505F               	movf	sprintf@tmpval^0,w,c
  1982  000E60  0F30               	addlw	48
  1983  000E62  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1984  000E66  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1985  000E6A  6EDF               	movwf	indf2,c
  1986  000E6C  EFEB  F006         	goto	l3612
  1987  000E70                     l3622:
  1988  000E70  0673               	decf	sprintf@c^0,f,c
  1989  000E72  2873               	incf	sprintf@c^0,w,c
  1990  000E74  A4D8               	btfss	status,2,c
  1991  000E76  EF3F  F007         	goto	u3851
  1992  000E7A  EF41  F007         	goto	u3850
  1993  000E7E                     u3851:
  1994  000E7E  EFEF  F006         	goto	l3614
  1995  000E82                     u3850:
  1996  000E82  EF4E  F007         	goto	l3630
  1997  000E86                     l3624:
  1998                           
  1999                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  2000  000E86  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2001  000E8A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2002  000E8E  0E30               	movlw	48
  2003  000E90  6EDF               	movwf	indf2,c
  2004  000E92  4A4D               	infsnz	sprintf@sp^0,f,c
  2005  000E94  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2006  000E96                     
  2007                           ;doprnt.c: 1235: eexp--;
  2008  000E96  0667               	decf	sprintf@eexp^0,f,c
  2009  000E98  A0D8               	btfss	status,0,c
  2010  000E9A  0668               	decf	(sprintf@eexp+1)^0,f,c
  2011  000E9C                     l3630:
  2012  000E9C  BE68               	btfsc	(sprintf@eexp+1)^0,7,c
  2013  000E9E  EF5B  F007         	goto	u3860
  2014  000EA2  5068               	movf	(sprintf@eexp+1)^0,w,c
  2015  000EA4  E106               	bnz	u3861
  2016  000EA6  0467               	decf	sprintf@eexp^0,w,c
  2017  000EA8  B0D8               	btfsc	status,0,c
  2018  000EAA  EF59  F007         	goto	u3861
  2019  000EAE  EF5B  F007         	goto	u3860
  2020  000EB2                     u3861:
  2021  000EB2  EF43  F007         	goto	l3624
  2022  000EB6                     u3860:
  2023  000EB6                     
  2024                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2025  000EB6  BE72               	btfsc	(sprintf@prec+1)^0,7,c
  2026  000EB8  EF67  F007         	goto	u3871
  2027  000EBC  5072               	movf	(sprintf@prec+1)^0,w,c
  2028  000EBE  E109               	bnz	u3870
  2029  000EC0  0E09               	movlw	9
  2030  000EC2  5C71               	subwf	sprintf@prec^0,w,c
  2031  000EC4  A0D8               	btfss	status,0,c
  2032  000EC6  EF67  F007         	goto	u3871
  2033  000ECA  EF69  F007         	goto	u3870
  2034  000ECE                     u3871:
  2035  000ECE  EF6D  F007         	goto	l240
  2036  000ED2                     u3870:
  2037  000ED2                     
  2038                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2039  000ED2  0E08               	movlw	8
  2040  000ED4  6E73               	movwf	sprintf@c^0,c
  2041  000ED6  EF6F  F007         	goto	l3636
  2042  000EDA                     l240:
  2043                           
  2044                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  2045  000EDA  C071  F073         	movff	sprintf@prec,sprintf@c
  2046  000EDE                     l3636:
  2047                           
  2048                           ;doprnt.c: 1241: prec -= (int)c;
  2049  000EDE  5073               	movf	sprintf@c^0,w,c
  2050  000EE0  5E71               	subwf	sprintf@prec^0,f,c
  2051  000EE2  0E00               	movlw	0
  2052  000EE4  5A72               	subwfb	(sprintf@prec+1)^0,f,c
  2053  000EE6                     
  2054                           ;doprnt.c: 1245: if(c)
  2055  000EE6  5073               	movf	sprintf@c^0,w,c
  2056  000EE8  B4D8               	btfsc	status,2,c
  2057  000EEA  EF79  F007         	goto	u3881
  2058  000EEE  EF7B  F007         	goto	u3880
  2059  000EF2                     u3881:
  2060  000EF2  EF83  F007         	goto	l3644
  2061  000EF6                     u3880:
  2062  000EF6                     
  2063                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  2064  000EF6  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2065  000EFA  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2066  000EFE  0E2E               	movlw	46
  2067  000F00  6EDF               	movwf	indf2,c
  2068  000F02  4A4D               	infsnz	sprintf@sp^0,f,c
  2069  000F04  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2070  000F06                     l3644:
  2071                           
  2072                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2073  000F06  5073               	movf	sprintf@c^0,w,c
  2074  000F08  EC77  F00E         	call	_scale
  2075  000F0C  C028  F059         	movff	?_scale,_sprintf$1171
  2076  000F10  C029  F05A         	movff	?_scale+1,_sprintf$1171+1
  2077  000F14  C02A  F05B         	movff	?_scale+2,_sprintf$1171+2
  2078  000F18  C02B  F05C         	movff	?_scale+3,_sprintf$1171+3
  2079  000F1C                     
  2080                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2081  000F1C  C06D  F013         	movff	sprintf@fval,___flmul@a
  2082  000F20  C06E  F014         	movff	sprintf@fval+1,___flmul@a+1
  2083  000F24  C06F  F015         	movff	sprintf@fval+2,___flmul@a+2
  2084  000F28  C070  F016         	movff	sprintf@fval+3,___flmul@a+3
  2085  000F2C  C059  F00F         	movff	_sprintf$1171,___flmul@b
  2086  000F30  C05A  F010         	movff	_sprintf$1171+1,___flmul@b+1
  2087  000F34  C05B  F011         	movff	_sprintf$1171+2,___flmul@b+2
  2088  000F38  C05C  F012         	movff	_sprintf$1171+3,___flmul@b+3
  2089  000F3C  EC62  F00C         	call	___flmul	;wreg free
  2090  000F40  C00F  F031         	movff	?___flmul,___fltol@f1
  2091  000F44  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2092  000F48  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2093  000F4C  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2094  000F50  EC16  F018         	call	___fltol	;wreg free
  2095  000F54  C031  F063         	movff	?___fltol,sprintf@val
  2096  000F58  C032  F064         	movff	?___fltol+1,sprintf@val+1
  2097  000F5C  C033  F065         	movff	?___fltol+2,sprintf@val+2
  2098  000F60  C034  F066         	movff	?___fltol+3,sprintf@val+3
  2099                           
  2100                           ;doprnt.c: 1254: while(c--) {
  2101  000F64  EF23  F008         	goto	l3658
  2102  000F68                     l3648:
  2103                           
  2104                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  2105  000F68  C063  F001         	movff	sprintf@val,___lldiv@dividend
  2106  000F6C  C064  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2107  000F70  C065  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2108  000F74  C066  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2109  000F78  5073               	movf	sprintf@c^0,w,c
  2110  000F7A  0D04               	mullw	4
  2111  000F7C  0E69               	movlw	low _dpowers
  2112  000F7E  24F3               	addwf	243,w,c
  2113  000F80  6EF6               	movwf	tblptrl,c
  2114  000F82  0E06               	movlw	high _dpowers
  2115  000F84  20F4               	addwfc	244,w,c
  2116  000F86  6EF7               	movwf	tblptrh,c
  2117  000F88                     	if	0	;There are less than 3 active tblptr bytes
  2118  000F88                     	endif
  2119  000F88  0009               	tblrd		*+
  2120  000F8A  CFF5 F005          	movff	tablat,___lldiv@divisor
  2121  000F8E  0009               	tblrd		*+
  2122  000F90  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2123  000F94  0009               	tblrd		*+
  2124  000F96  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2125  000F9A  000A               	tblrd		*-
  2126  000F9C  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2127  000FA0  EC2A  F01A         	call	___lldiv	;wreg free
  2128  000FA4  C001  F05F         	movff	?___lldiv,sprintf@tmpval
  2129  000FA8  C002  F060         	movff	?___lldiv+1,sprintf@tmpval+1
  2130  000FAC  C003  F061         	movff	?___lldiv+2,sprintf@tmpval+2
  2131  000FB0  C004  F062         	movff	?___lldiv+3,sprintf@tmpval+3
  2132  000FB4                     
  2133                           ;doprnt.c: 1256: tmpval.vd %= 10;
  2134  000FB4  C05F  F00E         	movff	sprintf@tmpval,___llmod@dividend
  2135  000FB8  C060  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2136  000FBC  C061  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2137  000FC0  C062  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2138  000FC4  0E0A               	movlw	10
  2139  000FC6  6E12               	movwf	___llmod@divisor^0,c
  2140  000FC8  0E00               	movlw	0
  2141  000FCA  6E13               	movwf	(___llmod@divisor+1)^0,c
  2142  000FCC  0E00               	movlw	0
  2143  000FCE  6E14               	movwf	(___llmod@divisor+2)^0,c
  2144  000FD0  0E00               	movlw	0
  2145  000FD2  6E15               	movwf	(___llmod@divisor+3)^0,c
  2146  000FD4  ECC1  F01A         	call	___llmod	;wreg free
  2147  000FD8  C00E  F05F         	movff	?___llmod,sprintf@tmpval
  2148  000FDC  C00F  F060         	movff	?___llmod+1,sprintf@tmpval+1
  2149  000FE0  C010  F061         	movff	?___llmod+2,sprintf@tmpval+2
  2150  000FE4  C011  F062         	movff	?___llmod+3,sprintf@tmpval+3
  2151  000FE8                     
  2152                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  2153  000FE8  505F               	movf	sprintf@tmpval^0,w,c
  2154  000FEA  0F30               	addlw	48
  2155  000FEC  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2156  000FF0  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2157  000FF4  6EDF               	movwf	indf2,c
  2158  000FF6  4A4D               	infsnz	sprintf@sp^0,f,c
  2159  000FF8  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2160  000FFA                     
  2161                           ;doprnt.c: 1258: val %= dpowers[c];
  2162  000FFA  C063  F00E         	movff	sprintf@val,___llmod@dividend
  2163  000FFE  C064  F00F         	movff	sprintf@val+1,___llmod@dividend+1
  2164  001002  C065  F010         	movff	sprintf@val+2,___llmod@dividend+2
  2165  001006  C066  F011         	movff	sprintf@val+3,___llmod@dividend+3
  2166  00100A  5073               	movf	sprintf@c^0,w,c
  2167  00100C  0D04               	mullw	4
  2168  00100E  0E69               	movlw	low _dpowers
  2169  001010  24F3               	addwf	243,w,c
  2170  001012  6EF6               	movwf	tblptrl,c
  2171  001014  0E06               	movlw	high _dpowers
  2172  001016  20F4               	addwfc	244,w,c
  2173  001018  6EF7               	movwf	tblptrh,c
  2174  00101A                     	if	0	;There are less than 3 active tblptr bytes
  2175  00101A                     	endif
  2176  00101A  0009               	tblrd		*+
  2177  00101C  CFF5 F012          	movff	tablat,___llmod@divisor
  2178  001020  0009               	tblrd		*+
  2179  001022  CFF5 F013          	movff	tablat,___llmod@divisor+1
  2180  001026  0009               	tblrd		*+
  2181  001028  CFF5 F014          	movff	tablat,___llmod@divisor+2
  2182  00102C  000A               	tblrd		*-
  2183  00102E  CFF5 F015          	movff	tablat,___llmod@divisor+3
  2184  001032  ECC1  F01A         	call	___llmod	;wreg free
  2185  001036  C00E  F063         	movff	?___llmod,sprintf@val
  2186  00103A  C00F  F064         	movff	?___llmod+1,sprintf@val+1
  2187  00103E  C010  F065         	movff	?___llmod+2,sprintf@val+2
  2188  001042  C011  F066         	movff	?___llmod+3,sprintf@val+3
  2189  001046                     l3658:
  2190  001046  0673               	decf	sprintf@c^0,f,c
  2191  001048  2873               	incf	sprintf@c^0,w,c
  2192  00104A  A4D8               	btfss	status,2,c
  2193  00104C  EF2A  F008         	goto	u3891
  2194  001050  EF2C  F008         	goto	u3890
  2195  001054                     u3891:
  2196  001054  EFB4  F007         	goto	l3648
  2197  001058                     u3890:
  2198  001058  EF39  F008         	goto	l3666
  2199  00105C                     l3660:
  2200                           
  2201                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  2202  00105C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2203  001060  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2204  001064  0E30               	movlw	48
  2205  001066  6EDF               	movwf	indf2,c
  2206  001068  4A4D               	infsnz	sprintf@sp^0,f,c
  2207  00106A  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2208  00106C                     
  2209                           ;doprnt.c: 1263: prec--;
  2210  00106C  0671               	decf	sprintf@prec^0,f,c
  2211  00106E  A0D8               	btfss	status,0,c
  2212  001070  0672               	decf	(sprintf@prec+1)^0,f,c
  2213  001072                     l3666:
  2214  001072  5071               	movf	sprintf@prec^0,w,c
  2215  001074  1072               	iorwf	(sprintf@prec+1)^0,w,c
  2216  001076  A4D8               	btfss	status,2,c
  2217  001078  EF40  F008         	goto	u3901
  2218  00107C  EF42  F008         	goto	u3900
  2219  001080                     u3901:
  2220  001080  EF2E  F008         	goto	l3660
  2221  001084                     u3900:
  2222  001084  EFEA  F009         	goto	l3764
  2223  001088                     l3668:
  2224                           
  2225                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  2226  001088  C05D  FFD9         	movff	sprintf@ap,fsr2l
  2227  00108C  C05E  FFDA         	movff	sprintf@ap+1,fsr2h
  2228  001090  CFDE F063          	movff	postinc2,sprintf@val
  2229  001094  CFDD F064          	movff	postdec2,sprintf@val+1
  2230  001098  0E00               	movlw	0
  2231  00109A  BE64               	btfsc	(sprintf@val+1)^0,7,c
  2232  00109C  0EFF               	movlw	-1
  2233  00109E  6E65               	movwf	(sprintf@val+2)^0,c
  2234  0010A0  6E66               	movwf	(sprintf@val+3)^0,c
  2235  0010A2  0E02               	movlw	2
  2236  0010A4  265D               	addwf	sprintf@ap^0,f,c
  2237  0010A6  0E00               	movlw	0
  2238  0010A8  225E               	addwfc	(sprintf@ap+1)^0,f,c
  2239  0010AA                     
  2240                           ;doprnt.c: 1287: if((long)val < 0) {
  2241  0010AA  BE66               	btfsc	(sprintf@val+3)^0,7,c
  2242  0010AC  EF5C  F008         	goto	u3910
  2243  0010B0  EF5A  F008         	goto	u3911
  2244  0010B4                     u3911:
  2245  0010B4  EF66  F008         	goto	l3678
  2246  0010B8                     u3910:
  2247  0010B8                     
  2248                           ;doprnt.c: 1288: flag |= 0x03;
  2249  0010B8  0E03               	movlw	3
  2250  0010BA  1269               	iorwf	sprintf@flag^0,f,c
  2251  0010BC                     
  2252                           ;doprnt.c: 1289: val = -val;
  2253  0010BC  1E66               	comf	(sprintf@val+3)^0,f,c
  2254  0010BE  1E65               	comf	(sprintf@val+2)^0,f,c
  2255  0010C0  1E64               	comf	(sprintf@val+1)^0,f,c
  2256  0010C2  6C63               	negf	sprintf@val^0,c
  2257  0010C4  0E00               	movlw	0
  2258  0010C6  2264               	addwfc	(sprintf@val+1)^0,f,c
  2259  0010C8  2265               	addwfc	(sprintf@val+2)^0,f,c
  2260  0010CA  2266               	addwfc	(sprintf@val+3)^0,f,c
  2261  0010CC                     l3678:
  2262                           
  2263                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  2264  0010CC  5071               	movf	sprintf@prec^0,w,c
  2265  0010CE  1072               	iorwf	(sprintf@prec+1)^0,w,c
  2266  0010D0  A4D8               	btfss	status,2,c
  2267  0010D2  EF6D  F008         	goto	u3921
  2268  0010D6  EF6F  F008         	goto	u3920
  2269  0010DA                     u3921:
  2270  0010DA  EF7C  F008         	goto	l3684
  2271  0010DE                     u3920:
  2272  0010DE  5063               	movf	sprintf@val^0,w,c
  2273  0010E0  1064               	iorwf	(sprintf@val+1)^0,w,c
  2274  0010E2  1065               	iorwf	(sprintf@val+2)^0,w,c
  2275  0010E4  1066               	iorwf	(sprintf@val+3)^0,w,c
  2276  0010E6  A4D8               	btfss	status,2,c
  2277  0010E8  EF78  F008         	goto	u3931
  2278  0010EC  EF7A  F008         	goto	u3930
  2279  0010F0                     u3931:
  2280  0010F0  EF7C  F008         	goto	l3684
  2281  0010F4                     u3930:
  2282  0010F4                     
  2283                           ;doprnt.c: 1317: prec++;
  2284  0010F4  4A71               	infsnz	sprintf@prec^0,f,c
  2285  0010F6  2A72               	incf	(sprintf@prec+1)^0,f,c
  2286  0010F8                     l3684:
  2287                           
  2288                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2289  0010F8  0E01               	movlw	1
  2290  0010FA  6E73               	movwf	sprintf@c^0,c
  2291  0010FC                     l3690:
  2292                           
  2293                           ;doprnt.c: 1332: if(val < dpowers[c])
  2294  0010FC  5073               	movf	sprintf@c^0,w,c
  2295  0010FE  0D04               	mullw	4
  2296  001100  0E69               	movlw	low _dpowers
  2297  001102  24F3               	addwf	243,w,c
  2298  001104  6EF6               	movwf	tblptrl,c
  2299  001106  0E06               	movlw	high _dpowers
  2300  001108  20F4               	addwfc	244,w,c
  2301  00110A  6EF7               	movwf	tblptrh,c
  2302  00110C                     	if	0	;There are less than 3 active tblptr bytes
  2303  00110C                     	endif
  2304  00110C  0009               	tblrd		*+
  2305  00110E  50F5               	movf	tablat,w,c
  2306  001110  5C63               	subwf	sprintf@val^0,w,c
  2307  001112  0009               	tblrd		*+
  2308  001114  50F5               	movf	tablat,w,c
  2309  001116  5864               	subwfb	(sprintf@val+1)^0,w,c
  2310  001118  0009               	tblrd		*+
  2311  00111A  50F5               	movf	tablat,w,c
  2312  00111C  5865               	subwfb	(sprintf@val+2)^0,w,c
  2313  00111E  0009               	tblrd		*+
  2314  001120  50F5               	movf	tablat,w,c
  2315  001122  5866               	subwfb	(sprintf@val+3)^0,w,c
  2316  001124  B0D8               	btfsc	status,0,c
  2317  001126  EF97  F008         	goto	u3941
  2318  00112A  EF99  F008         	goto	u3940
  2319  00112E                     u3941:
  2320  00112E  EF9B  F008         	goto	l3694
  2321  001132                     u3940:
  2322  001132  EFA5  F008         	goto	l3698
  2323  001136                     l3694:
  2324  001136  2A73               	incf	sprintf@c^0,f,c
  2325  001138  0E0A               	movlw	10
  2326  00113A  1873               	xorwf	sprintf@c^0,w,c
  2327  00113C  A4D8               	btfss	status,2,c
  2328  00113E  EFA3  F008         	goto	u3951
  2329  001142  EFA5  F008         	goto	u3950
  2330  001146                     u3951:
  2331  001146  EF7E  F008         	goto	l3690
  2332  00114A                     u3950:
  2333  00114A                     l3698:
  2334                           
  2335                           ;doprnt.c: 1365: if(c < prec)
  2336  00114A  5073               	movf	sprintf@c^0,w,c
  2337  00114C  6E55               	movwf	??_sprintf^0,c
  2338  00114E  6A56               	clrf	(??_sprintf+1)^0,c
  2339  001150  5071               	movf	sprintf@prec^0,w,c
  2340  001152  5C55               	subwf	??_sprintf^0,w,c
  2341  001154  5056               	movf	(??_sprintf+1)^0,w,c
  2342  001156  0A80               	xorlw	128
  2343  001158  6E57               	movwf	(??_sprintf+2)^0,c
  2344  00115A  5072               	movf	(sprintf@prec+1)^0,w,c
  2345  00115C  0A80               	xorlw	128
  2346  00115E  5857               	subwfb	(??_sprintf+2)^0,w,c
  2347  001160  B0D8               	btfsc	status,0,c
  2348  001162  EFB5  F008         	goto	u3961
  2349  001166  EFB7  F008         	goto	u3960
  2350  00116A                     u3961:
  2351  00116A  EFBB  F008         	goto	l3702
  2352  00116E                     u3960:
  2353  00116E                     
  2354                           ;doprnt.c: 1366: c = (char)prec;
  2355  00116E  C071  F073         	movff	sprintf@prec,sprintf@c
  2356  001172  EFD0  F008         	goto	l3706
  2357  001176                     l3702:
  2358                           
  2359                           ;doprnt.c: 1367: else if(prec < c)
  2360  001176  5073               	movf	sprintf@c^0,w,c
  2361  001178  6E55               	movwf	??_sprintf^0,c
  2362  00117A  6A56               	clrf	(??_sprintf+1)^0,c
  2363  00117C  5055               	movf	??_sprintf^0,w,c
  2364  00117E  5C71               	subwf	sprintf@prec^0,w,c
  2365  001180  5072               	movf	(sprintf@prec+1)^0,w,c
  2366  001182  0A80               	xorlw	128
  2367  001184  6E57               	movwf	(??_sprintf+2)^0,c
  2368  001186  5056               	movf	(??_sprintf+1)^0,w,c
  2369  001188  0A80               	xorlw	128
  2370  00118A  5857               	subwfb	(??_sprintf+2)^0,w,c
  2371  00118C  B0D8               	btfsc	status,0,c
  2372  00118E  EFCB  F008         	goto	u3971
  2373  001192  EFCD  F008         	goto	u3970
  2374  001196                     u3971:
  2375  001196  EFD0  F008         	goto	l3706
  2376  00119A                     u3970:
  2377  00119A                     
  2378                           ;doprnt.c: 1368: prec = c;
  2379  00119A  C073  F071         	movff	sprintf@c,sprintf@prec
  2380  00119E  6A72               	clrf	(sprintf@prec+1)^0,c
  2381  0011A0                     l3706:
  2382                           
  2383                           ;doprnt.c: 1371: if(width && flag & 0x03)
  2384  0011A0  506B               	movf	sprintf@width^0,w,c
  2385  0011A2  106C               	iorwf	(sprintf@width+1)^0,w,c
  2386  0011A4  B4D8               	btfsc	status,2,c
  2387  0011A6  EFD7  F008         	goto	u3981
  2388  0011AA  EFD9  F008         	goto	u3980
  2389  0011AE                     u3981:
  2390  0011AE  EFEB  F008         	goto	l3712
  2391  0011B2                     u3980:
  2392  0011B2  0E03               	movlw	3
  2393  0011B4  1469               	andwf	sprintf@flag^0,w,c
  2394  0011B6  6E55               	movwf	??_sprintf^0,c
  2395  0011B8  0E00               	movlw	0
  2396  0011BA  146A               	andwf	(sprintf@flag+1)^0,w,c
  2397  0011BC  6E56               	movwf	(??_sprintf+1)^0,c
  2398  0011BE  5055               	movf	??_sprintf^0,w,c
  2399  0011C0  1056               	iorwf	(??_sprintf+1)^0,w,c
  2400  0011C2  B4D8               	btfsc	status,2,c
  2401  0011C4  EFE6  F008         	goto	u3991
  2402  0011C8  EFE8  F008         	goto	u3990
  2403  0011CC                     u3991:
  2404  0011CC  EFEB  F008         	goto	l3712
  2405  0011D0                     u3990:
  2406  0011D0                     
  2407                           ;doprnt.c: 1372: width--;
  2408  0011D0  066B               	decf	sprintf@width^0,f,c
  2409  0011D2  A0D8               	btfss	status,0,c
  2410  0011D4  066C               	decf	(sprintf@width+1)^0,f,c
  2411  0011D6                     l3712:
  2412                           
  2413                           ;doprnt.c: 1374: if(flag & 0x4000) {
  2414  0011D6  AC6A               	btfss	(sprintf@flag+1)^0,6,c
  2415  0011D8  EFF0  F008         	goto	u4001
  2416  0011DC  EFF2  F008         	goto	u4000
  2417  0011E0                     u4001:
  2418  0011E0  EF0B  F009         	goto	l3720
  2419  0011E4                     u4000:
  2420  0011E4                     
  2421                           ;doprnt.c: 1375: if(width > prec)
  2422  0011E4  506B               	movf	sprintf@width^0,w,c
  2423  0011E6  5C71               	subwf	sprintf@prec^0,w,c
  2424  0011E8  5072               	movf	(sprintf@prec+1)^0,w,c
  2425  0011EA  0A80               	xorlw	128
  2426  0011EC  6E55               	movwf	??_sprintf^0,c
  2427  0011EE  506C               	movf	(sprintf@width+1)^0,w,c
  2428  0011F0  0A80               	xorlw	128
  2429  0011F2  5855               	subwfb	??_sprintf^0,w,c
  2430  0011F4  B0D8               	btfsc	status,0,c
  2431  0011F6  EFFF  F008         	goto	u4011
  2432  0011FA  EF01  F009         	goto	u4010
  2433  0011FE                     u4011:
  2434  0011FE  EF07  F009         	goto	l3718
  2435  001202                     u4010:
  2436  001202                     
  2437                           ;doprnt.c: 1376: width -= prec;
  2438  001202  5071               	movf	sprintf@prec^0,w,c
  2439  001204  5E6B               	subwf	sprintf@width^0,f,c
  2440  001206  5072               	movf	(sprintf@prec+1)^0,w,c
  2441  001208  5A6C               	subwfb	(sprintf@width+1)^0,f,c
  2442  00120A  EF0B  F009         	goto	l3720
  2443  00120E                     l3718:
  2444                           
  2445                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  2446  00120E  0E00               	movlw	0
  2447  001210  6E6C               	movwf	(sprintf@width+1)^0,c
  2448  001212  0E00               	movlw	0
  2449  001214  6E6B               	movwf	sprintf@width^0,c
  2450  001216                     l3720:
  2451                           
  2452                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  2453  001216  5073               	movf	sprintf@c^0,w,c
  2454  001218  6E55               	movwf	??_sprintf^0,c
  2455  00121A  6A56               	clrf	(??_sprintf+1)^0,c
  2456  00121C  506B               	movf	sprintf@width^0,w,c
  2457  00121E  5C55               	subwf	??_sprintf^0,w,c
  2458  001220  5056               	movf	(??_sprintf+1)^0,w,c
  2459  001222  0A80               	xorlw	128
  2460  001224  6E57               	movwf	(??_sprintf+2)^0,c
  2461  001226  506C               	movf	(sprintf@width+1)^0,w,c
  2462  001228  0A80               	xorlw	128
  2463  00122A  5857               	subwfb	(??_sprintf+2)^0,w,c
  2464  00122C  B0D8               	btfsc	status,0,c
  2465  00122E  EF1B  F009         	goto	u4021
  2466  001232  EF1D  F009         	goto	u4020
  2467  001236                     u4021:
  2468  001236  EF23  F009         	goto	l3724
  2469  00123A                     u4020:
  2470  00123A                     
  2471                           ;doprnt.c: 1408: width -= c;
  2472  00123A  5073               	movf	sprintf@c^0,w,c
  2473  00123C  5E6B               	subwf	sprintf@width^0,f,c
  2474  00123E  0E00               	movlw	0
  2475  001240  5A6C               	subwfb	(sprintf@width+1)^0,f,c
  2476  001242  EF27  F009         	goto	l3726
  2477  001246                     l3724:
  2478                           
  2479                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  2480  001246  0E00               	movlw	0
  2481  001248  6E6C               	movwf	(sprintf@width+1)^0,c
  2482  00124A  0E00               	movlw	0
  2483  00124C  6E6B               	movwf	sprintf@width^0,c
  2484  00124E                     l3726:
  2485                           
  2486                           ;doprnt.c: 1413: if(flag & 0x04) {
  2487  00124E  A469               	btfss	sprintf@flag^0,2,c
  2488  001250  EF2C  F009         	goto	u4031
  2489  001254  EF2E  F009         	goto	u4030
  2490  001258                     u4031:
  2491  001258  EF64  F009         	goto	l3742
  2492  00125C                     u4030:
  2493  00125C                     
  2494                           ;doprnt.c: 1418: if(flag & 0x03)
  2495  00125C  0E03               	movlw	3
  2496  00125E  1469               	andwf	sprintf@flag^0,w,c
  2497  001260  6E55               	movwf	??_sprintf^0,c
  2498  001262  0E00               	movlw	0
  2499  001264  146A               	andwf	(sprintf@flag+1)^0,w,c
  2500  001266  6E56               	movwf	(??_sprintf+1)^0,c
  2501  001268  5055               	movf	??_sprintf^0,w,c
  2502  00126A  1056               	iorwf	(??_sprintf+1)^0,w,c
  2503  00126C  B4D8               	btfsc	status,2,c
  2504  00126E  EF3B  F009         	goto	u4041
  2505  001272  EF3D  F009         	goto	u4040
  2506  001276                     u4041:
  2507  001276  EF45  F009         	goto	l3734
  2508  00127A                     u4040:
  2509  00127A                     
  2510                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  2511  00127A  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2512  00127E  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2513  001282  0E2D               	movlw	45
  2514  001284  6EDF               	movwf	indf2,c
  2515  001286  4A4D               	infsnz	sprintf@sp^0,f,c
  2516  001288  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2517  00128A                     l3734:
  2518                           
  2519                           ;doprnt.c: 1441: if(width)
  2520  00128A  506B               	movf	sprintf@width^0,w,c
  2521  00128C  106C               	iorwf	(sprintf@width+1)^0,w,c
  2522  00128E  B4D8               	btfsc	status,2,c
  2523  001290  EF4C  F009         	goto	u4051
  2524  001294  EF4E  F009         	goto	u4050
  2525  001298                     u4051:
  2526  001298  EFDD  F009         	goto	l3762
  2527  00129C                     u4050:
  2528  00129C                     l3736:
  2529                           
  2530                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  2531  00129C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2532  0012A0  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2533  0012A4  0E30               	movlw	48
  2534  0012A6  6EDF               	movwf	indf2,c
  2535  0012A8  4A4D               	infsnz	sprintf@sp^0,f,c
  2536  0012AA  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2537  0012AC                     
  2538                           ;doprnt.c: 1444: while(--width);
  2539  0012AC  066B               	decf	sprintf@width^0,f,c
  2540  0012AE  A0D8               	btfss	status,0,c
  2541  0012B0  066C               	decf	(sprintf@width+1)^0,f,c
  2542  0012B2  506B               	movf	sprintf@width^0,w,c
  2543  0012B4  106C               	iorwf	(sprintf@width+1)^0,w,c
  2544  0012B6  A4D8               	btfss	status,2,c
  2545  0012B8  EF60  F009         	goto	u4061
  2546  0012BC  EF62  F009         	goto	u4060
  2547  0012C0                     u4061:
  2548  0012C0  EF4E  F009         	goto	l3736
  2549  0012C4                     u4060:
  2550  0012C4  EFDD  F009         	goto	l3762
  2551  0012C8                     l3742:
  2552                           
  2553                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  2554  0012C8  506B               	movf	sprintf@width^0,w,c
  2555  0012CA  106C               	iorwf	(sprintf@width+1)^0,w,c
  2556  0012CC  B4D8               	btfsc	status,2,c
  2557  0012CE  EF6B  F009         	goto	u4071
  2558  0012D2  EF6D  F009         	goto	u4070
  2559  0012D6                     u4071:
  2560  0012D6  EF81  F009         	goto	l3750
  2561  0012DA                     u4070:
  2562  0012DA                     l3744:
  2563                           
  2564                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  2565  0012DA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2566  0012DE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2567  0012E2  0E20               	movlw	32
  2568  0012E4  6EDF               	movwf	indf2,c
  2569  0012E6  4A4D               	infsnz	sprintf@sp^0,f,c
  2570  0012E8  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2571  0012EA                     
  2572                           ;doprnt.c: 1457: while(--width);
  2573  0012EA  066B               	decf	sprintf@width^0,f,c
  2574  0012EC  A0D8               	btfss	status,0,c
  2575  0012EE  066C               	decf	(sprintf@width+1)^0,f,c
  2576  0012F0  506B               	movf	sprintf@width^0,w,c
  2577  0012F2  106C               	iorwf	(sprintf@width+1)^0,w,c
  2578  0012F4  A4D8               	btfss	status,2,c
  2579  0012F6  EF7F  F009         	goto	u4081
  2580  0012FA  EF81  F009         	goto	u4080
  2581  0012FE                     u4081:
  2582  0012FE  EF6D  F009         	goto	l3744
  2583  001302                     u4080:
  2584  001302                     l3750:
  2585                           
  2586                           ;doprnt.c: 1464: if(flag & 0x03)
  2587  001302  0E03               	movlw	3
  2588  001304  1469               	andwf	sprintf@flag^0,w,c
  2589  001306  6E55               	movwf	??_sprintf^0,c
  2590  001308  0E00               	movlw	0
  2591  00130A  146A               	andwf	(sprintf@flag+1)^0,w,c
  2592  00130C  6E56               	movwf	(??_sprintf+1)^0,c
  2593  00130E  5055               	movf	??_sprintf^0,w,c
  2594  001310  1056               	iorwf	(??_sprintf+1)^0,w,c
  2595  001312  B4D8               	btfsc	status,2,c
  2596  001314  EF8E  F009         	goto	u4091
  2597  001318  EF90  F009         	goto	u4090
  2598  00131C                     u4091:
  2599  00131C  EFDD  F009         	goto	l3762
  2600  001320                     u4090:
  2601  001320                     
  2602                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2603  001320  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2604  001324  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2605  001328  0E2D               	movlw	45
  2606  00132A  6EDF               	movwf	indf2,c
  2607  00132C                     l3754:
  2608  00132C  4A4D               	infsnz	sprintf@sp^0,f,c
  2609  00132E  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2610  001330  EFDD  F009         	goto	l3762
  2611  001334                     l3756:
  2612                           
  2613                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  2614  001334  C071  F055         	movff	sprintf@prec,??_sprintf
  2615  001338  C072  F056         	movff	sprintf@prec+1,??_sprintf+1
  2616  00133C  90D8               	bcf	status,0,c
  2617  00133E  3655               	rlcf	??_sprintf^0,f,c
  2618  001340  3656               	rlcf	(??_sprintf+1)^0,f,c
  2619  001342  90D8               	bcf	status,0,c
  2620  001344  3655               	rlcf	??_sprintf^0,f,c
  2621  001346  3656               	rlcf	(??_sprintf+1)^0,f,c
  2622  001348  0E69               	movlw	low _dpowers
  2623  00134A  2455               	addwf	??_sprintf^0,w,c
  2624  00134C  6EF6               	movwf	tblptrl,c
  2625  00134E  0E06               	movlw	high _dpowers
  2626  001350  2056               	addwfc	(??_sprintf+1)^0,w,c
  2627  001352  6EF7               	movwf	tblptrh,c
  2628  001354                     	if	0	;There are less than 3 active tblptr bytes
  2629  001354                     	endif
  2630  001354  0009               	tblrd		*+
  2631  001356  CFF5 F005          	movff	tablat,___lldiv@divisor
  2632  00135A  0009               	tblrd		*+
  2633  00135C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2634  001360  0009               	tblrd		*+
  2635  001362  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2636  001366  000A               	tblrd		*-
  2637  001368  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2638  00136C  C063  F001         	movff	sprintf@val,___lldiv@dividend
  2639  001370  C064  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2640  001374  C065  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2641  001378  C066  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2642  00137C  EC2A  F01A         	call	___lldiv	;wreg free
  2643  001380  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2644  001384  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2645  001388  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2646  00138C  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2647  001390  0E0A               	movlw	10
  2648  001392  6E12               	movwf	___llmod@divisor^0,c
  2649  001394  0E00               	movlw	0
  2650  001396  6E13               	movwf	(___llmod@divisor+1)^0,c
  2651  001398  0E00               	movlw	0
  2652  00139A  6E14               	movwf	(___llmod@divisor+2)^0,c
  2653  00139C  0E00               	movlw	0
  2654  00139E  6E15               	movwf	(___llmod@divisor+3)^0,c
  2655  0013A0  ECC1  F01A         	call	___llmod	;wreg free
  2656  0013A4  500E               	movf	?___llmod^0,w,c
  2657  0013A6  0F30               	addlw	48
  2658  0013A8  6E73               	movwf	sprintf@c^0,c
  2659  0013AA                     
  2660                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2661  0013AA  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2662  0013AE  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2663  0013B2  C073  FFDF         	movff	sprintf@c,indf2
  2664  0013B6  EF96  F009         	goto	l3754
  2665  0013BA                     l3762:
  2666  0013BA  0671               	decf	sprintf@prec^0,f,c
  2667  0013BC  A0D8               	btfss	status,0,c
  2668  0013BE  0672               	decf	(sprintf@prec+1)^0,f,c
  2669  0013C0  2871               	incf	sprintf@prec^0,w,c
  2670  0013C2  E106               	bnz	u4101
  2671  0013C4  2872               	incf	(sprintf@prec+1)^0,w,c
  2672  0013C6  A4D8               	btfss	status,2,c
  2673  0013C8  EFE8  F009         	goto	u4101
  2674  0013CC  EFEA  F009         	goto	u4100
  2675  0013D0                     u4101:
  2676  0013D0  EF9A  F009         	goto	l3756
  2677  0013D4                     u4100:
  2678  0013D4                     l3764:
  2679  0013D4  C04F  FFF6         	movff	sprintf@f,tblptrl
  2680  0013D8  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2681  0013DC  4A4F               	infsnz	sprintf@f^0,f,c
  2682  0013DE  2A50               	incf	(sprintf@f+1)^0,f,c
  2683  0013E0                     	if	0	;tblptru may be non-zero
  2684  0013E0                     	endif
  2685  0013E0                     	if	0	;tblptru may be non-zero
  2686  0013E0                     	endif
  2687  0013E0  0008               	tblrd		*
  2688  0013E2  CFF5 F073          	movff	tablat,sprintf@c
  2689  0013E6  5073               	movf	sprintf@c^0,w,c
  2690  0013E8  A4D8               	btfss	status,2,c
  2691  0013EA  EFF9  F009         	goto	u4111
  2692  0013EE  EFFB  F009         	goto	u4110
  2693  0013F2                     u4111:
  2694  0013F2  EF5E  F003         	goto	l3438
  2695  0013F6                     u4110:
  2696  0013F6                     l3766:
  2697                           
  2698                           ;doprnt.c: 1564: *sp = 0;
  2699  0013F6  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2700  0013FA  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2701  0013FE  0E00               	movlw	0
  2702  001400  6EDF               	movwf	indf2,c
  2703  001402  0012               	return		;funcret
  2704  001404                     __end_of_sprintf:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function _scale *****************
  2708 ;; Defined at:
  2709 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  scl             1    wreg     char 
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;  scl             1   47[COMRAM] char 
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  4   39[COMRAM] char 
  2716 ;; Registers used:
  2717 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2723 ;;      Params:         4       0       0       0       0       0       0
  2724 ;;      Locals:         5       0       0       0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0
  2726 ;;      Totals:         9       0       0       0       0       0       0
  2727 ;;Total ram usage:        9 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; Hardware stack levels required when called: 1
  2730 ;; This function calls:
  2731 ;;		___awdiv
  2732 ;;		___awmod
  2733 ;;		___flmul
  2734 ;; This function is called by:
  2735 ;;		_sprintf
  2736 ;; This function uses a non-reentrant model
  2737 ;;
  2738                           
  2739                           	psect	text2
  2740  001CEE                     __ptext2:
  2741                           	callstack 0
  2742  001CEE                     _scale:
  2743                           	callstack 28
  2744                           
  2745                           ;incstack = 0
  2746                           ;scale@scl stored from wreg
  2747  001CEE  6E30               	movwf	scale@scl^0,c
  2748  001CF0                     
  2749                           ;doprnt.c: 436: if(scl < 0) {
  2750  001CF0  BE30               	btfsc	scale@scl^0,7,c
  2751  001CF2  EF7F  F00E         	goto	u3000
  2752  001CF6  EF7D  F00E         	goto	u3001
  2753  001CFA                     u3001:
  2754  001CFA  EF7F  F00F         	goto	l3066
  2755  001CFE                     u3000:
  2756  001CFE                     
  2757                           ;doprnt.c: 437: scl = -scl;
  2758  001CFE  6C30               	negf	scale@scl^0,c
  2759                           
  2760                           ;doprnt.c: 438: if(scl>=110)
  2761  001D00  5030               	movf	scale@scl^0,w,c
  2762  001D02  0A80               	xorlw	128
  2763  001D04  0F12               	addlw	-238
  2764  001D06  A0D8               	btfss	status,0,c
  2765  001D08  EF88  F00E         	goto	u3011
  2766  001D0C  EF8A  F00E         	goto	u3010
  2767  001D10                     u3011:
  2768  001D10  EF13  F00F         	goto	l3056
  2769  001D14                     u3010:
  2770  001D14                     
  2771                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2772  001D14  0E00               	movlw	0
  2773  001D16  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2774  001D18  0E0A               	movlw	10
  2775  001D1A  6E09               	movwf	___awdiv@divisor^0,c
  2776  001D1C  0E00               	movlw	0
  2777  001D1E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2778  001D20  0E64               	movlw	100
  2779  001D22  6E03               	movwf	___awmod@divisor^0,c
  2780  001D24  5030               	movf	scale@scl^0,w,c
  2781  001D26  6E01               	movwf	___awmod@dividend^0,c
  2782  001D28  6A02               	clrf	(___awmod@dividend+1)^0,c
  2783  001D2A  BE01               	btfsc	___awmod@dividend^0,7,c
  2784  001D2C  0602               	decf	(___awmod@dividend+1)^0,f,c
  2785  001D2E  EC7D  F019         	call	___awmod	;wreg free
  2786  001D32  C001  F007         	movff	?___awmod,___awdiv@dividend
  2787  001D36  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2788  001D3A  EC1B  F019         	call	___awdiv	;wreg free
  2789  001D3E  0E09               	movlw	9
  2790  001D40  2607               	addwf	?___awdiv^0,f,c
  2791  001D42  5007               	movf	?___awdiv^0,w,c
  2792  001D44  0D04               	mullw	4
  2793  001D46  0E35               	movlw	low __npowers_
  2794  001D48  24F3               	addwf	243,w,c
  2795  001D4A  6EF6               	movwf	tblptrl,c
  2796  001D4C  0E06               	movlw	high __npowers_
  2797  001D4E  20F4               	addwfc	244,w,c
  2798  001D50  6EF7               	movwf	tblptrh,c
  2799  001D52                     	if	0	;There are less than 3 active tblptr bytes
  2800  001D52                     	endif
  2801  001D52  0009               	tblrd		*+
  2802  001D54  CFF5 F013          	movff	tablat,___flmul@a
  2803  001D58  0009               	tblrd		*+
  2804  001D5A  CFF5 F014          	movff	tablat,___flmul@a+1
  2805  001D5E  0009               	tblrd		*+
  2806  001D60  CFF5 F015          	movff	tablat,___flmul@a+2
  2807  001D64  000A               	tblrd		*-
  2808  001D66  CFF5 F016          	movff	tablat,___flmul@a+3
  2809  001D6A  0E00               	movlw	0
  2810  001D6C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2811  001D6E  0E64               	movlw	100
  2812  001D70  6E09               	movwf	___awdiv@divisor^0,c
  2813  001D72  5030               	movf	scale@scl^0,w,c
  2814  001D74  6E07               	movwf	___awdiv@dividend^0,c
  2815  001D76  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2816  001D78  BE07               	btfsc	___awdiv@dividend^0,7,c
  2817  001D7A  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2818  001D7C  EC1B  F019         	call	___awdiv	;wreg free
  2819  001D80  0E12               	movlw	18
  2820  001D82  2607               	addwf	?___awdiv^0,f,c
  2821  001D84  5007               	movf	?___awdiv^0,w,c
  2822  001D86  0D04               	mullw	4
  2823  001D88  0E35               	movlw	low __npowers_
  2824  001D8A  24F3               	addwf	243,w,c
  2825  001D8C  6EF6               	movwf	tblptrl,c
  2826  001D8E  0E06               	movlw	high __npowers_
  2827  001D90  20F4               	addwfc	244,w,c
  2828  001D92  6EF7               	movwf	tblptrh,c
  2829  001D94                     	if	0	;There are less than 3 active tblptr bytes
  2830  001D94                     	endif
  2831  001D94  0009               	tblrd		*+
  2832  001D96  CFF5 F00F          	movff	tablat,___flmul@b
  2833  001D9A  0009               	tblrd		*+
  2834  001D9C  CFF5 F010          	movff	tablat,___flmul@b+1
  2835  001DA0  0009               	tblrd		*+
  2836  001DA2  CFF5 F011          	movff	tablat,___flmul@b+2
  2837  001DA6  000A               	tblrd		*-
  2838  001DA8  CFF5 F012          	movff	tablat,___flmul@b+3
  2839  001DAC  EC62  F00C         	call	___flmul	;wreg free
  2840  001DB0  C00F  F02C         	movff	?___flmul,_scale$1170
  2841  001DB4  C010  F02D         	movff	?___flmul+1,_scale$1170+1
  2842  001DB8  C011  F02E         	movff	?___flmul+2,_scale$1170+2
  2843  001DBC  C012  F02F         	movff	?___flmul+3,_scale$1170+3
  2844                           
  2845                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2846  001DC0  C02C  F00F         	movff	_scale$1170,___flmul@b
  2847  001DC4  C02D  F010         	movff	_scale$1170+1,___flmul@b+1
  2848  001DC8  C02E  F011         	movff	_scale$1170+2,___flmul@b+2
  2849  001DCC  C02F  F012         	movff	_scale$1170+3,___flmul@b+3
  2850  001DD0  0E00               	movlw	0
  2851  001DD2  6E04               	movwf	(___awmod@divisor+1)^0,c
  2852  001DD4  0E0A               	movlw	10
  2853  001DD6  6E03               	movwf	___awmod@divisor^0,c
  2854  001DD8  5030               	movf	scale@scl^0,w,c
  2855  001DDA  6E01               	movwf	___awmod@dividend^0,c
  2856  001DDC  6A02               	clrf	(___awmod@dividend+1)^0,c
  2857  001DDE  BE01               	btfsc	___awmod@dividend^0,7,c
  2858  001DE0  0602               	decf	(___awmod@dividend+1)^0,f,c
  2859  001DE2  EC7D  F019         	call	___awmod	;wreg free
  2860  001DE6  5001               	movf	?___awmod^0,w,c
  2861  001DE8  0D04               	mullw	4
  2862  001DEA  0E35               	movlw	low __npowers_
  2863  001DEC  24F3               	addwf	243,w,c
  2864  001DEE  6EF6               	movwf	tblptrl,c
  2865  001DF0  0E06               	movlw	high __npowers_
  2866  001DF2  20F4               	addwfc	244,w,c
  2867  001DF4  6EF7               	movwf	tblptrh,c
  2868  001DF6                     	if	0	;There are less than 3 active tblptr bytes
  2869  001DF6                     	endif
  2870  001DF6  0009               	tblrd		*+
  2871  001DF8  CFF5 F013          	movff	tablat,___flmul@a
  2872  001DFC  0009               	tblrd		*+
  2873  001DFE  CFF5 F014          	movff	tablat,___flmul@a+1
  2874  001E02  0009               	tblrd		*+
  2875  001E04  CFF5 F015          	movff	tablat,___flmul@a+2
  2876  001E08  000A               	tblrd		*-
  2877  001E0A  CFF5 F016          	movff	tablat,___flmul@a+3
  2878  001E0E  EC62  F00C         	call	___flmul	;wreg free
  2879  001E12  C00F  F028         	movff	?___flmul,?_scale
  2880  001E16  C010  F029         	movff	?___flmul+1,?_scale+1
  2881  001E1A  C011  F02A         	movff	?___flmul+2,?_scale+2
  2882  001E1E  C012  F02B         	movff	?___flmul+3,?_scale+3
  2883  001E22  EF7C  F010         	goto	l167
  2884  001E26                     l3056:
  2885                           
  2886                           ;doprnt.c: 440: else if(scl > 10)
  2887  001E26  5030               	movf	scale@scl^0,w,c
  2888  001E28  0A80               	xorlw	128
  2889  001E2A  0F75               	addlw	-139
  2890  001E2C  A0D8               	btfss	status,0,c
  2891  001E2E  EF1B  F00F         	goto	u3021
  2892  001E32  EF1D  F00F         	goto	u3020
  2893  001E36                     u3021:
  2894  001E36  EF69  F00F         	goto	l3062
  2895  001E3A                     u3020:
  2896  001E3A                     
  2897                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  2898  001E3A  0E00               	movlw	0
  2899  001E3C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2900  001E3E  0E0A               	movlw	10
  2901  001E40  6E09               	movwf	___awdiv@divisor^0,c
  2902  001E42  5030               	movf	scale@scl^0,w,c
  2903  001E44  6E07               	movwf	___awdiv@dividend^0,c
  2904  001E46  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2905  001E48  BE07               	btfsc	___awdiv@dividend^0,7,c
  2906  001E4A  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2907  001E4C  EC1B  F019         	call	___awdiv	;wreg free
  2908  001E50  0E09               	movlw	9
  2909  001E52  2607               	addwf	?___awdiv^0,f,c
  2910  001E54  5007               	movf	?___awdiv^0,w,c
  2911  001E56  0D04               	mullw	4
  2912  001E58  0E35               	movlw	low __npowers_
  2913  001E5A  24F3               	addwf	243,w,c
  2914  001E5C  6EF6               	movwf	tblptrl,c
  2915  001E5E  0E06               	movlw	high __npowers_
  2916  001E60  20F4               	addwfc	244,w,c
  2917  001E62  6EF7               	movwf	tblptrh,c
  2918  001E64                     	if	0	;There are less than 3 active tblptr bytes
  2919  001E64                     	endif
  2920  001E64  0009               	tblrd		*+
  2921  001E66  CFF5 F00F          	movff	tablat,___flmul@b
  2922  001E6A  0009               	tblrd		*+
  2923  001E6C  CFF5 F010          	movff	tablat,___flmul@b+1
  2924  001E70  0009               	tblrd		*+
  2925  001E72  CFF5 F011          	movff	tablat,___flmul@b+2
  2926  001E76  000A               	tblrd		*-
  2927  001E78  CFF5 F012          	movff	tablat,___flmul@b+3
  2928  001E7C  0E00               	movlw	0
  2929  001E7E  6E04               	movwf	(___awmod@divisor+1)^0,c
  2930  001E80  0E0A               	movlw	10
  2931  001E82  6E03               	movwf	___awmod@divisor^0,c
  2932  001E84  5030               	movf	scale@scl^0,w,c
  2933  001E86  6E01               	movwf	___awmod@dividend^0,c
  2934  001E88  6A02               	clrf	(___awmod@dividend+1)^0,c
  2935  001E8A  BE01               	btfsc	___awmod@dividend^0,7,c
  2936  001E8C  0602               	decf	(___awmod@dividend+1)^0,f,c
  2937  001E8E  EC7D  F019         	call	___awmod	;wreg free
  2938  001E92  5001               	movf	?___awmod^0,w,c
  2939  001E94  0D04               	mullw	4
  2940  001E96  0E35               	movlw	low __npowers_
  2941  001E98  24F3               	addwf	243,w,c
  2942  001E9A  6EF6               	movwf	tblptrl,c
  2943  001E9C  0E06               	movlw	high __npowers_
  2944  001E9E  20F4               	addwfc	244,w,c
  2945  001EA0  6EF7               	movwf	tblptrh,c
  2946  001EA2                     	if	0	;There are less than 3 active tblptr bytes
  2947  001EA2                     	endif
  2948  001EA2  0009               	tblrd		*+
  2949  001EA4  CFF5 F013          	movff	tablat,___flmul@a
  2950  001EA8  0009               	tblrd		*+
  2951  001EAA  CFF5 F014          	movff	tablat,___flmul@a+1
  2952  001EAE  0009               	tblrd		*+
  2953  001EB0  CFF5 F015          	movff	tablat,___flmul@a+2
  2954  001EB4  000A               	tblrd		*-
  2955  001EB6  CFF5 F016          	movff	tablat,___flmul@a+3
  2956  001EBA  EC62  F00C         	call	___flmul	;wreg free
  2957  001EBE  C00F  F028         	movff	?___flmul,?_scale
  2958  001EC2  C010  F029         	movff	?___flmul+1,?_scale+1
  2959  001EC6  C011  F02A         	movff	?___flmul+2,?_scale+2
  2960  001ECA  C012  F02B         	movff	?___flmul+3,?_scale+3
  2961  001ECE  EF7C  F010         	goto	l167
  2962  001ED2                     l3062:
  2963                           
  2964                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  2965  001ED2  5030               	movf	scale@scl^0,w,c
  2966  001ED4  0D04               	mullw	4
  2967  001ED6  0E35               	movlw	low __npowers_
  2968  001ED8  24F3               	addwf	243,w,c
  2969  001EDA  6EF6               	movwf	tblptrl,c
  2970  001EDC  0E06               	movlw	high __npowers_
  2971  001EDE  20F4               	addwfc	244,w,c
  2972  001EE0  6EF7               	movwf	tblptrh,c
  2973  001EE2                     	if	0	;There are less than 3 active tblptr bytes
  2974  001EE2                     	endif
  2975  001EE2  0009               	tblrd		*+
  2976  001EE4  CFF5 F028          	movff	tablat,?_scale
  2977  001EE8  0009               	tblrd		*+
  2978  001EEA  CFF5 F029          	movff	tablat,?_scale+1
  2979  001EEE  0009               	tblrd		*+
  2980  001EF0  CFF5 F02A          	movff	tablat,?_scale+2
  2981  001EF4  000A               	tblrd		*-
  2982  001EF6  CFF5 F02B          	movff	tablat,?_scale+3
  2983  001EFA  EF7C  F010         	goto	l167
  2984  001EFE                     l3066:
  2985                           
  2986                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  2987  001EFE  5030               	movf	scale@scl^0,w,c
  2988  001F00  0A80               	xorlw	128
  2989  001F02  0F12               	addlw	-238
  2990  001F04  A0D8               	btfss	status,0,c
  2991  001F06  EF87  F00F         	goto	u3031
  2992  001F0A  EF89  F00F         	goto	u3030
  2993  001F0E                     u3031:
  2994  001F0E  EF12  F010         	goto	l3074
  2995  001F12                     u3030:
  2996  001F12                     
  2997                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  2998  001F12  0E00               	movlw	0
  2999  001F14  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3000  001F16  0E0A               	movlw	10
  3001  001F18  6E09               	movwf	___awdiv@divisor^0,c
  3002  001F1A  0E00               	movlw	0
  3003  001F1C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3004  001F1E  0E64               	movlw	100
  3005  001F20  6E03               	movwf	___awmod@divisor^0,c
  3006  001F22  5030               	movf	scale@scl^0,w,c
  3007  001F24  6E01               	movwf	___awmod@dividend^0,c
  3008  001F26  6A02               	clrf	(___awmod@dividend+1)^0,c
  3009  001F28  BE01               	btfsc	___awmod@dividend^0,7,c
  3010  001F2A  0602               	decf	(___awmod@dividend+1)^0,f,c
  3011  001F2C  EC7D  F019         	call	___awmod	;wreg free
  3012  001F30  C001  F007         	movff	?___awmod,___awdiv@dividend
  3013  001F34  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3014  001F38  EC1B  F019         	call	___awdiv	;wreg free
  3015  001F3C  0E09               	movlw	9
  3016  001F3E  2607               	addwf	?___awdiv^0,f,c
  3017  001F40  5007               	movf	?___awdiv^0,w,c
  3018  001F42  0D04               	mullw	4
  3019  001F44  0E01               	movlw	low __powers_
  3020  001F46  24F3               	addwf	243,w,c
  3021  001F48  6EF6               	movwf	tblptrl,c
  3022  001F4A  0E06               	movlw	high __powers_
  3023  001F4C  20F4               	addwfc	244,w,c
  3024  001F4E  6EF7               	movwf	tblptrh,c
  3025  001F50                     	if	0	;There are less than 3 active tblptr bytes
  3026  001F50                     	endif
  3027  001F50  0009               	tblrd		*+
  3028  001F52  CFF5 F013          	movff	tablat,___flmul@a
  3029  001F56  0009               	tblrd		*+
  3030  001F58  CFF5 F014          	movff	tablat,___flmul@a+1
  3031  001F5C  0009               	tblrd		*+
  3032  001F5E  CFF5 F015          	movff	tablat,___flmul@a+2
  3033  001F62  000A               	tblrd		*-
  3034  001F64  CFF5 F016          	movff	tablat,___flmul@a+3
  3035  001F68  0E00               	movlw	0
  3036  001F6A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3037  001F6C  0E64               	movlw	100
  3038  001F6E  6E09               	movwf	___awdiv@divisor^0,c
  3039  001F70  5030               	movf	scale@scl^0,w,c
  3040  001F72  6E07               	movwf	___awdiv@dividend^0,c
  3041  001F74  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3042  001F76  BE07               	btfsc	___awdiv@dividend^0,7,c
  3043  001F78  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3044  001F7A  EC1B  F019         	call	___awdiv	;wreg free
  3045  001F7E  0E12               	movlw	18
  3046  001F80  2607               	addwf	?___awdiv^0,f,c
  3047  001F82  5007               	movf	?___awdiv^0,w,c
  3048  001F84  0D04               	mullw	4
  3049  001F86  0E01               	movlw	low __powers_
  3050  001F88  24F3               	addwf	243,w,c
  3051  001F8A  6EF6               	movwf	tblptrl,c
  3052  001F8C  0E06               	movlw	high __powers_
  3053  001F8E  20F4               	addwfc	244,w,c
  3054  001F90  6EF7               	movwf	tblptrh,c
  3055  001F92                     	if	0	;There are less than 3 active tblptr bytes
  3056  001F92                     	endif
  3057  001F92  0009               	tblrd		*+
  3058  001F94  CFF5 F00F          	movff	tablat,___flmul@b
  3059  001F98  0009               	tblrd		*+
  3060  001F9A  CFF5 F010          	movff	tablat,___flmul@b+1
  3061  001F9E  0009               	tblrd		*+
  3062  001FA0  CFF5 F011          	movff	tablat,___flmul@b+2
  3063  001FA4  000A               	tblrd		*-
  3064  001FA6  CFF5 F012          	movff	tablat,___flmul@b+3
  3065  001FAA  EC62  F00C         	call	___flmul	;wreg free
  3066  001FAE  C00F  F02C         	movff	?___flmul,_scale$1170
  3067  001FB2  C010  F02D         	movff	?___flmul+1,_scale$1170+1
  3068  001FB6  C011  F02E         	movff	?___flmul+2,_scale$1170+2
  3069  001FBA  C012  F02F         	movff	?___flmul+3,_scale$1170+3
  3070                           
  3071                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3072  001FBE  C02C  F00F         	movff	_scale$1170,___flmul@b
  3073  001FC2  C02D  F010         	movff	_scale$1170+1,___flmul@b+1
  3074  001FC6  C02E  F011         	movff	_scale$1170+2,___flmul@b+2
  3075  001FCA  C02F  F012         	movff	_scale$1170+3,___flmul@b+3
  3076  001FCE  0E00               	movlw	0
  3077  001FD0  6E04               	movwf	(___awmod@divisor+1)^0,c
  3078  001FD2  0E0A               	movlw	10
  3079  001FD4  6E03               	movwf	___awmod@divisor^0,c
  3080  001FD6  5030               	movf	scale@scl^0,w,c
  3081  001FD8  6E01               	movwf	___awmod@dividend^0,c
  3082  001FDA  6A02               	clrf	(___awmod@dividend+1)^0,c
  3083  001FDC  BE01               	btfsc	___awmod@dividend^0,7,c
  3084  001FDE  0602               	decf	(___awmod@dividend+1)^0,f,c
  3085  001FE0  EC7D  F019         	call	___awmod	;wreg free
  3086  001FE4  5001               	movf	?___awmod^0,w,c
  3087  001FE6  0D04               	mullw	4
  3088  001FE8  0E01               	movlw	low __powers_
  3089  001FEA  24F3               	addwf	243,w,c
  3090  001FEC  6EF6               	movwf	tblptrl,c
  3091  001FEE  0E06               	movlw	high __powers_
  3092  001FF0  20F4               	addwfc	244,w,c
  3093  001FF2  6EF7               	movwf	tblptrh,c
  3094  001FF4                     	if	0	;There are less than 3 active tblptr bytes
  3095  001FF4                     	endif
  3096  001FF4  0009               	tblrd		*+
  3097  001FF6  CFF5 F013          	movff	tablat,___flmul@a
  3098  001FFA  0009               	tblrd		*+
  3099  001FFC  CFF5 F014          	movff	tablat,___flmul@a+1
  3100  002000  0009               	tblrd		*+
  3101  002002  CFF5 F015          	movff	tablat,___flmul@a+2
  3102  002006  000A               	tblrd		*-
  3103  002008  CFF5 F016          	movff	tablat,___flmul@a+3
  3104  00200C  EC62  F00C         	call	___flmul	;wreg free
  3105  002010  C00F  F028         	movff	?___flmul,?_scale
  3106  002014  C010  F029         	movff	?___flmul+1,?_scale+1
  3107  002018  C011  F02A         	movff	?___flmul+2,?_scale+2
  3108  00201C  C012  F02B         	movff	?___flmul+3,?_scale+3
  3109  002020  EF7C  F010         	goto	l167
  3110  002024                     l3074:
  3111                           
  3112                           ;doprnt.c: 446: else if(scl > 10)
  3113  002024  5030               	movf	scale@scl^0,w,c
  3114  002026  0A80               	xorlw	128
  3115  002028  0F75               	addlw	-139
  3116  00202A  A0D8               	btfss	status,0,c
  3117  00202C  EF1A  F010         	goto	u3041
  3118  002030  EF1C  F010         	goto	u3040
  3119  002034                     u3041:
  3120  002034  EF68  F010         	goto	l3080
  3121  002038                     u3040:
  3122  002038                     
  3123                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3124  002038  0E00               	movlw	0
  3125  00203A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3126  00203C  0E0A               	movlw	10
  3127  00203E  6E09               	movwf	___awdiv@divisor^0,c
  3128  002040  5030               	movf	scale@scl^0,w,c
  3129  002042  6E07               	movwf	___awdiv@dividend^0,c
  3130  002044  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3131  002046  BE07               	btfsc	___awdiv@dividend^0,7,c
  3132  002048  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3133  00204A  EC1B  F019         	call	___awdiv	;wreg free
  3134  00204E  0E09               	movlw	9
  3135  002050  2607               	addwf	?___awdiv^0,f,c
  3136  002052  5007               	movf	?___awdiv^0,w,c
  3137  002054  0D04               	mullw	4
  3138  002056  0E01               	movlw	low __powers_
  3139  002058  24F3               	addwf	243,w,c
  3140  00205A  6EF6               	movwf	tblptrl,c
  3141  00205C  0E06               	movlw	high __powers_
  3142  00205E  20F4               	addwfc	244,w,c
  3143  002060  6EF7               	movwf	tblptrh,c
  3144  002062                     	if	0	;There are less than 3 active tblptr bytes
  3145  002062                     	endif
  3146  002062  0009               	tblrd		*+
  3147  002064  CFF5 F00F          	movff	tablat,___flmul@b
  3148  002068  0009               	tblrd		*+
  3149  00206A  CFF5 F010          	movff	tablat,___flmul@b+1
  3150  00206E  0009               	tblrd		*+
  3151  002070  CFF5 F011          	movff	tablat,___flmul@b+2
  3152  002074  000A               	tblrd		*-
  3153  002076  CFF5 F012          	movff	tablat,___flmul@b+3
  3154  00207A  0E00               	movlw	0
  3155  00207C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3156  00207E  0E0A               	movlw	10
  3157  002080  6E03               	movwf	___awmod@divisor^0,c
  3158  002082  5030               	movf	scale@scl^0,w,c
  3159  002084  6E01               	movwf	___awmod@dividend^0,c
  3160  002086  6A02               	clrf	(___awmod@dividend+1)^0,c
  3161  002088  BE01               	btfsc	___awmod@dividend^0,7,c
  3162  00208A  0602               	decf	(___awmod@dividend+1)^0,f,c
  3163  00208C  EC7D  F019         	call	___awmod	;wreg free
  3164  002090  5001               	movf	?___awmod^0,w,c
  3165  002092  0D04               	mullw	4
  3166  002094  0E01               	movlw	low __powers_
  3167  002096  24F3               	addwf	243,w,c
  3168  002098  6EF6               	movwf	tblptrl,c
  3169  00209A  0E06               	movlw	high __powers_
  3170  00209C  20F4               	addwfc	244,w,c
  3171  00209E  6EF7               	movwf	tblptrh,c
  3172  0020A0                     	if	0	;There are less than 3 active tblptr bytes
  3173  0020A0                     	endif
  3174  0020A0  0009               	tblrd		*+
  3175  0020A2  CFF5 F013          	movff	tablat,___flmul@a
  3176  0020A6  0009               	tblrd		*+
  3177  0020A8  CFF5 F014          	movff	tablat,___flmul@a+1
  3178  0020AC  0009               	tblrd		*+
  3179  0020AE  CFF5 F015          	movff	tablat,___flmul@a+2
  3180  0020B2  000A               	tblrd		*-
  3181  0020B4  CFF5 F016          	movff	tablat,___flmul@a+3
  3182  0020B8  EC62  F00C         	call	___flmul	;wreg free
  3183  0020BC  C00F  F028         	movff	?___flmul,?_scale
  3184  0020C0  C010  F029         	movff	?___flmul+1,?_scale+1
  3185  0020C4  C011  F02A         	movff	?___flmul+2,?_scale+2
  3186  0020C8  C012  F02B         	movff	?___flmul+3,?_scale+3
  3187  0020CC  EF7C  F010         	goto	l167
  3188  0020D0                     l3080:
  3189                           
  3190                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3191  0020D0  5030               	movf	scale@scl^0,w,c
  3192  0020D2  0D04               	mullw	4
  3193  0020D4  0E01               	movlw	low __powers_
  3194  0020D6  24F3               	addwf	243,w,c
  3195  0020D8  6EF6               	movwf	tblptrl,c
  3196  0020DA  0E06               	movlw	high __powers_
  3197  0020DC  20F4               	addwfc	244,w,c
  3198  0020DE  6EF7               	movwf	tblptrh,c
  3199  0020E0                     	if	0	;There are less than 3 active tblptr bytes
  3200  0020E0                     	endif
  3201  0020E0  0009               	tblrd		*+
  3202  0020E2  CFF5 F028          	movff	tablat,?_scale
  3203  0020E6  0009               	tblrd		*+
  3204  0020E8  CFF5 F029          	movff	tablat,?_scale+1
  3205  0020EC  0009               	tblrd		*+
  3206  0020EE  CFF5 F02A          	movff	tablat,?_scale+2
  3207  0020F2  000A               	tblrd		*-
  3208  0020F4  CFF5 F02B          	movff	tablat,?_scale+3
  3209  0020F8                     l167:
  3210  0020F8  0012               	return		;funcret
  3211  0020FA                     __end_of_scale:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function ___awmod *****************
  3215 ;; Defined at:
  3216 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  dividend        2    0[COMRAM] int 
  3219 ;;  divisor         2    2[COMRAM] int 
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;  sign            1    5[COMRAM] unsigned char 
  3222 ;;  counter         1    4[COMRAM] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  2    0[COMRAM] int 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3232 ;;      Params:         4       0       0       0       0       0       0
  3233 ;;      Locals:         2       0       0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0       0       0
  3235 ;;      Totals:         6       0       0       0       0       0       0
  3236 ;;Total ram usage:        6 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; This function calls:
  3239 ;;		Nothing
  3240 ;; This function is called by:
  3241 ;;		_scale
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text3
  3246  0032FA                     __ptext3:
  3247                           	callstack 0
  3248  0032FA                     ___awmod:
  3249                           	callstack 28
  3250  0032FA  0E00               	movlw	0
  3251  0032FC  6E06               	movwf	___awmod@sign^0,c
  3252  0032FE  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3253  003300  EF86  F019         	goto	u2860
  3254  003304  EF84  F019         	goto	u2861
  3255  003308                     u2861:
  3256  003308  EF8C  F019         	goto	l2962
  3257  00330C                     u2860:
  3258  00330C  6C01               	negf	___awmod@dividend^0,c
  3259  00330E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3260  003310  B0D8               	btfsc	status,0,c
  3261  003312  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3262  003314  0E01               	movlw	1
  3263  003316  6E06               	movwf	___awmod@sign^0,c
  3264  003318                     l2962:
  3265  003318  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3266  00331A  EF93  F019         	goto	u2870
  3267  00331E  EF91  F019         	goto	u2871
  3268  003322                     u2871:
  3269  003322  EF97  F019         	goto	l2966
  3270  003326                     u2870:
  3271  003326  6C03               	negf	___awmod@divisor^0,c
  3272  003328  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3273  00332A  B0D8               	btfsc	status,0,c
  3274  00332C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3275  00332E                     l2966:
  3276  00332E  5003               	movf	___awmod@divisor^0,w,c
  3277  003330  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3278  003332  B4D8               	btfsc	status,2,c
  3279  003334  EF9E  F019         	goto	u2881
  3280  003338  EFA0  F019         	goto	u2880
  3281  00333C                     u2881:
  3282  00333C  EFC4  F019         	goto	l2982
  3283  003340                     u2880:
  3284  003340  0E01               	movlw	1
  3285  003342  6E05               	movwf	___awmod@counter^0,c
  3286  003344  EFA8  F019         	goto	l2972
  3287  003348                     l2970:
  3288  003348  90D8               	bcf	status,0,c
  3289  00334A  3603               	rlcf	___awmod@divisor^0,f,c
  3290  00334C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3291  00334E  2A05               	incf	___awmod@counter^0,f,c
  3292  003350                     l2972:
  3293  003350  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3294  003352  EFAD  F019         	goto	u2891
  3295  003356  EFAF  F019         	goto	u2890
  3296  00335A                     u2891:
  3297  00335A  EFA4  F019         	goto	l2970
  3298  00335E                     u2890:
  3299  00335E                     l2974:
  3300  00335E  5003               	movf	___awmod@divisor^0,w,c
  3301  003360  5C01               	subwf	___awmod@dividend^0,w,c
  3302  003362  5004               	movf	(___awmod@divisor+1)^0,w,c
  3303  003364  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3304  003366  A0D8               	btfss	status,0,c
  3305  003368  EFB8  F019         	goto	u2901
  3306  00336C  EFBA  F019         	goto	u2900
  3307  003370                     u2901:
  3308  003370  EFBE  F019         	goto	l2978
  3309  003374                     u2900:
  3310  003374  5003               	movf	___awmod@divisor^0,w,c
  3311  003376  5E01               	subwf	___awmod@dividend^0,f,c
  3312  003378  5004               	movf	(___awmod@divisor+1)^0,w,c
  3313  00337A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3314  00337C                     l2978:
  3315  00337C  90D8               	bcf	status,0,c
  3316  00337E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3317  003380  3203               	rrcf	___awmod@divisor^0,f,c
  3318  003382  2E05               	decfsz	___awmod@counter^0,f,c
  3319  003384  EFAF  F019         	goto	l2974
  3320  003388                     l2982:
  3321  003388  5006               	movf	___awmod@sign^0,w,c
  3322  00338A  B4D8               	btfsc	status,2,c
  3323  00338C  EFCA  F019         	goto	u2911
  3324  003390  EFCC  F019         	goto	u2910
  3325  003394                     u2911:
  3326  003394  EFD0  F019         	goto	l2986
  3327  003398                     u2910:
  3328  003398  6C01               	negf	___awmod@dividend^0,c
  3329  00339A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3330  00339C  B0D8               	btfsc	status,0,c
  3331  00339E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3332  0033A0                     l2986:
  3333  0033A0  C001  F001         	movff	___awmod@dividend,?___awmod
  3334  0033A4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3335  0033A8  0012               	return		;funcret
  3336  0033AA                     __end_of___awmod:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function ___awdiv *****************
  3340 ;; Defined at:
  3341 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;  dividend        2    6[COMRAM] int 
  3344 ;;  divisor         2    8[COMRAM] int 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  quotient        2   12[COMRAM] int 
  3347 ;;  sign            1   11[COMRAM] unsigned char 
  3348 ;;  counter         1   10[COMRAM] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  2    6[COMRAM] int 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3358 ;;      Params:         4       0       0       0       0       0       0
  3359 ;;      Locals:         4       0       0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0
  3361 ;;      Totals:         8       0       0       0       0       0       0
  3362 ;;Total ram usage:        8 bytes
  3363 ;; Hardware stack levels used: 1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_scale
  3368 ;;		_sprintf
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text4
  3373  003236                     __ptext4:
  3374                           	callstack 0
  3375  003236                     ___awdiv:
  3376                           	callstack 28
  3377  003236  0E00               	movlw	0
  3378  003238  6E0C               	movwf	___awdiv@sign^0,c
  3379  00323A  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  3380  00323C  EF24  F019         	goto	u2800
  3381  003240  EF22  F019         	goto	u2801
  3382  003244                     u2801:
  3383  003244  EF2A  F019         	goto	l2918
  3384  003248                     u2800:
  3385  003248  6C09               	negf	___awdiv@divisor^0,c
  3386  00324A  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  3387  00324C  B0D8               	btfsc	status,0,c
  3388  00324E  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  3389  003250  0E01               	movlw	1
  3390  003252  6E0C               	movwf	___awdiv@sign^0,c
  3391  003254                     l2918:
  3392  003254  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  3393  003256  EF31  F019         	goto	u2810
  3394  00325A  EF2F  F019         	goto	u2811
  3395  00325E                     u2811:
  3396  00325E  EF37  F019         	goto	l2924
  3397  003262                     u2810:
  3398  003262  6C07               	negf	___awdiv@dividend^0,c
  3399  003264  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  3400  003266  B0D8               	btfsc	status,0,c
  3401  003268  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  3402  00326A  0E01               	movlw	1
  3403  00326C  1A0C               	xorwf	___awdiv@sign^0,f,c
  3404  00326E                     l2924:
  3405  00326E  0E00               	movlw	0
  3406  003270  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  3407  003272  0E00               	movlw	0
  3408  003274  6E0D               	movwf	___awdiv@quotient^0,c
  3409  003276  5009               	movf	___awdiv@divisor^0,w,c
  3410  003278  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  3411  00327A  B4D8               	btfsc	status,2,c
  3412  00327C  EF42  F019         	goto	u2821
  3413  003280  EF44  F019         	goto	u2820
  3414  003284                     u2821:
  3415  003284  EF6C  F019         	goto	l2946
  3416  003288                     u2820:
  3417  003288  0E01               	movlw	1
  3418  00328A  6E0B               	movwf	___awdiv@counter^0,c
  3419  00328C  EF4C  F019         	goto	l2932
  3420  003290                     l2930:
  3421  003290  90D8               	bcf	status,0,c
  3422  003292  3609               	rlcf	___awdiv@divisor^0,f,c
  3423  003294  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  3424  003296  2A0B               	incf	___awdiv@counter^0,f,c
  3425  003298                     l2932:
  3426  003298  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  3427  00329A  EF51  F019         	goto	u2831
  3428  00329E  EF53  F019         	goto	u2830
  3429  0032A2                     u2831:
  3430  0032A2  EF48  F019         	goto	l2930
  3431  0032A6                     u2830:
  3432  0032A6                     l2934:
  3433  0032A6  90D8               	bcf	status,0,c
  3434  0032A8  360D               	rlcf	___awdiv@quotient^0,f,c
  3435  0032AA  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  3436  0032AC  5009               	movf	___awdiv@divisor^0,w,c
  3437  0032AE  5C07               	subwf	___awdiv@dividend^0,w,c
  3438  0032B0  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3439  0032B2  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  3440  0032B4  A0D8               	btfss	status,0,c
  3441  0032B6  EF5F  F019         	goto	u2841
  3442  0032BA  EF61  F019         	goto	u2840
  3443  0032BE                     u2841:
  3444  0032BE  EF66  F019         	goto	l2942
  3445  0032C2                     u2840:
  3446  0032C2  5009               	movf	___awdiv@divisor^0,w,c
  3447  0032C4  5E07               	subwf	___awdiv@dividend^0,f,c
  3448  0032C6  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3449  0032C8  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  3450  0032CA  800D               	bsf	___awdiv@quotient^0,0,c
  3451  0032CC                     l2942:
  3452  0032CC  90D8               	bcf	status,0,c
  3453  0032CE  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  3454  0032D0  3209               	rrcf	___awdiv@divisor^0,f,c
  3455  0032D2  2E0B               	decfsz	___awdiv@counter^0,f,c
  3456  0032D4  EF53  F019         	goto	l2934
  3457  0032D8                     l2946:
  3458  0032D8  500C               	movf	___awdiv@sign^0,w,c
  3459  0032DA  B4D8               	btfsc	status,2,c
  3460  0032DC  EF72  F019         	goto	u2851
  3461  0032E0  EF74  F019         	goto	u2850
  3462  0032E4                     u2851:
  3463  0032E4  EF78  F019         	goto	l2950
  3464  0032E8                     u2850:
  3465  0032E8  6C0D               	negf	___awdiv@quotient^0,c
  3466  0032EA  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  3467  0032EC  B0D8               	btfsc	status,0,c
  3468  0032EE  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  3469  0032F0                     l2950:
  3470  0032F0  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3471  0032F4  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3472  0032F8  0012               	return		;funcret
  3473  0032FA                     __end_of___awdiv:
  3474                           	callstack 0
  3475                           
  3476 ;; *************** function _isdigit *****************
  3477 ;; Defined at:
  3478 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  c               1    wreg     unsigned char 
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;  c               1    2[COMRAM] unsigned char 
  3483 ;; Return value:  Size  Location     Type
  3484 ;;		None               void
  3485 ;; Registers used:
  3486 ;;		wreg, status,2, status,0
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3492 ;;      Params:         0       0       0       0       0       0       0
  3493 ;;      Locals:         2       0       0       0       0       0       0
  3494 ;;      Temps:          1       0       0       0       0       0       0
  3495 ;;      Totals:         3       0       0       0       0       0       0
  3496 ;;Total ram usage:        3 bytes
  3497 ;; Hardware stack levels used: 1
  3498 ;; This function calls:
  3499 ;;		Nothing
  3500 ;; This function is called by:
  3501 ;;		_sprintf
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text5
  3506  0037DC                     __ptext5:
  3507                           	callstack 0
  3508  0037DC                     _isdigit:
  3509                           	callstack 29
  3510                           
  3511                           ;incstack = 0
  3512                           ;isdigit@c stored from wreg
  3513  0037DC  6E03               	movwf	isdigit@c^0,c
  3514  0037DE  0E00               	movlw	0
  3515  0037E0  6E02               	movwf	_isdigit$982^0,c
  3516  0037E2  0E3A               	movlw	58
  3517  0037E4  6003               	cpfslt	isdigit@c^0,c
  3518  0037E6  EFF7  F01B         	goto	u3051
  3519  0037EA  EFF9  F01B         	goto	u3050
  3520  0037EE                     u3051:
  3521  0037EE  EF03  F01C         	goto	l3092
  3522  0037F2                     u3050:
  3523  0037F2  0E2F               	movlw	47
  3524  0037F4  6403               	cpfsgt	isdigit@c^0,c
  3525  0037F6  EFFF  F01B         	goto	u3061
  3526  0037FA  EF01  F01C         	goto	u3060
  3527  0037FE                     u3061:
  3528  0037FE  EF03  F01C         	goto	l3092
  3529  003802                     u3060:
  3530  003802  0E01               	movlw	1
  3531  003804  6E02               	movwf	_isdigit$982^0,c
  3532  003806                     l3092:
  3533  003806  C002  F001         	movff	_isdigit$982,??_isdigit
  3534  00380A  3001               	rrcf	??_isdigit^0,w,c
  3535  00380C  0012               	return		;funcret
  3536  00380E                     __end_of_isdigit:
  3537                           	callstack 0
  3538                           
  3539 ;; *************** function _fround *****************
  3540 ;; Defined at:
  3541 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  3542 ;; Parameters:    Size  Location     Type
  3543 ;;  prec            1    wreg     unsigned char 
  3544 ;; Auto vars:     Size  Location     Type
  3545 ;;  prec            1   51[COMRAM] unsigned char 
  3546 ;; Return value:  Size  Location     Type
  3547 ;;                  4   39[COMRAM] unsigned char 
  3548 ;; Registers used:
  3549 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3550 ;; Tracked objects:
  3551 ;;		On entry : 0/0
  3552 ;;		On exit  : 0/0
  3553 ;;		Unchanged: 0/0
  3554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3555 ;;      Params:         4       0       0       0       0       0       0
  3556 ;;      Locals:         9       0       0       0       0       0       0
  3557 ;;      Temps:          0       0       0       0       0       0       0
  3558 ;;      Totals:        13       0       0       0       0       0       0
  3559 ;;Total ram usage:       13 bytes
  3560 ;; Hardware stack levels used: 1
  3561 ;; Hardware stack levels required when called: 1
  3562 ;; This function calls:
  3563 ;;		___flmul
  3564 ;;		___lwdiv
  3565 ;;		___lwmod
  3566 ;; This function is called by:
  3567 ;;		_sprintf
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text6
  3572  002494                     __ptext6:
  3573                           	callstack 0
  3574  002494                     _fround:
  3575                           	callstack 28
  3576                           
  3577                           ;incstack = 0
  3578                           ;fround@prec stored from wreg
  3579  002494  6E34               	movwf	fround@prec^0,c
  3580  002496                     
  3581                           ;doprnt.c: 421: if(prec>=110)
  3582  002496  0E6D               	movlw	109
  3583  002498  6434               	cpfsgt	fround@prec^0,c
  3584  00249A  EF51  F012         	goto	u2981
  3585  00249E  EF53  F012         	goto	u2980
  3586  0024A2                     u2981:
  3587  0024A2  EF00  F013         	goto	l3036
  3588  0024A6                     u2980:
  3589  0024A6                     
  3590                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3591  0024A6  0E00               	movlw	0
  3592  0024A8  6E13               	movwf	___flmul@a^0,c
  3593  0024AA  0E00               	movlw	0
  3594  0024AC  6E14               	movwf	(___flmul@a+1)^0,c
  3595  0024AE  0E00               	movlw	0
  3596  0024B0  6E15               	movwf	(___flmul@a+2)^0,c
  3597  0024B2  0E3F               	movlw	63
  3598  0024B4  6E16               	movwf	(___flmul@a+3)^0,c
  3599  0024B6  0E00               	movlw	0
  3600  0024B8  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3601  0024BA  0E64               	movlw	100
  3602  0024BC  6E08               	movwf	___lwdiv@divisor^0,c
  3603  0024BE  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3604  0024C2  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3605  0024C4  EC43  F01B         	call	___lwdiv	;wreg free
  3606  0024C8  90D8               	bcf	status,0,c
  3607  0024CA  3606               	rlcf	?___lwdiv^0,f,c
  3608  0024CC  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3609  0024CE  90D8               	bcf	status,0,c
  3610  0024D0  3606               	rlcf	?___lwdiv^0,f,c
  3611  0024D2  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3612  0024D4  0E48               	movlw	72
  3613  0024D6  2606               	addwf	?___lwdiv^0,f,c
  3614  0024D8  0E00               	movlw	0
  3615  0024DA  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3616  0024DC  0E35               	movlw	low __npowers_
  3617  0024DE  2406               	addwf	?___lwdiv^0,w,c
  3618  0024E0  6EF6               	movwf	tblptrl,c
  3619  0024E2  0E06               	movlw	high __npowers_
  3620  0024E4  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3621  0024E6  6EF7               	movwf	tblptrh,c
  3622  0024E8                     	if	0	;There are less than 3 active tblptr bytes
  3623  0024E8                     	endif
  3624  0024E8  0009               	tblrd		*+
  3625  0024EA  CFF5 F00F          	movff	tablat,___flmul@b
  3626  0024EE  0009               	tblrd		*+
  3627  0024F0  CFF5 F010          	movff	tablat,___flmul@b+1
  3628  0024F4  0009               	tblrd		*+
  3629  0024F6  CFF5 F011          	movff	tablat,___flmul@b+2
  3630  0024FA  000A               	tblrd		*-
  3631  0024FC  CFF5 F012          	movff	tablat,___flmul@b+3
  3632  002500  EC62  F00C         	call	___flmul	;wreg free
  3633  002504  C00F  F030         	movff	?___flmul,_fround$1168
  3634  002508  C010  F031         	movff	?___flmul+1,_fround$1168+1
  3635  00250C  C011  F032         	movff	?___flmul+2,_fround$1168+2
  3636  002510  C012  F033         	movff	?___flmul+3,_fround$1168+3
  3637                           
  3638                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3639  002514  0E00               	movlw	0
  3640  002516  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3641  002518  0E0A               	movlw	10
  3642  00251A  6E08               	movwf	___lwdiv@divisor^0,c
  3643  00251C  0E00               	movlw	0
  3644  00251E  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3645  002520  0E64               	movlw	100
  3646  002522  6E03               	movwf	___lwmod@divisor^0,c
  3647  002524  C034  F001         	movff	fround@prec,___lwmod@dividend
  3648  002528  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3649  00252A  EC7D  F01B         	call	___lwmod	;wreg free
  3650  00252E  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3651  002532  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3652  002536  EC43  F01B         	call	___lwdiv	;wreg free
  3653  00253A  90D8               	bcf	status,0,c
  3654  00253C  3606               	rlcf	?___lwdiv^0,f,c
  3655  00253E  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3656  002540  90D8               	bcf	status,0,c
  3657  002542  3606               	rlcf	?___lwdiv^0,f,c
  3658  002544  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3659  002546  0E24               	movlw	36
  3660  002548  2606               	addwf	?___lwdiv^0,f,c
  3661  00254A  0E00               	movlw	0
  3662  00254C  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3663  00254E  0E35               	movlw	low __npowers_
  3664  002550  2406               	addwf	?___lwdiv^0,w,c
  3665  002552  6EF6               	movwf	tblptrl,c
  3666  002554  0E06               	movlw	high __npowers_
  3667  002556  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3668  002558  6EF7               	movwf	tblptrh,c
  3669  00255A                     	if	0	;There are less than 3 active tblptr bytes
  3670  00255A                     	endif
  3671  00255A  0009               	tblrd		*+
  3672  00255C  CFF5 F013          	movff	tablat,___flmul@a
  3673  002560  0009               	tblrd		*+
  3674  002562  CFF5 F014          	movff	tablat,___flmul@a+1
  3675  002566  0009               	tblrd		*+
  3676  002568  CFF5 F015          	movff	tablat,___flmul@a+2
  3677  00256C  000A               	tblrd		*-
  3678  00256E  CFF5 F016          	movff	tablat,___flmul@a+3
  3679  002572  C030  F00F         	movff	_fround$1168,___flmul@b
  3680  002576  C031  F010         	movff	_fround$1168+1,___flmul@b+1
  3681  00257A  C032  F011         	movff	_fround$1168+2,___flmul@b+2
  3682  00257E  C033  F012         	movff	_fround$1168+3,___flmul@b+3
  3683  002582  EC62  F00C         	call	___flmul	;wreg free
  3684  002586  C00F  F02C         	movff	?___flmul,_fround$1169
  3685  00258A  C010  F02D         	movff	?___flmul+1,_fround$1169+1
  3686  00258E  C011  F02E         	movff	?___flmul+2,_fround$1169+2
  3687  002592  C012  F02F         	movff	?___flmul+3,_fround$1169+3
  3688                           
  3689                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3690  002596  C02C  F00F         	movff	_fround$1169,___flmul@b
  3691  00259A  C02D  F010         	movff	_fround$1169+1,___flmul@b+1
  3692  00259E  C02E  F011         	movff	_fround$1169+2,___flmul@b+2
  3693  0025A2  C02F  F012         	movff	_fround$1169+3,___flmul@b+3
  3694  0025A6  0E00               	movlw	0
  3695  0025A8  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3696  0025AA  0E0A               	movlw	10
  3697  0025AC  6E03               	movwf	___lwmod@divisor^0,c
  3698  0025AE  C034  F001         	movff	fround@prec,___lwmod@dividend
  3699  0025B2  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3700  0025B4  EC7D  F01B         	call	___lwmod	;wreg free
  3701  0025B8  90D8               	bcf	status,0,c
  3702  0025BA  3601               	rlcf	?___lwmod^0,f,c
  3703  0025BC  3602               	rlcf	(?___lwmod+1)^0,f,c
  3704  0025BE  90D8               	bcf	status,0,c
  3705  0025C0  3601               	rlcf	?___lwmod^0,f,c
  3706  0025C2  3602               	rlcf	(?___lwmod+1)^0,f,c
  3707  0025C4  0E35               	movlw	low __npowers_
  3708  0025C6  2401               	addwf	?___lwmod^0,w,c
  3709  0025C8  6EF6               	movwf	tblptrl,c
  3710  0025CA  0E06               	movlw	high __npowers_
  3711  0025CC  2002               	addwfc	(?___lwmod+1)^0,w,c
  3712  0025CE  6EF7               	movwf	tblptrh,c
  3713  0025D0                     	if	0	;There are less than 3 active tblptr bytes
  3714  0025D0                     	endif
  3715  0025D0  0009               	tblrd		*+
  3716  0025D2  CFF5 F013          	movff	tablat,___flmul@a
  3717  0025D6  0009               	tblrd		*+
  3718  0025D8  CFF5 F014          	movff	tablat,___flmul@a+1
  3719  0025DC  0009               	tblrd		*+
  3720  0025DE  CFF5 F015          	movff	tablat,___flmul@a+2
  3721  0025E2  000A               	tblrd		*-
  3722  0025E4  CFF5 F016          	movff	tablat,___flmul@a+3
  3723  0025E8  EC62  F00C         	call	___flmul	;wreg free
  3724  0025EC  C00F  F028         	movff	?___flmul,?_fround
  3725  0025F0  C010  F029         	movff	?___flmul+1,?_fround+1
  3726  0025F4  C011  F02A         	movff	?___flmul+2,?_fround+2
  3727  0025F8  C012  F02B         	movff	?___flmul+3,?_fround+3
  3728  0025FC  EF9A  F013         	goto	l160
  3729  002600                     l3036:
  3730                           
  3731                           ;doprnt.c: 423: else if(prec > 10)
  3732  002600  0E0A               	movlw	10
  3733  002602  6434               	cpfsgt	fround@prec^0,c
  3734  002604  EF06  F013         	goto	u2991
  3735  002608  EF08  F013         	goto	u2990
  3736  00260C                     u2991:
  3737  00260C  EF74  F013         	goto	l3042
  3738  002610                     u2990:
  3739  002610                     
  3740                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3741  002610  0E00               	movlw	0
  3742  002612  6E13               	movwf	___flmul@a^0,c
  3743  002614  0E00               	movlw	0
  3744  002616  6E14               	movwf	(___flmul@a+1)^0,c
  3745  002618  0E00               	movlw	0
  3746  00261A  6E15               	movwf	(___flmul@a+2)^0,c
  3747  00261C  0E3F               	movlw	63
  3748  00261E  6E16               	movwf	(___flmul@a+3)^0,c
  3749  002620  0E00               	movlw	0
  3750  002622  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3751  002624  0E0A               	movlw	10
  3752  002626  6E08               	movwf	___lwdiv@divisor^0,c
  3753  002628  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3754  00262C  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3755  00262E  EC43  F01B         	call	___lwdiv	;wreg free
  3756  002632  90D8               	bcf	status,0,c
  3757  002634  3606               	rlcf	?___lwdiv^0,f,c
  3758  002636  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3759  002638  90D8               	bcf	status,0,c
  3760  00263A  3606               	rlcf	?___lwdiv^0,f,c
  3761  00263C  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3762  00263E  0E24               	movlw	36
  3763  002640  2606               	addwf	?___lwdiv^0,f,c
  3764  002642  0E00               	movlw	0
  3765  002644  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3766  002646  0E35               	movlw	low __npowers_
  3767  002648  2406               	addwf	?___lwdiv^0,w,c
  3768  00264A  6EF6               	movwf	tblptrl,c
  3769  00264C  0E06               	movlw	high __npowers_
  3770  00264E  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3771  002650  6EF7               	movwf	tblptrh,c
  3772  002652                     	if	0	;There are less than 3 active tblptr bytes
  3773  002652                     	endif
  3774  002652  0009               	tblrd		*+
  3775  002654  CFF5 F00F          	movff	tablat,___flmul@b
  3776  002658  0009               	tblrd		*+
  3777  00265A  CFF5 F010          	movff	tablat,___flmul@b+1
  3778  00265E  0009               	tblrd		*+
  3779  002660  CFF5 F011          	movff	tablat,___flmul@b+2
  3780  002664  000A               	tblrd		*-
  3781  002666  CFF5 F012          	movff	tablat,___flmul@b+3
  3782  00266A  EC62  F00C         	call	___flmul	;wreg free
  3783  00266E  C00F  F030         	movff	?___flmul,_fround$1168
  3784  002672  C010  F031         	movff	?___flmul+1,_fround$1168+1
  3785  002676  C011  F032         	movff	?___flmul+2,_fround$1168+2
  3786  00267A  C012  F033         	movff	?___flmul+3,_fround$1168+3
  3787                           
  3788                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3789  00267E  C030  F00F         	movff	_fround$1168,___flmul@b
  3790  002682  C031  F010         	movff	_fround$1168+1,___flmul@b+1
  3791  002686  C032  F011         	movff	_fround$1168+2,___flmul@b+2
  3792  00268A  C033  F012         	movff	_fround$1168+3,___flmul@b+3
  3793  00268E  0E00               	movlw	0
  3794  002690  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3795  002692  0E0A               	movlw	10
  3796  002694  6E03               	movwf	___lwmod@divisor^0,c
  3797  002696  C034  F001         	movff	fround@prec,___lwmod@dividend
  3798  00269A  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3799  00269C  EC7D  F01B         	call	___lwmod	;wreg free
  3800  0026A0  90D8               	bcf	status,0,c
  3801  0026A2  3601               	rlcf	?___lwmod^0,f,c
  3802  0026A4  3602               	rlcf	(?___lwmod+1)^0,f,c
  3803  0026A6  90D8               	bcf	status,0,c
  3804  0026A8  3601               	rlcf	?___lwmod^0,f,c
  3805  0026AA  3602               	rlcf	(?___lwmod+1)^0,f,c
  3806  0026AC  0E35               	movlw	low __npowers_
  3807  0026AE  2401               	addwf	?___lwmod^0,w,c
  3808  0026B0  6EF6               	movwf	tblptrl,c
  3809  0026B2  0E06               	movlw	high __npowers_
  3810  0026B4  2002               	addwfc	(?___lwmod+1)^0,w,c
  3811  0026B6  6EF7               	movwf	tblptrh,c
  3812  0026B8                     	if	0	;There are less than 3 active tblptr bytes
  3813  0026B8                     	endif
  3814  0026B8  0009               	tblrd		*+
  3815  0026BA  CFF5 F013          	movff	tablat,___flmul@a
  3816  0026BE  0009               	tblrd		*+
  3817  0026C0  CFF5 F014          	movff	tablat,___flmul@a+1
  3818  0026C4  0009               	tblrd		*+
  3819  0026C6  CFF5 F015          	movff	tablat,___flmul@a+2
  3820  0026CA  000A               	tblrd		*-
  3821  0026CC  CFF5 F016          	movff	tablat,___flmul@a+3
  3822  0026D0  EC62  F00C         	call	___flmul	;wreg free
  3823  0026D4  C00F  F028         	movff	?___flmul,?_fround
  3824  0026D8  C010  F029         	movff	?___flmul+1,?_fround+1
  3825  0026DC  C011  F02A         	movff	?___flmul+2,?_fround+2
  3826  0026E0  C012  F02B         	movff	?___flmul+3,?_fround+3
  3827  0026E4  EF9A  F013         	goto	l160
  3828  0026E8                     l3042:
  3829                           
  3830                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  3831  0026E8  5034               	movf	fround@prec^0,w,c
  3832  0026EA  0D04               	mullw	4
  3833  0026EC  0E35               	movlw	low __npowers_
  3834  0026EE  24F3               	addwf	243,w,c
  3835  0026F0  6EF6               	movwf	tblptrl,c
  3836  0026F2  0E06               	movlw	high __npowers_
  3837  0026F4  20F4               	addwfc	244,w,c
  3838  0026F6  6EF7               	movwf	tblptrh,c
  3839  0026F8                     	if	0	;There are less than 3 active tblptr bytes
  3840  0026F8                     	endif
  3841  0026F8  0009               	tblrd		*+
  3842  0026FA  CFF5 F00F          	movff	tablat,___flmul@b
  3843  0026FE  0009               	tblrd		*+
  3844  002700  CFF5 F010          	movff	tablat,___flmul@b+1
  3845  002704  0009               	tblrd		*+
  3846  002706  CFF5 F011          	movff	tablat,___flmul@b+2
  3847  00270A  000A               	tblrd		*-
  3848  00270C  CFF5 F012          	movff	tablat,___flmul@b+3
  3849  002710  0E00               	movlw	0
  3850  002712  6E13               	movwf	___flmul@a^0,c
  3851  002714  0E00               	movlw	0
  3852  002716  6E14               	movwf	(___flmul@a+1)^0,c
  3853  002718  0E00               	movlw	0
  3854  00271A  6E15               	movwf	(___flmul@a+2)^0,c
  3855  00271C  0E3F               	movlw	63
  3856  00271E  6E16               	movwf	(___flmul@a+3)^0,c
  3857  002720  EC62  F00C         	call	___flmul	;wreg free
  3858  002724  C00F  F028         	movff	?___flmul,?_fround
  3859  002728  C010  F029         	movff	?___flmul+1,?_fround+1
  3860  00272C  C011  F02A         	movff	?___flmul+2,?_fround+2
  3861  002730  C012  F02B         	movff	?___flmul+3,?_fround+3
  3862  002734                     l160:
  3863  002734  0012               	return		;funcret
  3864  002736                     __end_of_fround:
  3865                           	callstack 0
  3866                           
  3867 ;; *************** function ___lwmod *****************
  3868 ;; Defined at:
  3869 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  3870 ;; Parameters:    Size  Location     Type
  3871 ;;  dividend        2    0[COMRAM] unsigned int 
  3872 ;;  divisor         2    2[COMRAM] unsigned int 
  3873 ;; Auto vars:     Size  Location     Type
  3874 ;;  counter         1    4[COMRAM] unsigned char 
  3875 ;; Return value:  Size  Location     Type
  3876 ;;                  2    0[COMRAM] unsigned int 
  3877 ;; Registers used:
  3878 ;;		wreg, status,2, status,0
  3879 ;; Tracked objects:
  3880 ;;		On entry : 0/0
  3881 ;;		On exit  : 0/0
  3882 ;;		Unchanged: 0/0
  3883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3884 ;;      Params:         4       0       0       0       0       0       0
  3885 ;;      Locals:         1       0       0       0       0       0       0
  3886 ;;      Temps:          0       0       0       0       0       0       0
  3887 ;;      Totals:         5       0       0       0       0       0       0
  3888 ;;Total ram usage:        5 bytes
  3889 ;; Hardware stack levels used: 1
  3890 ;; This function calls:
  3891 ;;		Nothing
  3892 ;; This function is called by:
  3893 ;;		_fround
  3894 ;; This function uses a non-reentrant model
  3895 ;;
  3896                           
  3897                           	psect	text7
  3898  0036FA                     __ptext7:
  3899                           	callstack 0
  3900  0036FA                     ___lwmod:
  3901                           	callstack 28
  3902  0036FA  5003               	movf	___lwmod@divisor^0,w,c
  3903  0036FC  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3904  0036FE  B4D8               	btfsc	status,2,c
  3905  003700  EF84  F01B         	goto	u2951
  3906  003704  EF86  F01B         	goto	u2950
  3907  003708                     u2951:
  3908  003708  EFAA  F01B         	goto	l803
  3909  00370C                     u2950:
  3910  00370C  0E01               	movlw	1
  3911  00370E  6E05               	movwf	___lwmod@counter^0,c
  3912  003710  EF8E  F01B         	goto	l3018
  3913  003714                     l3016:
  3914  003714  90D8               	bcf	status,0,c
  3915  003716  3603               	rlcf	___lwmod@divisor^0,f,c
  3916  003718  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3917  00371A  2A05               	incf	___lwmod@counter^0,f,c
  3918  00371C                     l3018:
  3919  00371C  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3920  00371E  EF93  F01B         	goto	u2961
  3921  003722  EF95  F01B         	goto	u2960
  3922  003726                     u2961:
  3923  003726  EF8A  F01B         	goto	l3016
  3924  00372A                     u2960:
  3925  00372A                     l3020:
  3926  00372A  5003               	movf	___lwmod@divisor^0,w,c
  3927  00372C  5C01               	subwf	___lwmod@dividend^0,w,c
  3928  00372E  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3929  003730  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3930  003732  A0D8               	btfss	status,0,c
  3931  003734  EF9E  F01B         	goto	u2971
  3932  003738  EFA0  F01B         	goto	u2970
  3933  00373C                     u2971:
  3934  00373C  EFA4  F01B         	goto	l3024
  3935  003740                     u2970:
  3936  003740  5003               	movf	___lwmod@divisor^0,w,c
  3937  003742  5E01               	subwf	___lwmod@dividend^0,f,c
  3938  003744  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3939  003746  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3940  003748                     l3024:
  3941  003748  90D8               	bcf	status,0,c
  3942  00374A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3943  00374C  3203               	rrcf	___lwmod@divisor^0,f,c
  3944  00374E  2E05               	decfsz	___lwmod@counter^0,f,c
  3945  003750  EF95  F01B         	goto	l3020
  3946  003754                     l803:
  3947  003754  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3948  003758  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3949  00375C  0012               	return		;funcret
  3950  00375E                     __end_of___lwmod:
  3951                           	callstack 0
  3952                           
  3953 ;; *************** function ___lwdiv *****************
  3954 ;; Defined at:
  3955 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;  dividend        2    5[COMRAM] unsigned int 
  3958 ;;  divisor         2    7[COMRAM] unsigned int 
  3959 ;; Auto vars:     Size  Location     Type
  3960 ;;  quotient        2    9[COMRAM] unsigned int 
  3961 ;;  counter         1   11[COMRAM] unsigned char 
  3962 ;; Return value:  Size  Location     Type
  3963 ;;                  2    5[COMRAM] unsigned int 
  3964 ;; Registers used:
  3965 ;;		wreg, status,2, status,0
  3966 ;; Tracked objects:
  3967 ;;		On entry : 0/0
  3968 ;;		On exit  : 0/0
  3969 ;;		Unchanged: 0/0
  3970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3971 ;;      Params:         4       0       0       0       0       0       0
  3972 ;;      Locals:         3       0       0       0       0       0       0
  3973 ;;      Temps:          0       0       0       0       0       0       0
  3974 ;;      Totals:         7       0       0       0       0       0       0
  3975 ;;Total ram usage:        7 bytes
  3976 ;; Hardware stack levels used: 1
  3977 ;; This function calls:
  3978 ;;		Nothing
  3979 ;; This function is called by:
  3980 ;;		_fround
  3981 ;; This function uses a non-reentrant model
  3982 ;;
  3983                           
  3984                           	psect	text8
  3985  003686                     __ptext8:
  3986                           	callstack 0
  3987  003686                     ___lwdiv:
  3988                           	callstack 28
  3989  003686  0E00               	movlw	0
  3990  003688  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  3991  00368A  0E00               	movlw	0
  3992  00368C  6E0A               	movwf	___lwdiv@quotient^0,c
  3993  00368E  5008               	movf	___lwdiv@divisor^0,w,c
  3994  003690  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3995  003692  B4D8               	btfsc	status,2,c
  3996  003694  EF4E  F01B         	goto	u2921
  3997  003698  EF50  F01B         	goto	u2920
  3998  00369C                     u2921:
  3999  00369C  EF78  F01B         	goto	l793
  4000  0036A0                     u2920:
  4001  0036A0  0E01               	movlw	1
  4002  0036A2  6E0C               	movwf	___lwdiv@counter^0,c
  4003  0036A4  EF58  F01B         	goto	l2998
  4004  0036A8                     l2996:
  4005  0036A8  90D8               	bcf	status,0,c
  4006  0036AA  3608               	rlcf	___lwdiv@divisor^0,f,c
  4007  0036AC  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4008  0036AE  2A0C               	incf	___lwdiv@counter^0,f,c
  4009  0036B0                     l2998:
  4010  0036B0  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  4011  0036B2  EF5D  F01B         	goto	u2931
  4012  0036B6  EF5F  F01B         	goto	u2930
  4013  0036BA                     u2931:
  4014  0036BA  EF54  F01B         	goto	l2996
  4015  0036BE                     u2930:
  4016  0036BE                     l3000:
  4017  0036BE  90D8               	bcf	status,0,c
  4018  0036C0  360A               	rlcf	___lwdiv@quotient^0,f,c
  4019  0036C2  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4020  0036C4  5008               	movf	___lwdiv@divisor^0,w,c
  4021  0036C6  5C06               	subwf	___lwdiv@dividend^0,w,c
  4022  0036C8  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4023  0036CA  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4024  0036CC  A0D8               	btfss	status,0,c
  4025  0036CE  EF6B  F01B         	goto	u2941
  4026  0036D2  EF6D  F01B         	goto	u2940
  4027  0036D6                     u2941:
  4028  0036D6  EF72  F01B         	goto	l3008
  4029  0036DA                     u2940:
  4030  0036DA  5008               	movf	___lwdiv@divisor^0,w,c
  4031  0036DC  5E06               	subwf	___lwdiv@dividend^0,f,c
  4032  0036DE  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4033  0036E0  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4034  0036E2  800A               	bsf	___lwdiv@quotient^0,0,c
  4035  0036E4                     l3008:
  4036  0036E4  90D8               	bcf	status,0,c
  4037  0036E6  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4038  0036E8  3208               	rrcf	___lwdiv@divisor^0,f,c
  4039  0036EA  2E0C               	decfsz	___lwdiv@counter^0,f,c
  4040  0036EC  EF5F  F01B         	goto	l3000
  4041  0036F0                     l793:
  4042  0036F0  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4043  0036F4  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4044  0036F8  0012               	return		;funcret
  4045  0036FA                     __end_of___lwdiv:
  4046                           	callstack 0
  4047                           
  4048 ;; *************** function ___flmul *****************
  4049 ;; Defined at:
  4050 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  b               4   14[COMRAM] unsigned int 
  4053 ;;  a               4   18[COMRAM] unsigned int 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  prod            4   33[COMRAM] struct .
  4056 ;;  grs             4   27[COMRAM] unsigned long 
  4057 ;;  temp            2   37[COMRAM] struct .
  4058 ;;  bexp            1   32[COMRAM] unsigned char 
  4059 ;;  aexp            1   31[COMRAM] unsigned char 
  4060 ;;  sign            1   26[COMRAM] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  4   14[COMRAM] unsigned char 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0, prodl, prodh
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4070 ;;      Params:         8       0       0       0       0       0       0
  4071 ;;      Locals:        13       0       0       0       0       0       0
  4072 ;;      Temps:          4       0       0       0       0       0       0
  4073 ;;      Totals:        25       0       0       0       0       0       0
  4074 ;;Total ram usage:       25 bytes
  4075 ;; Hardware stack levels used: 1
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_main
  4080 ;;		_fround
  4081 ;;		_scale
  4082 ;;		_sprintf
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text9
  4087  0018C4                     __ptext9:
  4088                           	callstack 0
  4089  0018C4                     ___flmul:
  4090                           	callstack 28
  4091  0018C4  5012               	movf	(___flmul@b+3)^0,w,c
  4092  0018C6  0B80               	andlw	128
  4093  0018C8  6E1B               	movwf	___flmul@sign^0,c
  4094  0018CA  5012               	movf	(___flmul@b+3)^0,w,c
  4095  0018CC  2412               	addwf	(___flmul@b+3)^0,w,c
  4096  0018CE  6E21               	movwf	___flmul@bexp^0,c
  4097  0018D0  AE11               	btfss	(___flmul@b+2)^0,7,c
  4098  0018D2  EF6D  F00C         	goto	u2611
  4099  0018D6  EF6F  F00C         	goto	u2610
  4100  0018DA                     u2611:
  4101  0018DA  EF70  F00C         	goto	l2786
  4102  0018DE                     u2610:
  4103  0018DE  8021               	bsf	___flmul@bexp^0,0,c
  4104  0018E0                     l2786:
  4105  0018E0  5021               	movf	___flmul@bexp^0,w,c
  4106  0018E2  B4D8               	btfsc	status,2,c
  4107  0018E4  EF76  F00C         	goto	u2621
  4108  0018E8  EF78  F00C         	goto	u2620
  4109  0018EC                     u2621:
  4110  0018EC  EF8B  F00C         	goto	l2794
  4111  0018F0                     u2620:
  4112  0018F0  2821               	incf	___flmul@bexp^0,w,c
  4113  0018F2  A4D8               	btfss	status,2,c
  4114  0018F4  EF7E  F00C         	goto	u2631
  4115  0018F8  EF80  F00C         	goto	u2630
  4116  0018FC                     u2631:
  4117  0018FC  EF88  F00C         	goto	l2792
  4118  001900                     u2630:
  4119  001900  0E00               	movlw	0
  4120  001902  6E0F               	movwf	___flmul@b^0,c
  4121  001904  0E00               	movlw	0
  4122  001906  6E10               	movwf	(___flmul@b+1)^0,c
  4123  001908  0E00               	movlw	0
  4124  00190A  6E11               	movwf	(___flmul@b+2)^0,c
  4125  00190C  0E00               	movlw	0
  4126  00190E  6E12               	movwf	(___flmul@b+3)^0,c
  4127  001910                     l2792:
  4128  001910  8E11               	bsf	(___flmul@b+2)^0,7,c
  4129  001912  EF93  F00C         	goto	l2796
  4130  001916                     l2794:
  4131  001916  0E00               	movlw	0
  4132  001918  6E0F               	movwf	___flmul@b^0,c
  4133  00191A  0E00               	movlw	0
  4134  00191C  6E10               	movwf	(___flmul@b+1)^0,c
  4135  00191E  0E00               	movlw	0
  4136  001920  6E11               	movwf	(___flmul@b+2)^0,c
  4137  001922  0E00               	movlw	0
  4138  001924  6E12               	movwf	(___flmul@b+3)^0,c
  4139  001926                     l2796:
  4140  001926  5016               	movf	(___flmul@a+3)^0,w,c
  4141  001928  0B80               	andlw	128
  4142  00192A  1A1B               	xorwf	___flmul@sign^0,f,c
  4143  00192C  5016               	movf	(___flmul@a+3)^0,w,c
  4144  00192E  2416               	addwf	(___flmul@a+3)^0,w,c
  4145  001930  6E20               	movwf	___flmul@aexp^0,c
  4146  001932  AE15               	btfss	(___flmul@a+2)^0,7,c
  4147  001934  EF9E  F00C         	goto	u2641
  4148  001938  EFA0  F00C         	goto	u2640
  4149  00193C                     u2641:
  4150  00193C  EFA1  F00C         	goto	l2804
  4151  001940                     u2640:
  4152  001940  8020               	bsf	___flmul@aexp^0,0,c
  4153  001942                     l2804:
  4154  001942  5020               	movf	___flmul@aexp^0,w,c
  4155  001944  B4D8               	btfsc	status,2,c
  4156  001946  EFA7  F00C         	goto	u2651
  4157  00194A  EFA9  F00C         	goto	u2650
  4158  00194E                     u2651:
  4159  00194E  EFBC  F00C         	goto	l2812
  4160  001952                     u2650:
  4161  001952  2820               	incf	___flmul@aexp^0,w,c
  4162  001954  A4D8               	btfss	status,2,c
  4163  001956  EFAF  F00C         	goto	u2661
  4164  00195A  EFB1  F00C         	goto	u2660
  4165  00195E                     u2661:
  4166  00195E  EFB9  F00C         	goto	l2810
  4167  001962                     u2660:
  4168  001962  0E00               	movlw	0
  4169  001964  6E13               	movwf	___flmul@a^0,c
  4170  001966  0E00               	movlw	0
  4171  001968  6E14               	movwf	(___flmul@a+1)^0,c
  4172  00196A  0E00               	movlw	0
  4173  00196C  6E15               	movwf	(___flmul@a+2)^0,c
  4174  00196E  0E00               	movlw	0
  4175  001970  6E16               	movwf	(___flmul@a+3)^0,c
  4176  001972                     l2810:
  4177  001972  8E15               	bsf	(___flmul@a+2)^0,7,c
  4178  001974  EFC4  F00C         	goto	l916
  4179  001978                     l2812:
  4180  001978  0E00               	movlw	0
  4181  00197A  6E13               	movwf	___flmul@a^0,c
  4182  00197C  0E00               	movlw	0
  4183  00197E  6E14               	movwf	(___flmul@a+1)^0,c
  4184  001980  0E00               	movlw	0
  4185  001982  6E15               	movwf	(___flmul@a+2)^0,c
  4186  001984  0E00               	movlw	0
  4187  001986  6E16               	movwf	(___flmul@a+3)^0,c
  4188  001988                     l916:
  4189  001988  5020               	movf	___flmul@aexp^0,w,c
  4190  00198A  B4D8               	btfsc	status,2,c
  4191  00198C  EFCA  F00C         	goto	u2671
  4192  001990  EFCC  F00C         	goto	u2670
  4193  001994                     u2671:
  4194  001994  EFD4  F00C         	goto	l2816
  4195  001998                     u2670:
  4196  001998  5021               	movf	___flmul@bexp^0,w,c
  4197  00199A  A4D8               	btfss	status,2,c
  4198  00199C  EFD2  F00C         	goto	u2681
  4199  0019A0  EFD4  F00C         	goto	u2680
  4200  0019A4                     u2681:
  4201  0019A4  EFDE  F00C         	goto	l2820
  4202  0019A8                     u2680:
  4203  0019A8                     l2816:
  4204  0019A8  0E00               	movlw	0
  4205  0019AA  6E0F               	movwf	?___flmul^0,c
  4206  0019AC  0E00               	movlw	0
  4207  0019AE  6E10               	movwf	(?___flmul+1)^0,c
  4208  0019B0  0E00               	movlw	0
  4209  0019B2  6E11               	movwf	(?___flmul+2)^0,c
  4210  0019B4  0E00               	movlw	0
  4211  0019B6  6E12               	movwf	(?___flmul+3)^0,c
  4212  0019B8  EF76  F00E         	goto	l920
  4213  0019BC                     l2820:
  4214  0019BC  5015               	movf	(___flmul@a+2)^0,w,c
  4215  0019BE  020F               	mulwf	___flmul@b^0,c
  4216  0019C0  CFF3 F026          	movff	prodl,___flmul@temp
  4217  0019C4  CFF4 F027          	movff	prodh,___flmul@temp+1
  4218  0019C8  5026               	movf	___flmul@temp^0,w,c
  4219  0019CA  6E1C               	movwf	___flmul@grs^0,c
  4220  0019CC  6A1D               	clrf	(___flmul@grs+1)^0,c
  4221  0019CE  6A1E               	clrf	(___flmul@grs+2)^0,c
  4222  0019D0  6A1F               	clrf	(___flmul@grs+3)^0,c
  4223  0019D2  5027               	movf	(___flmul@temp+1)^0,w,c
  4224  0019D4  6E22               	movwf	___flmul@prod^0,c
  4225  0019D6  6A23               	clrf	(___flmul@prod+1)^0,c
  4226  0019D8  6A24               	clrf	(___flmul@prod+2)^0,c
  4227  0019DA  6A25               	clrf	(___flmul@prod+3)^0,c
  4228  0019DC  5014               	movf	(___flmul@a+1)^0,w,c
  4229  0019DE  0210               	mulwf	(___flmul@b+1)^0,c
  4230  0019E0  CFF3 F026          	movff	prodl,___flmul@temp
  4231  0019E4  CFF4 F027          	movff	prodh,___flmul@temp+1
  4232  0019E8  5026               	movf	___flmul@temp^0,w,c
  4233  0019EA  261C               	addwf	___flmul@grs^0,f,c
  4234  0019EC  0E00               	movlw	0
  4235  0019EE  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4236  0019F0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4237  0019F2  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4238  0019F4  5027               	movf	(___flmul@temp+1)^0,w,c
  4239  0019F6  2622               	addwf	___flmul@prod^0,f,c
  4240  0019F8  0E00               	movlw	0
  4241  0019FA  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4242  0019FC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4243  0019FE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4244  001A00  5013               	movf	___flmul@a^0,w,c
  4245  001A02  0211               	mulwf	(___flmul@b+2)^0,c
  4246  001A04  CFF3 F026          	movff	prodl,___flmul@temp
  4247  001A08  CFF4 F027          	movff	prodh,___flmul@temp+1
  4248  001A0C  5026               	movf	___flmul@temp^0,w,c
  4249  001A0E  261C               	addwf	___flmul@grs^0,f,c
  4250  001A10  0E00               	movlw	0
  4251  001A12  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4252  001A14  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4253  001A16  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4254  001A18  5027               	movf	(___flmul@temp+1)^0,w,c
  4255  001A1A  2622               	addwf	___flmul@prod^0,f,c
  4256  001A1C  0E00               	movlw	0
  4257  001A1E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4258  001A20  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4259  001A22  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4260  001A24  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4261  001A28  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4262  001A2C  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4263  001A30  6A1C               	clrf	___flmul@grs^0,c
  4264  001A32  5013               	movf	___flmul@a^0,w,c
  4265  001A34  0210               	mulwf	(___flmul@b+1)^0,c
  4266  001A36  CFF3 F026          	movff	prodl,___flmul@temp
  4267  001A3A  CFF4 F027          	movff	prodh,___flmul@temp+1
  4268  001A3E  5026               	movf	___flmul@temp^0,w,c
  4269  001A40  261C               	addwf	___flmul@grs^0,f,c
  4270  001A42  5027               	movf	(___flmul@temp+1)^0,w,c
  4271  001A44  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4272  001A46  0E00               	movlw	0
  4273  001A48  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4274  001A4A  0E00               	movlw	0
  4275  001A4C  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4276  001A4E  5014               	movf	(___flmul@a+1)^0,w,c
  4277  001A50  020F               	mulwf	___flmul@b^0,c
  4278  001A52  CFF3 F026          	movff	prodl,___flmul@temp
  4279  001A56  CFF4 F027          	movff	prodh,___flmul@temp+1
  4280  001A5A  5026               	movf	___flmul@temp^0,w,c
  4281  001A5C  261C               	addwf	___flmul@grs^0,f,c
  4282  001A5E  5027               	movf	(___flmul@temp+1)^0,w,c
  4283  001A60  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4284  001A62  0E00               	movlw	0
  4285  001A64  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4286  001A66  0E00               	movlw	0
  4287  001A68  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4288  001A6A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4289  001A6E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4290  001A72  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4291  001A76  6A1C               	clrf	___flmul@grs^0,c
  4292  001A78  5013               	movf	___flmul@a^0,w,c
  4293  001A7A  020F               	mulwf	___flmul@b^0,c
  4294  001A7C  CFF3 F026          	movff	prodl,___flmul@temp
  4295  001A80  CFF4 F027          	movff	prodh,___flmul@temp+1
  4296  001A84  5026               	movf	___flmul@temp^0,w,c
  4297  001A86  261C               	addwf	___flmul@grs^0,f,c
  4298  001A88  5027               	movf	(___flmul@temp+1)^0,w,c
  4299  001A8A  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4300  001A8C  0E00               	movlw	0
  4301  001A8E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4302  001A90  0E00               	movlw	0
  4303  001A92  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4304  001A94  5015               	movf	(___flmul@a+2)^0,w,c
  4305  001A96  0210               	mulwf	(___flmul@b+1)^0,c
  4306  001A98  CFF3 F026          	movff	prodl,___flmul@temp
  4307  001A9C  CFF4 F027          	movff	prodh,___flmul@temp+1
  4308  001AA0  5026               	movf	___flmul@temp^0,w,c
  4309  001AA2  2622               	addwf	___flmul@prod^0,f,c
  4310  001AA4  5027               	movf	(___flmul@temp+1)^0,w,c
  4311  001AA6  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4312  001AA8  0E00               	movlw	0
  4313  001AAA  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4314  001AAC  0E00               	movlw	0
  4315  001AAE  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4316  001AB0  5014               	movf	(___flmul@a+1)^0,w,c
  4317  001AB2  0211               	mulwf	(___flmul@b+2)^0,c
  4318  001AB4  CFF3 F026          	movff	prodl,___flmul@temp
  4319  001AB8  CFF4 F027          	movff	prodh,___flmul@temp+1
  4320  001ABC  5026               	movf	___flmul@temp^0,w,c
  4321  001ABE  2622               	addwf	___flmul@prod^0,f,c
  4322  001AC0  5027               	movf	(___flmul@temp+1)^0,w,c
  4323  001AC2  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4324  001AC4  0E00               	movlw	0
  4325  001AC6  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4326  001AC8  0E00               	movlw	0
  4327  001ACA  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4328  001ACC  5015               	movf	(___flmul@a+2)^0,w,c
  4329  001ACE  0211               	mulwf	(___flmul@b+2)^0,c
  4330  001AD0  CFF3 F026          	movff	prodl,___flmul@temp
  4331  001AD4  CFF4 F027          	movff	prodh,___flmul@temp+1
  4332  001AD8  5026               	movf	___flmul@temp^0,w,c
  4333  001ADA  6E17               	movwf	??___flmul^0,c
  4334  001ADC  5027               	movf	(___flmul@temp+1)^0,w,c
  4335  001ADE  6E18               	movwf	(??___flmul+1)^0,c
  4336  001AE0  6A19               	clrf	(??___flmul+2)^0,c
  4337  001AE2  6A1A               	clrf	(??___flmul+3)^0,c
  4338  001AE4  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4339  001AE8  C018  F019         	movff	??___flmul+1,??___flmul+2
  4340  001AEC  C017  F018         	movff	??___flmul,??___flmul+1
  4341  001AF0  6A17               	clrf	??___flmul^0,c
  4342  001AF2  5017               	movf	??___flmul^0,w,c
  4343  001AF4  2622               	addwf	___flmul@prod^0,f,c
  4344  001AF6  5018               	movf	(??___flmul+1)^0,w,c
  4345  001AF8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4346  001AFA  5019               	movf	(??___flmul+2)^0,w,c
  4347  001AFC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4348  001AFE  501A               	movf	(??___flmul+3)^0,w,c
  4349  001B00  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4350  001B02  C01C  F017         	movff	___flmul@grs,??___flmul
  4351  001B06  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4352  001B0A  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4353  001B0E  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4354  001B12  0E19               	movlw	25
  4355  001B14  EF91  F00D         	goto	u2690
  4356  001B18                     u2695:
  4357  001B18  90D8               	bcf	status,0,c
  4358  001B1A  321A               	rrcf	(??___flmul+3)^0,f,c
  4359  001B1C  3219               	rrcf	(??___flmul+2)^0,f,c
  4360  001B1E  3218               	rrcf	(??___flmul+1)^0,f,c
  4361  001B20  3217               	rrcf	??___flmul^0,f,c
  4362  001B22                     u2690:
  4363  001B22  2EE8               	decfsz	wreg,f,c
  4364  001B24  EF8C  F00D         	goto	u2695
  4365  001B28  5017               	movf	??___flmul^0,w,c
  4366  001B2A  2622               	addwf	___flmul@prod^0,f,c
  4367  001B2C  5018               	movf	(??___flmul+1)^0,w,c
  4368  001B2E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4369  001B30  5019               	movf	(??___flmul+2)^0,w,c
  4370  001B32  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4371  001B34  501A               	movf	(??___flmul+3)^0,w,c
  4372  001B36  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4373  001B38  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4374  001B3C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4375  001B40  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4376  001B44  6A1C               	clrf	___flmul@grs^0,c
  4377  001B46  5020               	movf	___flmul@aexp^0,w,c
  4378  001B48  C021  F017         	movff	___flmul@bexp,??___flmul
  4379  001B4C  6A18               	clrf	(??___flmul+1)^0,c
  4380  001B4E  2617               	addwf	??___flmul^0,f,c
  4381  001B50  0E00               	movlw	0
  4382  001B52  2218               	addwfc	(??___flmul+1)^0,f,c
  4383  001B54  0E82               	movlw	130
  4384  001B56  2417               	addwf	??___flmul^0,w,c
  4385  001B58  6E26               	movwf	___flmul@temp^0,c
  4386  001B5A  0EFF               	movlw	255
  4387  001B5C  2018               	addwfc	(??___flmul+1)^0,w,c
  4388  001B5E  6E27               	movwf	(___flmul@temp+1)^0,c
  4389  001B60  EFC7  F00D         	goto	l2868
  4390  001B64                     l2862:
  4391  001B64  90D8               	bcf	status,0,c
  4392  001B66  3622               	rlcf	___flmul@prod^0,f,c
  4393  001B68  3623               	rlcf	(___flmul@prod+1)^0,f,c
  4394  001B6A  3624               	rlcf	(___flmul@prod+2)^0,f,c
  4395  001B6C  3625               	rlcf	(___flmul@prod+3)^0,f,c
  4396  001B6E  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4397  001B70  EFBC  F00D         	goto	u2701
  4398  001B74  EFBE  F00D         	goto	u2700
  4399  001B78                     u2701:
  4400  001B78  EFBF  F00D         	goto	l923
  4401  001B7C                     u2700:
  4402  001B7C  8022               	bsf	___flmul@prod^0,0,c
  4403  001B7E                     l923:
  4404  001B7E  90D8               	bcf	status,0,c
  4405  001B80  361C               	rlcf	___flmul@grs^0,f,c
  4406  001B82  361D               	rlcf	(___flmul@grs+1)^0,f,c
  4407  001B84  361E               	rlcf	(___flmul@grs+2)^0,f,c
  4408  001B86  361F               	rlcf	(___flmul@grs+3)^0,f,c
  4409  001B88  0626               	decf	___flmul@temp^0,f,c
  4410  001B8A  A0D8               	btfss	status,0,c
  4411  001B8C  0627               	decf	(___flmul@temp+1)^0,f,c
  4412  001B8E                     l2868:
  4413  001B8E  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4414  001B90  EFCC  F00D         	goto	u2711
  4415  001B94  EFCE  F00D         	goto	u2710
  4416  001B98                     u2711:
  4417  001B98  EFB2  F00D         	goto	l2862
  4418  001B9C                     u2710:
  4419  001B9C  0E00               	movlw	0
  4420  001B9E  6E20               	movwf	___flmul@aexp^0,c
  4421  001BA0  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4422  001BA2  EFD5  F00D         	goto	u2721
  4423  001BA6  EFD7  F00D         	goto	u2720
  4424  001BAA                     u2721:
  4425  001BAA  EFFB  F00D         	goto	l925
  4426  001BAE                     u2720:
  4427  001BAE  0EFF               	movlw	255
  4428  001BB0  141C               	andwf	___flmul@grs^0,w,c
  4429  001BB2  6E17               	movwf	??___flmul^0,c
  4430  001BB4  0EFF               	movlw	255
  4431  001BB6  141D               	andwf	(___flmul@grs+1)^0,w,c
  4432  001BB8  6E18               	movwf	(??___flmul+1)^0,c
  4433  001BBA  0EFF               	movlw	255
  4434  001BBC  141E               	andwf	(___flmul@grs+2)^0,w,c
  4435  001BBE  6E19               	movwf	(??___flmul+2)^0,c
  4436  001BC0  0E7F               	movlw	127
  4437  001BC2  141F               	andwf	(___flmul@grs+3)^0,w,c
  4438  001BC4  6E1A               	movwf	(??___flmul+3)^0,c
  4439  001BC6  5017               	movf	??___flmul^0,w,c
  4440  001BC8  1018               	iorwf	(??___flmul+1)^0,w,c
  4441  001BCA  1019               	iorwf	(??___flmul+2)^0,w,c
  4442  001BCC  101A               	iorwf	(??___flmul+3)^0,w,c
  4443  001BCE  B4D8               	btfsc	status,2,c
  4444  001BD0  EFEC  F00D         	goto	u2731
  4445  001BD4  EFEE  F00D         	goto	u2730
  4446  001BD8                     u2731:
  4447  001BD8  EFF2  F00D         	goto	l926
  4448  001BDC                     u2730:
  4449  001BDC                     l2876:
  4450  001BDC  0E01               	movlw	1
  4451  001BDE  6E20               	movwf	___flmul@aexp^0,c
  4452  001BE0  EFFB  F00D         	goto	l925
  4453  001BE4                     l926:
  4454  001BE4  A022               	btfss	___flmul@prod^0,0,c
  4455  001BE6  EFF7  F00D         	goto	u2741
  4456  001BEA  EFF9  F00D         	goto	u2740
  4457  001BEE                     u2741:
  4458  001BEE  EFFB  F00D         	goto	l925
  4459  001BF2                     u2740:
  4460  001BF2  EFEE  F00D         	goto	l2876
  4461  001BF6                     l925:
  4462  001BF6  5020               	movf	___flmul@aexp^0,w,c
  4463  001BF8  B4D8               	btfsc	status,2,c
  4464  001BFA  EF01  F00E         	goto	u2751
  4465  001BFE  EF03  F00E         	goto	u2750
  4466  001C02                     u2751:
  4467  001C02  EF27  F00E         	goto	l2888
  4468  001C06                     u2750:
  4469  001C06  0E01               	movlw	1
  4470  001C08  2622               	addwf	___flmul@prod^0,f,c
  4471  001C0A  0E00               	movlw	0
  4472  001C0C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4473  001C0E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4474  001C10  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4475  001C12  A025               	btfss	(___flmul@prod+3)^0,0,c
  4476  001C14  EF0E  F00E         	goto	u2761
  4477  001C18  EF10  F00E         	goto	u2760
  4478  001C1C                     u2761:
  4479  001C1C  EF27  F00E         	goto	l2888
  4480  001C20                     u2760:
  4481  001C20  C022  F017         	movff	___flmul@prod,??___flmul
  4482  001C24  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4483  001C28  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4484  001C2C  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4485  001C30  341A               	rlcf	(??___flmul+3)^0,w,c
  4486  001C32  321A               	rrcf	(??___flmul+3)^0,f,c
  4487  001C34  3219               	rrcf	(??___flmul+2)^0,f,c
  4488  001C36  3218               	rrcf	(??___flmul+1)^0,f,c
  4489  001C38  3217               	rrcf	??___flmul^0,f,c
  4490  001C3A  C017  F022         	movff	??___flmul,___flmul@prod
  4491  001C3E  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4492  001C42  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4493  001C46  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4494  001C4A  4A26               	infsnz	___flmul@temp^0,f,c
  4495  001C4C  2A27               	incf	(___flmul@temp+1)^0,f,c
  4496  001C4E                     l2888:
  4497  001C4E  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4498  001C50  EF32  F00E         	goto	u2771
  4499  001C54  5027               	movf	(___flmul@temp+1)^0,w,c
  4500  001C56  E108               	bnz	u2770
  4501  001C58  2826               	incf	___flmul@temp^0,w,c
  4502  001C5A  A0D8               	btfss	status,0,c
  4503  001C5C  EF32  F00E         	goto	u2771
  4504  001C60  EF34  F00E         	goto	u2770
  4505  001C64                     u2771:
  4506  001C64  EF3E  F00E         	goto	l2892
  4507  001C68                     u2770:
  4508  001C68  0E00               	movlw	0
  4509  001C6A  6E22               	movwf	___flmul@prod^0,c
  4510  001C6C  0E00               	movlw	0
  4511  001C6E  6E23               	movwf	(___flmul@prod+1)^0,c
  4512  001C70  0E80               	movlw	128
  4513  001C72  6E24               	movwf	(___flmul@prod+2)^0,c
  4514  001C74  0E7F               	movlw	127
  4515  001C76  6E25               	movwf	(___flmul@prod+3)^0,c
  4516  001C78  EF6C  F00E         	goto	l2904
  4517  001C7C                     l2892:
  4518  001C7C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4519  001C7E  EF4B  F00E         	goto	u2780
  4520  001C82  5027               	movf	(___flmul@temp+1)^0,w,c
  4521  001C84  E106               	bnz	u2781
  4522  001C86  0426               	decf	___flmul@temp^0,w,c
  4523  001C88  B0D8               	btfsc	status,0,c
  4524  001C8A  EF49  F00E         	goto	u2781
  4525  001C8E  EF4B  F00E         	goto	u2780
  4526  001C92                     u2781:
  4527  001C92  EF57  F00E         	goto	l933
  4528  001C96                     u2780:
  4529  001C96  0E00               	movlw	0
  4530  001C98  6E22               	movwf	___flmul@prod^0,c
  4531  001C9A  0E00               	movlw	0
  4532  001C9C  6E23               	movwf	(___flmul@prod+1)^0,c
  4533  001C9E  0E00               	movlw	0
  4534  001CA0  6E24               	movwf	(___flmul@prod+2)^0,c
  4535  001CA2  0E00               	movlw	0
  4536  001CA4  6E25               	movwf	(___flmul@prod+3)^0,c
  4537  001CA6  0E00               	movlw	0
  4538  001CA8  6E1B               	movwf	___flmul@sign^0,c
  4539  001CAA  EF6C  F00E         	goto	l2904
  4540  001CAE                     l933:
  4541  001CAE  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4542  001CB2  0EFF               	movlw	255
  4543  001CB4  1622               	andwf	___flmul@prod^0,f,c
  4544  001CB6  0EFF               	movlw	255
  4545  001CB8  1623               	andwf	(___flmul@prod+1)^0,f,c
  4546  001CBA  0E7F               	movlw	127
  4547  001CBC  1624               	andwf	(___flmul@prod+2)^0,f,c
  4548  001CBE  0E00               	movlw	0
  4549  001CC0  1625               	andwf	(___flmul@prod+3)^0,f,c
  4550  001CC2  A021               	btfss	___flmul@bexp^0,0,c
  4551  001CC4  EF66  F00E         	goto	u2791
  4552  001CC8  EF68  F00E         	goto	u2790
  4553  001CCC                     u2791:
  4554  001CCC  EF69  F00E         	goto	l2902
  4555  001CD0                     u2790:
  4556  001CD0  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4557  001CD2                     l2902:
  4558  001CD2  90D8               	bcf	status,0,c
  4559  001CD4  3021               	rrcf	___flmul@bexp^0,w,c
  4560  001CD6  6E25               	movwf	(___flmul@prod+3)^0,c
  4561  001CD8                     l2904:
  4562  001CD8  501B               	movf	___flmul@sign^0,w,c
  4563  001CDA  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4564  001CDC  C022  F00F         	movff	___flmul@prod,?___flmul
  4565  001CE0  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4566  001CE4  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4567  001CE8  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4568  001CEC                     l920:
  4569  001CEC  0012               	return		;funcret
  4570  001CEE                     __end_of___flmul:
  4571                           	callstack 0
  4572                           
  4573 ;; *************** function __tdiv_to_l_ *****************
  4574 ;; Defined at:
  4575 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  f1              4    0[COMRAM] float 
  4578 ;;  f2              4    4[COMRAM] float 
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;  quot            4   11[COMRAM] unsigned long 
  4581 ;;  exp1            1   16[COMRAM] unsigned char 
  4582 ;;  cntr            1   15[COMRAM] unsigned char 
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  4    0[COMRAM] unsigned long 
  4585 ;; Registers used:
  4586 ;;		wreg, status,2, status,0
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4592 ;;      Params:         8       0       0       0       0       0       0
  4593 ;;      Locals:         6       0       0       0       0       0       0
  4594 ;;      Temps:          3       0       0       0       0       0       0
  4595 ;;      Totals:        17       0       0       0       0       0       0
  4596 ;;Total ram usage:       17 bytes
  4597 ;; Hardware stack levels used: 1
  4598 ;; This function calls:
  4599 ;;		Nothing
  4600 ;; This function is called by:
  4601 ;;		_sprintf
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text10
  4606  0028EA                     __ptext10:
  4607                           	callstack 0
  4608  0028EA                     __tdiv_to_l_:
  4609                           	callstack 29
  4610  0028EA  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4611  0028EE  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4612  0028F0  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4613  0028F2  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  4614  0028F4  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4615  0028F6  E301               	bnc	u3071
  4616  0028F8  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  4617  0028FA                     u3071:
  4618  0028FA  5009               	movf	??__tdiv_to_l_^0,w,c
  4619  0028FC  6E11               	movwf	__tdiv_to_l_@exp1^0,c
  4620  0028FE  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4621  002900  A4D8               	btfss	status,2,c
  4622  002902  EF85  F014         	goto	u3081
  4623  002906  EF87  F014         	goto	u3080
  4624  00290A                     u3081:
  4625  00290A  EF91  F014         	goto	l3102
  4626  00290E                     u3080:
  4627  00290E                     l3098:
  4628  00290E  0E00               	movlw	0
  4629  002910  6E01               	movwf	?__tdiv_to_l_^0,c
  4630  002912  0E00               	movlw	0
  4631  002914  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  4632  002916  0E00               	movlw	0
  4633  002918  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  4634  00291A  0E00               	movlw	0
  4635  00291C  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  4636  00291E  EF1F  F015         	goto	l643
  4637  002922                     l3102:
  4638  002922  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4639  002926  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4640  002928  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4641  00292A  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  4642  00292C  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4643  00292E  E301               	bnc	u3091
  4644  002930  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  4645  002932                     u3091:
  4646  002932  5009               	movf	??__tdiv_to_l_^0,w,c
  4647  002934  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  4648  002936  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  4649  002938  A4D8               	btfss	status,2,c
  4650  00293A  EFA1  F014         	goto	u3101
  4651  00293E  EFA3  F014         	goto	u3100
  4652  002942                     u3101:
  4653  002942  EFA5  F014         	goto	l3108
  4654  002946                     u3100:
  4655  002946  EF87  F014         	goto	l3098
  4656  00294A                     l3108:
  4657  00294A  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  4658  00294C  0EFF               	movlw	255
  4659  00294E  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  4660  002950  0EFF               	movlw	255
  4661  002952  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  4662  002954  0E00               	movlw	0
  4663  002956  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  4664  002958  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  4665  00295A  0EFF               	movlw	255
  4666  00295C  1605               	andwf	__tdiv_to_l_@f2^0,f,c
  4667  00295E  0EFF               	movlw	255
  4668  002960  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  4669  002962  0E00               	movlw	0
  4670  002964  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  4671  002966  0E00               	movlw	0
  4672  002968  6E0C               	movwf	__tdiv_to_l_@quot^0,c
  4673  00296A  0E00               	movlw	0
  4674  00296C  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
  4675  00296E  0E00               	movlw	0
  4676  002970  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
  4677  002972  0E00               	movlw	0
  4678  002974  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
  4679  002976  0E7F               	movlw	127
  4680  002978  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  4681  00297A  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  4682  00297C  0F98               	addlw	152
  4683  00297E  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  4684  002980  0E18               	movlw	24
  4685  002982  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  4686  002984                     l645:
  4687  002984  90D8               	bcf	status,0,c
  4688  002986  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  4689  002988  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  4690  00298A  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  4691  00298C  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  4692  00298E  5005               	movf	__tdiv_to_l_@f2^0,w,c
  4693  002990  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  4694  002992  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  4695  002994  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  4696  002996  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  4697  002998  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  4698  00299A  A0D8               	btfss	status,0,c
  4699  00299C  EFD2  F014         	goto	u3111
  4700  0029A0  EFD4  F014         	goto	u3110
  4701  0029A4                     u3111:
  4702  0029A4  EFDB  F014         	goto	l646
  4703  0029A8                     u3110:
  4704  0029A8  5005               	movf	__tdiv_to_l_@f2^0,w,c
  4705  0029AA  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  4706  0029AC  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  4707  0029AE  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  4708  0029B0  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  4709  0029B2  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  4710  0029B4  800C               	bsf	__tdiv_to_l_@quot^0,0,c
  4711  0029B6                     l646:
  4712  0029B6  90D8               	bcf	status,0,c
  4713  0029B8  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  4714  0029BA  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  4715  0029BC  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  4716  0029BE  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
  4717  0029C0  EFC2  F014         	goto	l645
  4718  0029C4  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
  4719  0029C6  EFE9  F014         	goto	u3120
  4720  0029CA  EFE7  F014         	goto	u3121
  4721  0029CE                     u3121:
  4722  0029CE  EFFF  F014         	goto	l3142
  4723  0029D2                     u3120:
  4724  0029D2  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4725  0029D4  0A80               	xorlw	128
  4726  0029D6  0F97               	addlw	151
  4727  0029D8  B0D8               	btfsc	status,0,c
  4728  0029DA  EFF1  F014         	goto	u3131
  4729  0029DE  EFF3  F014         	goto	u3130
  4730  0029E2                     u3131:
  4731  0029E2  EFF5  F014         	goto	l3138
  4732  0029E6                     u3130:
  4733  0029E6  EF87  F014         	goto	l3098
  4734  0029EA                     l3138:
  4735  0029EA  90D8               	bcf	status,0,c
  4736  0029EC  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  4737  0029EE  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  4738  0029F0  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  4739  0029F2  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
  4740  0029F4  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
  4741  0029F6  EFF5  F014         	goto	l3138
  4742  0029FA  EF17  F015         	goto	l652
  4743  0029FE                     l3142:
  4744  0029FE  0E17               	movlw	23
  4745  002A00  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
  4746  002A02  EF05  F015         	goto	u3141
  4747  002A06  EF07  F015         	goto	u3140
  4748  002A0A                     u3141:
  4749  002A0A  EF0F  F015         	goto	l3150
  4750  002A0E                     u3140:
  4751  002A0E  EF87  F014         	goto	l3098
  4752  002A12                     l3148:
  4753  002A12  90D8               	bcf	status,0,c
  4754  002A14  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  4755  002A16  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  4756  002A18  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  4757  002A1A  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  4758  002A1C  0611               	decf	__tdiv_to_l_@exp1^0,f,c
  4759  002A1E                     l3150:
  4760  002A1E  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4761  002A20  A4D8               	btfss	status,2,c
  4762  002A22  EF15  F015         	goto	u3151
  4763  002A26  EF17  F015         	goto	u3150
  4764  002A2A                     u3151:
  4765  002A2A  EF09  F015         	goto	l3148
  4766  002A2E                     u3150:
  4767  002A2E                     l652:
  4768  002A2E  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4769  002A32  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4770  002A36  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4771  002A3A  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4772  002A3E                     l643:
  4773  002A3E  0012               	return		;funcret
  4774  002A40                     __end_of__tdiv_to_l_:
  4775                           	callstack 0
  4776                           
  4777 ;; *************** function __div_to_l_ *****************
  4778 ;; Defined at:
  4779 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;  f1              4    0[COMRAM] unsigned long 
  4782 ;;  f2              4    4[COMRAM] unsigned long 
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;  quot            4    8[COMRAM] unsigned long 
  4785 ;;  exp1            1   13[COMRAM] unsigned char 
  4786 ;;  cntr            1   12[COMRAM] unsigned char 
  4787 ;; Return value:  Size  Location     Type
  4788 ;;                  4    0[COMRAM] unsigned long 
  4789 ;; Registers used:
  4790 ;;		wreg, status,2, status,0
  4791 ;; Tracked objects:
  4792 ;;		On entry : 0/0
  4793 ;;		On exit  : 0/0
  4794 ;;		Unchanged: 0/0
  4795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4796 ;;      Params:         8       0       0       0       0       0       0
  4797 ;;      Locals:         6       0       0       0       0       0       0
  4798 ;;      Temps:          0       0       0       0       0       0       0
  4799 ;;      Totals:        14       0       0       0       0       0       0
  4800 ;;Total ram usage:       14 bytes
  4801 ;; Hardware stack levels used: 1
  4802 ;; This function calls:
  4803 ;;		Nothing
  4804 ;; This function is called by:
  4805 ;;		_sprintf
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           	psect	text11
  4810  002A40                     __ptext11:
  4811                           	callstack 0
  4812  002A40                     __div_to_l_:
  4813                           	callstack 29
  4814  002A40  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  4815  002A42  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  4816  002A44  6E0E               	movwf	__div_to_l_@exp1^0,c
  4817  002A46  500E               	movf	__div_to_l_@exp1^0,w,c
  4818  002A48  A4D8               	btfss	status,2,c
  4819  002A4A  EF29  F015         	goto	u3161
  4820  002A4E  EF2B  F015         	goto	u3160
  4821  002A52                     u3161:
  4822  002A52  EF35  F015         	goto	l3158
  4823  002A56                     u3160:
  4824  002A56                     l3154:
  4825  002A56  0E00               	movlw	0
  4826  002A58  6E01               	movwf	?__div_to_l_^0,c
  4827  002A5A  0E00               	movlw	0
  4828  002A5C  6E02               	movwf	(?__div_to_l_+1)^0,c
  4829  002A5E  0E00               	movlw	0
  4830  002A60  6E03               	movwf	(?__div_to_l_+2)^0,c
  4831  002A62  0E00               	movlw	0
  4832  002A64  6E04               	movwf	(?__div_to_l_+3)^0,c
  4833  002A66  EFC5  F015         	goto	l534
  4834  002A6A                     l3158:
  4835  002A6A  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
  4836  002A6C  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
  4837  002A6E  6E0D               	movwf	__div_to_l_@cntr^0,c
  4838  002A70  500D               	movf	__div_to_l_@cntr^0,w,c
  4839  002A72  A4D8               	btfss	status,2,c
  4840  002A74  EF3E  F015         	goto	u3171
  4841  002A78  EF40  F015         	goto	u3170
  4842  002A7C                     u3171:
  4843  002A7C  EF42  F015         	goto	l3164
  4844  002A80                     u3170:
  4845  002A80  EF2B  F015         	goto	l3154
  4846  002A84                     l3164:
  4847  002A84  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  4848  002A86  0EFF               	movlw	255
  4849  002A88  1601               	andwf	__div_to_l_@f1^0,f,c
  4850  002A8A  0EFF               	movlw	255
  4851  002A8C  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  4852  002A8E  0EFF               	movlw	255
  4853  002A90  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  4854  002A92  0E00               	movlw	0
  4855  002A94  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  4856  002A96  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
  4857  002A98  0EFF               	movlw	255
  4858  002A9A  1605               	andwf	__div_to_l_@f2^0,f,c
  4859  002A9C  0EFF               	movlw	255
  4860  002A9E  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
  4861  002AA0  0EFF               	movlw	255
  4862  002AA2  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
  4863  002AA4  0E00               	movlw	0
  4864  002AA6  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
  4865  002AA8  0E00               	movlw	0
  4866  002AAA  6E09               	movwf	__div_to_l_@quot^0,c
  4867  002AAC  0E00               	movlw	0
  4868  002AAE  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
  4869  002AB0  0E00               	movlw	0
  4870  002AB2  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
  4871  002AB4  0E00               	movlw	0
  4872  002AB6  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
  4873  002AB8  0E7F               	movlw	127
  4874  002ABA  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  4875  002ABC  500D               	movf	__div_to_l_@cntr^0,w,c
  4876  002ABE  0FA0               	addlw	160
  4877  002AC0  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  4878  002AC2  0E20               	movlw	32
  4879  002AC4  6E0D               	movwf	__div_to_l_@cntr^0,c
  4880  002AC6                     l3178:
  4881  002AC6  90D8               	bcf	status,0,c
  4882  002AC8  3609               	rlcf	__div_to_l_@quot^0,f,c
  4883  002ACA  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  4884  002ACC  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  4885  002ACE  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  4886  002AD0  5005               	movf	__div_to_l_@f2^0,w,c
  4887  002AD2  5C01               	subwf	__div_to_l_@f1^0,w,c
  4888  002AD4  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  4889  002AD6  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  4890  002AD8  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  4891  002ADA  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  4892  002ADC  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  4893  002ADE  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  4894  002AE0  A0D8               	btfss	status,0,c
  4895  002AE2  EF75  F015         	goto	u3181
  4896  002AE6  EF77  F015         	goto	u3180
  4897  002AEA                     u3181:
  4898  002AEA  EF80  F015         	goto	l3186
  4899  002AEE                     u3180:
  4900  002AEE  5005               	movf	__div_to_l_@f2^0,w,c
  4901  002AF0  5E01               	subwf	__div_to_l_@f1^0,f,c
  4902  002AF2  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  4903  002AF4  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  4904  002AF6  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  4905  002AF8  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  4906  002AFA  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  4907  002AFC  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  4908  002AFE  8009               	bsf	__div_to_l_@quot^0,0,c
  4909  002B00                     l3186:
  4910  002B00  90D8               	bcf	status,0,c
  4911  002B02  3601               	rlcf	__div_to_l_@f1^0,f,c
  4912  002B04  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  4913  002B06  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  4914  002B08  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  4915  002B0A  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
  4916  002B0C  EF63  F015         	goto	l3178
  4917  002B10  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
  4918  002B12  EF8F  F015         	goto	u3190
  4919  002B16  EF8D  F015         	goto	u3191
  4920  002B1A                     u3191:
  4921  002B1A  EFA5  F015         	goto	l3202
  4922  002B1E                     u3190:
  4923  002B1E  500E               	movf	__div_to_l_@exp1^0,w,c
  4924  002B20  0A80               	xorlw	128
  4925  002B22  0F9F               	addlw	159
  4926  002B24  B0D8               	btfsc	status,0,c
  4927  002B26  EF97  F015         	goto	u3201
  4928  002B2A  EF99  F015         	goto	u3200
  4929  002B2E                     u3201:
  4930  002B2E  EF9B  F015         	goto	l3198
  4931  002B32                     u3200:
  4932  002B32  EF2B  F015         	goto	l3154
  4933  002B36                     l3198:
  4934  002B36  90D8               	bcf	status,0,c
  4935  002B38  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
  4936  002B3A  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
  4937  002B3C  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
  4938  002B3E  3209               	rrcf	__div_to_l_@quot^0,f,c
  4939  002B40  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
  4940  002B42  EF9B  F015         	goto	l3198
  4941  002B46  EFBD  F015         	goto	l543
  4942  002B4A                     l3202:
  4943  002B4A  0E1F               	movlw	31
  4944  002B4C  640E               	cpfsgt	__div_to_l_@exp1^0,c
  4945  002B4E  EFAB  F015         	goto	u3211
  4946  002B52  EFAD  F015         	goto	u3210
  4947  002B56                     u3211:
  4948  002B56  EFB5  F015         	goto	l3210
  4949  002B5A                     u3210:
  4950  002B5A  EF2B  F015         	goto	l3154
  4951  002B5E                     l3208:
  4952  002B5E  90D8               	bcf	status,0,c
  4953  002B60  3609               	rlcf	__div_to_l_@quot^0,f,c
  4954  002B62  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  4955  002B64  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  4956  002B66  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  4957  002B68  060E               	decf	__div_to_l_@exp1^0,f,c
  4958  002B6A                     l3210:
  4959  002B6A  500E               	movf	__div_to_l_@exp1^0,w,c
  4960  002B6C  A4D8               	btfss	status,2,c
  4961  002B6E  EFBB  F015         	goto	u3221
  4962  002B72  EFBD  F015         	goto	u3220
  4963  002B76                     u3221:
  4964  002B76  EFAF  F015         	goto	l3208
  4965  002B7A                     u3220:
  4966  002B7A                     l543:
  4967  002B7A  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  4968  002B7E  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  4969  002B82  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  4970  002B86  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  4971  002B8A                     l534:
  4972  002B8A  0012               	return		;funcret
  4973  002B8C                     __end_of__div_to_l_:
  4974                           	callstack 0
  4975                           
  4976 ;; *************** function ___xxtofl *****************
  4977 ;; Defined at:
  4978 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4979 ;; Parameters:    Size  Location     Type
  4980 ;;  sign            1    wreg     unsigned char 
  4981 ;;  val             4    0[COMRAM] long 
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;  sign            1    8[COMRAM] unsigned char 
  4984 ;;  arg             4   10[COMRAM] unsigned long 
  4985 ;;  exp             1    9[COMRAM] unsigned char 
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  4    0[COMRAM] unsigned char 
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4995 ;;      Params:         4       0       0       0       0       0       0
  4996 ;;      Locals:         6       0       0       0       0       0       0
  4997 ;;      Temps:          4       0       0       0       0       0       0
  4998 ;;      Totals:        14       0       0       0       0       0       0
  4999 ;;Total ram usage:       14 bytes
  5000 ;; Hardware stack levels used: 1
  5001 ;; This function calls:
  5002 ;;		Nothing
  5003 ;; This function is called by:
  5004 ;;		_main
  5005 ;;		_sprintf
  5006 ;; This function uses a non-reentrant model
  5007 ;;
  5008                           
  5009                           	psect	text12
  5010  002736                     __ptext12:
  5011                           	callstack 0
  5012  002736                     ___xxtofl:
  5013                           	callstack 29
  5014                           
  5015                           ;incstack = 0
  5016                           ;___xxtofl@sign stored from wreg
  5017  002736  6E09               	movwf	___xxtofl@sign^0,c
  5018  002738  5009               	movf	___xxtofl@sign^0,w,c
  5019  00273A  B4D8               	btfsc	status,2,c
  5020  00273C  EFA2  F013         	goto	u3451
  5021  002740  EFA4  F013         	goto	u3450
  5022  002744                     u3451:
  5023  002744  EFC6  F013         	goto	l957
  5024  002748                     u3450:
  5025  002748  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5026  00274A  EFAB  F013         	goto	u3460
  5027  00274E  EFA9  F013         	goto	u3461
  5028  002752                     u3461:
  5029  002752  EFC6  F013         	goto	l957
  5030  002756                     u3460:
  5031  002756  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5032  00275A  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5033  00275E  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5034  002762  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5035  002766  1E05               	comf	??___xxtofl^0,f,c
  5036  002768  1E06               	comf	(??___xxtofl+1)^0,f,c
  5037  00276A  1E07               	comf	(??___xxtofl+2)^0,f,c
  5038  00276C  1E08               	comf	(??___xxtofl+3)^0,f,c
  5039  00276E  2A05               	incf	??___xxtofl^0,f,c
  5040  002770  0E00               	movlw	0
  5041  002772  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5042  002774  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5043  002776  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5044  002778  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5045  00277C  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5046  002780  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5047  002784  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5048  002788  EFCE  F013         	goto	l3358
  5049  00278C                     l957:
  5050  00278C  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5051  002790  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5052  002794  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5053  002798  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5054  00279C                     l3358:
  5055  00279C  5001               	movf	___xxtofl@val^0,w,c
  5056  00279E  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5057  0027A0  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5058  0027A2  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5059  0027A4  A4D8               	btfss	status,2,c
  5060  0027A6  EFD7  F013         	goto	u3471
  5061  0027AA  EFD9  F013         	goto	u3470
  5062  0027AE                     u3471:
  5063  0027AE  EFE3  F013         	goto	l3364
  5064  0027B2                     u3470:
  5065  0027B2  0E00               	movlw	0
  5066  0027B4  6E01               	movwf	?___xxtofl^0,c
  5067  0027B6  0E00               	movlw	0
  5068  0027B8  6E02               	movwf	(?___xxtofl+1)^0,c
  5069  0027BA  0E00               	movlw	0
  5070  0027BC  6E03               	movwf	(?___xxtofl+2)^0,c
  5071  0027BE  0E00               	movlw	0
  5072  0027C0  6E04               	movwf	(?___xxtofl+3)^0,c
  5073  0027C2  EF74  F014         	goto	l960
  5074  0027C6                     l3364:
  5075  0027C6  0E96               	movlw	150
  5076  0027C8  6E0A               	movwf	___xxtofl@exp^0,c
  5077  0027CA  EFED  F013         	goto	l3368
  5078  0027CE                     l3366:
  5079  0027CE  2A0A               	incf	___xxtofl@exp^0,f,c
  5080  0027D0  90D8               	bcf	status,0,c
  5081  0027D2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5082  0027D4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5083  0027D6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5084  0027D8  320B               	rrcf	___xxtofl@arg^0,f,c
  5085  0027DA                     l3368:
  5086  0027DA  0E00               	movlw	0
  5087  0027DC  140B               	andwf	___xxtofl@arg^0,w,c
  5088  0027DE  6E05               	movwf	??___xxtofl^0,c
  5089  0027E0  0E00               	movlw	0
  5090  0027E2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5091  0027E4  6E06               	movwf	(??___xxtofl+1)^0,c
  5092  0027E6  0E00               	movlw	0
  5093  0027E8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5094  0027EA  6E07               	movwf	(??___xxtofl+2)^0,c
  5095  0027EC  0EFE               	movlw	254
  5096  0027EE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5097  0027F0  6E08               	movwf	(??___xxtofl+3)^0,c
  5098  0027F2  5005               	movf	??___xxtofl^0,w,c
  5099  0027F4  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5100  0027F6  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5101  0027F8  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5102  0027FA  A4D8               	btfss	status,2,c
  5103  0027FC  EF02  F014         	goto	u3481
  5104  002800  EF04  F014         	goto	u3480
  5105  002804                     u3481:
  5106  002804  EFE7  F013         	goto	l3366
  5107  002808                     u3480:
  5108  002808  EF12  F014         	goto	l964
  5109  00280C                     l3370:
  5110  00280C  2A0A               	incf	___xxtofl@exp^0,f,c
  5111  00280E  0E01               	movlw	1
  5112  002810  260B               	addwf	___xxtofl@arg^0,f,c
  5113  002812  0E00               	movlw	0
  5114  002814  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5115  002816  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5116  002818  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5117  00281A  90D8               	bcf	status,0,c
  5118  00281C  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5119  00281E  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5120  002820  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5121  002822  320B               	rrcf	___xxtofl@arg^0,f,c
  5122  002824                     l964:
  5123  002824  0E00               	movlw	0
  5124  002826  140B               	andwf	___xxtofl@arg^0,w,c
  5125  002828  6E05               	movwf	??___xxtofl^0,c
  5126  00282A  0E00               	movlw	0
  5127  00282C  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5128  00282E  6E06               	movwf	(??___xxtofl+1)^0,c
  5129  002830  0E00               	movlw	0
  5130  002832  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5131  002834  6E07               	movwf	(??___xxtofl+2)^0,c
  5132  002836  0EFF               	movlw	255
  5133  002838  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5134  00283A  6E08               	movwf	(??___xxtofl+3)^0,c
  5135  00283C  5005               	movf	??___xxtofl^0,w,c
  5136  00283E  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5137  002840  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5138  002842  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5139  002844  A4D8               	btfss	status,2,c
  5140  002846  EF27  F014         	goto	u3491
  5141  00284A  EF29  F014         	goto	u3490
  5142  00284E                     u3491:
  5143  00284E  EF06  F014         	goto	l3370
  5144  002852                     u3490:
  5145  002852  EF31  F014         	goto	l3378
  5146  002856                     l3376:
  5147  002856  060A               	decf	___xxtofl@exp^0,f,c
  5148  002858  90D8               	bcf	status,0,c
  5149  00285A  360B               	rlcf	___xxtofl@arg^0,f,c
  5150  00285C  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5151  00285E  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5152  002860  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5153  002862                     l3378:
  5154  002862  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5155  002864  EF36  F014         	goto	u3501
  5156  002868  EF38  F014         	goto	u3500
  5157  00286C                     u3501:
  5158  00286C  EF40  F014         	goto	l971
  5159  002870                     u3500:
  5160  002870  0E02               	movlw	2
  5161  002872  600A               	cpfslt	___xxtofl@exp^0,c
  5162  002874  EF3E  F014         	goto	u3511
  5163  002878  EF40  F014         	goto	u3510
  5164  00287C                     u3511:
  5165  00287C  EF2B  F014         	goto	l3376
  5166  002880                     u3510:
  5167  002880                     l971:
  5168  002880  B00A               	btfsc	___xxtofl@exp^0,0,c
  5169  002882  EF45  F014         	goto	u3521
  5170  002886  EF47  F014         	goto	u3520
  5171  00288A                     u3521:
  5172  00288A  EF48  F014         	goto	l3384
  5173  00288E                     u3520:
  5174  00288E  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5175  002890                     l3384:
  5176  002890  90D8               	bcf	status,0,c
  5177  002892  320A               	rrcf	___xxtofl@exp^0,f,c
  5178  002894  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5179  002898  6A06               	clrf	(??___xxtofl+1)^0,c
  5180  00289A  6A07               	clrf	(??___xxtofl+2)^0,c
  5181  00289C  6A08               	clrf	(??___xxtofl+3)^0,c
  5182  00289E  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5183  0028A2  6A07               	clrf	(??___xxtofl+2)^0,c
  5184  0028A4  6A06               	clrf	(??___xxtofl+1)^0,c
  5185  0028A6  6A05               	clrf	??___xxtofl^0,c
  5186  0028A8  5005               	movf	??___xxtofl^0,w,c
  5187  0028AA  120B               	iorwf	___xxtofl@arg^0,f,c
  5188  0028AC  5006               	movf	(??___xxtofl+1)^0,w,c
  5189  0028AE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5190  0028B0  5007               	movf	(??___xxtofl+2)^0,w,c
  5191  0028B2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5192  0028B4  5008               	movf	(??___xxtofl+3)^0,w,c
  5193  0028B6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5194  0028B8  5009               	movf	___xxtofl@sign^0,w,c
  5195  0028BA  B4D8               	btfsc	status,2,c
  5196  0028BC  EF62  F014         	goto	u3531
  5197  0028C0  EF64  F014         	goto	u3530
  5198  0028C4                     u3531:
  5199  0028C4  EF6C  F014         	goto	l3394
  5200  0028C8                     u3530:
  5201  0028C8  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5202  0028CA  EF6B  F014         	goto	u3540
  5203  0028CE  EF69  F014         	goto	u3541
  5204  0028D2                     u3541:
  5205  0028D2  EF6C  F014         	goto	l3394
  5206  0028D6                     u3540:
  5207  0028D6  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5208  0028D8                     l3394:
  5209  0028D8  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5210  0028DC  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5211  0028E0  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5212  0028E4  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5213  0028E8                     l960:
  5214  0028E8  0012               	return		;funcret
  5215  0028EA                     __end_of___xxtofl:
  5216                           	callstack 0
  5217                           
  5218 ;; *************** function ___wmul *****************
  5219 ;; Defined at:
  5220 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  5221 ;; Parameters:    Size  Location     Type
  5222 ;;  multiplier      2    0[COMRAM] unsigned int 
  5223 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5224 ;; Auto vars:     Size  Location     Type
  5225 ;;  product         2    4[COMRAM] unsigned int 
  5226 ;; Return value:  Size  Location     Type
  5227 ;;                  2    0[COMRAM] unsigned int 
  5228 ;; Registers used:
  5229 ;;		wreg, status,2, status,0, prodl, prodh
  5230 ;; Tracked objects:
  5231 ;;		On entry : 0/0
  5232 ;;		On exit  : 0/0
  5233 ;;		Unchanged: 0/0
  5234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5235 ;;      Params:         4       0       0       0       0       0       0
  5236 ;;      Locals:         2       0       0       0       0       0       0
  5237 ;;      Temps:          0       0       0       0       0       0       0
  5238 ;;      Totals:         6       0       0       0       0       0       0
  5239 ;;Total ram usage:        6 bytes
  5240 ;; Hardware stack levels used: 1
  5241 ;; This function calls:
  5242 ;;		Nothing
  5243 ;; This function is called by:
  5244 ;;		_sprintf
  5245 ;; This function uses a non-reentrant model
  5246 ;;
  5247                           
  5248                           	psect	text13
  5249  00380E                     __ptext13:
  5250                           	callstack 0
  5251  00380E                     ___wmul:
  5252                           	callstack 29
  5253  00380E  5001               	movf	___wmul@multiplier^0,w,c
  5254  003810  0203               	mulwf	___wmul@multiplicand^0,c
  5255  003812  CFF3 F005          	movff	prodl,___wmul@product
  5256  003816  CFF4 F006          	movff	prodh,___wmul@product+1
  5257  00381A  5001               	movf	___wmul@multiplier^0,w,c
  5258  00381C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5259  00381E  50F3               	movf	243,w,c
  5260  003820  2606               	addwf	(___wmul@product+1)^0,f,c
  5261  003822  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5262  003824  0203               	mulwf	___wmul@multiplicand^0,c
  5263  003826  50F3               	movf	243,w,c
  5264  003828  2606               	addwf	(___wmul@product+1)^0,f,c
  5265  00382A  C005  F001         	movff	___wmul@product,?___wmul
  5266  00382E  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5267  003832  0012               	return		;funcret
  5268  003834                     __end_of___wmul:
  5269                           	callstack 0
  5270                           
  5271 ;; *************** function ___llmod *****************
  5272 ;; Defined at:
  5273 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  5274 ;; Parameters:    Size  Location     Type
  5275 ;;  dividend        4   13[COMRAM] unsigned long 
  5276 ;;  divisor         4   17[COMRAM] unsigned long 
  5277 ;; Auto vars:     Size  Location     Type
  5278 ;;  counter         1   21[COMRAM] unsigned char 
  5279 ;; Return value:  Size  Location     Type
  5280 ;;                  4   13[COMRAM] unsigned long 
  5281 ;; Registers used:
  5282 ;;		wreg, status,2, status,0
  5283 ;; Tracked objects:
  5284 ;;		On entry : 0/0
  5285 ;;		On exit  : 0/0
  5286 ;;		Unchanged: 0/0
  5287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5288 ;;      Params:         8       0       0       0       0       0       0
  5289 ;;      Locals:         1       0       0       0       0       0       0
  5290 ;;      Temps:          0       0       0       0       0       0       0
  5291 ;;      Totals:         9       0       0       0       0       0       0
  5292 ;;Total ram usage:        9 bytes
  5293 ;; Hardware stack levels used: 1
  5294 ;; This function calls:
  5295 ;;		Nothing
  5296 ;; This function is called by:
  5297 ;;		_sprintf
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text14
  5302  003582                     __ptext14:
  5303                           	callstack 0
  5304  003582                     ___llmod:
  5305                           	callstack 29
  5306  003582  5012               	movf	___llmod@divisor^0,w,c
  5307  003584  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  5308  003586  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  5309  003588  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  5310  00358A  B4D8               	btfsc	status,2,c
  5311  00358C  EFCA  F01A         	goto	u3421
  5312  003590  EFCC  F01A         	goto	u3420
  5313  003594                     u3421:
  5314  003594  EFFC  F01A         	goto	l722
  5315  003598                     u3420:
  5316  003598  0E01               	movlw	1
  5317  00359A  6E16               	movwf	___llmod@counter^0,c
  5318  00359C  EFD6  F01A         	goto	l3342
  5319  0035A0                     l3340:
  5320  0035A0  90D8               	bcf	status,0,c
  5321  0035A2  3612               	rlcf	___llmod@divisor^0,f,c
  5322  0035A4  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  5323  0035A6  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  5324  0035A8  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  5325  0035AA  2A16               	incf	___llmod@counter^0,f,c
  5326  0035AC                     l3342:
  5327  0035AC  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  5328  0035AE  EFDB  F01A         	goto	u3431
  5329  0035B2  EFDD  F01A         	goto	u3430
  5330  0035B6                     u3431:
  5331  0035B6  EFD0  F01A         	goto	l3340
  5332  0035BA                     u3430:
  5333  0035BA                     l3344:
  5334  0035BA  5012               	movf	___llmod@divisor^0,w,c
  5335  0035BC  5C0E               	subwf	___llmod@dividend^0,w,c
  5336  0035BE  5013               	movf	(___llmod@divisor+1)^0,w,c
  5337  0035C0  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  5338  0035C2  5014               	movf	(___llmod@divisor+2)^0,w,c
  5339  0035C4  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  5340  0035C6  5015               	movf	(___llmod@divisor+3)^0,w,c
  5341  0035C8  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  5342  0035CA  A0D8               	btfss	status,0,c
  5343  0035CC  EFEA  F01A         	goto	u3441
  5344  0035D0  EFEC  F01A         	goto	u3440
  5345  0035D4                     u3441:
  5346  0035D4  EFF4  F01A         	goto	l3348
  5347  0035D8                     u3440:
  5348  0035D8  5012               	movf	___llmod@divisor^0,w,c
  5349  0035DA  5E0E               	subwf	___llmod@dividend^0,f,c
  5350  0035DC  5013               	movf	(___llmod@divisor+1)^0,w,c
  5351  0035DE  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  5352  0035E0  5014               	movf	(___llmod@divisor+2)^0,w,c
  5353  0035E2  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  5354  0035E4  5015               	movf	(___llmod@divisor+3)^0,w,c
  5355  0035E6  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  5356  0035E8                     l3348:
  5357  0035E8  90D8               	bcf	status,0,c
  5358  0035EA  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  5359  0035EC  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  5360  0035EE  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  5361  0035F0  3212               	rrcf	___llmod@divisor^0,f,c
  5362  0035F2  2E16               	decfsz	___llmod@counter^0,f,c
  5363  0035F4  EFDD  F01A         	goto	l3344
  5364  0035F8                     l722:
  5365  0035F8  C00E  F00E         	movff	___llmod@dividend,?___llmod
  5366  0035FC  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  5367  003600  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  5368  003604  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  5369  003608  0012               	return		;funcret
  5370  00360A                     __end_of___llmod:
  5371                           	callstack 0
  5372                           
  5373 ;; *************** function ___lldiv *****************
  5374 ;; Defined at:
  5375 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  dividend        4    0[COMRAM] unsigned long 
  5378 ;;  divisor         4    4[COMRAM] unsigned long 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;  quotient        4    8[COMRAM] unsigned long 
  5381 ;;  counter         1   12[COMRAM] unsigned char 
  5382 ;; Return value:  Size  Location     Type
  5383 ;;                  4    0[COMRAM] unsigned long 
  5384 ;; Registers used:
  5385 ;;		wreg, status,2, status,0
  5386 ;; Tracked objects:
  5387 ;;		On entry : 0/0
  5388 ;;		On exit  : 0/0
  5389 ;;		Unchanged: 0/0
  5390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5391 ;;      Params:         8       0       0       0       0       0       0
  5392 ;;      Locals:         5       0       0       0       0       0       0
  5393 ;;      Temps:          0       0       0       0       0       0       0
  5394 ;;      Totals:        13       0       0       0       0       0       0
  5395 ;;Total ram usage:       13 bytes
  5396 ;; Hardware stack levels used: 1
  5397 ;; This function calls:
  5398 ;;		Nothing
  5399 ;; This function is called by:
  5400 ;;		_sprintf
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           
  5404                           	psect	text15
  5405  003454                     __ptext15:
  5406                           	callstack 0
  5407  003454                     ___lldiv:
  5408                           	callstack 29
  5409  003454  0E00               	movlw	0
  5410  003456  6E09               	movwf	___lldiv@quotient^0,c
  5411  003458  0E00               	movlw	0
  5412  00345A  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5413  00345C  0E00               	movlw	0
  5414  00345E  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5415  003460  0E00               	movlw	0
  5416  003462  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5417  003464  5005               	movf	___lldiv@divisor^0,w,c
  5418  003466  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5419  003468  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5420  00346A  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5421  00346C  B4D8               	btfsc	status,2,c
  5422  00346E  EF3B  F01A         	goto	u3231
  5423  003472  EF3D  F01A         	goto	u3230
  5424  003476                     u3231:
  5425  003476  EF73  F01A         	goto	l307
  5426  00347A                     u3230:
  5427  00347A  0E01               	movlw	1
  5428  00347C  6E0D               	movwf	___lldiv@counter^0,c
  5429  00347E  EF47  F01A         	goto	l3226
  5430  003482                     l3224:
  5431  003482  90D8               	bcf	status,0,c
  5432  003484  3605               	rlcf	___lldiv@divisor^0,f,c
  5433  003486  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5434  003488  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5435  00348A  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5436  00348C  2A0D               	incf	___lldiv@counter^0,f,c
  5437  00348E                     l3226:
  5438  00348E  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5439  003490  EF4C  F01A         	goto	u3241
  5440  003494  EF4E  F01A         	goto	u3240
  5441  003498                     u3241:
  5442  003498  EF41  F01A         	goto	l3224
  5443  00349C                     u3240:
  5444  00349C                     l3228:
  5445  00349C  90D8               	bcf	status,0,c
  5446  00349E  3609               	rlcf	___lldiv@quotient^0,f,c
  5447  0034A0  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5448  0034A2  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5449  0034A4  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5450  0034A6  5005               	movf	___lldiv@divisor^0,w,c
  5451  0034A8  5C01               	subwf	___lldiv@dividend^0,w,c
  5452  0034AA  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5453  0034AC  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5454  0034AE  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5455  0034B0  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5456  0034B2  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5457  0034B4  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5458  0034B6  A0D8               	btfss	status,0,c
  5459  0034B8  EF60  F01A         	goto	u3251
  5460  0034BC  EF62  F01A         	goto	u3250
  5461  0034C0                     u3251:
  5462  0034C0  EF6B  F01A         	goto	l3236
  5463  0034C4                     u3250:
  5464  0034C4  5005               	movf	___lldiv@divisor^0,w,c
  5465  0034C6  5E01               	subwf	___lldiv@dividend^0,f,c
  5466  0034C8  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5467  0034CA  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5468  0034CC  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5469  0034CE  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5470  0034D0  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5471  0034D2  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5472  0034D4  8009               	bsf	___lldiv@quotient^0,0,c
  5473  0034D6                     l3236:
  5474  0034D6  90D8               	bcf	status,0,c
  5475  0034D8  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5476  0034DA  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5477  0034DC  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5478  0034DE  3205               	rrcf	___lldiv@divisor^0,f,c
  5479  0034E0  2E0D               	decfsz	___lldiv@counter^0,f,c
  5480  0034E2  EF4E  F01A         	goto	l3228
  5481  0034E6                     l307:
  5482  0034E6  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5483  0034EA  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5484  0034EE  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5485  0034F2  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5486  0034F6  0012               	return		;funcret
  5487  0034F8                     __end_of___lldiv:
  5488                           	callstack 0
  5489                           
  5490 ;; *************** function ___fltol *****************
  5491 ;; Defined at:
  5492 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  f1              4   48[COMRAM] unsigned long 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  exp1            1   57[COMRAM] unsigned char 
  5497 ;;  sign1           1   56[COMRAM] unsigned char 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  4   48[COMRAM] long 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5507 ;;      Params:         4       0       0       0       0       0       0
  5508 ;;      Locals:         2       0       0       0       0       0       0
  5509 ;;      Temps:          4       0       0       0       0       0       0
  5510 ;;      Totals:        10       0       0       0       0       0       0
  5511 ;;Total ram usage:       10 bytes
  5512 ;; Hardware stack levels used: 1
  5513 ;; This function calls:
  5514 ;;		Nothing
  5515 ;; This function is called by:
  5516 ;;		_sprintf
  5517 ;; This function uses a non-reentrant model
  5518 ;;
  5519                           
  5520                           	psect	text16
  5521  00302C                     __ptext16:
  5522                           	callstack 0
  5523  00302C                     ___fltol:
  5524                           	callstack 29
  5525  00302C  3433               	rlcf	(___fltol@f1+2)^0,w,c
  5526  00302E  3434               	rlcf	(___fltol@f1+3)^0,w,c
  5527  003030  6E3A               	movwf	___fltol@exp1^0,c
  5528  003032  503A               	movf	___fltol@exp1^0,w,c
  5529  003034  A4D8               	btfss	status,2,c
  5530  003036  EF1F  F018         	goto	u3351
  5531  00303A  EF21  F018         	goto	u3350
  5532  00303E                     u3351:
  5533  00303E  EF2B  F018         	goto	l3298
  5534  003042                     u3350:
  5535  003042                     l3294:
  5536  003042  0E00               	movlw	0
  5537  003044  6E31               	movwf	?___fltol^0,c
  5538  003046  0E00               	movlw	0
  5539  003048  6E32               	movwf	(?___fltol+1)^0,c
  5540  00304A  0E00               	movlw	0
  5541  00304C  6E33               	movwf	(?___fltol+2)^0,c
  5542  00304E  0E00               	movlw	0
  5543  003050  6E34               	movwf	(?___fltol+3)^0,c
  5544  003052  EF98  F018         	goto	l586
  5545  003056                     l3298:
  5546  003056  C031  F035         	movff	___fltol@f1,??___fltol
  5547  00305A  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  5548  00305E  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  5549  003062  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  5550  003066  0E20               	movlw	32
  5551  003068  EF3B  F018         	goto	u3360
  5552  00306C                     u3365:
  5553  00306C  90D8               	bcf	status,0,c
  5554  00306E  3238               	rrcf	(??___fltol+3)^0,f,c
  5555  003070  3237               	rrcf	(??___fltol+2)^0,f,c
  5556  003072  3236               	rrcf	(??___fltol+1)^0,f,c
  5557  003074  3235               	rrcf	??___fltol^0,f,c
  5558  003076                     u3360:
  5559  003076  2EE8               	decfsz	wreg,f,c
  5560  003078  EF36  F018         	goto	u3365
  5561  00307C  5035               	movf	??___fltol^0,w,c
  5562  00307E  6E39               	movwf	___fltol@sign1^0,c
  5563  003080  8E33               	bsf	(___fltol@f1+2)^0,7,c
  5564  003082  0EFF               	movlw	255
  5565  003084  1631               	andwf	___fltol@f1^0,f,c
  5566  003086  0EFF               	movlw	255
  5567  003088  1632               	andwf	(___fltol@f1+1)^0,f,c
  5568  00308A  0EFF               	movlw	255
  5569  00308C  1633               	andwf	(___fltol@f1+2)^0,f,c
  5570  00308E  0E00               	movlw	0
  5571  003090  1634               	andwf	(___fltol@f1+3)^0,f,c
  5572  003092  0E96               	movlw	150
  5573  003094  5E3A               	subwf	___fltol@exp1^0,f,c
  5574  003096  BE3A               	btfsc	___fltol@exp1^0,7,c
  5575  003098  EF52  F018         	goto	u3370
  5576  00309C  EF50  F018         	goto	u3371
  5577  0030A0                     u3371:
  5578  0030A0  EF68  F018         	goto	l3318
  5579  0030A4                     u3370:
  5580  0030A4  503A               	movf	___fltol@exp1^0,w,c
  5581  0030A6  0A80               	xorlw	128
  5582  0030A8  0F97               	addlw	151
  5583  0030AA  B0D8               	btfsc	status,0,c
  5584  0030AC  EF5A  F018         	goto	u3381
  5585  0030B0  EF5C  F018         	goto	u3380
  5586  0030B4                     u3381:
  5587  0030B4  EF5E  F018         	goto	l3314
  5588  0030B8                     u3380:
  5589  0030B8  EF21  F018         	goto	l3294
  5590  0030BC                     l3314:
  5591  0030BC  90D8               	bcf	status,0,c
  5592  0030BE  3234               	rrcf	(___fltol@f1+3)^0,f,c
  5593  0030C0  3233               	rrcf	(___fltol@f1+2)^0,f,c
  5594  0030C2  3232               	rrcf	(___fltol@f1+1)^0,f,c
  5595  0030C4  3231               	rrcf	___fltol@f1^0,f,c
  5596  0030C6  3E3A               	incfsz	___fltol@exp1^0,f,c
  5597  0030C8  EF5E  F018         	goto	l3314
  5598  0030CC  EF80  F018         	goto	l3328
  5599  0030D0                     l3318:
  5600  0030D0  0E1F               	movlw	31
  5601  0030D2  643A               	cpfsgt	___fltol@exp1^0,c
  5602  0030D4  EF6E  F018         	goto	u3391
  5603  0030D8  EF70  F018         	goto	u3390
  5604  0030DC                     u3391:
  5605  0030DC  EF78  F018         	goto	l3326
  5606  0030E0                     u3390:
  5607  0030E0  EF21  F018         	goto	l3294
  5608  0030E4                     l3324:
  5609  0030E4  90D8               	bcf	status,0,c
  5610  0030E6  3631               	rlcf	___fltol@f1^0,f,c
  5611  0030E8  3632               	rlcf	(___fltol@f1+1)^0,f,c
  5612  0030EA  3633               	rlcf	(___fltol@f1+2)^0,f,c
  5613  0030EC  3634               	rlcf	(___fltol@f1+3)^0,f,c
  5614  0030EE  063A               	decf	___fltol@exp1^0,f,c
  5615  0030F0                     l3326:
  5616  0030F0  503A               	movf	___fltol@exp1^0,w,c
  5617  0030F2  A4D8               	btfss	status,2,c
  5618  0030F4  EF7E  F018         	goto	u3401
  5619  0030F8  EF80  F018         	goto	u3400
  5620  0030FC                     u3401:
  5621  0030FC  EF72  F018         	goto	l3324
  5622  003100                     u3400:
  5623  003100                     l3328:
  5624  003100  5039               	movf	___fltol@sign1^0,w,c
  5625  003102  B4D8               	btfsc	status,2,c
  5626  003104  EF86  F018         	goto	u3411
  5627  003108  EF88  F018         	goto	u3410
  5628  00310C                     u3411:
  5629  00310C  EF90  F018         	goto	l3332
  5630  003110                     u3410:
  5631  003110  1E34               	comf	(___fltol@f1+3)^0,f,c
  5632  003112  1E33               	comf	(___fltol@f1+2)^0,f,c
  5633  003114  1E32               	comf	(___fltol@f1+1)^0,f,c
  5634  003116  6C31               	negf	___fltol@f1^0,c
  5635  003118  0E00               	movlw	0
  5636  00311A  2232               	addwfc	(___fltol@f1+1)^0,f,c
  5637  00311C  2233               	addwfc	(___fltol@f1+2)^0,f,c
  5638  00311E  2234               	addwfc	(___fltol@f1+3)^0,f,c
  5639  003120                     l3332:
  5640  003120  C031  F031         	movff	___fltol@f1,?___fltol
  5641  003124  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  5642  003128  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  5643  00312C  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  5644  003130                     l586:
  5645  003130  0012               	return		;funcret
  5646  003132                     __end_of___fltol:
  5647                           	callstack 0
  5648                           
  5649 ;; *************** function ___flsub *****************
  5650 ;; Defined at:
  5651 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;  b               4   68[COMRAM] long 
  5654 ;;  a               4   72[COMRAM] long 
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  4   68[COMRAM] long 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2, status,0, cstack
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5666 ;;      Params:         8       0       0       0       0       0       0
  5667 ;;      Locals:         0       0       0       0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0       0       0
  5669 ;;      Totals:         8       0       0       0       0       0       0
  5670 ;;Total ram usage:        8 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; Hardware stack levels required when called: 1
  5673 ;; This function calls:
  5674 ;;		___fladd
  5675 ;; This function is called by:
  5676 ;;		_sprintf
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text17
  5681  00375E                     __ptext17:
  5682                           	callstack 0
  5683  00375E                     ___flsub:
  5684                           	callstack 28
  5685  00375E  0E00               	movlw	0
  5686  003760  1A49               	xorwf	___flsub@a^0,f,c
  5687  003762  0E00               	movlw	0
  5688  003764  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  5689  003766  0E00               	movlw	0
  5690  003768  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  5691  00376A  0E80               	movlw	128
  5692  00376C  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  5693  00376E  C045  F035         	movff	___flsub@b,___fladd@b
  5694  003772  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  5695  003776  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  5696  00377A  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  5697  00377E  C049  F039         	movff	___flsub@a,___fladd@a
  5698  003782  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  5699  003786  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  5700  00378A  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  5701  00378E  EC02  F00A         	call	___fladd	;wreg free
  5702  003792  C035  F045         	movff	?___fladd,?___flsub
  5703  003796  C036  F046         	movff	?___fladd+1,?___flsub+1
  5704  00379A  C037  F047         	movff	?___fladd+2,?___flsub+2
  5705  00379E  C038  F048         	movff	?___fladd+3,?___flsub+3
  5706  0037A2  0012               	return		;funcret
  5707  0037A4                     __end_of___flsub:
  5708                           	callstack 0
  5709                           
  5710 ;; *************** function ___fladd *****************
  5711 ;; Defined at:
  5712 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  b               4   52[COMRAM] long 
  5715 ;;  a               4   56[COMRAM] long 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  grs             1   67[COMRAM] unsigned char 
  5718 ;;  bexp            1   66[COMRAM] unsigned char 
  5719 ;;  aexp            1   65[COMRAM] unsigned char 
  5720 ;;  signs           1   64[COMRAM] unsigned char 
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  4   52[COMRAM] unsigned char 
  5723 ;; Registers used:
  5724 ;;		wreg, status,2, status,0
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5730 ;;      Params:         8       0       0       0       0       0       0
  5731 ;;      Locals:         4       0       0       0       0       0       0
  5732 ;;      Temps:          4       0       0       0       0       0       0
  5733 ;;      Totals:        16       0       0       0       0       0       0
  5734 ;;Total ram usage:       16 bytes
  5735 ;; Hardware stack levels used: 1
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_sprintf
  5740 ;;		___flsub
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           	psect	text18
  5745  001404                     __ptext18:
  5746                           	callstack 0
  5747  001404                     ___fladd:
  5748                           	callstack 28
  5749  001404  5038               	movf	(___fladd@b+3)^0,w,c
  5750  001406  0B80               	andlw	128
  5751  001408  6E41               	movwf	___fladd@signs^0,c
  5752  00140A  5038               	movf	(___fladd@b+3)^0,w,c
  5753  00140C  2438               	addwf	(___fladd@b+3)^0,w,c
  5754  00140E  6E43               	movwf	___fladd@bexp^0,c
  5755  001410  AE37               	btfss	(___fladd@b+2)^0,7,c
  5756  001412  EF0D  F00A         	goto	u2221
  5757  001416  EF0F  F00A         	goto	u2220
  5758  00141A                     u2221:
  5759  00141A  EF10  F00A         	goto	l2584
  5760  00141E                     u2220:
  5761  00141E  8043               	bsf	___fladd@bexp^0,0,c
  5762  001420                     l2584:
  5763  001420  5043               	movf	___fladd@bexp^0,w,c
  5764  001422  B4D8               	btfsc	status,2,c
  5765  001424  EF16  F00A         	goto	u2231
  5766  001428  EF18  F00A         	goto	u2230
  5767  00142C                     u2231:
  5768  00142C  EF2D  F00A         	goto	l2594
  5769  001430                     u2230:
  5770  001430  2843               	incf	___fladd@bexp^0,w,c
  5771  001432  A4D8               	btfss	status,2,c
  5772  001434  EF1E  F00A         	goto	u2241
  5773  001438  EF20  F00A         	goto	u2240
  5774  00143C                     u2241:
  5775  00143C  EF28  F00A         	goto	l2590
  5776  001440                     u2240:
  5777  001440  0E00               	movlw	0
  5778  001442  6E35               	movwf	___fladd@b^0,c
  5779  001444  0E00               	movlw	0
  5780  001446  6E36               	movwf	(___fladd@b+1)^0,c
  5781  001448  0E00               	movlw	0
  5782  00144A  6E37               	movwf	(___fladd@b+2)^0,c
  5783  00144C  0E00               	movlw	0
  5784  00144E  6E38               	movwf	(___fladd@b+3)^0,c
  5785  001450                     l2590:
  5786  001450  8E37               	bsf	(___fladd@b+2)^0,7,c
  5787  001452  0E00               	movlw	0
  5788  001454  6E38               	movwf	(___fladd@b+3)^0,c
  5789  001456  EF35  F00A         	goto	l2596
  5790  00145A                     l2594:
  5791  00145A  0E00               	movlw	0
  5792  00145C  6E35               	movwf	___fladd@b^0,c
  5793  00145E  0E00               	movlw	0
  5794  001460  6E36               	movwf	(___fladd@b+1)^0,c
  5795  001462  0E00               	movlw	0
  5796  001464  6E37               	movwf	(___fladd@b+2)^0,c
  5797  001466  0E00               	movlw	0
  5798  001468  6E38               	movwf	(___fladd@b+3)^0,c
  5799  00146A                     l2596:
  5800  00146A  503C               	movf	(___fladd@a+3)^0,w,c
  5801  00146C  0B80               	andlw	128
  5802  00146E  6E42               	movwf	___fladd@aexp^0,c
  5803  001470  5041               	movf	___fladd@signs^0,w,c
  5804  001472  1842               	xorwf	___fladd@aexp^0,w,c
  5805  001474  B4D8               	btfsc	status,2,c
  5806  001476  EF3F  F00A         	goto	u2251
  5807  00147A  EF41  F00A         	goto	u2250
  5808  00147E                     u2251:
  5809  00147E  EF42  F00A         	goto	l2602
  5810  001482                     u2250:
  5811  001482  8C41               	bsf	___fladd@signs^0,6,c
  5812  001484                     l2602:
  5813  001484  503C               	movf	(___fladd@a+3)^0,w,c
  5814  001486  243C               	addwf	(___fladd@a+3)^0,w,c
  5815  001488  6E42               	movwf	___fladd@aexp^0,c
  5816  00148A  AE3B               	btfss	(___fladd@a+2)^0,7,c
  5817  00148C  EF4A  F00A         	goto	u2261
  5818  001490  EF4C  F00A         	goto	u2260
  5819  001494                     u2261:
  5820  001494  EF4D  F00A         	goto	l2608
  5821  001498                     u2260:
  5822  001498  8042               	bsf	___fladd@aexp^0,0,c
  5823  00149A                     l2608:
  5824  00149A  5042               	movf	___fladd@aexp^0,w,c
  5825  00149C  B4D8               	btfsc	status,2,c
  5826  00149E  EF53  F00A         	goto	u2271
  5827  0014A2  EF55  F00A         	goto	u2270
  5828  0014A6                     u2271:
  5829  0014A6  EF6A  F00A         	goto	l2618
  5830  0014AA                     u2270:
  5831  0014AA  2842               	incf	___fladd@aexp^0,w,c
  5832  0014AC  A4D8               	btfss	status,2,c
  5833  0014AE  EF5B  F00A         	goto	u2281
  5834  0014B2  EF5D  F00A         	goto	u2280
  5835  0014B6                     u2281:
  5836  0014B6  EF65  F00A         	goto	l2614
  5837  0014BA                     u2280:
  5838  0014BA  0E00               	movlw	0
  5839  0014BC  6E39               	movwf	___fladd@a^0,c
  5840  0014BE  0E00               	movlw	0
  5841  0014C0  6E3A               	movwf	(___fladd@a+1)^0,c
  5842  0014C2  0E00               	movlw	0
  5843  0014C4  6E3B               	movwf	(___fladd@a+2)^0,c
  5844  0014C6  0E00               	movlw	0
  5845  0014C8  6E3C               	movwf	(___fladd@a+3)^0,c
  5846  0014CA                     l2614:
  5847  0014CA  8E3B               	bsf	(___fladd@a+2)^0,7,c
  5848  0014CC  0E00               	movlw	0
  5849  0014CE  6E3C               	movwf	(___fladd@a+3)^0,c
  5850  0014D0  EF72  F00A         	goto	l2620
  5851  0014D4                     l2618:
  5852  0014D4  0E00               	movlw	0
  5853  0014D6  6E39               	movwf	___fladd@a^0,c
  5854  0014D8  0E00               	movlw	0
  5855  0014DA  6E3A               	movwf	(___fladd@a+1)^0,c
  5856  0014DC  0E00               	movlw	0
  5857  0014DE  6E3B               	movwf	(___fladd@a+2)^0,c
  5858  0014E0  0E00               	movlw	0
  5859  0014E2  6E3C               	movwf	(___fladd@a+3)^0,c
  5860  0014E4                     l2620:
  5861  0014E4  5043               	movf	___fladd@bexp^0,w,c
  5862  0014E6  5C42               	subwf	___fladd@aexp^0,w,c
  5863  0014E8  B0D8               	btfsc	status,0,c
  5864  0014EA  EF79  F00A         	goto	u2291
  5865  0014EE  EF7B  F00A         	goto	u2290
  5866  0014F2                     u2291:
  5867  0014F2  EFA2  F00A         	goto	l2656
  5868  0014F6                     u2290:
  5869  0014F6  AC41               	btfss	___fladd@signs^0,6,c
  5870  0014F8  EF80  F00A         	goto	u2301
  5871  0014FC  EF82  F00A         	goto	u2300
  5872  001500                     u2301:
  5873  001500  EF84  F00A         	goto	l2626
  5874  001504                     u2300:
  5875  001504  0E80               	movlw	128
  5876  001506  1A41               	xorwf	___fladd@signs^0,f,c
  5877  001508                     l2626:
  5878  001508  C043  F044         	movff	___fladd@bexp,___fladd@grs
  5879  00150C  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  5880  001510  C044  F042         	movff	___fladd@grs,___fladd@aexp
  5881  001514  C035  F044         	movff	___fladd@b,___fladd@grs
  5882  001518  C039  F035         	movff	___fladd@a,___fladd@b
  5883  00151C  C044  F039         	movff	___fladd@grs,___fladd@a
  5884  001520  C036  F044         	movff	___fladd@b+1,___fladd@grs
  5885  001524  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  5886  001528  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  5887  00152C  C037  F044         	movff	___fladd@b+2,___fladd@grs
  5888  001530  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  5889  001534  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  5890  001538  C038  F044         	movff	___fladd@b+3,___fladd@grs
  5891  00153C  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  5892  001540  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  5893  001544                     l2656:
  5894  001544  0E00               	movlw	0
  5895  001546  6E44               	movwf	___fladd@grs^0,c
  5896  001548  5043               	movf	___fladd@bexp^0,w,c
  5897  00154A  C042  F03D         	movff	___fladd@aexp,??___fladd
  5898  00154E  6A3E               	clrf	(??___fladd+1)^0,c
  5899  001550  5E3D               	subwf	??___fladd^0,f,c
  5900  001552  0E00               	movlw	0
  5901  001554  5A3E               	subwfb	(??___fladd+1)^0,f,c
  5902  001556  BE3E               	btfsc	(??___fladd+1)^0,7,c
  5903  001558  EFB7  F00A         	goto	u2311
  5904  00155C  503E               	movf	(??___fladd+1)^0,w,c
  5905  00155E  E109               	bnz	u2310
  5906  001560  0E1A               	movlw	26
  5907  001562  5C3D               	subwf	??___fladd^0,w,c
  5908  001564  A0D8               	btfss	status,0,c
  5909  001566  EFB7  F00A         	goto	u2311
  5910  00156A  EFB9  F00A         	goto	u2310
  5911  00156E                     u2311:
  5912  00156E  EFF0  F00A         	goto	l831
  5913  001572                     u2310:
  5914  001572  5035               	movf	___fladd@b^0,w,c
  5915  001574  1036               	iorwf	(___fladd@b+1)^0,w,c
  5916  001576  1037               	iorwf	(___fladd@b+2)^0,w,c
  5917  001578  1038               	iorwf	(___fladd@b+3)^0,w,c
  5918  00157A  A4D8               	btfss	status,2,c
  5919  00157C  EFC2  F00A         	goto	u2321
  5920  001580  EFC5  F00A         	goto	u2320
  5921  001584                     u2321:
  5922  001584  0E01               	movlw	1
  5923  001586  EFC6  F00A         	goto	u2330
  5924  00158A                     u2320:
  5925  00158A  0E00               	movlw	0
  5926  00158C                     u2330:
  5927  00158C  6E44               	movwf	___fladd@grs^0,c
  5928  00158E  0E00               	movlw	0
  5929  001590  6E35               	movwf	___fladd@b^0,c
  5930  001592  0E00               	movlw	0
  5931  001594  6E36               	movwf	(___fladd@b+1)^0,c
  5932  001596  0E00               	movlw	0
  5933  001598  6E37               	movwf	(___fladd@b+2)^0,c
  5934  00159A  0E00               	movlw	0
  5935  00159C  6E38               	movwf	(___fladd@b+3)^0,c
  5936  00159E  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  5937  0015A2  EFF9  F00A         	goto	l830
  5938  0015A6                     l832:
  5939  0015A6  A044               	btfss	___fladd@grs^0,0,c
  5940  0015A8  EFD8  F00A         	goto	u2341
  5941  0015AC  EFDA  F00A         	goto	u2340
  5942  0015B0                     u2341:
  5943  0015B0  EFE0  F00A         	goto	l2668
  5944  0015B4                     u2340:
  5945  0015B4  90D8               	bcf	status,0,c
  5946  0015B6  3044               	rrcf	___fladd@grs^0,w,c
  5947  0015B8  0901               	iorlw	1
  5948  0015BA  6E44               	movwf	___fladd@grs^0,c
  5949  0015BC  EFE2  F00A         	goto	l2670
  5950  0015C0                     l2668:
  5951  0015C0  90D8               	bcf	status,0,c
  5952  0015C2  3244               	rrcf	___fladd@grs^0,f,c
  5953  0015C4                     l2670:
  5954  0015C4  A035               	btfss	___fladd@b^0,0,c
  5955  0015C6  EFE7  F00A         	goto	u2351
  5956  0015CA  EFE9  F00A         	goto	u2350
  5957  0015CE                     u2351:
  5958  0015CE  EFEA  F00A         	goto	l2674
  5959  0015D2                     u2350:
  5960  0015D2  8E44               	bsf	___fladd@grs^0,7,c
  5961  0015D4                     l2674:
  5962  0015D4  3438               	rlcf	(___fladd@b+3)^0,w,c
  5963  0015D6  3238               	rrcf	(___fladd@b+3)^0,f,c
  5964  0015D8  3237               	rrcf	(___fladd@b+2)^0,f,c
  5965  0015DA  3236               	rrcf	(___fladd@b+1)^0,f,c
  5966  0015DC  3235               	rrcf	___fladd@b^0,f,c
  5967  0015DE  2A43               	incf	___fladd@bexp^0,f,c
  5968  0015E0                     l831:
  5969  0015E0  5042               	movf	___fladd@aexp^0,w,c
  5970  0015E2  5C43               	subwf	___fladd@bexp^0,w,c
  5971  0015E4  A0D8               	btfss	status,0,c
  5972  0015E6  EFF7  F00A         	goto	u2361
  5973  0015EA  EFF9  F00A         	goto	u2360
  5974  0015EE                     u2361:
  5975  0015EE  EFD3  F00A         	goto	l832
  5976  0015F2                     u2360:
  5977  0015F2                     l830:
  5978  0015F2  BC41               	btfsc	___fladd@signs^0,6,c
  5979  0015F4  EFFE  F00A         	goto	u2371
  5980  0015F8  EF00  F00B         	goto	u2370
  5981  0015FC                     u2371:
  5982  0015FC  EF40  F00B         	goto	l2702
  5983  001600                     u2370:
  5984  001600  5043               	movf	___fladd@bexp^0,w,c
  5985  001602  A4D8               	btfss	status,2,c
  5986  001604  EF06  F00B         	goto	u2381
  5987  001608  EF08  F00B         	goto	u2380
  5988  00160C                     u2381:
  5989  00160C  EF12  F00B         	goto	l2684
  5990  001610                     u2380:
  5991  001610  0E00               	movlw	0
  5992  001612  6E35               	movwf	?___fladd^0,c
  5993  001614  0E00               	movlw	0
  5994  001616  6E36               	movwf	(?___fladd+1)^0,c
  5995  001618  0E00               	movlw	0
  5996  00161A  6E37               	movwf	(?___fladd+2)^0,c
  5997  00161C  0E00               	movlw	0
  5998  00161E  6E38               	movwf	(?___fladd+3)^0,c
  5999  001620  EF61  F00C         	goto	l839
  6000  001624                     l2684:
  6001  001624  5039               	movf	___fladd@a^0,w,c
  6002  001626  2635               	addwf	___fladd@b^0,f,c
  6003  001628  503A               	movf	(___fladd@a+1)^0,w,c
  6004  00162A  2236               	addwfc	(___fladd@b+1)^0,f,c
  6005  00162C  503B               	movf	(___fladd@a+2)^0,w,c
  6006  00162E  2237               	addwfc	(___fladd@b+2)^0,f,c
  6007  001630  503C               	movf	(___fladd@a+3)^0,w,c
  6008  001632  2238               	addwfc	(___fladd@b+3)^0,f,c
  6009  001634  A038               	btfss	(___fladd@b+3)^0,0,c
  6010  001636  EF1F  F00B         	goto	u2391
  6011  00163A  EF21  F00B         	goto	u2390
  6012  00163E                     u2391:
  6013  00163E  EFCD  F00B         	goto	l2738
  6014  001642                     u2390:
  6015  001642  A044               	btfss	___fladd@grs^0,0,c
  6016  001644  EF26  F00B         	goto	u2401
  6017  001648  EF28  F00B         	goto	u2400
  6018  00164C                     u2401:
  6019  00164C  EF2E  F00B         	goto	l2692
  6020  001650                     u2400:
  6021  001650  90D8               	bcf	status,0,c
  6022  001652  3044               	rrcf	___fladd@grs^0,w,c
  6023  001654  0901               	iorlw	1
  6024  001656  6E44               	movwf	___fladd@grs^0,c
  6025  001658  EF30  F00B         	goto	l2694
  6026  00165C                     l2692:
  6027  00165C  90D8               	bcf	status,0,c
  6028  00165E  3244               	rrcf	___fladd@grs^0,f,c
  6029  001660                     l2694:
  6030  001660  A035               	btfss	___fladd@b^0,0,c
  6031  001662  EF35  F00B         	goto	u2411
  6032  001666  EF37  F00B         	goto	u2410
  6033  00166A                     u2411:
  6034  00166A  EF38  F00B         	goto	l2698
  6035  00166E                     u2410:
  6036  00166E  8E44               	bsf	___fladd@grs^0,7,c
  6037  001670                     l2698:
  6038  001670  3438               	rlcf	(___fladd@b+3)^0,w,c
  6039  001672  3238               	rrcf	(___fladd@b+3)^0,f,c
  6040  001674  3237               	rrcf	(___fladd@b+2)^0,f,c
  6041  001676  3236               	rrcf	(___fladd@b+1)^0,f,c
  6042  001678  3235               	rrcf	___fladd@b^0,f,c
  6043  00167A  2A43               	incf	___fladd@bexp^0,f,c
  6044  00167C  EFCD  F00B         	goto	l2738
  6045  001680                     l2702:
  6046  001680  5039               	movf	___fladd@a^0,w,c
  6047  001682  5C35               	subwf	___fladd@b^0,w,c
  6048  001684  503A               	movf	(___fladd@a+1)^0,w,c
  6049  001686  5836               	subwfb	(___fladd@b+1)^0,w,c
  6050  001688  503B               	movf	(___fladd@a+2)^0,w,c
  6051  00168A  5837               	subwfb	(___fladd@b+2)^0,w,c
  6052  00168C  5038               	movf	(___fladd@b+3)^0,w,c
  6053  00168E  0A80               	xorlw	128
  6054  001690  6E3D               	movwf	??___fladd^0,c
  6055  001692  503C               	movf	(___fladd@a+3)^0,w,c
  6056  001694  0A80               	xorlw	128
  6057  001696  583D               	subwfb	??___fladd^0,w,c
  6058  001698  B0D8               	btfsc	status,0,c
  6059  00169A  EF51  F00B         	goto	u2421
  6060  00169E  EF53  F00B         	goto	u2420
  6061  0016A2                     u2421:
  6062  0016A2  EF7E  F00B         	goto	l2712
  6063  0016A6                     u2420:
  6064  0016A6  5035               	movf	___fladd@b^0,w,c
  6065  0016A8  5C39               	subwf	___fladd@a^0,w,c
  6066  0016AA  6E3D               	movwf	??___fladd^0,c
  6067  0016AC  5036               	movf	(___fladd@b+1)^0,w,c
  6068  0016AE  583A               	subwfb	(___fladd@a+1)^0,w,c
  6069  0016B0  6E3E               	movwf	(??___fladd+1)^0,c
  6070  0016B2  5037               	movf	(___fladd@b+2)^0,w,c
  6071  0016B4  583B               	subwfb	(___fladd@a+2)^0,w,c
  6072  0016B6  6E3F               	movwf	(??___fladd+2)^0,c
  6073  0016B8  5038               	movf	(___fladd@b+3)^0,w,c
  6074  0016BA  583C               	subwfb	(___fladd@a+3)^0,w,c
  6075  0016BC  6E40               	movwf	(??___fladd+3)^0,c
  6076  0016BE  0EFF               	movlw	255
  6077  0016C0  243D               	addwf	??___fladd^0,w,c
  6078  0016C2  6E35               	movwf	___fladd@b^0,c
  6079  0016C4  0EFF               	movlw	255
  6080  0016C6  203E               	addwfc	(??___fladd+1)^0,w,c
  6081  0016C8  6E36               	movwf	(___fladd@b+1)^0,c
  6082  0016CA  0EFF               	movlw	255
  6083  0016CC  203F               	addwfc	(??___fladd+2)^0,w,c
  6084  0016CE  6E37               	movwf	(___fladd@b+2)^0,c
  6085  0016D0  0EFF               	movlw	255
  6086  0016D2  2040               	addwfc	(??___fladd+3)^0,w,c
  6087  0016D4  6E38               	movwf	(___fladd@b+3)^0,c
  6088  0016D6  0E80               	movlw	128
  6089  0016D8  1A41               	xorwf	___fladd@signs^0,f,c
  6090  0016DA  6C44               	negf	___fladd@grs^0,c
  6091  0016DC  5044               	movf	___fladd@grs^0,w,c
  6092  0016DE  A4D8               	btfss	status,2,c
  6093  0016E0  EF74  F00B         	goto	u2431
  6094  0016E4  EF76  F00B         	goto	u2430
  6095  0016E8                     u2431:
  6096  0016E8  EF86  F00B         	goto	l847
  6097  0016EC                     u2430:
  6098  0016EC  0E01               	movlw	1
  6099  0016EE  2635               	addwf	___fladd@b^0,f,c
  6100  0016F0  0E00               	movlw	0
  6101  0016F2  2236               	addwfc	(___fladd@b+1)^0,f,c
  6102  0016F4  2237               	addwfc	(___fladd@b+2)^0,f,c
  6103  0016F6  2238               	addwfc	(___fladd@b+3)^0,f,c
  6104  0016F8  EF86  F00B         	goto	l847
  6105  0016FC                     l2712:
  6106  0016FC  5039               	movf	___fladd@a^0,w,c
  6107  0016FE  5E35               	subwf	___fladd@b^0,f,c
  6108  001700  503A               	movf	(___fladd@a+1)^0,w,c
  6109  001702  5A36               	subwfb	(___fladd@b+1)^0,f,c
  6110  001704  503B               	movf	(___fladd@a+2)^0,w,c
  6111  001706  5A37               	subwfb	(___fladd@b+2)^0,f,c
  6112  001708  503C               	movf	(___fladd@a+3)^0,w,c
  6113  00170A  5A38               	subwfb	(___fladd@b+3)^0,f,c
  6114  00170C                     l847:
  6115  00170C  5035               	movf	___fladd@b^0,w,c
  6116  00170E  1036               	iorwf	(___fladd@b+1)^0,w,c
  6117  001710  1037               	iorwf	(___fladd@b+2)^0,w,c
  6118  001712  1038               	iorwf	(___fladd@b+3)^0,w,c
  6119  001714  A4D8               	btfss	status,2,c
  6120  001716  EF8F  F00B         	goto	u2441
  6121  00171A  EF91  F00B         	goto	u2440
  6122  00171E                     u2441:
  6123  00171E  EFC6  F00B         	goto	l2736
  6124  001722                     u2440:
  6125  001722  5044               	movf	___fladd@grs^0,w,c
  6126  001724  A4D8               	btfss	status,2,c
  6127  001726  EF97  F00B         	goto	u2451
  6128  00172A  EF99  F00B         	goto	u2450
  6129  00172E                     u2451:
  6130  00172E  EFC6  F00B         	goto	l2736
  6131  001732                     u2450:
  6132  001732  0E00               	movlw	0
  6133  001734  6E35               	movwf	?___fladd^0,c
  6134  001736  0E00               	movlw	0
  6135  001738  6E36               	movwf	(?___fladd+1)^0,c
  6136  00173A  0E00               	movlw	0
  6137  00173C  6E37               	movwf	(?___fladd+2)^0,c
  6138  00173E  0E00               	movlw	0
  6139  001740  6E38               	movwf	(?___fladd+3)^0,c
  6140  001742  EF61  F00C         	goto	l839
  6141  001746                     l2720:
  6142  001746  90D8               	bcf	status,0,c
  6143  001748  3635               	rlcf	___fladd@b^0,f,c
  6144  00174A  3636               	rlcf	(___fladd@b+1)^0,f,c
  6145  00174C  3637               	rlcf	(___fladd@b+2)^0,f,c
  6146  00174E  3638               	rlcf	(___fladd@b+3)^0,f,c
  6147  001750  AE44               	btfss	___fladd@grs^0,7,c
  6148  001752  EFAD  F00B         	goto	u2461
  6149  001756  EFAF  F00B         	goto	u2460
  6150  00175A                     u2461:
  6151  00175A  EFB0  F00B         	goto	l2726
  6152  00175E                     u2460:
  6153  00175E  8035               	bsf	___fladd@b^0,0,c
  6154  001760                     l2726:
  6155  001760  A044               	btfss	___fladd@grs^0,0,c
  6156  001762  EFB5  F00B         	goto	u2471
  6157  001766  EFB7  F00B         	goto	u2470
  6158  00176A                     u2471:
  6159  00176A  EFBB  F00B         	goto	l2730
  6160  00176E                     u2470:
  6161  00176E  80D8               	bsf	status,0,c
  6162  001770  3644               	rlcf	___fladd@grs^0,f,c
  6163  001772  EFBD  F00B         	goto	l2732
  6164  001776                     l2730:
  6165  001776  90D8               	bcf	status,0,c
  6166  001778  3644               	rlcf	___fladd@grs^0,f,c
  6167  00177A                     l2732:
  6168  00177A  5043               	movf	___fladd@bexp^0,w,c
  6169  00177C  B4D8               	btfsc	status,2,c
  6170  00177E  EFC3  F00B         	goto	u2481
  6171  001782  EFC5  F00B         	goto	u2480
  6172  001786                     u2481:
  6173  001786  EFC6  F00B         	goto	l2736
  6174  00178A                     u2480:
  6175  00178A  0643               	decf	___fladd@bexp^0,f,c
  6176  00178C                     l2736:
  6177  00178C  AE37               	btfss	(___fladd@b+2)^0,7,c
  6178  00178E  EFCB  F00B         	goto	u2491
  6179  001792  EFCD  F00B         	goto	u2490
  6180  001796                     u2491:
  6181  001796  EFA3  F00B         	goto	l2720
  6182  00179A                     u2490:
  6183  00179A                     l2738:
  6184  00179A  0E00               	movlw	0
  6185  00179C  6E42               	movwf	___fladd@aexp^0,c
  6186  00179E  AE44               	btfss	___fladd@grs^0,7,c
  6187  0017A0  EFD4  F00B         	goto	u2501
  6188  0017A4  EFD6  F00B         	goto	u2500
  6189  0017A8                     u2501:
  6190  0017A8  EFEE  F00B         	goto	l856
  6191  0017AC                     u2500:
  6192  0017AC  C044  F03D         	movff	___fladd@grs,??___fladd
  6193  0017B0  0E7F               	movlw	127
  6194  0017B2  163D               	andwf	??___fladd^0,f,c
  6195  0017B4  B4D8               	btfsc	status,2,c
  6196  0017B6  EFDF  F00B         	goto	u2511
  6197  0017BA  EFE1  F00B         	goto	u2510
  6198  0017BE                     u2511:
  6199  0017BE  EFE5  F00B         	goto	l857
  6200  0017C2                     u2510:
  6201  0017C2                     l2744:
  6202  0017C2  0E01               	movlw	1
  6203  0017C4  6E42               	movwf	___fladd@aexp^0,c
  6204  0017C6  EFEE  F00B         	goto	l856
  6205  0017CA                     l857:
  6206  0017CA  A035               	btfss	___fladd@b^0,0,c
  6207  0017CC  EFEA  F00B         	goto	u2521
  6208  0017D0  EFEC  F00B         	goto	u2520
  6209  0017D4                     u2521:
  6210  0017D4  EFEE  F00B         	goto	l856
  6211  0017D8                     u2520:
  6212  0017D8  EFE1  F00B         	goto	l2744
  6213  0017DC                     l856:
  6214  0017DC  5042               	movf	___fladd@aexp^0,w,c
  6215  0017DE  B4D8               	btfsc	status,2,c
  6216  0017E0  EFF4  F00B         	goto	u2531
  6217  0017E4  EFF6  F00B         	goto	u2530
  6218  0017E8                     u2531:
  6219  0017E8  EF21  F00C         	goto	l2756
  6220  0017EC                     u2530:
  6221  0017EC  0E01               	movlw	1
  6222  0017EE  2635               	addwf	___fladd@b^0,f,c
  6223  0017F0  0E00               	movlw	0
  6224  0017F2  2236               	addwfc	(___fladd@b+1)^0,f,c
  6225  0017F4  2237               	addwfc	(___fladd@b+2)^0,f,c
  6226  0017F6  2238               	addwfc	(___fladd@b+3)^0,f,c
  6227  0017F8  A038               	btfss	(___fladd@b+3)^0,0,c
  6228  0017FA  EF01  F00C         	goto	u2541
  6229  0017FE  EF03  F00C         	goto	u2540
  6230  001802                     u2541:
  6231  001802  EF21  F00C         	goto	l2756
  6232  001806                     u2540:
  6233  001806  C035  F03D         	movff	___fladd@b,??___fladd
  6234  00180A  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  6235  00180E  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  6236  001812  C038  F040         	movff	___fladd@b+3,??___fladd+3
  6237  001816  3440               	rlcf	(??___fladd+3)^0,w,c
  6238  001818  3240               	rrcf	(??___fladd+3)^0,f,c
  6239  00181A  323F               	rrcf	(??___fladd+2)^0,f,c
  6240  00181C  323E               	rrcf	(??___fladd+1)^0,f,c
  6241  00181E  323D               	rrcf	??___fladd^0,f,c
  6242  001820  C03D  F035         	movff	??___fladd,___fladd@b
  6243  001824  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  6244  001828  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  6245  00182C  C040  F038         	movff	??___fladd+3,___fladd@b+3
  6246  001830  2843               	incf	___fladd@bexp^0,w,c
  6247  001832  B4D8               	btfsc	status,2,c
  6248  001834  EF1E  F00C         	goto	u2551
  6249  001838  EF20  F00C         	goto	u2550
  6250  00183C                     u2551:
  6251  00183C  EF21  F00C         	goto	l2756
  6252  001840                     u2550:
  6253  001840  2A43               	incf	___fladd@bexp^0,f,c
  6254  001842                     l2756:
  6255  001842  2843               	incf	___fladd@bexp^0,w,c
  6256  001844  B4D8               	btfsc	status,2,c
  6257  001846  EF27  F00C         	goto	u2561
  6258  00184A  EF29  F00C         	goto	u2560
  6259  00184E                     u2561:
  6260  00184E  EF31  F00C         	goto	l2760
  6261  001852                     u2560:
  6262  001852  5043               	movf	___fladd@bexp^0,w,c
  6263  001854  A4D8               	btfss	status,2,c
  6264  001856  EF2F  F00C         	goto	u2571
  6265  00185A  EF31  F00C         	goto	u2570
  6266  00185E                     u2571:
  6267  00185E  EF43  F00C         	goto	l2764
  6268  001862                     u2570:
  6269  001862                     l2760:
  6270  001862  0E00               	movlw	0
  6271  001864  6E35               	movwf	___fladd@b^0,c
  6272  001866  0E00               	movlw	0
  6273  001868  6E36               	movwf	(___fladd@b+1)^0,c
  6274  00186A  0E00               	movlw	0
  6275  00186C  6E37               	movwf	(___fladd@b+2)^0,c
  6276  00186E  0E00               	movlw	0
  6277  001870  6E38               	movwf	(___fladd@b+3)^0,c
  6278  001872  5043               	movf	___fladd@bexp^0,w,c
  6279  001874  A4D8               	btfss	status,2,c
  6280  001876  EF3F  F00C         	goto	u2581
  6281  00187A  EF41  F00C         	goto	u2580
  6282  00187E                     u2581:
  6283  00187E  EF43  F00C         	goto	l2764
  6284  001882                     u2580:
  6285  001882  0E00               	movlw	0
  6286  001884  6E41               	movwf	___fladd@signs^0,c
  6287  001886                     l2764:
  6288  001886  A043               	btfss	___fladd@bexp^0,0,c
  6289  001888  EF48  F00C         	goto	u2591
  6290  00188C  EF4A  F00C         	goto	u2590
  6291  001890                     u2591:
  6292  001890  EF4D  F00C         	goto	l2768
  6293  001894                     u2590:
  6294  001894  8E37               	bsf	(___fladd@b+2)^0,7,c
  6295  001896  EF4E  F00C         	goto	l2770
  6296  00189A                     l2768:
  6297  00189A  9E37               	bcf	(___fladd@b+2)^0,7,c
  6298  00189C                     l2770:
  6299  00189C  90D8               	bcf	status,0,c
  6300  00189E  3043               	rrcf	___fladd@bexp^0,w,c
  6301  0018A0  6E38               	movwf	(___fladd@b+3)^0,c
  6302  0018A2  AE41               	btfss	___fladd@signs^0,7,c
  6303  0018A4  EF56  F00C         	goto	u2601
  6304  0018A8  EF58  F00C         	goto	u2600
  6305  0018AC                     u2601:
  6306  0018AC  EF59  F00C         	goto	l2776
  6307  0018B0                     u2600:
  6308  0018B0  8E38               	bsf	(___fladd@b+3)^0,7,c
  6309  0018B2                     l2776:
  6310  0018B2  C035  F035         	movff	___fladd@b,?___fladd
  6311  0018B6  C036  F036         	movff	___fladd@b+1,?___fladd+1
  6312  0018BA  C037  F037         	movff	___fladd@b+2,?___fladd+2
  6313  0018BE  C038  F038         	movff	___fladd@b+3,?___fladd+3
  6314  0018C2                     l839:
  6315  0018C2  0012               	return		;funcret
  6316  0018C4                     __end_of___fladd:
  6317                           	callstack 0
  6318                           
  6319 ;; *************** function ___flneg *****************
  6320 ;; Defined at:
  6321 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  6322 ;; Parameters:    Size  Location     Type
  6323 ;;  f1              4    0[COMRAM] unsigned char 
  6324 ;; Auto vars:     Size  Location     Type
  6325 ;;		None
  6326 ;; Return value:  Size  Location     Type
  6327 ;;                  4    0[COMRAM] unsigned char 
  6328 ;; Registers used:
  6329 ;;		wreg, status,2, status,0
  6330 ;; Tracked objects:
  6331 ;;		On entry : 0/0
  6332 ;;		On exit  : 0/0
  6333 ;;		Unchanged: 0/0
  6334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6335 ;;      Params:         4       0       0       0       0       0       0
  6336 ;;      Locals:         0       0       0       0       0       0       0
  6337 ;;      Temps:          0       0       0       0       0       0       0
  6338 ;;      Totals:         4       0       0       0       0       0       0
  6339 ;;Total ram usage:        4 bytes
  6340 ;; Hardware stack levels used: 1
  6341 ;; This function calls:
  6342 ;;		Nothing
  6343 ;; This function is called by:
  6344 ;;		_sprintf
  6345 ;; This function uses a non-reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text19
  6349  0037A4                     __ptext19:
  6350                           	callstack 0
  6351  0037A4                     ___flneg:
  6352                           	callstack 29
  6353  0037A4  5001               	movf	___flneg@f1^0,w,c
  6354  0037A6  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6355  0037A8  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6356  0037AA  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6357  0037AC  B4D8               	btfsc	status,2,c
  6358  0037AE  EFDB  F01B         	goto	u3341
  6359  0037B2  EFDD  F01B         	goto	u3340
  6360  0037B6                     u3341:
  6361  0037B6  EFE5  F01B         	goto	l3288
  6362  0037BA                     u3340:
  6363  0037BA  0E00               	movlw	0
  6364  0037BC  1A01               	xorwf	___flneg@f1^0,f,c
  6365  0037BE  0E00               	movlw	0
  6366  0037C0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6367  0037C2  0E00               	movlw	0
  6368  0037C4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6369  0037C6  0E80               	movlw	128
  6370  0037C8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6371  0037CA                     l3288:
  6372  0037CA  C001  F001         	movff	___flneg@f1,?___flneg
  6373  0037CE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6374  0037D2  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6375  0037D6  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6376  0037DA  0012               	return		;funcret
  6377  0037DC                     __end_of___flneg:
  6378                           	callstack 0
  6379                           
  6380 ;; *************** function ___flge *****************
  6381 ;; Defined at:
  6382 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  ff1             4    0[COMRAM] unsigned char 
  6385 ;;  ff2             4    4[COMRAM] unsigned char 
  6386 ;; Auto vars:     Size  Location     Type
  6387 ;;		None
  6388 ;; Return value:  Size  Location     Type
  6389 ;;		None               void
  6390 ;; Registers used:
  6391 ;;		wreg, status,2, status,0
  6392 ;; Tracked objects:
  6393 ;;		On entry : 0/0
  6394 ;;		On exit  : 0/0
  6395 ;;		Unchanged: 0/0
  6396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6397 ;;      Params:         8       0       0       0       0       0       0
  6398 ;;      Locals:         0       0       0       0       0       0       0
  6399 ;;      Temps:          4       0       0       0       0       0       0
  6400 ;;      Totals:        12       0       0       0       0       0       0
  6401 ;;Total ram usage:       12 bytes
  6402 ;; Hardware stack levels used: 1
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_sprintf
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           	psect	text20
  6411  003132                     __ptext20:
  6412                           	callstack 0
  6413  003132                     ___flge:
  6414                           	callstack 29
  6415  003132  0E00               	movlw	0
  6416  003134  1401               	andwf	___flge@ff1^0,w,c
  6417  003136  6E09               	movwf	??___flge^0,c
  6418  003138  0E00               	movlw	0
  6419  00313A  1402               	andwf	(___flge@ff1+1)^0,w,c
  6420  00313C  6E0A               	movwf	(??___flge+1)^0,c
  6421  00313E  0E80               	movlw	128
  6422  003140  1403               	andwf	(___flge@ff1+2)^0,w,c
  6423  003142  6E0B               	movwf	(??___flge+2)^0,c
  6424  003144  0E7F               	movlw	127
  6425  003146  1404               	andwf	(___flge@ff1+3)^0,w,c
  6426  003148  6E0C               	movwf	(??___flge+3)^0,c
  6427  00314A  5009               	movf	??___flge^0,w,c
  6428  00314C  100A               	iorwf	(??___flge+1)^0,w,c
  6429  00314E  100B               	iorwf	(??___flge+2)^0,w,c
  6430  003150  100C               	iorwf	(??___flge+3)^0,w,c
  6431  003152  A4D8               	btfss	status,2,c
  6432  003154  EFAE  F018         	goto	u3291
  6433  003158  EFB0  F018         	goto	u3290
  6434  00315C                     u3291:
  6435  00315C  EFB8  F018         	goto	l3266
  6436  003160                     u3290:
  6437  003160  0E00               	movlw	0
  6438  003162  6E01               	movwf	___flge@ff1^0,c
  6439  003164  0E00               	movlw	0
  6440  003166  6E02               	movwf	(___flge@ff1+1)^0,c
  6441  003168  0E00               	movlw	0
  6442  00316A  6E03               	movwf	(___flge@ff1+2)^0,c
  6443  00316C  0E00               	movlw	0
  6444  00316E  6E04               	movwf	(___flge@ff1+3)^0,c
  6445  003170                     l3266:
  6446  003170  0E00               	movlw	0
  6447  003172  1405               	andwf	___flge@ff2^0,w,c
  6448  003174  6E09               	movwf	??___flge^0,c
  6449  003176  0E00               	movlw	0
  6450  003178  1406               	andwf	(___flge@ff2+1)^0,w,c
  6451  00317A  6E0A               	movwf	(??___flge+1)^0,c
  6452  00317C  0E80               	movlw	128
  6453  00317E  1407               	andwf	(___flge@ff2+2)^0,w,c
  6454  003180  6E0B               	movwf	(??___flge+2)^0,c
  6455  003182  0E7F               	movlw	127
  6456  003184  1408               	andwf	(___flge@ff2+3)^0,w,c
  6457  003186  6E0C               	movwf	(??___flge+3)^0,c
  6458  003188  5009               	movf	??___flge^0,w,c
  6459  00318A  100A               	iorwf	(??___flge+1)^0,w,c
  6460  00318C  100B               	iorwf	(??___flge+2)^0,w,c
  6461  00318E  100C               	iorwf	(??___flge+3)^0,w,c
  6462  003190  A4D8               	btfss	status,2,c
  6463  003192  EFCD  F018         	goto	u3301
  6464  003196  EFCF  F018         	goto	u3300
  6465  00319A                     u3301:
  6466  00319A  EFD7  F018         	goto	l3270
  6467  00319E                     u3300:
  6468  00319E  0E00               	movlw	0
  6469  0031A0  6E05               	movwf	___flge@ff2^0,c
  6470  0031A2  0E00               	movlw	0
  6471  0031A4  6E06               	movwf	(___flge@ff2+1)^0,c
  6472  0031A6  0E00               	movlw	0
  6473  0031A8  6E07               	movwf	(___flge@ff2+2)^0,c
  6474  0031AA  0E00               	movlw	0
  6475  0031AC  6E08               	movwf	(___flge@ff2+3)^0,c
  6476  0031AE                     l3270:
  6477  0031AE  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6478  0031B0  EFDC  F018         	goto	u3311
  6479  0031B4  EFDE  F018         	goto	u3310
  6480  0031B8                     u3311:
  6481  0031B8  EFE7  F018         	goto	l3274
  6482  0031BC                     u3310:
  6483  0031BC  6C01               	negf	___flge@ff1^0,c
  6484  0031BE  1E02               	comf	(___flge@ff1+1)^0,f,c
  6485  0031C0  B0D8               	btfsc	status,0,c
  6486  0031C2  2A02               	incf	(___flge@ff1+1)^0,f,c
  6487  0031C4  1E03               	comf	(___flge@ff1+2)^0,f,c
  6488  0031C6  B0D8               	btfsc	status,0,c
  6489  0031C8  2A03               	incf	(___flge@ff1+2)^0,f,c
  6490  0031CA  0E80               	movlw	128
  6491  0031CC  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6492  0031CE                     l3274:
  6493  0031CE  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6494  0031D0  EFEC  F018         	goto	u3321
  6495  0031D4  EFEE  F018         	goto	u3320
  6496  0031D8                     u3321:
  6497  0031D8  EFF7  F018         	goto	l558
  6498  0031DC                     u3320:
  6499  0031DC  6C05               	negf	___flge@ff2^0,c
  6500  0031DE  1E06               	comf	(___flge@ff2+1)^0,f,c
  6501  0031E0  B0D8               	btfsc	status,0,c
  6502  0031E2  2A06               	incf	(___flge@ff2+1)^0,f,c
  6503  0031E4  1E07               	comf	(___flge@ff2+2)^0,f,c
  6504  0031E6  B0D8               	btfsc	status,0,c
  6505  0031E8  2A07               	incf	(___flge@ff2+2)^0,f,c
  6506  0031EA  0E80               	movlw	128
  6507  0031EC  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6508  0031EE                     l558:
  6509  0031EE  0E00               	movlw	0
  6510  0031F0  1A01               	xorwf	___flge@ff1^0,f,c
  6511  0031F2  0E00               	movlw	0
  6512  0031F4  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6513  0031F6  0E00               	movlw	0
  6514  0031F8  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6515  0031FA  0E80               	movlw	128
  6516  0031FC  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6517  0031FE  0E00               	movlw	0
  6518  003200  1A05               	xorwf	___flge@ff2^0,f,c
  6519  003202  0E00               	movlw	0
  6520  003204  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6521  003206  0E00               	movlw	0
  6522  003208  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6523  00320A  0E80               	movlw	128
  6524  00320C  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6525  00320E  5005               	movf	___flge@ff2^0,w,c
  6526  003210  5C01               	subwf	___flge@ff1^0,w,c
  6527  003212  5006               	movf	(___flge@ff2+1)^0,w,c
  6528  003214  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6529  003216  5007               	movf	(___flge@ff2+2)^0,w,c
  6530  003218  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6531  00321A  5008               	movf	(___flge@ff2+3)^0,w,c
  6532  00321C  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6533  00321E  B0D8               	btfsc	status,0,c
  6534  003220  EF14  F019         	goto	u3331
  6535  003224  EF16  F019         	goto	u3330
  6536  003228                     u3331:
  6537  003228  EF19  F019         	goto	l3280
  6538  00322C                     u3330:
  6539  00322C  90D8               	bcf	status,0,c
  6540  00322E  EF1A  F019         	goto	l559
  6541  003232                     l3280:
  6542  003232  80D8               	bsf	status,0,c
  6543  003234                     l559:
  6544  003234  0012               	return		;funcret
  6545  003236                     __end_of___flge:
  6546                           	callstack 0
  6547                           
  6548 ;; *************** function ___fleq *****************
  6549 ;; Defined at:
  6550 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  ff1             4    0[COMRAM] unsigned char 
  6553 ;;  ff2             4    4[COMRAM] unsigned char 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;		None
  6556 ;; Return value:  Size  Location     Type
  6557 ;;		None               void
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6565 ;;      Params:         8       0       0       0       0       0       0
  6566 ;;      Locals:         0       0       0       0       0       0       0
  6567 ;;      Temps:          4       0       0       0       0       0       0
  6568 ;;      Totals:        12       0       0       0       0       0       0
  6569 ;;Total ram usage:       12 bytes
  6570 ;; Hardware stack levels used: 1
  6571 ;; This function calls:
  6572 ;;		Nothing
  6573 ;; This function is called by:
  6574 ;;		_sprintf
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text21
  6579  0033AA                     __ptext21:
  6580                           	callstack 0
  6581  0033AA                     ___fleq:
  6582                           	callstack 29
  6583  0033AA  0E00               	movlw	0
  6584  0033AC  1401               	andwf	___fleq@ff1^0,w,c
  6585  0033AE  6E09               	movwf	??___fleq^0,c
  6586  0033B0  0E00               	movlw	0
  6587  0033B2  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6588  0033B4  6E0A               	movwf	(??___fleq+1)^0,c
  6589  0033B6  0E80               	movlw	128
  6590  0033B8  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6591  0033BA  6E0B               	movwf	(??___fleq+2)^0,c
  6592  0033BC  0E7F               	movlw	127
  6593  0033BE  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6594  0033C0  6E0C               	movwf	(??___fleq+3)^0,c
  6595  0033C2  5009               	movf	??___fleq^0,w,c
  6596  0033C4  100A               	iorwf	(??___fleq+1)^0,w,c
  6597  0033C6  100B               	iorwf	(??___fleq+2)^0,w,c
  6598  0033C8  100C               	iorwf	(??___fleq+3)^0,w,c
  6599  0033CA  A4D8               	btfss	status,2,c
  6600  0033CC  EFEA  F019         	goto	u3261
  6601  0033D0  EFEC  F019         	goto	u3260
  6602  0033D4                     u3261:
  6603  0033D4  EFF4  F019         	goto	l3250
  6604  0033D8                     u3260:
  6605  0033D8  0E00               	movlw	0
  6606  0033DA  6E01               	movwf	___fleq@ff1^0,c
  6607  0033DC  0E00               	movlw	0
  6608  0033DE  6E02               	movwf	(___fleq@ff1+1)^0,c
  6609  0033E0  0E00               	movlw	0
  6610  0033E2  6E03               	movwf	(___fleq@ff1+2)^0,c
  6611  0033E4  0E00               	movlw	0
  6612  0033E6  6E04               	movwf	(___fleq@ff1+3)^0,c
  6613  0033E8                     l3250:
  6614  0033E8  0E00               	movlw	0
  6615  0033EA  1405               	andwf	___fleq@ff2^0,w,c
  6616  0033EC  6E09               	movwf	??___fleq^0,c
  6617  0033EE  0E00               	movlw	0
  6618  0033F0  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6619  0033F2  6E0A               	movwf	(??___fleq+1)^0,c
  6620  0033F4  0E80               	movlw	128
  6621  0033F6  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6622  0033F8  6E0B               	movwf	(??___fleq+2)^0,c
  6623  0033FA  0E7F               	movlw	127
  6624  0033FC  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6625  0033FE  6E0C               	movwf	(??___fleq+3)^0,c
  6626  003400  5009               	movf	??___fleq^0,w,c
  6627  003402  100A               	iorwf	(??___fleq+1)^0,w,c
  6628  003404  100B               	iorwf	(??___fleq+2)^0,w,c
  6629  003406  100C               	iorwf	(??___fleq+3)^0,w,c
  6630  003408  A4D8               	btfss	status,2,c
  6631  00340A  EF09  F01A         	goto	u3271
  6632  00340E  EF0B  F01A         	goto	u3270
  6633  003412                     u3271:
  6634  003412  EF13  F01A         	goto	l3254
  6635  003416                     u3270:
  6636  003416  0E00               	movlw	0
  6637  003418  6E05               	movwf	___fleq@ff2^0,c
  6638  00341A  0E00               	movlw	0
  6639  00341C  6E06               	movwf	(___fleq@ff2+1)^0,c
  6640  00341E  0E00               	movlw	0
  6641  003420  6E07               	movwf	(___fleq@ff2+2)^0,c
  6642  003422  0E00               	movlw	0
  6643  003424  6E08               	movwf	(___fleq@ff2+3)^0,c
  6644  003426                     l3254:
  6645  003426  5005               	movf	___fleq@ff2^0,w,c
  6646  003428  1801               	xorwf	___fleq@ff1^0,w,c
  6647  00342A  E10F               	bnz	u3280
  6648  00342C  5006               	movf	(___fleq@ff2+1)^0,w,c
  6649  00342E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6650  003430  E10C               	bnz	u3280
  6651  003432  5007               	movf	(___fleq@ff2+2)^0,w,c
  6652  003434  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6653  003436  E109               	bnz	u3280
  6654  003438  5008               	movf	(___fleq@ff2+3)^0,w,c
  6655  00343A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6656  00343C  B4D8               	btfsc	status,2,c
  6657  00343E  EF23  F01A         	goto	u3281
  6658  003442  EF25  F01A         	goto	u3280
  6659  003446                     u3281:
  6660  003446  EF28  F01A         	goto	l3258
  6661  00344A                     u3280:
  6662  00344A  90D8               	bcf	status,0,c
  6663  00344C  EF29  F01A         	goto	l552
  6664  003450                     l3258:
  6665  003450  80D8               	bsf	status,0,c
  6666  003452                     l552:
  6667  003452  0012               	return		;funcret
  6668  003454                     __end_of___fleq:
  6669                           	callstack 0
  6670                           
  6671 ;; *************** function _adc_init *****************
  6672 ;; Defined at:
  6673 ;;		line 30 in file "adc.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;		None
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;		None
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  1    wreg      void 
  6680 ;; Registers used:
  6681 ;;		wreg, status,2
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6687 ;;      Params:         0       0       0       0       0       0       0
  6688 ;;      Locals:         0       0       0       0       0       0       0
  6689 ;;      Temps:          0       0       0       0       0       0       0
  6690 ;;      Totals:         0       0       0       0       0       0       0
  6691 ;;Total ram usage:        0 bytes
  6692 ;; Hardware stack levels used: 1
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_main
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text22
  6701  003856                     __ptext22:
  6702                           	callstack 0
  6703  003856                     _adc_init:
  6704                           	callstack 30
  6705  003856                     
  6706                           ;adc.c: 36: ADCON0=0x01;
  6707  003856  0E01               	movlw	1
  6708  003858  6EC2               	movwf	194,c	;volatile
  6709                           
  6710                           ;adc.c: 37: ADCON1=0x0B;
  6711  00385A  0E0B               	movlw	11
  6712  00385C  6EC1               	movwf	193,c	;volatile
  6713                           
  6714                           ;adc.c: 38: ADCON2=0x01;
  6715  00385E  0E01               	movlw	1
  6716  003860  6EC0               	movwf	192,c	;volatile
  6717  003862  0012               	return		;funcret
  6718  003864                     __end_of_adc_init:
  6719                           	callstack 0
  6720                           
  6721 ;; *************** function _adc_amostra *****************
  6722 ;; Defined at:
  6723 ;;		line 44 in file "adc.c"
  6724 ;; Parameters:    Size  Location     Type
  6725 ;;  canal           1    wreg     unsigned char 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  canal           1    6[COMRAM] unsigned char 
  6728 ;; Return value:  Size  Location     Type
  6729 ;;                  2    0[COMRAM] unsigned int 
  6730 ;; Registers used:
  6731 ;;		wreg, status,2, status,0
  6732 ;; Tracked objects:
  6733 ;;		On entry : 0/0
  6734 ;;		On exit  : 0/0
  6735 ;;		Unchanged: 0/0
  6736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6737 ;;      Params:         2       0       0       0       0       0       0
  6738 ;;      Locals:         1       0       0       0       0       0       0
  6739 ;;      Temps:          4       0       0       0       0       0       0
  6740 ;;      Totals:         7       0       0       0       0       0       0
  6741 ;;Total ram usage:        7 bytes
  6742 ;; Hardware stack levels used: 1
  6743 ;; This function calls:
  6744 ;;		Nothing
  6745 ;; This function is called by:
  6746 ;;		_main
  6747 ;; This function uses a non-reentrant model
  6748 ;;
  6749                           
  6750                           	psect	text23
  6751  00360A                     __ptext23:
  6752                           	callstack 0
  6753  00360A                     _adc_amostra:
  6754                           	callstack 30
  6755                           
  6756                           ;incstack = 0
  6757                           ;adc_amostra@canal stored from wreg
  6758  00360A  6E07               	movwf	adc_amostra@canal^0,c
  6759  00360C                     
  6760                           ;adc.c: 62: switch(canal)
  6761  00360C  EF14  F01B         	goto	l3430
  6762  003610                     l3422:
  6763                           
  6764                           ;adc.c: 65: ADCON0=0x01;
  6765  003610  0E01               	movlw	1
  6766  003612  6EC2               	movwf	194,c	;volatile
  6767                           
  6768                           ;adc.c: 66: break;
  6769  003614  EF23  F01B         	goto	l131
  6770  003618                     l3424:
  6771                           
  6772                           ;adc.c: 68: ADCON0=0x09;
  6773  003618  0E09               	movlw	9
  6774  00361A  6EC2               	movwf	194,c	;volatile
  6775                           
  6776                           ;adc.c: 69: break;
  6777  00361C  EF23  F01B         	goto	l131
  6778  003620                     l3426:
  6779                           
  6780                           ;adc.c: 71: ADCON0=0x11;
  6781  003620  0E11               	movlw	17
  6782  003622  6EC2               	movwf	194,c	;volatile
  6783                           
  6784                           ;adc.c: 72: break;
  6785  003624  EF23  F01B         	goto	l131
  6786  003628                     l3430:
  6787  003628  5007               	movf	adc_amostra@canal^0,w,c
  6788                           
  6789                           ; Switch size 1, requested type "simple"
  6790                           ; Number of cases is 3, Range of values is 0 to 2
  6791                           ; switch strategies available:
  6792                           ; Name         Instructions Cycles
  6793                           ; simple_byte           10     6 (average)
  6794                           ;	Chosen strategy is simple_byte
  6795  00362A  0A00               	xorlw	0	; case 0
  6796  00362C  B4D8               	btfsc	status,2,c
  6797  00362E  EF08  F01B         	goto	l3422
  6798  003632  0A01               	xorlw	1	; case 1
  6799  003634  B4D8               	btfsc	status,2,c
  6800  003636  EF0C  F01B         	goto	l3424
  6801  00363A  0A03               	xorlw	3	; case 2
  6802  00363C  B4D8               	btfsc	status,2,c
  6803  00363E  EF10  F01B         	goto	l3426
  6804  003642  EF23  F01B         	goto	l131
  6805  003646                     l131:
  6806                           
  6807                           ;adc.c: 77: ADCON0bits.GO=1;
  6808  003646  82C2               	bsf	194,1,c	;volatile
  6809  003648                     l134:
  6810  003648  B2C2               	btfsc	194,1,c	;volatile
  6811  00364A  EF29  F01B         	goto	u3561
  6812  00364E  EF2B  F01B         	goto	u3560
  6813  003652                     u3561:
  6814  003652  EF24  F01B         	goto	l134
  6815  003656                     u3560:
  6816  003656                     
  6817                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  6818  003656  CFC3 F003          	movff	4035,??_adc_amostra	;volatile
  6819  00365A  0E06               	movlw	6
  6820  00365C  6E04               	movwf	(??_adc_amostra+1)^0,c
  6821  00365E                     u3575:
  6822  00365E  90D8               	bcf	status,0,c
  6823  003660  3203               	rrcf	??_adc_amostra^0,f,c
  6824  003662  2E04               	decfsz	(??_adc_amostra+1)^0,f,c
  6825  003664  EF2F  F01B         	goto	u3575
  6826  003668  5003               	movf	??_adc_amostra^0,w,c
  6827  00366A  CFC4 F005          	movff	4036,??_adc_amostra+2	;volatile
  6828  00366E  6A06               	clrf	(??_adc_amostra+3)^0,c
  6829  003670  90D8               	bcf	status,0,c
  6830  003672  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  6831  003674  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  6832  003676  90D8               	bcf	status,0,c
  6833  003678  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  6834  00367A  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  6835  00367C  1005               	iorwf	(??_adc_amostra+2)^0,w,c
  6836  00367E  6E01               	movwf	?_adc_amostra^0,c
  6837  003680  5006               	movf	(??_adc_amostra+3)^0,w,c
  6838  003682  6E02               	movwf	(?_adc_amostra+1)^0,c
  6839  003684  0012               	return		;funcret
  6840  003686                     __end_of_adc_amostra:
  6841                           	callstack 0
  6842                           
  6843 ;; *************** function ___fldiv *****************
  6844 ;; Defined at:
  6845 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;  b               4   39[COMRAM] unsigned int 
  6848 ;;  a               4   43[COMRAM] unsigned int 
  6849 ;; Auto vars:     Size  Location     Type
  6850 ;;  grs             4   58[COMRAM] unsigned long 
  6851 ;;  rem             4   51[COMRAM] unsigned long 
  6852 ;;  new_exp         2   56[COMRAM] int 
  6853 ;;  aexp            1   63[COMRAM] unsigned char 
  6854 ;;  bexp            1   62[COMRAM] unsigned char 
  6855 ;;  sign            1   55[COMRAM] unsigned char 
  6856 ;; Return value:  Size  Location     Type
  6857 ;;                  4   39[COMRAM] unsigned char 
  6858 ;; Registers used:
  6859 ;;		wreg, status,2, status,0
  6860 ;; Tracked objects:
  6861 ;;		On entry : 0/0
  6862 ;;		On exit  : 0/0
  6863 ;;		Unchanged: 0/0
  6864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6865 ;;      Params:         8       0       0       0       0       0       0
  6866 ;;      Locals:        13       0       0       0       0       0       0
  6867 ;;      Temps:          4       0       0       0       0       0       0
  6868 ;;      Totals:        25       0       0       0       0       0       0
  6869 ;;Total ram usage:       25 bytes
  6870 ;; Hardware stack levels used: 1
  6871 ;; This function calls:
  6872 ;;		Nothing
  6873 ;; This function is called by:
  6874 ;;		_main
  6875 ;; This function uses a non-reentrant model
  6876 ;;
  6877                           
  6878                           	psect	text24
  6879  0020FA                     __ptext24:
  6880                           	callstack 0
  6881  0020FA                     ___fldiv:
  6882                           	callstack 30
  6883  0020FA  502B               	movf	(___fldiv@b+3)^0,w,c
  6884  0020FC  0B80               	andlw	128
  6885  0020FE  6E38               	movwf	___fldiv@sign^0,c
  6886  002100  502B               	movf	(___fldiv@b+3)^0,w,c
  6887  002102  242B               	addwf	(___fldiv@b+3)^0,w,c
  6888  002104  6E3F               	movwf	___fldiv@bexp^0,c
  6889  002106  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  6890  002108  EF88  F010         	goto	u4121
  6891  00210C  EF8A  F010         	goto	u4120
  6892  002110                     u4121:
  6893  002110  EF8B  F010         	goto	l3776
  6894  002114                     u4120:
  6895  002114  803F               	bsf	___fldiv@bexp^0,0,c
  6896  002116                     l3776:
  6897  002116  503F               	movf	___fldiv@bexp^0,w,c
  6898  002118  B4D8               	btfsc	status,2,c
  6899  00211A  EF91  F010         	goto	u4131
  6900  00211E  EF93  F010         	goto	u4130
  6901  002122                     u4131:
  6902  002122  EFA8  F010         	goto	l3786
  6903  002126                     u4130:
  6904  002126  283F               	incf	___fldiv@bexp^0,w,c
  6905  002128  A4D8               	btfss	status,2,c
  6906  00212A  EF99  F010         	goto	u4141
  6907  00212E  EF9B  F010         	goto	u4140
  6908  002132                     u4141:
  6909  002132  EFA3  F010         	goto	l3782
  6910  002136                     u4140:
  6911  002136  0E00               	movlw	0
  6912  002138  6E28               	movwf	___fldiv@b^0,c
  6913  00213A  0E00               	movlw	0
  6914  00213C  6E29               	movwf	(___fldiv@b+1)^0,c
  6915  00213E  0E00               	movlw	0
  6916  002140  6E2A               	movwf	(___fldiv@b+2)^0,c
  6917  002142  0E00               	movlw	0
  6918  002144  6E2B               	movwf	(___fldiv@b+3)^0,c
  6919  002146                     l3782:
  6920  002146  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  6921  002148  0E00               	movlw	0
  6922  00214A  6E2B               	movwf	(___fldiv@b+3)^0,c
  6923  00214C  EFB0  F010         	goto	l3788
  6924  002150                     l3786:
  6925  002150  0E00               	movlw	0
  6926  002152  6E28               	movwf	___fldiv@b^0,c
  6927  002154  0E00               	movlw	0
  6928  002156  6E29               	movwf	(___fldiv@b+1)^0,c
  6929  002158  0E00               	movlw	0
  6930  00215A  6E2A               	movwf	(___fldiv@b+2)^0,c
  6931  00215C  0E00               	movlw	0
  6932  00215E  6E2B               	movwf	(___fldiv@b+3)^0,c
  6933  002160                     l3788:
  6934  002160  502F               	movf	(___fldiv@a+3)^0,w,c
  6935  002162  0B80               	andlw	128
  6936  002164  1A38               	xorwf	___fldiv@sign^0,f,c
  6937  002166  502F               	movf	(___fldiv@a+3)^0,w,c
  6938  002168  242F               	addwf	(___fldiv@a+3)^0,w,c
  6939  00216A  6E40               	movwf	___fldiv@aexp^0,c
  6940  00216C  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  6941  00216E  EFBB  F010         	goto	u4151
  6942  002172  EFBD  F010         	goto	u4150
  6943  002176                     u4151:
  6944  002176  EFBE  F010         	goto	l3796
  6945  00217A                     u4150:
  6946  00217A  8040               	bsf	___fldiv@aexp^0,0,c
  6947  00217C                     l3796:
  6948  00217C  5040               	movf	___fldiv@aexp^0,w,c
  6949  00217E  B4D8               	btfsc	status,2,c
  6950  002180  EFC4  F010         	goto	u4161
  6951  002184  EFC6  F010         	goto	u4160
  6952  002188                     u4161:
  6953  002188  EFDB  F010         	goto	l3806
  6954  00218C                     u4160:
  6955  00218C  2840               	incf	___fldiv@aexp^0,w,c
  6956  00218E  A4D8               	btfss	status,2,c
  6957  002190  EFCC  F010         	goto	u4171
  6958  002194  EFCE  F010         	goto	u4170
  6959  002198                     u4171:
  6960  002198  EFD6  F010         	goto	l3802
  6961  00219C                     u4170:
  6962  00219C  0E00               	movlw	0
  6963  00219E  6E2C               	movwf	___fldiv@a^0,c
  6964  0021A0  0E00               	movlw	0
  6965  0021A2  6E2D               	movwf	(___fldiv@a+1)^0,c
  6966  0021A4  0E00               	movlw	0
  6967  0021A6  6E2E               	movwf	(___fldiv@a+2)^0,c
  6968  0021A8  0E00               	movlw	0
  6969  0021AA  6E2F               	movwf	(___fldiv@a+3)^0,c
  6970  0021AC                     l3802:
  6971  0021AC  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  6972  0021AE  0E00               	movlw	0
  6973  0021B0  6E2F               	movwf	(___fldiv@a+3)^0,c
  6974  0021B2  EFE3  F010         	goto	l3808
  6975  0021B6                     l3806:
  6976  0021B6  0E00               	movlw	0
  6977  0021B8  6E2C               	movwf	___fldiv@a^0,c
  6978  0021BA  0E00               	movlw	0
  6979  0021BC  6E2D               	movwf	(___fldiv@a+1)^0,c
  6980  0021BE  0E00               	movlw	0
  6981  0021C0  6E2E               	movwf	(___fldiv@a+2)^0,c
  6982  0021C2  0E00               	movlw	0
  6983  0021C4  6E2F               	movwf	(___fldiv@a+3)^0,c
  6984  0021C6                     l3808:
  6985  0021C6  502C               	movf	___fldiv@a^0,w,c
  6986  0021C8  102D               	iorwf	(___fldiv@a+1)^0,w,c
  6987  0021CA  102E               	iorwf	(___fldiv@a+2)^0,w,c
  6988  0021CC  102F               	iorwf	(___fldiv@a+3)^0,w,c
  6989  0021CE  A4D8               	btfss	status,2,c
  6990  0021D0  EFEC  F010         	goto	u4181
  6991  0021D4  EFEE  F010         	goto	u4180
  6992  0021D8                     u4181:
  6993  0021D8  EF06  F011         	goto	l3820
  6994  0021DC                     u4180:
  6995  0021DC  0E00               	movlw	0
  6996  0021DE  6E28               	movwf	___fldiv@b^0,c
  6997  0021E0  0E00               	movlw	0
  6998  0021E2  6E29               	movwf	(___fldiv@b+1)^0,c
  6999  0021E4  0E00               	movlw	0
  7000  0021E6  6E2A               	movwf	(___fldiv@b+2)^0,c
  7001  0021E8  0E00               	movlw	0
  7002  0021EA  6E2B               	movwf	(___fldiv@b+3)^0,c
  7003  0021EC  0E80               	movlw	128
  7004  0021EE  122A               	iorwf	(___fldiv@b+2)^0,f,c
  7005  0021F0  0E7F               	movlw	127
  7006  0021F2  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7007  0021F4                     l3814:
  7008  0021F4  5038               	movf	___fldiv@sign^0,w,c
  7009  0021F6  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7010  0021F8  C028  F028         	movff	___fldiv@b,?___fldiv
  7011  0021FC  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7012  002200  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7013  002204  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7014  002208  EF49  F012         	goto	l884
  7015  00220C                     l3820:
  7016  00220C  503F               	movf	___fldiv@bexp^0,w,c
  7017  00220E  A4D8               	btfss	status,2,c
  7018  002210  EF0C  F011         	goto	u4191
  7019  002214  EF0E  F011         	goto	u4190
  7020  002218                     u4191:
  7021  002218  EF18  F011         	goto	l3828
  7022  00221C                     u4190:
  7023  00221C  0E00               	movlw	0
  7024  00221E  6E28               	movwf	?___fldiv^0,c
  7025  002220  0E00               	movlw	0
  7026  002222  6E29               	movwf	(?___fldiv+1)^0,c
  7027  002224  0E00               	movlw	0
  7028  002226  6E2A               	movwf	(?___fldiv+2)^0,c
  7029  002228  0E00               	movlw	0
  7030  00222A  6E2B               	movwf	(?___fldiv+3)^0,c
  7031  00222C  EF49  F012         	goto	l884
  7032  002230                     l3828:
  7033  002230  5040               	movf	___fldiv@aexp^0,w,c
  7034  002232  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7035  002236  6A31               	clrf	(??___fldiv+1)^0,c
  7036  002238  5E30               	subwf	??___fldiv^0,f,c
  7037  00223A  0E00               	movlw	0
  7038  00223C  5A31               	subwfb	(??___fldiv+1)^0,f,c
  7039  00223E  0E7F               	movlw	127
  7040  002240  2430               	addwf	??___fldiv^0,w,c
  7041  002242  6E39               	movwf	___fldiv@new_exp^0,c
  7042  002244  0E00               	movlw	0
  7043  002246  2031               	addwfc	(??___fldiv+1)^0,w,c
  7044  002248  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7045  00224A  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7046  00224E  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7047  002252  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7048  002256  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7049  00225A  0E00               	movlw	0
  7050  00225C  6E28               	movwf	___fldiv@b^0,c
  7051  00225E  0E00               	movlw	0
  7052  002260  6E29               	movwf	(___fldiv@b+1)^0,c
  7053  002262  0E00               	movlw	0
  7054  002264  6E2A               	movwf	(___fldiv@b+2)^0,c
  7055  002266  0E00               	movlw	0
  7056  002268  6E2B               	movwf	(___fldiv@b+3)^0,c
  7057  00226A  0E00               	movlw	0
  7058  00226C  6E3B               	movwf	___fldiv@grs^0,c
  7059  00226E  0E00               	movlw	0
  7060  002270  6E3C               	movwf	(___fldiv@grs+1)^0,c
  7061  002272  0E00               	movlw	0
  7062  002274  6E3D               	movwf	(___fldiv@grs+2)^0,c
  7063  002276  0E00               	movlw	0
  7064  002278  6E3E               	movwf	(___fldiv@grs+3)^0,c
  7065  00227A  0E00               	movlw	0
  7066  00227C  6E40               	movwf	___fldiv@aexp^0,c
  7067  00227E  EF79  F011         	goto	l886
  7068  002282                     l3838:
  7069  002282  5040               	movf	___fldiv@aexp^0,w,c
  7070  002284  B4D8               	btfsc	status,2,c
  7071  002286  EF47  F011         	goto	u4201
  7072  00228A  EF49  F011         	goto	u4200
  7073  00228E                     u4201:
  7074  00228E  EF60  F011         	goto	l3846
  7075  002292                     u4200:
  7076  002292  90D8               	bcf	status,0,c
  7077  002294  3634               	rlcf	___fldiv@rem^0,f,c
  7078  002296  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  7079  002298  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  7080  00229A  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  7081  00229C  90D8               	bcf	status,0,c
  7082  00229E  3628               	rlcf	___fldiv@b^0,f,c
  7083  0022A0  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7084  0022A2  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7085  0022A4  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7086  0022A6  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7087  0022A8  EF58  F011         	goto	u4211
  7088  0022AC  EF5A  F011         	goto	u4210
  7089  0022B0                     u4211:
  7090  0022B0  EF5B  F011         	goto	l889
  7091  0022B4                     u4210:
  7092  0022B4  8028               	bsf	___fldiv@b^0,0,c
  7093  0022B6                     l889:
  7094  0022B6  90D8               	bcf	status,0,c
  7095  0022B8  363B               	rlcf	___fldiv@grs^0,f,c
  7096  0022BA  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7097  0022BC  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7098  0022BE  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7099  0022C0                     l3846:
  7100  0022C0  502C               	movf	___fldiv@a^0,w,c
  7101  0022C2  5C34               	subwf	___fldiv@rem^0,w,c
  7102  0022C4  502D               	movf	(___fldiv@a+1)^0,w,c
  7103  0022C6  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  7104  0022C8  502E               	movf	(___fldiv@a+2)^0,w,c
  7105  0022CA  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  7106  0022CC  502F               	movf	(___fldiv@a+3)^0,w,c
  7107  0022CE  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  7108  0022D0  A0D8               	btfss	status,0,c
  7109  0022D2  EF6D  F011         	goto	u4221
  7110  0022D6  EF6F  F011         	goto	u4220
  7111  0022DA                     u4221:
  7112  0022DA  EF78  F011         	goto	l3852
  7113  0022DE                     u4220:
  7114  0022DE  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  7115  0022E0  502C               	movf	___fldiv@a^0,w,c
  7116  0022E2  5E34               	subwf	___fldiv@rem^0,f,c
  7117  0022E4  502D               	movf	(___fldiv@a+1)^0,w,c
  7118  0022E6  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  7119  0022E8  502E               	movf	(___fldiv@a+2)^0,w,c
  7120  0022EA  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  7121  0022EC  502F               	movf	(___fldiv@a+3)^0,w,c
  7122  0022EE  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  7123  0022F0                     l3852:
  7124  0022F0  2A40               	incf	___fldiv@aexp^0,f,c
  7125  0022F2                     l886:
  7126  0022F2  0E19               	movlw	25
  7127  0022F4  6440               	cpfsgt	___fldiv@aexp^0,c
  7128  0022F6  EF7F  F011         	goto	u4231
  7129  0022FA  EF81  F011         	goto	u4230
  7130  0022FE                     u4231:
  7131  0022FE  EF41  F011         	goto	l3838
  7132  002302                     u4230:
  7133  002302  5034               	movf	___fldiv@rem^0,w,c
  7134  002304  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7135  002306  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7136  002308  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7137  00230A  B4D8               	btfsc	status,2,c
  7138  00230C  EF8A  F011         	goto	u4241
  7139  002310  EF8C  F011         	goto	u4240
  7140  002314                     u4241:
  7141  002314  EFA4  F011         	goto	l3864
  7142  002318                     u4240:
  7143  002318  803B               	bsf	___fldiv@grs^0,0,c
  7144  00231A  EFA4  F011         	goto	l3864
  7145  00231E                     l3858:
  7146  00231E  90D8               	bcf	status,0,c
  7147  002320  3628               	rlcf	___fldiv@b^0,f,c
  7148  002322  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7149  002324  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7150  002326  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7151  002328  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7152  00232A  EF99  F011         	goto	u4251
  7153  00232E  EF9B  F011         	goto	u4250
  7154  002332                     u4251:
  7155  002332  EF9C  F011         	goto	l895
  7156  002336                     u4250:
  7157  002336  8028               	bsf	___fldiv@b^0,0,c
  7158  002338                     l895:
  7159  002338  90D8               	bcf	status,0,c
  7160  00233A  363B               	rlcf	___fldiv@grs^0,f,c
  7161  00233C  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7162  00233E  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7163  002340  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7164  002342  0639               	decf	___fldiv@new_exp^0,f,c
  7165  002344  A0D8               	btfss	status,0,c
  7166  002346  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7167  002348                     l3864:
  7168  002348  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7169  00234A  EFA9  F011         	goto	u4261
  7170  00234E  EFAB  F011         	goto	u4260
  7171  002352                     u4261:
  7172  002352  EF8F  F011         	goto	l3858
  7173  002356                     u4260:
  7174  002356  0E00               	movlw	0
  7175  002358  6E40               	movwf	___fldiv@aexp^0,c
  7176  00235A  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7177  00235C  EFB2  F011         	goto	u4271
  7178  002360  EFB4  F011         	goto	u4270
  7179  002364                     u4271:
  7180  002364  EFD8  F011         	goto	l897
  7181  002368                     u4270:
  7182  002368  0EFF               	movlw	255
  7183  00236A  143B               	andwf	___fldiv@grs^0,w,c
  7184  00236C  6E30               	movwf	??___fldiv^0,c
  7185  00236E  0EFF               	movlw	255
  7186  002370  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7187  002372  6E31               	movwf	(??___fldiv+1)^0,c
  7188  002374  0EFF               	movlw	255
  7189  002376  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7190  002378  6E32               	movwf	(??___fldiv+2)^0,c
  7191  00237A  0E7F               	movlw	127
  7192  00237C  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7193  00237E  6E33               	movwf	(??___fldiv+3)^0,c
  7194  002380  5030               	movf	??___fldiv^0,w,c
  7195  002382  1031               	iorwf	(??___fldiv+1)^0,w,c
  7196  002384  1032               	iorwf	(??___fldiv+2)^0,w,c
  7197  002386  1033               	iorwf	(??___fldiv+3)^0,w,c
  7198  002388  B4D8               	btfsc	status,2,c
  7199  00238A  EFC9  F011         	goto	u4281
  7200  00238E  EFCB  F011         	goto	u4280
  7201  002392                     u4281:
  7202  002392  EFCF  F011         	goto	l898
  7203  002396                     u4280:
  7204  002396                     l3872:
  7205  002396  0E01               	movlw	1
  7206  002398  6E40               	movwf	___fldiv@aexp^0,c
  7207  00239A  EFD8  F011         	goto	l897
  7208  00239E                     l898:
  7209  00239E  A028               	btfss	___fldiv@b^0,0,c
  7210  0023A0  EFD4  F011         	goto	u4291
  7211  0023A4  EFD6  F011         	goto	u4290
  7212  0023A8                     u4291:
  7213  0023A8  EFD8  F011         	goto	l897
  7214  0023AC                     u4290:
  7215  0023AC  EFCB  F011         	goto	l3872
  7216  0023B0                     l897:
  7217  0023B0  5040               	movf	___fldiv@aexp^0,w,c
  7218  0023B2  B4D8               	btfsc	status,2,c
  7219  0023B4  EFDE  F011         	goto	u4301
  7220  0023B8  EFE0  F011         	goto	u4300
  7221  0023BC                     u4301:
  7222  0023BC  EF04  F012         	goto	l3884
  7223  0023C0                     u4300:
  7224  0023C0  0E01               	movlw	1
  7225  0023C2  2628               	addwf	___fldiv@b^0,f,c
  7226  0023C4  0E00               	movlw	0
  7227  0023C6  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7228  0023C8  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7229  0023CA  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7230  0023CC  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7231  0023CE  EFEB  F011         	goto	u4311
  7232  0023D2  EFED  F011         	goto	u4310
  7233  0023D6                     u4311:
  7234  0023D6  EF04  F012         	goto	l3884
  7235  0023DA                     u4310:
  7236  0023DA  C028  F030         	movff	___fldiv@b,??___fldiv
  7237  0023DE  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7238  0023E2  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7239  0023E6  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7240  0023EA  3433               	rlcf	(??___fldiv+3)^0,w,c
  7241  0023EC  3233               	rrcf	(??___fldiv+3)^0,f,c
  7242  0023EE  3232               	rrcf	(??___fldiv+2)^0,f,c
  7243  0023F0  3231               	rrcf	(??___fldiv+1)^0,f,c
  7244  0023F2  3230               	rrcf	??___fldiv^0,f,c
  7245  0023F4  C030  F028         	movff	??___fldiv,___fldiv@b
  7246  0023F8  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7247  0023FC  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7248  002400  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7249  002404  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7250  002406  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7251  002408                     l3884:
  7252  002408  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7253  00240A  EF0F  F012         	goto	u4321
  7254  00240E  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7255  002410  E108               	bnz	u4320
  7256  002412  2839               	incf	___fldiv@new_exp^0,w,c
  7257  002414  A0D8               	btfss	status,0,c
  7258  002416  EF0F  F012         	goto	u4321
  7259  00241A  EF11  F012         	goto	u4320
  7260  00241E                     u4321:
  7261  00241E  EF1C  F012         	goto	l3888
  7262  002422                     u4320:
  7263  002422  0E00               	movlw	0
  7264  002424  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7265  002426  6839               	setf	___fldiv@new_exp^0,c
  7266  002428  0E00               	movlw	0
  7267  00242A  6E28               	movwf	___fldiv@b^0,c
  7268  00242C  0E00               	movlw	0
  7269  00242E  6E29               	movwf	(___fldiv@b+1)^0,c
  7270  002430  0E00               	movlw	0
  7271  002432  6E2A               	movwf	(___fldiv@b+2)^0,c
  7272  002434  0E00               	movlw	0
  7273  002436  6E2B               	movwf	(___fldiv@b+3)^0,c
  7274  002438                     l3888:
  7275  002438  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7276  00243A  EF29  F012         	goto	u4330
  7277  00243E  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7278  002440  E106               	bnz	u4331
  7279  002442  0439               	decf	___fldiv@new_exp^0,w,c
  7280  002444  B0D8               	btfsc	status,0,c
  7281  002446  EF27  F012         	goto	u4331
  7282  00244A  EF29  F012         	goto	u4330
  7283  00244E                     u4331:
  7284  00244E  EF37  F012         	goto	l3892
  7285  002452                     u4330:
  7286  002452  0E00               	movlw	0
  7287  002454  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7288  002456  0E00               	movlw	0
  7289  002458  6E39               	movwf	___fldiv@new_exp^0,c
  7290  00245A  0E00               	movlw	0
  7291  00245C  6E28               	movwf	___fldiv@b^0,c
  7292  00245E  0E00               	movlw	0
  7293  002460  6E29               	movwf	(___fldiv@b+1)^0,c
  7294  002462  0E00               	movlw	0
  7295  002464  6E2A               	movwf	(___fldiv@b+2)^0,c
  7296  002466  0E00               	movlw	0
  7297  002468  6E2B               	movwf	(___fldiv@b+3)^0,c
  7298  00246A  0E00               	movlw	0
  7299  00246C  6E38               	movwf	___fldiv@sign^0,c
  7300  00246E                     l3892:
  7301  00246E  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7302  002472  A03F               	btfss	___fldiv@bexp^0,0,c
  7303  002474  EF3E  F012         	goto	u4341
  7304  002478  EF40  F012         	goto	u4340
  7305  00247C                     u4341:
  7306  00247C  EF43  F012         	goto	l3898
  7307  002480                     u4340:
  7308  002480  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7309  002482  EF44  F012         	goto	l3900
  7310  002486                     l3898:
  7311  002486  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7312  002488                     l3900:
  7313  002488  90D8               	bcf	status,0,c
  7314  00248A  303F               	rrcf	___fldiv@bexp^0,w,c
  7315  00248C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7316  00248E  EFFA  F010         	goto	l3814
  7317  002492                     l884:
  7318  002492  0012               	return		;funcret
  7319  002494                     __end_of___fldiv:
  7320                           	callstack 0
  7321                           
  7322 ;; *************** function _Lcd_Out *****************
  7323 ;; Defined at:
  7324 ;;		line 96 in file "flexlcd.h"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  y               1    wreg     unsigned char 
  7327 ;;  x               1    3[COMRAM] unsigned char 
  7328 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  7329 ;;		 -> str(4), 
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;  y               1    6[COMRAM] unsigned char 
  7332 ;;  data            1    7[COMRAM] unsigned char 
  7333 ;; Return value:  Size  Location     Type
  7334 ;;                  1    wreg      void 
  7335 ;; Registers used:
  7336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7337 ;; Tracked objects:
  7338 ;;		On entry : 0/0
  7339 ;;		On exit  : 0/0
  7340 ;;		Unchanged: 0/0
  7341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7342 ;;      Params:         3       0       0       0       0       0       0
  7343 ;;      Locals:         2       0       0       0       0       0       0
  7344 ;;      Temps:          0       0       0       0       0       0       0
  7345 ;;      Totals:         5       0       0       0       0       0       0
  7346 ;;Total ram usage:        5 bytes
  7347 ;; Hardware stack levels used: 1
  7348 ;; Hardware stack levels required when called: 1
  7349 ;; This function calls:
  7350 ;;		_Lcd_Chr_CP
  7351 ;;		_Lcd_Cmd
  7352 ;; This function is called by:
  7353 ;;		_main
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text25
  7358  0034F8                     __ptext25:
  7359                           	callstack 0
  7360  0034F8                     _Lcd_Out:
  7361                           	callstack 29
  7362                           
  7363                           ;incstack = 0
  7364                           ;Lcd_Out@y stored from wreg
  7365  0034F8  6E07               	movwf	Lcd_Out@y^0,c
  7366  0034FA                     
  7367                           ;flexlcd.h: 98: unsigned char data;;flexlcd.h: 99: switch (y)
  7368  0034FA  EF93  F01A         	goto	l3410
  7369  0034FE                     l3400:
  7370  0034FE  5004               	movf	Lcd_Out@x^0,w,c
  7371  003500  0F80               	addlw	128
  7372  003502  6E08               	movwf	Lcd_Out@data^0,c
  7373  003504  EFA6  F01A         	goto	l3412
  7374  003508                     l3402:
  7375  003508  5004               	movf	Lcd_Out@x^0,w,c
  7376  00350A  0FC0               	addlw	192
  7377  00350C  6E08               	movwf	Lcd_Out@data^0,c
  7378  00350E  EFA6  F01A         	goto	l3412
  7379  003512                     l3404:
  7380  003512  5004               	movf	Lcd_Out@x^0,w,c
  7381  003514  0F94               	addlw	148
  7382  003516  6E08               	movwf	Lcd_Out@data^0,c
  7383  003518  EFA6  F01A         	goto	l3412
  7384  00351C                     l3406:
  7385  00351C  5004               	movf	Lcd_Out@x^0,w,c
  7386  00351E  0FD4               	addlw	212
  7387  003520  6E08               	movwf	Lcd_Out@data^0,c
  7388  003522  EFA6  F01A         	goto	l3412
  7389  003526                     l3410:
  7390  003526  5007               	movf	Lcd_Out@y^0,w,c
  7391                           
  7392                           ; Switch size 1, requested type "simple"
  7393                           ; Number of cases is 4, Range of values is 1 to 4
  7394                           ; switch strategies available:
  7395                           ; Name         Instructions Cycles
  7396                           ; simple_byte           13     7 (average)
  7397                           ;	Chosen strategy is simple_byte
  7398  003528  0A01               	xorlw	1	; case 1
  7399  00352A  B4D8               	btfsc	status,2,c
  7400  00352C  EF7F  F01A         	goto	l3400
  7401  003530  0A03               	xorlw	3	; case 2
  7402  003532  B4D8               	btfsc	status,2,c
  7403  003534  EF84  F01A         	goto	l3402
  7404  003538  0A01               	xorlw	1	; case 3
  7405  00353A  B4D8               	btfsc	status,2,c
  7406  00353C  EF89  F01A         	goto	l3404
  7407  003540  0A07               	xorlw	7	; case 4
  7408  003542  B4D8               	btfsc	status,2,c
  7409  003544  EF8E  F01A         	goto	l3406
  7410  003548  EFA6  F01A         	goto	l3412
  7411  00354C                     l3412:
  7412                           
  7413                           ;flexlcd.h: 107: Lcd_Cmd(data);
  7414  00354C  5008               	movf	Lcd_Out@data^0,w,c
  7415  00354E  ECF8  F016         	call	_Lcd_Cmd
  7416                           
  7417                           ;flexlcd.h: 108: while(*buffer)
  7418  003552  EFB4  F01A         	goto	l3418
  7419  003556                     l3414:
  7420                           
  7421                           ;flexlcd.h: 109: {;flexlcd.h: 110: Lcd_Chr_CP(*buffer);
  7422  003556  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  7423  00355A  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  7424  00355E  50DF               	movf	indf2,w,c
  7425  003560  ECC6  F015         	call	_Lcd_Chr_CP
  7426  003564                     
  7427                           ;flexlcd.h: 111: buffer++;
  7428  003564  4A05               	infsnz	Lcd_Out@buffer^0,f,c
  7429  003566  2A06               	incf	(Lcd_Out@buffer+1)^0,f,c
  7430  003568                     l3418:
  7431  003568  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  7432  00356C  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  7433  003570  50DF               	movf	indf2,w,c
  7434  003572  A4D8               	btfss	status,2,c
  7435  003574  EFBE  F01A         	goto	u3551
  7436  003578  EFC0  F01A         	goto	u3550
  7437  00357C                     u3551:
  7438  00357C  EFAB  F01A         	goto	l3414
  7439  003580                     u3550:
  7440  003580  0012               	return		;funcret
  7441  003582                     __end_of_Lcd_Out:
  7442                           	callstack 0
  7443                           
  7444 ;; *************** function _Lcd_Chr_CP *****************
  7445 ;; Defined at:
  7446 ;;		line 138 in file "flexlcd.h"
  7447 ;; Parameters:    Size  Location     Type
  7448 ;;  data            1    wreg     unsigned char 
  7449 ;; Auto vars:     Size  Location     Type
  7450 ;;  data            1    2[COMRAM] unsigned char 
  7451 ;; Return value:  Size  Location     Type
  7452 ;;                  1    wreg      void 
  7453 ;; Registers used:
  7454 ;;		wreg, status,2, status,0
  7455 ;; Tracked objects:
  7456 ;;		On entry : 0/0
  7457 ;;		On exit  : 0/0
  7458 ;;		Unchanged: 0/0
  7459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7460 ;;      Params:         0       0       0       0       0       0       0
  7461 ;;      Locals:         1       0       0       0       0       0       0
  7462 ;;      Temps:          2       0       0       0       0       0       0
  7463 ;;      Totals:         3       0       0       0       0       0       0
  7464 ;;Total ram usage:        3 bytes
  7465 ;; Hardware stack levels used: 1
  7466 ;; This function calls:
  7467 ;;		Nothing
  7468 ;; This function is called by:
  7469 ;;		_Lcd_Out
  7470 ;;		_Lcd_Out2
  7471 ;; This function uses a non-reentrant model
  7472 ;;
  7473                           
  7474                           	psect	text26
  7475  002B8C                     __ptext26:
  7476                           	callstack 0
  7477  002B8C                     _Lcd_Chr_CP:
  7478                           	callstack 29
  7479                           
  7480                           ;incstack = 0
  7481                           ;Lcd_Chr_CP@data stored from wreg
  7482  002B8C  6E03               	movwf	Lcd_Chr_CP@data^0,c
  7483  002B8E                     
  7484                           ;flexlcd.h: 139: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
  7485  002B8E  9284               	bcf	132,1,c	;volatile
  7486  002B90  8484               	bsf	132,2,c	;volatile
  7487  002B92                     
  7488                           ;flexlcd.h: 140: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  7489  002B92  6A01               	clrf	??_Lcd_Chr_CP^0,c
  7490  002B94  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
  7491  002B96  D001               	bra	u805
  7492  002B98  2A01               	incf	??_Lcd_Chr_CP^0,f,c
  7493  002B9A                     u805:
  7494  002B9A  0E01               	movlw	1
  7495  002B9C  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7496  002B9E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7497  002BA0  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7498  002BA2  5083               	movf	131,w,c	;volatile
  7499  002BA4  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7500  002BA6  0B7F               	andlw	-129
  7501  002BA8  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7502  002BAA  6E83               	movwf	131,c	;volatile
  7503  002BAC  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7504  002BB0  0E06               	movlw	6
  7505  002BB2  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7506  002BB4                     u815:
  7507  002BB4  90D8               	bcf	status,0,c
  7508  002BB6  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7509  002BB8  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7510  002BBA  EFDA  F015         	goto	u815
  7511  002BBE  0E01               	movlw	1
  7512  002BC0  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7513  002BC2  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7514  002BC4  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7515  002BC6  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7516  002BC8  5083               	movf	131,w,c	;volatile
  7517  002BCA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7518  002BCC  0BBF               	andlw	-65
  7519  002BCE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7520  002BD0  6E83               	movwf	131,c	;volatile
  7521                           
  7522                           ;flexlcd.h: 141: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  7523  002BD2  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7524  002BD6  0E05               	movlw	5
  7525  002BD8  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7526  002BDA                     u825:
  7527  002BDA  90D8               	bcf	status,0,c
  7528  002BDC  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7529  002BDE  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7530  002BE0  EFED  F015         	goto	u825
  7531  002BE4  0E01               	movlw	1
  7532  002BE6  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7533  002BE8  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7534  002BEA  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7535  002BEC  5083               	movf	131,w,c	;volatile
  7536  002BEE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7537  002BF0  0BDF               	andlw	-33
  7538  002BF2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7539  002BF4  6E83               	movwf	131,c	;volatile
  7540  002BF6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7541  002BFA  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7542  002BFC  0E0F               	movlw	15
  7543  002BFE  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7544  002C00  0E01               	movlw	1
  7545  002C02  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7546  002C04  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7547  002C06  5083               	movf	131,w,c	;volatile
  7548  002C08  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7549  002C0A  0BEF               	andlw	-17
  7550  002C0C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7551  002C0E  6E83               	movwf	131,c	;volatile
  7552  002C10                     
  7553                           ;flexlcd.h: 142: _delay(10);
  7554  002C10  0E03               	movlw	3
  7555  002C12                     u4357:
  7556  002C12  2EE8               	decfsz	wreg,f,c
  7557  002C14  D7FE               	bra	u4357
  7558  002C16  F000               	nop	
  7559  002C18                     
  7560                           ;flexlcd.h: 143: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  7561  002C18  8284               	bsf	132,1,c	;volatile
  7562  002C1A  0E03               	movlw	3
  7563  002C1C                     u4367:
  7564  002C1C  2EE8               	decfsz	wreg,f,c
  7565  002C1E  D7FE               	bra	u4367
  7566  002C20  F000               	nop	
  7567  002C22  9284               	bcf	132,1,c	;volatile
  7568                           
  7569                           ;flexlcd.h: 144: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  7570  002C24  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7571  002C28  90D8               	bcf	status,0,c
  7572  002C2A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7573  002C2C  90D8               	bcf	status,0,c
  7574  002C2E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7575  002C30  90D8               	bcf	status,0,c
  7576  002C32  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7577  002C34  0E01               	movlw	1
  7578  002C36  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7579  002C38  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7580  002C3A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7581  002C3C  5083               	movf	131,w,c	;volatile
  7582  002C3E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7583  002C40  0B7F               	andlw	-129
  7584  002C42  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7585  002C44  6E83               	movwf	131,c	;volatile
  7586  002C46  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7587  002C4A  90D8               	bcf	status,0,c
  7588  002C4C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7589  002C4E  90D8               	bcf	status,0,c
  7590  002C50  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7591  002C52  0E01               	movlw	1
  7592  002C54  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7593  002C56  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7594  002C58  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7595  002C5A  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7596  002C5C  5083               	movf	131,w,c	;volatile
  7597  002C5E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7598  002C60  0BBF               	andlw	-65
  7599  002C62  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7600  002C64  6E83               	movwf	131,c	;volatile
  7601                           
  7602                           ;flexlcd.h: 145: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  7603  002C66  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7604  002C6A  90D8               	bcf	status,0,c
  7605  002C6C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7606  002C6E  0E01               	movlw	1
  7607  002C70  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7608  002C72  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7609  002C74  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7610  002C76  5083               	movf	131,w,c	;volatile
  7611  002C78  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7612  002C7A  0BDF               	andlw	-33
  7613  002C7C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7614  002C7E  6E83               	movwf	131,c	;volatile
  7615  002C80  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7616  002C84  0E01               	movlw	1
  7617  002C86  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7618  002C88  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7619  002C8A  5083               	movf	131,w,c	;volatile
  7620  002C8C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7621  002C8E  0BEF               	andlw	-17
  7622  002C90  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7623  002C92  6E83               	movwf	131,c	;volatile
  7624  002C94                     
  7625                           ;flexlcd.h: 146: _delay(10);
  7626  002C94  0E03               	movlw	3
  7627  002C96                     u4377:
  7628  002C96  2EE8               	decfsz	wreg,f,c
  7629  002C98  D7FE               	bra	u4377
  7630  002C9A  F000               	nop	
  7631  002C9C                     
  7632                           ;flexlcd.h: 147: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  7633  002C9C  8284               	bsf	132,1,c	;volatile
  7634  002C9E  0E03               	movlw	3
  7635  002CA0                     u4387:
  7636  002CA0  2EE8               	decfsz	wreg,f,c
  7637  002CA2  D7FE               	bra	u4387
  7638  002CA4  F000               	nop	
  7639  002CA6  9284               	bcf	132,1,c	;volatile
  7640  002CA8                     
  7641                           ;flexlcd.h: 148: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  7642  002CA8  0E03               	movlw	3
  7643  002CAA                     u4397:
  7644  002CAA  2EE8               	decfsz	wreg,f,c
  7645  002CAC  D7FE               	bra	u4397
  7646  002CAE  F000               	nop	
  7647  002CB0  0E0F               	movlw	15
  7648  002CB2  6E01               	movwf	??_Lcd_Chr_CP^0,c
  7649  002CB4  0E48               	movlw	72
  7650  002CB6                     u4407:
  7651  002CB6  2EE8               	decfsz	wreg,f,c
  7652  002CB8  D7FE               	bra	u4407
  7653  002CBA  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  7654  002CBC  D7FC               	bra	u4407
  7655  002CBE  0012               	return		;funcret
  7656  002CC0                     __end_of_Lcd_Chr_CP:
  7657                           	callstack 0
  7658                           
  7659 ;; *************** function _Lcd_Init *****************
  7660 ;; Defined at:
  7661 ;;		line 54 in file "flexlcd.h"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;		None
  7664 ;; Auto vars:     Size  Location     Type
  7665 ;;  data            1    4[COMRAM] unsigned char 
  7666 ;; Return value:  Size  Location     Type
  7667 ;;                  1    wreg      void 
  7668 ;; Registers used:
  7669 ;;		wreg, status,2, status,0, cstack
  7670 ;; Tracked objects:
  7671 ;;		On entry : 0/0
  7672 ;;		On exit  : 0/0
  7673 ;;		Unchanged: 0/0
  7674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7675 ;;      Params:         0       0       0       0       0       0       0
  7676 ;;      Locals:         1       0       0       0       0       0       0
  7677 ;;      Temps:          1       0       0       0       0       0       0
  7678 ;;      Totals:         2       0       0       0       0       0       0
  7679 ;;Total ram usage:        2 bytes
  7680 ;; Hardware stack levels used: 1
  7681 ;; Hardware stack levels required when called: 1
  7682 ;; This function calls:
  7683 ;;		_Lcd_Cmd
  7684 ;; This function is called by:
  7685 ;;		_main
  7686 ;; This function uses a non-reentrant model
  7687 ;;
  7688                           
  7689                           	psect	text27
  7690  002F1C                     __ptext27:
  7691                           	callstack 0
  7692  002F1C                     _Lcd_Init:
  7693                           	callstack 29
  7694  002F1C                     
  7695                           ;flexlcd.h: 55: unsigned char data;;flexlcd.h: 56: TRISDbits.TRISD7 = 0;
  7696  002F1C  9E95               	bcf	149,7,c	;volatile
  7697                           
  7698                           ;flexlcd.h: 57: TRISDbits.TRISD6 = 0;
  7699  002F1E  9C95               	bcf	149,6,c	;volatile
  7700                           
  7701                           ;flexlcd.h: 58: TRISDbits.TRISD5 = 0;
  7702  002F20  9A95               	bcf	149,5,c	;volatile
  7703                           
  7704                           ;flexlcd.h: 59: TRISDbits.TRISD4 = 0;
  7705  002F22  9895               	bcf	149,4,c	;volatile
  7706                           
  7707                           ;flexlcd.h: 60: TRISEbits.TRISE2 = 0;
  7708  002F24  9496               	bcf	150,2,c	;volatile
  7709                           
  7710                           ;flexlcd.h: 61: TRISEbits.TRISE1 = 0;
  7711  002F26  9296               	bcf	150,1,c	;volatile
  7712                           
  7713                           ;flexlcd.h: 62: PORTDbits.RD7 = 0;
  7714  002F28  9E83               	bcf	131,7,c	;volatile
  7715                           
  7716                           ;flexlcd.h: 63: PORTDbits.RD6 = 0;
  7717  002F2A  9C83               	bcf	131,6,c	;volatile
  7718                           
  7719                           ;flexlcd.h: 64: PORTDbits.RD5 = 0;
  7720  002F2C  9A83               	bcf	131,5,c	;volatile
  7721                           
  7722                           ;flexlcd.h: 65: PORTDbits.RD4 = 0;
  7723  002F2E  9883               	bcf	131,4,c	;volatile
  7724                           
  7725                           ;flexlcd.h: 66: PORTEbits.RE1 = 0;
  7726  002F30  9284               	bcf	132,1,c	;volatile
  7727                           
  7728                           ;flexlcd.h: 67: PORTEbits.RE2 = 0;
  7729  002F32  9484               	bcf	132,2,c	;volatile
  7730  002F34                     
  7731                           ;flexlcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7732  002F34  0E0F               	movlw	15
  7733  002F36  6E04               	movwf	??_Lcd_Init^0,c
  7734  002F38  0E48               	movlw	72
  7735  002F3A                     u4417:
  7736  002F3A  2EE8               	decfsz	wreg,f,c
  7737  002F3C  D7FE               	bra	u4417
  7738  002F3E  2E04               	decfsz	??_Lcd_Init^0,f,c
  7739  002F40  D7FC               	bra	u4417
  7740                           
  7741                           ;flexlcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7742  002F42  0E0F               	movlw	15
  7743  002F44  6E04               	movwf	??_Lcd_Init^0,c
  7744  002F46  0E48               	movlw	72
  7745  002F48                     u4427:
  7746  002F48  2EE8               	decfsz	wreg,f,c
  7747  002F4A  D7FE               	bra	u4427
  7748  002F4C  2E04               	decfsz	??_Lcd_Init^0,f,c
  7749  002F4E  D7FC               	bra	u4427
  7750                           
  7751                           ;flexlcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7752  002F50  0E0F               	movlw	15
  7753  002F52  6E04               	movwf	??_Lcd_Init^0,c
  7754  002F54  0E48               	movlw	72
  7755  002F56                     u4437:
  7756  002F56  2EE8               	decfsz	wreg,f,c
  7757  002F58  D7FE               	bra	u4437
  7758  002F5A  2E04               	decfsz	??_Lcd_Init^0,f,c
  7759  002F5C  D7FC               	bra	u4437
  7760                           
  7761                           ;flexlcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7762  002F5E  0E0F               	movlw	15
  7763  002F60  6E04               	movwf	??_Lcd_Init^0,c
  7764  002F62  0E48               	movlw	72
  7765  002F64                     u4447:
  7766  002F64  2EE8               	decfsz	wreg,f,c
  7767  002F66  D7FE               	bra	u4447
  7768  002F68  2E04               	decfsz	??_Lcd_Init^0,f,c
  7769  002F6A  D7FC               	bra	u4447
  7770                           
  7771                           ;flexlcd.h: 72: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7772  002F6C  0E0F               	movlw	15
  7773  002F6E  6E04               	movwf	??_Lcd_Init^0,c
  7774  002F70  0E48               	movlw	72
  7775  002F72                     u4457:
  7776  002F72  2EE8               	decfsz	wreg,f,c
  7777  002F74  D7FE               	bra	u4457
  7778  002F76  2E04               	decfsz	??_Lcd_Init^0,f,c
  7779  002F78  D7FC               	bra	u4457
  7780                           
  7781                           ;flexlcd.h: 73: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7782  002F7A  0E0F               	movlw	15
  7783  002F7C  6E04               	movwf	??_Lcd_Init^0,c
  7784  002F7E  0E48               	movlw	72
  7785  002F80                     u4467:
  7786  002F80  2EE8               	decfsz	wreg,f,c
  7787  002F82  D7FE               	bra	u4467
  7788  002F84  2E04               	decfsz	??_Lcd_Init^0,f,c
  7789  002F86  D7FC               	bra	u4467
  7790  002F88                     
  7791                           ;flexlcd.h: 74: for(data = 1; data < 4; data ++)
  7792  002F88  0E01               	movlw	1
  7793  002F8A  6E05               	movwf	Lcd_Init@data^0,c
  7794  002F8C                     l53:
  7795                           
  7796                           ;flexlcd.h: 75: {;flexlcd.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  7797  002F8C  9E83               	bcf	131,7,c	;volatile
  7798  002F8E  9C83               	bcf	131,6,c	;volatile
  7799  002F90  8A83               	bsf	131,5,c	;volatile
  7800  002F92  8883               	bsf	131,4,c	;volatile
  7801  002F94  9284               	bcf	132,1,c	;volatile
  7802                           
  7803                           ;flexlcd.h: 77: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
  7804  002F96  9484               	bcf	132,2,c	;volatile
  7805  002F98  9E83               	bcf	131,7,c	;volatile
  7806  002F9A  9C83               	bcf	131,6,c	;volatile
  7807  002F9C  8A83               	bsf	131,5,c	;volatile
  7808  002F9E  8883               	bsf	131,4,c	;volatile
  7809                           
  7810                           ;flexlcd.h: 78: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  7811  002FA0  8284               	bsf	132,1,c	;volatile
  7812  002FA2  9484               	bcf	132,2,c	;volatile
  7813  002FA4                     
  7814                           ;flexlcd.h: 79: _delay((unsigned long)((5)*(8000000/4000000.0)));
  7815  002FA4  0E03               	movlw	3
  7816  002FA6                     u4477:
  7817  002FA6  2EE8               	decfsz	wreg,f,c
  7818  002FA8  D7FE               	bra	u4477
  7819  002FAA  F000               	nop	
  7820  002FAC                     
  7821                           ;flexlcd.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           1; PORTEbits.RE1 = 0;
  7822  002FAC  9E83               	bcf	131,7,c	;volatile
  7823  002FAE  9C83               	bcf	131,6,c	;volatile
  7824  002FB0  8A83               	bsf	131,5,c	;volatile
  7825  002FB2  8883               	bsf	131,4,c	;volatile
  7826  002FB4  9284               	bcf	132,1,c	;volatile
  7827  002FB6                     
  7828                           ;flexlcd.h: 81: PORTEbits.RE2 = 0;
  7829  002FB6  9484               	bcf	132,2,c	;volatile
  7830                           
  7831                           ;flexlcd.h: 82: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7832  002FB8  0E0F               	movlw	15
  7833  002FBA  6E04               	movwf	??_Lcd_Init^0,c
  7834  002FBC  0E48               	movlw	72
  7835  002FBE                     u4487:
  7836  002FBE  2EE8               	decfsz	wreg,f,c
  7837  002FC0  D7FE               	bra	u4487
  7838  002FC2  2E04               	decfsz	??_Lcd_Init^0,f,c
  7839  002FC4  D7FC               	bra	u4487
  7840  002FC6  2A05               	incf	Lcd_Init@data^0,f,c
  7841  002FC8  0E03               	movlw	3
  7842  002FCA  6405               	cpfsgt	Lcd_Init@data^0,c
  7843  002FCC  EFEA  F017         	goto	u1401
  7844  002FD0  EFEC  F017         	goto	u1400
  7845  002FD4                     u1401:
  7846  002FD4  EFC6  F017         	goto	l53
  7847  002FD8                     u1400:
  7848  002FD8                     
  7849                           ;flexlcd.h: 83: };flexlcd.h: 84: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  7850  002FD8  9E83               	bcf	131,7,c	;volatile
  7851  002FDA  9C83               	bcf	131,6,c	;volatile
  7852  002FDC  8A83               	bsf	131,5,c	;volatile
  7853  002FDE  9883               	bcf	131,4,c	;volatile
  7854  002FE0  9284               	bcf	132,1,c	;volatile
  7855  002FE2  9484               	bcf	132,2,c	;volatile
  7856                           
  7857                           ;flexlcd.h: 85: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  7858  002FE4  9E83               	bcf	131,7,c	;volatile
  7859  002FE6  9C83               	bcf	131,6,c	;volatile
  7860  002FE8  8A83               	bsf	131,5,c	;volatile
  7861  002FEA  9883               	bcf	131,4,c	;volatile
  7862  002FEC  8284               	bsf	132,1,c	;volatile
  7863  002FEE  9484               	bcf	132,2,c	;volatile
  7864  002FF0                     
  7865                           ;flexlcd.h: 86: _delay((unsigned long)((5)*(8000000/4000000.0)));
  7866  002FF0  0E03               	movlw	3
  7867  002FF2                     u4497:
  7868  002FF2  2EE8               	decfsz	wreg,f,c
  7869  002FF4  D7FE               	bra	u4497
  7870  002FF6  F000               	nop	
  7871  002FF8                     
  7872                           ;flexlcd.h: 87: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  7873  002FF8  9E83               	bcf	131,7,c	;volatile
  7874  002FFA  9C83               	bcf	131,6,c	;volatile
  7875  002FFC  8A83               	bsf	131,5,c	;volatile
  7876  002FFE  9883               	bcf	131,4,c	;volatile
  7877  003000  9284               	bcf	132,1,c	;volatile
  7878  003002  9484               	bcf	132,2,c	;volatile
  7879                           
  7880                           ;flexlcd.h: 88: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7881  003004  0E0F               	movlw	15
  7882  003006  6E04               	movwf	??_Lcd_Init^0,c
  7883  003008  0E48               	movlw	72
  7884  00300A                     u4507:
  7885  00300A  2EE8               	decfsz	wreg,f,c
  7886  00300C  D7FE               	bra	u4507
  7887  00300E  2E04               	decfsz	??_Lcd_Init^0,f,c
  7888  003010  D7FC               	bra	u4507
  7889  003012  0E28               	movlw	40
  7890  003014  ECF8  F016         	call	_Lcd_Cmd
  7891  003018  0E10               	movlw	16
  7892  00301A  ECF8  F016         	call	_Lcd_Cmd
  7893  00301E  0E01               	movlw	1
  7894  003020  ECF8  F016         	call	_Lcd_Cmd
  7895  003024  0E0F               	movlw	15
  7896  003026  ECF8  F016         	call	_Lcd_Cmd
  7897  00302A  0012               	return		;funcret
  7898  00302C                     __end_of_Lcd_Init:
  7899                           	callstack 0
  7900                           
  7901 ;; *************** function _Lcd_Cmd *****************
  7902 ;; Defined at:
  7903 ;;		line 152 in file "flexlcd.h"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;  data            1    wreg     unsigned char 
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;  data            1    2[COMRAM] unsigned char 
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  1    wreg      void 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, status,0
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7917 ;;      Params:         0       0       0       0       0       0       0
  7918 ;;      Locals:         1       0       0       0       0       0       0
  7919 ;;      Temps:          2       0       0       0       0       0       0
  7920 ;;      Totals:         3       0       0       0       0       0       0
  7921 ;;Total ram usage:        3 bytes
  7922 ;; Hardware stack levels used: 1
  7923 ;; This function calls:
  7924 ;;		Nothing
  7925 ;; This function is called by:
  7926 ;;		_Lcd_Init
  7927 ;;		_Lcd_Out
  7928 ;;		_main
  7929 ;;		_Lcd_Out2
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text28
  7934  002DF0                     __ptext28:
  7935                           	callstack 0
  7936  002DF0                     _Lcd_Cmd:
  7937                           	callstack 29
  7938                           
  7939                           ;incstack = 0
  7940                           ;Lcd_Cmd@data stored from wreg
  7941  002DF0  6E03               	movwf	Lcd_Cmd@data^0,c
  7942  002DF2                     
  7943                           ;flexlcd.h: 153: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  7944  002DF2  9284               	bcf	132,1,c	;volatile
  7945  002DF4  9484               	bcf	132,2,c	;volatile
  7946  002DF6                     
  7947                           ;flexlcd.h: 154: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  7948  002DF6  6A01               	clrf	??_Lcd_Cmd^0,c
  7949  002DF8  AE03               	btfss	Lcd_Cmd@data^0,7,c
  7950  002DFA  D001               	bra	u775
  7951  002DFC  2A01               	incf	??_Lcd_Cmd^0,f,c
  7952  002DFE                     u775:
  7953  002DFE  0E01               	movlw	1
  7954  002E00  1601               	andwf	??_Lcd_Cmd^0,f,c
  7955  002E02  3201               	rrcf	??_Lcd_Cmd^0,f,c
  7956  002E04  3201               	rrcf	??_Lcd_Cmd^0,f,c
  7957  002E06  5083               	movf	131,w,c	;volatile
  7958  002E08  1801               	xorwf	??_Lcd_Cmd^0,w,c
  7959  002E0A  0B7F               	andlw	-129
  7960  002E0C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  7961  002E0E  6E83               	movwf	131,c	;volatile
  7962  002E10  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7963  002E14  0E06               	movlw	6
  7964  002E16  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  7965  002E18                     u785:
  7966  002E18  90D8               	bcf	status,0,c
  7967  002E1A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  7968  002E1C  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7969  002E1E  EF0C  F017         	goto	u785
  7970  002E22  0E01               	movlw	1
  7971  002E24  1601               	andwf	??_Lcd_Cmd^0,f,c
  7972  002E26  3A01               	swapf	??_Lcd_Cmd^0,f,c
  7973  002E28  4601               	rlncf	??_Lcd_Cmd^0,f,c
  7974  002E2A  4601               	rlncf	??_Lcd_Cmd^0,f,c
  7975  002E2C  5083               	movf	131,w,c	;volatile
  7976  002E2E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  7977  002E30  0BBF               	andlw	-65
  7978  002E32  1801               	xorwf	??_Lcd_Cmd^0,w,c
  7979  002E34  6E83               	movwf	131,c	;volatile
  7980                           
  7981                           ;flexlcd.h: 155: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  7982  002E36  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  7983  002E3A  0E05               	movlw	5
  7984  002E3C  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  7985  002E3E                     u795:
  7986  002E3E  90D8               	bcf	status,0,c
  7987  002E40  3201               	rrcf	??_Lcd_Cmd^0,f,c
  7988  002E42  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  7989  002E44  EF1F  F017         	goto	u795
  7990  002E48  0E01               	movlw	1
  7991  002E4A  1601               	andwf	??_Lcd_Cmd^0,f,c
  7992  002E4C  3A01               	swapf	??_Lcd_Cmd^0,f,c
  7993  002E4E  4601               	rlncf	??_Lcd_Cmd^0,f,c
  7994  002E50  5083               	movf	131,w,c	;volatile
  7995  002E52  1801               	xorwf	??_Lcd_Cmd^0,w,c
  7996  002E54  0BDF               	andlw	-33
  7997  002E56  1801               	xorwf	??_Lcd_Cmd^0,w,c
  7998  002E58  6E83               	movwf	131,c	;volatile
  7999  002E5A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8000  002E5E  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8001  002E60  0E0F               	movlw	15
  8002  002E62  1601               	andwf	??_Lcd_Cmd^0,f,c
  8003  002E64  0E01               	movlw	1
  8004  002E66  1601               	andwf	??_Lcd_Cmd^0,f,c
  8005  002E68  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8006  002E6A  5083               	movf	131,w,c	;volatile
  8007  002E6C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8008  002E6E  0BEF               	andlw	-17
  8009  002E70  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8010  002E72  6E83               	movwf	131,c	;volatile
  8011  002E74                     
  8012                           ;flexlcd.h: 156: _delay(10);
  8013  002E74  0E03               	movlw	3
  8014  002E76                     u4517:
  8015  002E76  2EE8               	decfsz	wreg,f,c
  8016  002E78  D7FE               	bra	u4517
  8017  002E7A  F000               	nop	
  8018  002E7C                     
  8019                           ;flexlcd.h: 157: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  8020  002E7C  8284               	bsf	132,1,c	;volatile
  8021  002E7E  0E03               	movlw	3
  8022  002E80                     u4527:
  8023  002E80  2EE8               	decfsz	wreg,f,c
  8024  002E82  D7FE               	bra	u4527
  8025  002E84  F000               	nop	
  8026  002E86  9284               	bcf	132,1,c	;volatile
  8027                           
  8028                           ;flexlcd.h: 158: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  8029  002E88  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8030  002E8C  90D8               	bcf	status,0,c
  8031  002E8E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8032  002E90  90D8               	bcf	status,0,c
  8033  002E92  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8034  002E94  90D8               	bcf	status,0,c
  8035  002E96  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8036  002E98  0E01               	movlw	1
  8037  002E9A  1601               	andwf	??_Lcd_Cmd^0,f,c
  8038  002E9C  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8039  002E9E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8040  002EA0  5083               	movf	131,w,c	;volatile
  8041  002EA2  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8042  002EA4  0B7F               	andlw	-129
  8043  002EA6  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8044  002EA8  6E83               	movwf	131,c	;volatile
  8045  002EAA  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8046  002EAE  90D8               	bcf	status,0,c
  8047  002EB0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8048  002EB2  90D8               	bcf	status,0,c
  8049  002EB4  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8050  002EB6  0E01               	movlw	1
  8051  002EB8  1601               	andwf	??_Lcd_Cmd^0,f,c
  8052  002EBA  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8053  002EBC  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8054  002EBE  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8055  002EC0  5083               	movf	131,w,c	;volatile
  8056  002EC2  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8057  002EC4  0BBF               	andlw	-65
  8058  002EC6  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8059  002EC8  6E83               	movwf	131,c	;volatile
  8060                           
  8061                           ;flexlcd.h: 159: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  8062  002ECA  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8063  002ECE  90D8               	bcf	status,0,c
  8064  002ED0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8065  002ED2  0E01               	movlw	1
  8066  002ED4  1601               	andwf	??_Lcd_Cmd^0,f,c
  8067  002ED6  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8068  002ED8  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8069  002EDA  5083               	movf	131,w,c	;volatile
  8070  002EDC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8071  002EDE  0BDF               	andlw	-33
  8072  002EE0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8073  002EE2  6E83               	movwf	131,c	;volatile
  8074  002EE4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8075  002EE8  0E01               	movlw	1
  8076  002EEA  1601               	andwf	??_Lcd_Cmd^0,f,c
  8077  002EEC  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8078  002EEE  5083               	movf	131,w,c	;volatile
  8079  002EF0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8080  002EF2  0BEF               	andlw	-17
  8081  002EF4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8082  002EF6  6E83               	movwf	131,c	;volatile
  8083  002EF8                     
  8084                           ;flexlcd.h: 160: _delay(10);
  8085  002EF8  0E03               	movlw	3
  8086  002EFA                     u4537:
  8087  002EFA  2EE8               	decfsz	wreg,f,c
  8088  002EFC  D7FE               	bra	u4537
  8089  002EFE  F000               	nop	
  8090  002F00                     
  8091                           ;flexlcd.h: 161: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  8092  002F00  8284               	bsf	132,1,c	;volatile
  8093  002F02  0E03               	movlw	3
  8094  002F04                     u4547:
  8095  002F04  2EE8               	decfsz	wreg,f,c
  8096  002F06  D7FE               	bra	u4547
  8097  002F08  F000               	nop	
  8098  002F0A  9284               	bcf	132,1,c	;volatile
  8099  002F0C                     
  8100                           ;flexlcd.h: 162: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  8101  002F0C  0E0F               	movlw	15
  8102  002F0E  6E01               	movwf	??_Lcd_Cmd^0,c
  8103  002F10  0E48               	movlw	72
  8104  002F12                     u4557:
  8105  002F12  2EE8               	decfsz	wreg,f,c
  8106  002F14  D7FE               	bra	u4557
  8107  002F16  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  8108  002F18  D7FC               	bra	u4557
  8109  002F1A  0012               	return		;funcret
  8110  002F1C                     __end_of_Lcd_Cmd:
  8111                           	callstack 0
  8112                           
  8113                           	psect	rparam
  8114  0000                     
  8115                           	psect	idloc
  8116                           
  8117                           ;Config register IDLOC0 @ 0x200000
  8118                           ;	unspecified, using default values
  8119  200000                     	org	2097152
  8120  200000  FF                 	db	255
  8121                           
  8122                           ;Config register IDLOC1 @ 0x200001
  8123                           ;	unspecified, using default values
  8124  200001                     	org	2097153
  8125  200001  FF                 	db	255
  8126                           
  8127                           ;Config register IDLOC2 @ 0x200002
  8128                           ;	unspecified, using default values
  8129  200002                     	org	2097154
  8130  200002  FF                 	db	255
  8131                           
  8132                           ;Config register IDLOC3 @ 0x200003
  8133                           ;	unspecified, using default values
  8134  200003                     	org	2097155
  8135  200003  FF                 	db	255
  8136                           
  8137                           ;Config register IDLOC4 @ 0x200004
  8138                           ;	unspecified, using default values
  8139  200004                     	org	2097156
  8140  200004  FF                 	db	255
  8141                           
  8142                           ;Config register IDLOC5 @ 0x200005
  8143                           ;	unspecified, using default values
  8144  200005                     	org	2097157
  8145  200005  FF                 	db	255
  8146                           
  8147                           ;Config register IDLOC6 @ 0x200006
  8148                           ;	unspecified, using default values
  8149  200006                     	org	2097158
  8150  200006  FF                 	db	255
  8151                           
  8152                           ;Config register IDLOC7 @ 0x200007
  8153                           ;	unspecified, using default values
  8154  200007                     	org	2097159
  8155  200007  FF                 	db	255
  8156                           
  8157                           	psect	config
  8158                           
  8159                           ; Padding undefined space
  8160  300000                     	org	3145728
  8161  300000  FF                 	db	255
  8162                           
  8163                           ;Config register CONFIG1H @ 0x300001
  8164                           ;	Oscillator Selection bits
  8165                           ;	OSC = HS, HS oscillator
  8166                           ;	Fail-Safe Clock Monitor Enable bit
  8167                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8168                           ;	Internal/External Oscillator Switchover bit
  8169                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8170  300001                     	org	3145729
  8171  300001  02                 	db	2
  8172                           
  8173                           ;Config register CONFIG2L @ 0x300002
  8174                           ;	Power-up Timer Enable bit
  8175                           ;	PWRT = OFF, PWRT disabled
  8176                           ;	Brown-out Reset Enable bits
  8177                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8178                           ;	Brown Out Reset Voltage bits
  8179                           ;	BORV = 3, Minimum setting
  8180  300002                     	org	3145730
  8181  300002  1F                 	db	31
  8182                           
  8183                           ;Config register CONFIG2H @ 0x300003
  8184                           ;	Watchdog Timer Enable bit
  8185                           ;	WDT = ON, WDT enabled
  8186                           ;	Watchdog Timer Postscale Select bits
  8187                           ;	WDTPS = 32768, 1:32768
  8188  300003                     	org	3145731
  8189  300003  1F                 	db	31
  8190                           
  8191                           ; Padding undefined space
  8192  300004                     	org	3145732
  8193  300004  FF                 	db	255
  8194                           
  8195                           ;Config register CONFIG3H @ 0x300005
  8196                           ;	CCP2 MUX bit
  8197                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8198                           ;	PORTB A/D Enable bit
  8199                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8200                           ;	Low-Power Timer1 Oscillator Enable bit
  8201                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8202                           ;	MCLR Pin Enable bit
  8203                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8204  300005                     	org	3145733
  8205  300005  81                 	db	129
  8206                           
  8207                           ;Config register CONFIG4L @ 0x300006
  8208                           ;	Stack Full/Underflow Reset Enable bit
  8209                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8210                           ;	Single-Supply ICSP Enable bit
  8211                           ;	LVP = ON, Single-Supply ICSP enabled
  8212                           ;	Extended Instruction Set Enable bit
  8213                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8214                           ;	Background Debugger Enable bit
  8215                           ;	DEBUG = 0x1, unprogrammed default
  8216  300006                     	org	3145734
  8217  300006  85                 	db	133
  8218                           
  8219                           ; Padding undefined space
  8220  300007                     	org	3145735
  8221  300007  FF                 	db	255
  8222                           
  8223                           ;Config register CONFIG5L @ 0x300008
  8224                           ;	Code Protection bit
  8225                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  8226                           ;	Code Protection bit
  8227                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  8228                           ;	Code Protection bit
  8229                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  8230                           ;	Code Protection bit
  8231                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  8232  300008                     	org	3145736
  8233  300008  0F                 	db	15
  8234                           
  8235                           ;Config register CONFIG5H @ 0x300009
  8236                           ;	Boot Block Code Protection bit
  8237                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8238                           ;	Data EEPROM Code Protection bit
  8239                           ;	CPD = OFF, Data EEPROM not code-protected
  8240  300009                     	org	3145737
  8241  300009  C0                 	db	192
  8242                           
  8243                           ;Config register CONFIG6L @ 0x30000A
  8244                           ;	Write Protection bit
  8245                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  8246                           ;	Write Protection bit
  8247                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  8248                           ;	Write Protection bit
  8249                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  8250                           ;	Write Protection bit
  8251                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  8252  30000A                     	org	3145738
  8253  30000A  0F                 	db	15
  8254                           
  8255                           ;Config register CONFIG6H @ 0x30000B
  8256                           ;	Configuration Register Write Protection bit
  8257                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8258                           ;	Boot Block Write Protection bit
  8259                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  8260                           ;	Data EEPROM Write Protection bit
  8261                           ;	WRTD = OFF, Data EEPROM not write-protected
  8262  30000B                     	org	3145739
  8263  30000B  E0                 	db	224
  8264                           
  8265                           ;Config register CONFIG7L @ 0x30000C
  8266                           ;	Table Read Protection bit
  8267                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  8268                           ;	Table Read Protection bit
  8269                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  8270                           ;	Table Read Protection bit
  8271                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  8272                           ;	Table Read Protection bit
  8273                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8274  30000C                     	org	3145740
  8275  30000C  0F                 	db	15
  8276                           
  8277                           ;Config register CONFIG7H @ 0x30000D
  8278                           ;	Boot Block Table Read Protection bit
  8279                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8280  30000D                     	org	3145741
  8281  30000D  40                 	db	64
  8282                           tosu	equ	0xFFF
  8283                           tosh	equ	0xFFE
  8284                           tosl	equ	0xFFD
  8285                           stkptr	equ	0xFFC
  8286                           pclatu	equ	0xFFB
  8287                           pclath	equ	0xFFA
  8288                           pcl	equ	0xFF9
  8289                           tblptru	equ	0xFF8
  8290                           tblptrh	equ	0xFF7
  8291                           tblptrl	equ	0xFF6
  8292                           tablat	equ	0xFF5
  8293                           prodh	equ	0xFF4
  8294                           prodl	equ	0xFF3
  8295                           indf0	equ	0xFEF
  8296                           postinc0	equ	0xFEE
  8297                           postdec0	equ	0xFED
  8298                           preinc0	equ	0xFEC
  8299                           plusw0	equ	0xFEB
  8300                           fsr0h	equ	0xFEA
  8301                           fsr0l	equ	0xFE9
  8302                           wreg	equ	0xFE8
  8303                           indf1	equ	0xFE7
  8304                           postinc1	equ	0xFE6
  8305                           postdec1	equ	0xFE5
  8306                           preinc1	equ	0xFE4
  8307                           plusw1	equ	0xFE3
  8308                           fsr1h	equ	0xFE2
  8309                           fsr1l	equ	0xFE1
  8310                           bsr	equ	0xFE0
  8311                           indf2	equ	0xFDF
  8312                           postinc2	equ	0xFDE
  8313                           postdec2	equ	0xFDD
  8314                           preinc2	equ	0xFDC
  8315                           plusw2	equ	0xFDB
  8316                           fsr2h	equ	0xFDA
  8317                           fsr2l	equ	0xFD9
  8318                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    144
    Data        0
    BSS         52
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    115     127
    BANK0           128      0      40
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 4
		 -> str(COMRAM[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 4
		 -> str(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39202
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _adc_amostra
                           _adc_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   32380
                                             76 COMRAM    39    31      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    6887
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    6534
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1207
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1210
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3872
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2737
                                             68 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2414
                                             52 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_amostra                                          7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     725
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___xxtofl
   _adc_amostra
   _adc_init
   _sprintf
     ___awdiv
     ___fladd
       _fround (ARG)
         ___flmul
         ___lwdiv
         ___lwmod
     ___fleq
     ___flge
     ___flmul
     ___flneg
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       _scale (ARG)
         ___awdiv
         ___awmod
         ___flmul
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
     _isdigit
     _scale

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      28       5       31.2%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     73      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      A7      15        0.0%
DATA                 0      0      A7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Nov 24 14:56:07 2021

           ___fldiv@aexp 0040             ___fldiv@bexp 003F             ___fldiv@sign 0038  
                     l53 2F8C                       l54 2FD8                       l55 302A  
                     l84 2CBE                       l68 3580                       l87 2F1A  
           ___awdiv@sign 000C      ___wmul@multiplicand 0003     __size_of_adc_amostra 007C  
                    l131 3646                      l108 2D0A                      l134 3648  
                    l126 3862                      l160 2734                      l240 0EDA  
                    l137 3684                      l314 34F6                      l307 34E6  
                    l511 32F8                      l167 20F8                      l280 3832  
                    l524 33A8                      l277 1402                      l534 2B8A  
                    l543 2B7A                      l552 3452                      l800 36F8  
                    l722 35F8                      l810 375C                      l563 37DA  
                    l643 2A3E                      l803 3754                      l652 2A2E  
                    l645 2984                      l558 31EE                      l830 15F2  
                    l646 29B6                      l559 3234                      l831 15E0  
                    l832 15A6                      l920 1CEC                      l729 3608  
                    l586 3130                      l923 1B7E                      l916 1988  
                    l933 1CAE                      l925 1BF6                      l926 1BE4  
                    l847 170C                      l839 18C2                      l856 17DC  
                    l872 37A2                      l960 28E8                      l857 17CA  
                    l793 36F0                      l971 2880                      l884 2492  
                    l964 2824                      l957 278C                      l886 22F2  
                    l895 2338                      l897 23B0                      l889 22B6  
                    l898 239E                      l978 380C                      u805 2B9A  
                    u815 2BB4                      u825 2BDA                      u775 2DFE  
                    u785 2E18                      u795 2E3E                      _key 007A  
                    _str 007C             ___awmod@sign 0006                      wreg 000FE8  
           ___flmul@aexp 0020             ___flmul@bexp 0021             ___flmul@sign 001B  
           ___flmul@temp 0026             ___flmul@prod 0022             ___fltol@exp1 003A  
                   l2000 3012                     l2010 3024                     l2002 3018  
                   l2012 3024                     l2004 3018                     l2006 301E  
                   l2008 301E                     l3000 36BE                     l3010 36EA  
                   l3002 36C4                     l2036 3856                     l3004 36DA  
                   l3020 372A                     l3012 36FA                     l3110 294C  
                   l3102 2922                     l3006 36E2                     l3022 3740  
                   l3014 370C                     l3030 24A6                     l3200 2B40  
                   l3120 2980                     l3112 295A                     l3008 36E4  
                   l3024 3748                     l3016 3714                     l3210 2B6A  
                   l3202 2B4A                     l3130 29C4                     l3122 298E  
                   l3114 2966                     l3026 374E                     l3018 371C  
                   l3042 26E8                     l3050 1D14                     l3300 3080  
                   l3220 3464                     l3212 380E                     l3140 29F4  
                   l3132 29D2                     l3124 29A8                     l3116 2976  
                   l3108 294A                     l3036 2600                     l3028 2496  
                   l1550 2E7E                     l1542 2DF2                     l3302 3082  
                   l3230 34A6                     l3222 347A                     l3214 382A  
                   l3150 2A1E                     l3142 29FE                     l3126 29B4  
                   l3118 297A                     l3038 2610                     l3062 1ED2  
                   l3046 1CF0                     l1560 2F0A                     l1552 2E86  
                   l1544 2DF6                     l3400 34FE                     l2600 1482  
                   l3240 375E                     l3304 3092                     l3232 34C4  
                   l3224 3482                     l3208 2B5E                     l3152 2A40  
                   l3128 29BE                     l3080 20D0                     l3056 1E26  
                   l3048 1CFE                     l1562 2F0C                     l1554 2EF8  
                   l1546 2E74                     l1570 2C18                     l3402 3508  
                   l3410 3526                     l3250 33E8                     l2610 14AA  
                   l2602 1484                     l3242 376E                     l3330 3110  
                   l3314 30BC                     l3306 3096                     l3234 34D4  
                   l3226 348E                     l3218 3454                     l3170 2AA8  
                   l3154 2A56                     l3138 29EA                     l3090 3802  
                   l3074 2024                     l3058 1E3A                     l3066 1EFE  
                   l1556 2F00                     l1548 2E7C                     l1580 2C9E  
                   l1572 2C1A                     l1564 2B8E                     l3404 3512  
                   l3412 354C                     l3420 360C                     l3252 3416  
                   l2700 167A                     l2620 14E4                     l2612 14BA  
                   l2604 148A                     l3332 3120                     l3324 30E4  
                   l3316 30C6                     l3308 30A4                     l3236 34D6  
                   l3228 349C                     l3340 35A0                     l3180 2AD0  
                   l3172 2AB8                     l3164 2A84                     l3148 2A12  
                   l3092 3806                     l3084 37DE                     l3076 2038  
                   l3068 1F12                     l3500 08DA                     l1558 2F02  
                   l1582 2CA6                     l1574 2C22                     l1566 2B92  
                   l3414 3556                     l3406 351C                     l3422 3610  
                   l3430 3628                     l3254 3426                     l3246 33AA  
                   l3270 31AE                     l3262 3132                     l2710 16EC  
                   l2702 1680                     l2630 1510                     l2622 14F6  
                   l2614 14CA                     l2606 1498                     l3326 30F0  
                   l3318 30D0                     l3238 34E0                     l3350 35F2  
                   l3342 35AC                     l3190 2B10                     l3182 2AEE  
                   l3174 2ABC                     l3166 2A86                     l3158 2A6A  
                   l3086 37E2                     l3510 094A                     l3502 08FE  
                   l1584 2CA8                     l1576 2C94                     l1568 2C10  
                   l3416 3564                     l3432 3656                     l3424 3618  
                   l3256 344A                     l3248 33D8                     l3280 3232  
                   l3272 31BC                     l3264 3160                     l2720 1746  
                   l2704 16A6                     l2712 16FC                     l2640 1524  
                   l2632 1514                     l2624 1504                     l2616 14CC  
                   l2608 149A                     l3328 3100                     l3344 35BA  
                   l3336 3582                     l3360 27B2                     l3352 2738  
                   l3192 2B1E                     l3184 2AFE                     l3176 2AC2  
                   l3168 2A96                     l3096 28EA                     l2800 1932  
                   l3088 37F2                     l3600 0D7C                     l3520 099C  
                   l3512 0950                     l3504 0902                     l3440 06CE  
                   l1586 2CB0                     l1578 2C9C                     l3418 3568  
                   l3426 3620                     l3258 3450                     l3274 31CE  
                   l3266 3170                     l2730 1776                     l2722 1750  
                   l2714 1722                     l2706 16DA                     l2650 1538  
                   l2642 1528                     l2634 1518                     l2626 1508  
                   l2618 14D4                     l3346 35D8                     l3338 3598  
                   l3370 280C                     l3354 2748                     l3186 2B00  
                   l3178 2AC6                     l3098 290E                     l2810 1972  
                   l2802 1940                     l3610 0DCA                     l3602 0D88  
                   l3530 0A56                     l3522 09B4                     l3514 096C  
                   l3506 090A                     l3450 06FC                     l3442 06DA  
                   l3276 31DC                     l3268 319E                     l3284 37A4  
                   l2740 179E                     l2732 177A                     l2724 175E  
                   l2716 1732                     l2708 16DC                     l2660 1572  
                   l2652 153C                     l2644 152C                     l2636 151C  
                   l2628 150C                     l2580 1410                     l3292 302C  
                   l3348 35E8                     l3380 2870                     l3372 280E  
                   l3364 27C6                     l3356 2756                     l3188 2B0A  
                   l2900 1CD0                     l2820 19BC                     l2812 1978  
                   l2804 1942                     l3700 116E                     l3612 0DD6  
                   l3604 0D8C                     l3540 0AFE                     l3524 09E8  
                   l3516 0988                     l3508 093C                     l3532 0A5A  
                   l3460 077E                     l3452 0714                     l3444 06E2  
                   l3436 06B0                     l3278 322C                     l3286 37BA  
                   l2750 17F8                     l2742 17AC                     l2734 178A  
                   l2726 1760                     l2670 15C4                     l2662 158E  
                   l2654 1540                     l2646 1530                     l2638 1520  
                   l2590 1450                     l2582 141E                     l3294 3042  
                   l3390 28C8                     l3382 288E                     l3374 281A  
                   l3366 27CE                     l3358 279C                     l3198 2B36  
                   l2902 1CD2                     l2830 1A0C                     l2822 19C8  
                   l2814 1998                     l2806 1952                     l2910 3236  
                   l3710 11D0                     l3702 1176                     l3630 0E9C  
                   l3614 0DDE                     l3622 0E70                     l3606 0D92  
                   l3550 0B8A                     l3542 0B28                     l3534 0A76  
                   l3526 0A1A                     l3518 0996                     l3470 07CE  
                   l3462 0782                     l3454 0732                     l3446 06F6  
                   l3438 06BC                     l1960 2F34                     l3800 219C  
                   l3288 37CA                     l2760 1862                     l2752 1806  
                   l2744 17C2                     l2728 176E                     l2736 178C  
                   l2680 1610                     l2672 15D2                     l2664 159E  
                   l2648 1534                     l2656 1544                     l2592 1452  
                   l2584 1420                     l3392 28D6                     l3384 2890  
                   l3376 2856                     l3368 27DA                     l2904 1CD8  
                   l2840 1A4E                     l2832 1A18                     l2824 19D2  
                   l2816 19A8                     l2808 1962                     l2920 3262  
                   l2912 323A                     l3720 1216                     l3712 11D6  
                   l3704 119A                     l3640 0EF6                     l3632 0EB6  
                   l3624 0E86                     l3616 0E2A                     l3608 0DAC  
                   l3560 0C56                     l3552 0BA0                     l3544 0B44  
                   l3536 0AB0                     l3528 0A24                     l3480 0840  
                   l3472 07EA                     l3456 073A                     l3464 07A0  
                   l1970 2FAC                     l1962 2F88                     l3810 21DC  
                   l3802 21AC                     l2770 189C                     l2762 1882  
                   l2754 1840                     l2690 1650                     l2738 179A  
                   l2674 15D4                     l2666 15B4                     l2658 1548  
                   l2586 1430                     l2594 145A                     l2578 1404  
                   l3298 3056                     l3394 28D8                     l3386 2894  
                   l3378 2862                     l2906 1CDC                     l2850 1AB0  
                   l2842 1A5A                     l2834 1A24                     l2826 19E8  
                   l2930 3290                     l2922 326A                     l2914 3248  
                   l3730 127A                     l3722 123A                     l3714 11E4  
                   l3706 11A0                     l3650 0FB4                     l3642 0F02  
                   l3634 0ED2                     l3626 0E92                     l3618 0E5E  
                   l3562 0C5E                     l3546 0B76                     l3538 0ACC  
                   l3490 0896                     l3482 0846                     l3474 0812  
                   l3466 07BC                     l3458 0756                     l1980 2FB6  
                   l1972 2FAE                     l3900 2488                     l3812 21EC  
                   l3820 220C                     l3804 21AE                     l2772 18A2  
                   l2764 1886                     l2748 17EC                     l2756 1842  
                   l2692 165C                     l2684 1624                     l2676 15DE  
                   l2668 15C0                     l2596 146A                     l2588 1440  
                   l3388 28B8                     l2860 1B46                     l2852 1ABC  
                   l2844 1A6A                     l2836 1A32                     l2828 19F4  
                   l2780 18C4                     l2940 32CA                     l2932 3298  
                   l2924 326E                     l2916 3250                     l3740 12AC  
                   l3732 1286                     l3724 1246                     l3716 1202  
                   l3708 11B2                     l3660 105C                     l3652 0FE8  
                   l3644 0F06                     l3636 0EDE                     l3628 0E96  
                   l3580 0CE4                     l3572 0C9C                     l3556 0BD4  
                   l3548 0B82                     l3492 08A4                     l3476 0816  
                   l3468 07C2                     l1990 2FFC                     l1982 2FC6  
                   l1974 2FB0                     l1958 2F1C                     l3398 34FA  
                   l3830 224A                     l3822 221C                     l3814 21F4  
                   l3806 21B6                     l2774 18B0                     l2766 1894  
                   l2758 1852                     l2694 1660                     l2686 1634  
                   l2678 1600                     l2598 1470                     l2870 1B9C  
                   l2862 1B64                     l2854 1AD8                     l2846 1A84  
                   l2838 1A3E                     l2790 1900                     l2782 18D0  
                   l2950 32F0                     l2942 32CC                     l2934 32A6  
                   l2926 3276                     l2918 3254                     l3750 1302  
                   l3734 128A                     l3742 12C8                     l3726 124E  
                   l3718 120E                     l3670 10A2                     l3662 1068  
                   l3654 0FF6                     l3646 0F1C                     l3638 0EE6  
                   l3590 0D40                     l3582 0D02                     l3574 0C9E  
                   l3558 0BE8                     l3494 08AC                     l3486 084C  
                   l3478 0838                     l3910 2CC4                     l1992 2FFE  
                   l1984 2FF0                     l1976 2FB2                     l1968 2FA4  
                   l3840 2292                     l3832 225A                     l3824 221C  
                   l3816 21F8                     l3808 21C6                     l2776 18B2  
                   l2768 189A                     l2696 166E                     l2688 1642  
                   l2880 1C06                     l2872 1BA0                     l2864 1B6E  
                   l2856 1B02                     l2848 1A94                     l2792 1910  
                   l2784 18DE                     l2944 32D2                     l2936 32AC  
                   l2928 3288                     l2960 3314                     l3752 1320  
                   l3744 12DA                     l3736 129C                     l3728 125C  
                   l3680 10DE                     l3672 10AA                     l3664 106C  
                   l3656 0FFA                     l3648 0F68                     l3592 0D48  
                   l3584 0D08                     l3576 0CB0                     l3568 0C62  
                   l3496 08C4                     l3488 0884                     l3920 2D1A  
                   l3912 2CFC                     l1994 3000                     l1986 2FF8  
                   l1978 2FB4                     l3850 22E0                     l3842 22A6  
                   l3834 226A                     l3770 20FA                     l2698 1670  
                   l2890 1C68                     l2882 1C12                     l2874 1BAE  
                   l2866 1B7C                     l2858 1B38                     l2794 1916  
                   l2786 18E0                     l2938 32C2                     l2946 32D8  
                   l2970 3348                     l2962 3318                     l2954 32FA  
                   l3754 132C                     l3746 12E6                     l3738 12A8  
                   l3762 13BA                     l3690 10FC                     l3682 10F4  
                   l3674 10B8                     l3666 1072                     l3658 1046  
                   l3594 0D54                     l3586 0D16                     l3578 0CDE  
                   l3498 08CC                     l3922 2D84                     l3914 2D00  
                   l1996 3002                     l1988 2FFA                     l3860 2328  
                   l3852 22F0                     l3844 22B4                     l3836 227A  
                   l3828 2230                     l3780 2136                     l3772 2106  
                   l2892 1C7C                     l2884 1C20                     l2876 1BDC  
                   l2868 1B8E                     l2796 1926                     l2788 18F0  
                   l2948 32E8                     l2980 3382                     l2972 3350  
                   l2964 3326                     l2956 32FE                     l3756 1334  
                   l3748 12EA                     l3684 10F8                     l3676 10BC  
                   l3596 0D58                     l3588 0D34                     l3668 1088  
                   l3764 13D4                     l3924 2DA0                     l3916 2D04  
                   l3908 2CC0                     l1998 3012                     l3870 2368  
                   l3862 2336                     l3854 2302                     l3846 22C0  
                   l3838 2282                     l3790 2166                     l3782 2146  
                   l3774 2114                     l2894 1C96                     l2886 1C4A  
                   l2798 192C                     l2990 3686                     l2974 335E  
                   l2982 3388                     l2966 332E                     l2958 330C  
                   l3758 13AA                     l3694 1136                     l3678 10CC  
                   l3598 0D5E                     l3766 13F6                     l3926 2DB2  
                   l3918 2D0C                     l3880 23DA                     l3872 2396  
                   l3856 2318                     l3864 2348                     l3848 22DE  
                   l3792 216C                     l3784 2148                     l3776 2116  
                   l2896 1CB2                     l2888 1C4E                     l2992 368E  
                   l2984 3398                     l2976 3374                     l2968 3340  
                   l3696 1138                     l3928 2DD6                     l3890 2452  
                   l3882 2404                     l3866 2356                     l3858 231E  
                   l3794 217A                     l3778 2126                     l3786 2150  
                   l2898 1CC2                     l2994 36A0                     l2986 33A0  
                   l2978 337C                     l3698 114A                     l3892 246E  
                   l3876 23C0                     l3884 2408                     l3868 235A  
                   l3796 217C                     l3788 2160                     l2996 36A8  
                   l3894 2472                     l3886 2422                     l3878 23CC  
                   l3798 218C                     l2998 36B0                     l3896 2480  
                   l3888 2438                     l3898 2486                     STR_1 06A3  
                   STR_2 0691                     u1400 2FD8                     u3000 1CFE  
                   u1401 2FD4                     u3001 1CFA                     u3010 1D14  
                   u3011 1D10                     u2300 1504                     u2220 141E  
                   u3100 2946                     u3020 1E3A                     u2301 1500  
                   u2221 141A                     u3101 2942                     u3021 1E36  
                   _LATA 000F89                     u2310 1572                     u2230 1430  
                   u3110 29A8                     u3030 1F12                     _LATB 000F8A  
                   u2311 156E                     u2231 142C                     u3111 29A4  
                   u3031 1F0E                     _LATC 000F8B                     u2400 1650  
                   u2320 158A                     u2240 1440                     u3200 2B32  
                   u3120 29D2                     u3040 2038                     u4000 11E4  
                   _LATD 000F8C                     u2401 164C                     u2321 1584  
                   u2241 143C                     u3201 2B2E                     u3121 29CE  
                   u3041 2034                     u4001 11E0                     _LATE 000F8D  
                   u2410 166E                     u2330 158C                     u2250 1482  
                   u3210 2B5A                     u3130 29E6                     u3050 37F2  
                   u4010 1202                     u2411 166A                     u2251 147E  
                   u3211 2B56                     u3131 29E2                     u3051 37EE  
                   u4011 11FE                     u3300 319E                     u2500 17AC  
                   u2420 16A6                     u2340 15B4                     u2260 1498  
                   u3220 2B7A                     u3140 2A0E                     u3060 3802  
                   u4100 13D4                     u4020 123A                     u3301 319A  
                   u2501 17A8                     u2421 16A2                     u2341 15B0  
                   u2261 1494                     u3221 2B76                     u3141 2A0A  
                   u3061 37FE                     u4101 13D0                     u4021 1236  
                   u3310 31BC                     u2510 17C2                     u2430 16EC  
                   u2350 15D2                     u2270 14AA                     u3230 347A  
                   u3150 2A2E                     u4110 13F6                     u4030 125C  
                   u3311 31B8                     u2511 17BE                     u2431 16E8  
                   u2351 15CE                     u2271 14A6                     u3231 3476  
                   u3151 2A2A                     u3071 28FA                     u4111 13F2  
                   u4031 1258                     u4200 2292                     u4120 2114  
                   u3320 31DC                     u2600 18B0                     u2520 17D8  
                   u2440 1722                     u2360 15F2                     u2280 14BA  
                   u3400 3100                     u3240 349C                     u3160 2A56  
                   u3080 290E                     u4040 127A                     u4201 228E  
                   u4121 2110                     u3321 31D8                     u2601 18AC  
                   u2521 17D4                     u2441 171E                     u2361 15EE  
                   u2281 14B6                     u3401 30FC                     u3241 3498  
                   u3161 2A52                     u3081 290A                     u4041 1276  
                   u4210 22B4                     u4130 2126                     u3330 322C  
                   u2530 17EC                     u2450 1732                     u2370 1600  
                   u2290 14F6                     u3410 3110                     u3250 34C4  
                   u3170 2A80                     u2610 18DE                     u4050 129C  
                   u4211 22B0                     u4131 2122                     u3331 3228  
                   u2531 17E8                     u2451 172E                     u2371 15FC  
                   u2291 14F2                     u3411 310C                     u3251 34C0  
                   u3171 2A7C                     u3091 2932                     u2611 18DA  
                   u4051 1298                     u4300 23C0                     u4220 22DE  
                   u4140 2136                     u3260 33D8                     u3340 37BA  
                   u2540 1806                     u2460 175E                     u2380 1610  
                   u3420 3598                     u3500 2870                     u3180 2AEE  
                   u2700 1B7C                     u2620 18F0                     u4060 12C4  
                   u4301 23BC                     u4221 22DA                     u4141 2132  
                   u3261 33D4                     u3341 37B6                     u2541 1802  
                   u2461 175A                     u2381 160C                     u3421 3594  
                   u3501 286C                     u3181 2AEA                     u2701 1B78  
                   u2621 18EC                     u4061 12C0                     u4310 23DA  
                   u4230 2302                     u4150 217A                     u3270 3416  
                   u2550 1840                     u2470 176E                     u2390 1642  
                   u3350 3042                     u3430 35BA                     u3510 2880  
                   u3190 2B1E                     u2710 1B9C                     u2630 1900  
                   u4070 12DA                     u4311 23D6                     u4231 22FE  
                   u4151 2176                     u3271 3412                     u2551 183C  
                   u2471 176A                     u2391 163E                     u3351 303E  
                   u3431 35B6                     u3511 287C                     u3191 2B1A  
                   u2711 1B98                     u2631 18FC                     u4071 12D6  
                   u4320 2422                     u4240 2318                     u4160 218C  
                   u3280 344A                     u2560 1852                     u2480 178A  
                   u3360 3076                     u3440 35D8                     u3520 288E  
                   u2720 1BAE                     u2640 1940                     u2800 3248  
                   u4080 1302                     u3600 07A0                     u4321 241E  
                   u4241 2314                     u4161 2188                     u3281 3446  
                   u2561 184E                     u2481 1786                     u3441 35D4  
                   u3521 288A                     u2721 1BAA                     u2641 193C  
                   u2801 3244                     u4081 12FE                     u3601 079C  
                   u4330 2452                     u4250 2336                     u4170 219C  
                   u3290 3160                     u2570 1862                     u2490 179A  
                   u3370 30A4                     u3530 28C8                     u3450 2748  
                   u2730 1BDC                     u2650 1952                     u2810 3262  
                   u4090 1320                     u3610 07BC                     u4331 244E  
                   u4251 2332                     u4171 2198                     u3291 315C  
                   u2571 185E                     u2491 1796                     u3371 30A0  
                   u3531 28C4                     u3451 2744                     u2731 1BD8  
                   u2651 194E                     u2811 325E                     u4091 131C  
                   u3611 07B8                     u4340 2480                     u4260 2356  
                   u4180 21DC                     u2580 1882                     u3380 30B8  
                   u3540 28D6                     u3460 2756                     u2740 1BF2  
                   u2660 1962                     u2820 3288                     u2900 3374  
                   u3700 0A76                     u3620 0834                     u4341 247C  
                   u4261 2352                     u4181 21D8                     u2581 187E  
                   u3381 30B4                     u3365 306C                     u3541 28D2  
                   u3461 2752                     u2741 1BEE                     u2661 195E  
                   u2821 3284                     u2901 3370                     u3701 0A72  
                   u3621 0830                     u3550 3580                     u4270 2368  
                   u4190 221C                     u2590 1894                     u3390 30E0  
                   u3470 27B2                     u2750 1C06                     u2670 1998  
                   u2830 32A6                     u2910 3398                     u3710 0ACC  
                   u3630 0896                     u4407 2CB6                     u3551 357C  
                   u4271 2364                     u4191 2218                     u2591 1890  
                   u3391 30DC                     u3471 27AE                     u2751 1C02  
                   u2671 1994                     u2831 32A2                     u2911 3394  
                   u3711 0AC8                     u3631 0892                     u4280 2396  
                   u3560 3656                     u3480 2808                     u2760 1C20  
                   u2680 19A8                     u2920 36A0                     u2840 32C2  
                   u3800 0D16                     u3720 0AFE                     u3640 08A4  
                   u4417 2F3A                     u4281 2392                     u3561 3652  
                   u3481 2804                     u2761 1C1C                     u2681 19A4  
                   u2921 369C                     u2841 32BE                     u3801 0D12  
                   u3721 0AFA                     u3641 08A0                     u4290 23AC  
                   u3490 2852                     u2770 1C68                     u2690 1B22  
                   u2930 36BE                     u2850 32E8                     u3810 0D34  
                   u3730 0B28                     u3650 08DA                     u4507 300A  
                   u4427 2F48                     u4291 23A8                     u3491 284E  
                   u2771 1C64                     u2931 36BA                     u2851 32E4  
                   u3811 0D30                     u3731 0B24                     u3651 08D6  
                   u2780 1C96                     u2940 36DA                     u2860 330C  
                   u3900 1084                     u3820 0D78                     u3740 0B44  
                   u3660 093C                     u3580 06CE                     u4517 2E76  
                   u4437 2F56                     u4357 2C12                     u2781 1C92  
                   u2941 36D6                     u2861 3308                     u3901 1080  
                   u3821 0D74                     u3741 0B40                     u3661 0938  
                   u3581 06CA                     u2790 1CD0                     u2950 370C  
                   u2870 3326                     u3910 10B8                     u3830 0DAC  
                   u3750 0B76                     u3670 0996                     u3590 0732  
                   u4527 2E80                     u4447 2F64                     u4367 2C1C  
                   u3575 365E                     u2791 1CCC                     u2695 1B18  
                   u2951 3708                     u2871 3322                     u3911 10B4  
                   u3831 0DA8                     u3751 0B72                     u3671 0992  
                   u3591 072E                     u2960 372A                     u2880 3340  
                   u3920 10DE                     u3840 0DCA                     u3760 0C98  
                   u3680 0A1A                     u4537 2EFA                     u4457 2F72  
                   u4377 2C96                     u2961 3726                     u2881 333C  
                   u3921 10DA                     u3841 0DC6                     u3761 0C94  
                   u3681 0A16                     u2970 3740                     u2890 335E  
                   u3930 10F4                     u3850 0E82                     u3770 0CB0  
                   u3690 0A56                     u4547 2F04                     u4467 2F80  
                   u4387 2CA0                     u2971 373C                     u2891 335A  
                   u3931 10F0                     u3851 0E7E                     u3771 0CAC  
                   u3691 0A52                     u2980 24A6                     u3940 1132  
                   u3860 0EB6                     u3780 0CDE                     u4557 2F12  
                   u4477 2FA6                     u4397 2CAA                     u2981 24A2  
                   u3941 112E                     u3861 0EB2                     u3781 0CDA  
                   u2990 2610                     u3950 114A                     u3870 0ED2  
                   u3790 0D02                     u4487 2FBE                     u2991 260C  
                   u3951 1146                     u3871 0ECE                     u3791 0CFE  
                   u3960 116E                     u3880 0EF6                     u4497 2FF2  
                   u3961 116A                     u3881 0EF2                     u3970 119A  
                   u3890 1058                     u3971 1196                     u3891 1054  
                   u3980 11B2                     u3981 11AE                     u3990 11D0  
                   u3991 11CC                     _date 0094                     _main 2CC0  
                   _time 0080                     fsr2h 000FDA                     indf2 000FDF  
                   fsr2l 000FD9                     _volt 0074                     prodh 000FF4  
                   prodl 000FF3                     start 0000          ___fldiv@new_exp 0039  
           _sprintf$1171 0059          __end_of_Lcd_Cmd 2F1C          __end_of_Lcd_Out 3582  
           ___param_bank 000000               _Lcd_Chr_CP 2B8C            ___fltol@sign1 0039  
        __end_of___fladd 18C4                    ?_main 0001          __end_of___fldiv 2494  
        __end_of___awdiv 32FA          __end_of___flneg 37DC          __end_of___awmod 33AA  
        __end_of___flmul 1CEE          __end_of___flsub 37A4          __end_of___fltol 3132  
        __end_of___lldiv 34F8          ___awdiv@divisor 0009          __end_of___llmod 360A  
        __end_of___lwdiv 36FA          __end_of___lwmod 375E          ___awdiv@counter 000B  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_dpowers 0691                    _scale 1CEE  
        __end_of_isdigit 380E                    _tecla 007B                    tablat 000FF5  
                  status 000FD8          __end_of_sprintf 1404         __end_of_Lcd_Init 302C  
        __initialization 3834             __end_of_main 2DF0                   ??_main 0074  
          __activetblptr 000002     __size_of__tdiv_to_l_ 0156                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0         ___llmod@dividend 000E  
                 ?_scale 0028                   _ADRESH 000FC4                   _ADRESL 000FC3  
       ___awdiv@dividend 0007         __end_of_adc_init 3864                ??_Lcd_Cmd 0001  
              ??_Lcd_Out 0007         __end_of___xxtofl 28EA         __end_of__powers_ 0635  
                 ___flge 3132                   ___fleq 33AA              ?_Lcd_Chr_CP 0001  
              ??___fladd 003D                   ___wmul 380E                ??___fldiv 0030  
              ??___awdiv 000B                ??___flneg 0005                ??___awmod 0005  
              ??___flmul 0017                ??___flsub 004D                ??___fltol 0035  
              ??___lldiv 0009                ??___llmod 0016                ??___lwdiv 000A  
              ??___lwmod 0005                   _fround 2494                   clear_0 383A  
                 clear_1 3846         ___awdiv@quotient 000D          ___awmod@divisor 0003  
                 isa$std 000001          ___awmod@counter 0005                ??_isdigit 0001  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                ??_sprintf 0055               ___flge@ff1 0001  
             ___flge@ff2 0005             ___xxtofl@arg 000B             ___xxtofl@exp 000A  
           ___xxtofl@val 0001               ___fleq@ff1 0001               ___fleq@ff2 0005  
             __accesstop 0080  __end_of__initialization 384C               ___flneg@f1 0001  
          ___rparam_used 000001               ___fltol@f1 0031           __pcstackCOMRAM 0001  
          __end_of_scale 20FA               __div_to_l_ 2A40                ?_Lcd_Init 0001  
        __div_to_l_@exp1 000E          __div_to_l_@cntr 000D                  ??_scale 002C  
        __div_to_l_@quot 0009             sprintf@width 006B      __size_of_Lcd_Chr_CP 0134  
             __pbssBANK0 0080            __div_to_l_@f1 0001            __div_to_l_@f2 0005  
                ?___flge 0001                  ?___fleq 0001                  ?___wmul 0001  
          ??_adc_amostra 0003                  ?_fround 0028                ?_adc_init 0001  
              ?___xxtofl 0001               ??_Lcd_Init 0004                  _Lcd_Cmd 2DF0  
                _Lcd_Out 34F8        __end_of__npowers_ 0669                  __Hparam 0000  
             _scale$1170 002C                  __Lparam 0000          __size_of___flge 0104  
        __size_of___fleq 00AA                  ___fladd 1404                  ___fldiv 20FA  
                ___awdiv 3236                  ___flneg 37A4                  ___awmod 32FA  
                ___flmul 18C4                  ___flsub 375E                  ___fltol 302C  
                ___lldiv 3454          __size_of___wmul 0026                  ___llmod 3582  
                ___lwdiv 3686                  ___lwmod 36FA             __psmallconst 0600  
                __pcinit 3834          __size_of_fround 02A2                  __ramtop 0600  
             ??_adc_init 0001                  __ptext0 2CC0                  __ptext1 06B0  
                __ptext2 1CEE                  __ptext3 32FA                  __ptext4 3236  
                __ptext5 37DC                  __ptext6 2494                  __ptext7 36FA  
                __ptext8 3686                  __ptext9 18C4              ?__div_to_l_ 0001  
                _dpowers 0669      __end_of_adc_amostra 3686                  _isdigit 37DC  
             ??___xxtofl 0005         ___awmod@dividend 0001                  _sprintf 06B0  
   end_of_initialization 384C            __Lmediumconst 0000          ___lldiv@divisor 0005  
        ___lldiv@counter 000D             ??_Lcd_Chr_CP 0001                  postdec2 000FDD  
                postinc0 000FEE                  postinc2 000FDE           __tdiv_to_l_@f1 0001  
         __tdiv_to_l_@f2 0005            ??__tdiv_to_l_ 0009                _PORTDbits 000F83  
              _PORTEbits 000F84              ___fladd@grs 0044            ___xxtofl@sign 0009  
              _TRISDbits 000F95                _TRISEbits 000F96              ___fldiv@grs 003B  
            ___fldiv@rem 0034       __end_of_Lcd_Chr_CP 2CC0              ___flmul@grs 001C  
    __size_of__div_to_l_ 014C           __end_of___flge 3236           __end_of___fleq 3454  
            _adc_amostra 360A           __end_of___wmul 3834           __end_of_fround 2736  
    start_initialization 3834      __end_of__tdiv_to_l_ 2A40            Lcd_Out@buffer 0005  
      __size_of_Lcd_Init 0110          ___llmod@divisor 0012          ___llmod@counter 0016  
               ??___flge 0009                 ??___fleq 0009                 ??___wmul 0005  
               ??_fround 002C            sprintf@tmpval 005F                ___fladd@a 0039  
              ___fladd@b 0035               fround@prec 0034                ___fldiv@a 002C  
              ___fldiv@b 0028        __size_of_adc_init 000E                ___flmul@a 0013  
              ___flmul@b 000F              __pbssCOMRAM 0074                ___flsub@a 0049  
              ___flsub@b 0045                _adcResult 0078        __size_of___xxtofl 01B4  
               ?_Lcd_Cmd 0001              sprintf@flag 0069                 ?_Lcd_Out 0004  
            sprintf@eexp 0067              sprintf@fval 006D              sprintf@prec 0071  
       ___lwdiv@dividend 0006                 ?___fladd 0035                 ?___fldiv 0028  
               ?___awdiv 0007                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 000F                 ?___flsub 0045                 ?___fltol 0031  
               ?___lldiv 0001                 ?___llmod 000E                __npowers_ 0635  
               ?___lwdiv 0006                 ?___lwmod 0001              __tdiv_to_l_ 28EA  
           ??__div_to_l_ 0009              __smallconst 0600                 ?_isdigit 0001  
       ___lwdiv@quotient 000A                 ?_sprintf 004D           __size_of_scale 040C  
         ___wmul@product 0005       __end_of__div_to_l_ 2B8C                 Lcd_Out@x 0004  
               Lcd_Out@y 0007             Lcd_Init@data 0005               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001                 _Lcd_Init 2F1C              _INTCON2bits 000FF1  
       __size_of_Lcd_Cmd 012C         __size_of_Lcd_Out 008A                 __Hrparam 0000  
               __Lrparam 0000             ?_adc_amostra 0001         __size_of___fladd 04C0  
       __size_of___fldiv 039A         __size_of___awdiv 00C4         __size_of___flneg 0038  
       __size_of___awmod 00B0         __size_of___flmul 042A         __size_of___flsub 0046  
       __size_of___fltol 0106         __size_of___lldiv 00A4         __size_of___llmod 0088  
       __size_of___lwdiv 0074         __size_of___lwmod 0064              _fround$1168 0030  
            _fround$1169 002C                 _adc_init 3856              _isdigit$982 0002  
             sprintf@val 0063                 ___xxtofl 2736         __size_of_isdigit 0032  
         Lcd_Chr_CP@data 0003          ___lwdiv@divisor 0008          ___lwdiv@counter 000C  
               __ptext10 28EA                 __ptext11 2A40                 __ptext20 3132  
               __ptext12 2736                 __ptext21 33AA                 __ptext13 380E  
               __ptext22 3856                 __ptext14 3582                 __ptext23 360A  
               __ptext15 3454                 __ptext24 20FA                 __ptext16 302C  
               __ptext25 34F8                 __ptext17 375E                 __ptext26 2B8C  
               __ptext18 1404                 __ptext27 2F1C                 __ptext19 37A4  
               __ptext28 2DF0                 __powers_ 0601         __size_of_sprintf 0D54  
            Lcd_Cmd@data 0003            __size_of_main 0130                 isa$xinst 000000  
            Lcd_Out@data 0008                 isdigit@c 0003                 scale@scl 0030  
              sprintf@ap 005D         __tdiv_to_l_@exp1 0011                sprintf@sp 004D  
       __tdiv_to_l_@cntr 0010         __tdiv_to_l_@quot 000C         ___lwmod@dividend 0001  
       ___lldiv@dividend 0001             ?__tdiv_to_l_ 0001                 sprintf@c 0073  
               sprintf@f 004F         ___lldiv@quotient 0009          ___lwmod@divisor 0003  
        ___lwmod@counter 0005         adc_amostra@canal 0007            ___fladd@signs 0041  
           ___fladd@aexp 0042             ___fladd@bexp 0043  
