

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Nov 20 14:43:04 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4550 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	smallconst
    81  000800                     __psmallconst:
    82                           	callstack 0
    83  000800  00                 	db	0
    84  000801                     __powers_:
    85                           	callstack 0
    86  000801  0000               	dw	0
    87  000803  3F80               	dw	16256
    88  000805  0000               	dw	0
    89  000807  4120               	dw	16672
    90  000809  0000               	dw	0
    91  00080B  42C8               	dw	17096
    92  00080D  0000               	dw	0
    93  00080F  447A               	dw	17530
    94  000811  4000               	dw	16384
    95  000813  461C               	dw	17948
    96  000815  5000               	dw	20480
    97  000817  47C3               	dw	18371
    98  000819  2400               	dw	9216
    99  00081B  4974               	dw	18804
   100  00081D  9680               	dw	38528
   101  00081F  4B18               	dw	19224
   102  000821  BC20               	dw	48160
   103  000823  4CBE               	dw	19646
   104  000825  6B28               	dw	27432
   105  000827  4E6E               	dw	20078
   106  000829  02F9               	dw	761
   107  00082B  5015               	dw	20501
   108  00082D  78EC               	dw	30956
   109  00082F  60AD               	dw	24749
   110  000831  F2CA               	dw	62154
   111  000833  7149               	dw	29001
   112  000835                     __end_of__powers_:
   113                           	callstack 0
   114  000835                     __npowers_:
   115                           	callstack 0
   116  000835  0000               	dw	0
   117  000837  3F80               	dw	16256
   118  000839  CCCD               	dw	52429
   119  00083B  3DCC               	dw	15820
   120  00083D  D70A               	dw	55050
   121  00083F  3C23               	dw	15395
   122  000841  126F               	dw	4719
   123  000843  3A83               	dw	14979
   124  000845  B717               	dw	46871
   125  000847  38D1               	dw	14545
   126  000849  C5AC               	dw	50604
   127  00084B  3727               	dw	14119
   128  00084D  37BD               	dw	14269
   129  00084F  3586               	dw	13702
   130  000851  BF95               	dw	49045
   131  000853  33D6               	dw	13270
   132  000855  CC77               	dw	52343
   133  000857  322B               	dw	12843
   134  000859  705F               	dw	28767
   135  00085B  3089               	dw	12425
   136  00085D  E6FF               	dw	59135
   137  00085F  2EDB               	dw	11995
   138  000861  E508               	dw	58632
   139  000863  1E3C               	dw	7740
   140  000865  4260               	dw	16992
   141  000867  0DA2               	dw	3490
   142  000869                     __end_of__npowers_:
   143                           	callstack 0
   144  000869                     _dpowers:
   145                           	callstack 0
   146  000869  0001               	dw	1
   147  00086B  0000               	dw	0
   148  00086D  000A               	dw	10
   149  00086F  0000               	dw	0
   150  000871  0064               	dw	100
   151  000873  0000               	dw	0
   152  000875  03E8               	dw	1000
   153  000877  0000               	dw	0
   154  000879  2710               	dw	10000
   155  00087B  0000               	dw	0
   156  00087D  86A0               	dw	34464
   157  00087F  0001               	dw	1
   158  000881  4240               	dw	16960
   159  000883  000F               	dw	15
   160  000885  9680               	dw	38528
   161  000887  0098               	dw	152
   162  000889  E100               	dw	57600
   163  00088B  05F5               	dw	1525
   164  00088D  CA00               	dw	51712
   165  00088F  3B9A               	dw	15258
   166  000891                     __end_of_dpowers:
   167                           	callstack 0
   168  0000                     _ADRESL	set	4035
   169  0000                     _ADRESH	set	4036
   170  0000                     _ADCON0bits	set	4034
   171  0000                     _ADCON2	set	4032
   172  0000                     _ADCON1	set	4033
   173  0000                     _ADCON0	set	4034
   174  0000                     _LATE	set	3981
   175  0000                     _PORTE	set	3972
   176  0000                     _LATD	set	3980
   177  0000                     _PORTD	set	3971
   178  0000                     _LATC	set	3979
   179  0000                     _PORTC	set	3970
   180  0000                     _LATB	set	3978
   181  0000                     _PORTB	set	3969
   182  0000                     _LATA	set	3977
   183  0000                     _PORTA	set	3968
   184  0000                     _TRISE	set	3990
   185  0000                     _TRISD	set	3989
   186  0000                     _TRISC	set	3988
   187  0000                     _TRISB	set	3987
   188  0000                     _TRISA	set	3986
   189  0000                     _INTCON2bits	set	4081
   190  0000                     _PORTEbits	set	3972
   191  0000                     _PORTDbits	set	3971
   192  0000                     _TRISEbits	set	3990
   193  0000                     _TRISDbits	set	3989
   194  000891                     STR_2:
   195  000891  54                 	db	84	;'T'
   196  000892  65                 	db	101	;'e'
   197  000893  6E                 	db	110	;'n'
   198  000894  73                 	db	115	;'s'
   199  000895  61                 	db	97	;'a'
   200  000896  6F                 	db	111	;'o'
   201  000897  20                 	db	32
   202  000898  3D                 	db	61	;'='
   203  000899  20                 	db	32
   204  00089A  25                 	db	37
   205  00089B  30                 	db	48	;'0'
   206  00089C  35                 	db	53	;'5'
   207  00089D  2E                 	db	46
   208  00089E  32                 	db	50	;'2'
   209  00089F  66                 	db	102	;'f'
   210  0008A0  20                 	db	32
   211  0008A1  56                 	db	86	;'V'
   212  0008A2  00                 	db	0
   213  0008A3                     STR_1:
   214  0008A3  41                 	db	65	;'A'
   215  0008A4  44                 	db	68	;'D'
   216  0008A5  43                 	db	67	;'C'
   217  0008A6  20                 	db	32
   218  0008A7  3D                 	db	61	;'='
   219  0008A8  20                 	db	32
   220  0008A9  25                 	db	37
   221  0008AA  30                 	db	48	;'0'
   222  0008AB  34                 	db	52	;'4'
   223  0008AC  64                 	db	100	;'d'
   224  0008AD  00                 	db	0
   225  0008AE  00                 	db	0	; dummy byte at the end
   226  0000                     
   227                           ; #config settings
   228                           
   229                           	psect	cinit
   230  003A62                     __pcinit:
   231                           	callstack 0
   232  003A62                     start_initialization:
   233                           	callstack 0
   234  003A62                     __initialization:
   235                           	callstack 0
   236                           
   237                           ; Clear objects allocated to BANK0 (8 bytes)
   238  003A62  EE00  F07B         	lfsr	0,__pbssBANK0
   239  003A66  0E08               	movlw	8
   240  003A68                     clear_0:
   241  003A68  6AEE               	clrf	postinc0,c
   242  003A6A  06E8               	decf	wreg,f,c
   243  003A6C  E1FD               	bnz	clear_0
   244                           
   245                           ; Clear objects allocated to COMRAM (4 bytes)
   246  003A6E  6A5C               	clrf	(__pbssCOMRAM+3)& (0+255),c
   247  003A70  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   248  003A72  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   249  003A74  6A59               	clrf	__pbssCOMRAM& (0+255),c
   250  003A76                     end_of_initialization:
   251                           	callstack 0
   252  003A76                     __end_of__initialization:
   253                           	callstack 0
   254  003A76  0E00               	movlw	low (__Lmediumconst shr (0+16))
   255  003A78  6EF8               	movwf	tblptru,c
   256  003A7A  0100               	movlb	0
   257  003A7C  EF77  F017         	goto	_main	;jump to C main() function
   258                           
   259                           	psect	bssCOMRAM
   260  000059                     __pbssCOMRAM:
   261                           	callstack 0
   262  000059                     _adcResult:
   263                           	callstack 0
   264  000059                     	ds	2
   265  00005B                     _key:
   266                           	callstack 0
   267  00005B                     	ds	1
   268  00005C                     _tecla:
   269                           	callstack 0
   270  00005C                     	ds	1
   271                           
   272                           	psect	bssBANK0
   273  00007B                     __pbssBANK0:
   274                           	callstack 0
   275  00007B                     _volt:
   276                           	callstack 0
   277  00007B                     	ds	4
   278  00007F                     _str:
   279                           	callstack 0
   280  00007F                     	ds	4
   281                           
   282                           	psect	cstackBANK0
   283  000060                     __pcstackBANK0:
   284                           	callstack 0
   285  000060                     _sprintf$1118:
   286                           	callstack 0
   287                           
   288                           ; 4 bytes @ 0x0
   289  000060                     	ds	4
   290  000064                     sprintf@ap:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x4
   294  000064                     	ds	2
   295  000066                     sprintf@tmpval:
   296                           	callstack 0
   297                           
   298                           ; 4 bytes @ 0x6
   299  000066                     	ds	4
   300  00006A                     sprintf@val:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0xA
   304  00006A                     	ds	4
   305  00006E                     sprintf@eexp:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0xE
   309  00006E                     	ds	2
   310  000070                     sprintf@flag:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x10
   314  000070                     	ds	2
   315  000072                     sprintf@width:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x12
   319  000072                     	ds	2
   320  000074                     sprintf@fval:
   321                           	callstack 0
   322                           
   323                           ; 4 bytes @ 0x14
   324  000074                     	ds	4
   325  000078                     sprintf@prec:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x18
   329  000078                     	ds	2
   330  00007A                     sprintf@c:
   331                           	callstack 0
   332                           
   333                           ; 1 bytes @ 0x1A
   334  00007A                     	ds	1
   335                           
   336                           	psect	cstackCOMRAM
   337  000001                     __pcstackCOMRAM:
   338                           	callstack 0
   339  000001                     ??_Lcd_Cmd:
   340  000001                     ??_Lcd_Chr_CP:
   341  000001                     ??_isdigit:
   342  000001                     ?_adc_amostra:
   343                           	callstack 0
   344  000001                     ?___wmul:
   345                           	callstack 0
   346  000001                     ?___awmod:
   347                           	callstack 0
   348  000001                     ?___lwmod:
   349                           	callstack 0
   350  000001                     ?__tdiv_to_l_:
   351                           	callstack 0
   352  000001                     ?__div_to_l_:
   353                           	callstack 0
   354  000001                     ?___lldiv:
   355                           	callstack 0
   356  000001                     ?___flneg:
   357                           	callstack 0
   358  000001                     ?___xxtofl:
   359                           	callstack 0
   360  000001                     ___wmul@multiplier:
   361                           	callstack 0
   362  000001                     ___awmod@dividend:
   363                           	callstack 0
   364  000001                     ___lwmod@dividend:
   365                           	callstack 0
   366  000001                     ___lldiv@dividend:
   367                           	callstack 0
   368  000001                     __div_to_l_@f1:
   369                           	callstack 0
   370  000001                     ___fleq@ff1:
   371                           	callstack 0
   372  000001                     ___flge@ff1:
   373                           	callstack 0
   374  000001                     ___flneg@f1:
   375                           	callstack 0
   376  000001                     __tdiv_to_l_@f1:
   377                           	callstack 0
   378  000001                     ___xxtofl@val:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x0
   382  000001                     	ds	1
   383  000002                     _isdigit$929:
   384                           	callstack 0
   385                           
   386                           ; 1 bytes @ 0x1
   387  000002                     	ds	1
   388  000003                     ??_adc_amostra:
   389  000003                     Lcd_Chr_CP@data:
   390                           	callstack 0
   391  000003                     Lcd_Cmd@data:
   392                           	callstack 0
   393  000003                     isdigit@c:
   394                           	callstack 0
   395  000003                     ___wmul@multiplicand:
   396                           	callstack 0
   397  000003                     ___awmod@divisor:
   398                           	callstack 0
   399  000003                     ___lwmod@divisor:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0x2
   403  000003                     	ds	1
   404  000004                     ??_Lcd_Init:
   405  000004                     Lcd_Out@x:
   406                           	callstack 0
   407                           
   408                           ; 1 bytes @ 0x3
   409  000004                     	ds	1
   410  000005                     ??___xxtofl:
   411  000005                     Lcd_Init@data:
   412                           	callstack 0
   413  000005                     ___awmod@counter:
   414                           	callstack 0
   415  000005                     ___lwmod@counter:
   416                           	callstack 0
   417  000005                     Lcd_Out@buffer:
   418                           	callstack 0
   419  000005                     ___wmul@product:
   420                           	callstack 0
   421  000005                     ___lldiv@divisor:
   422                           	callstack 0
   423  000005                     __div_to_l_@f2:
   424                           	callstack 0
   425  000005                     ___fleq@ff2:
   426                           	callstack 0
   427  000005                     ___flge@ff2:
   428                           	callstack 0
   429  000005                     __tdiv_to_l_@f2:
   430                           	callstack 0
   431                           
   432                           ; 4 bytes @ 0x4
   433  000005                     	ds	1
   434  000006                     ?___lwdiv:
   435                           	callstack 0
   436  000006                     ___awmod@sign:
   437                           	callstack 0
   438  000006                     ___lwdiv@dividend:
   439                           	callstack 0
   440                           
   441                           ; 2 bytes @ 0x5
   442  000006                     	ds	1
   443  000007                     ?___awdiv:
   444                           	callstack 0
   445  000007                     Lcd_Out@y:
   446                           	callstack 0
   447  000007                     adc_amostra@canal:
   448                           	callstack 0
   449  000007                     ___awdiv@dividend:
   450                           	callstack 0
   451                           
   452                           ; 2 bytes @ 0x6
   453  000007                     	ds	1
   454  000008                     Lcd_Out@data:
   455                           	callstack 0
   456  000008                     ___lwdiv@divisor:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x7
   460  000008                     	ds	1
   461  000009                     ??__tdiv_to_l_:
   462  000009                     ??___fleq:
   463  000009                     ??___flge:
   464  000009                     ___xxtofl@sign:
   465                           	callstack 0
   466  000009                     ___awdiv@divisor:
   467                           	callstack 0
   468  000009                     ___lldiv@quotient:
   469                           	callstack 0
   470  000009                     __div_to_l_@quot:
   471                           	callstack 0
   472                           
   473                           ; 4 bytes @ 0x8
   474  000009                     	ds	1
   475  00000A                     ___xxtofl@exp:
   476                           	callstack 0
   477  00000A                     ___lwdiv@quotient:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x9
   481  00000A                     	ds	1
   482  00000B                     ___awdiv@counter:
   483                           	callstack 0
   484  00000B                     ___xxtofl@arg:
   485                           	callstack 0
   486                           
   487                           ; 4 bytes @ 0xA
   488  00000B                     	ds	1
   489  00000C                     ___awdiv@sign:
   490                           	callstack 0
   491  00000C                     ___lwdiv@counter:
   492                           	callstack 0
   493  00000C                     __tdiv_to_l_@quot:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0xB
   497  00000C                     	ds	1
   498  00000D                     ___lldiv@counter:
   499                           	callstack 0
   500  00000D                     __div_to_l_@cntr:
   501                           	callstack 0
   502  00000D                     ___awdiv@quotient:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0xC
   506  00000D                     	ds	1
   507  00000E                     ?___llmod:
   508                           	callstack 0
   509  00000E                     __div_to_l_@exp1:
   510                           	callstack 0
   511  00000E                     ___llmod@dividend:
   512                           	callstack 0
   513                           
   514                           ; 4 bytes @ 0xD
   515  00000E                     	ds	1
   516  00000F                     ?___flmul:
   517                           	callstack 0
   518  00000F                     ___flmul@b:
   519                           	callstack 0
   520                           
   521                           ; 4 bytes @ 0xE
   522  00000F                     	ds	1
   523  000010                     __tdiv_to_l_@cntr:
   524                           	callstack 0
   525                           
   526                           ; 1 bytes @ 0xF
   527  000010                     	ds	1
   528  000011                     __tdiv_to_l_@exp1:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x10
   532  000011                     	ds	1
   533  000012                     ___llmod@divisor:
   534                           	callstack 0
   535                           
   536                           ; 4 bytes @ 0x11
   537  000012                     	ds	1
   538  000013                     ___flmul@a:
   539                           	callstack 0
   540                           
   541                           ; 4 bytes @ 0x12
   542  000013                     	ds	3
   543  000016                     ___llmod@counter:
   544                           	callstack 0
   545                           
   546                           ; 1 bytes @ 0x15
   547  000016                     	ds	1
   548  000017                     ??___flmul:
   549                           
   550                           ; 1 bytes @ 0x16
   551  000017                     	ds	4
   552  00001B                     ___flmul@sign:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x1A
   556  00001B                     	ds	1
   557  00001C                     ___flmul@grs:
   558                           	callstack 0
   559                           
   560                           ; 4 bytes @ 0x1B
   561  00001C                     	ds	4
   562  000020                     ___flmul@aexp:
   563                           	callstack 0
   564                           
   565                           ; 1 bytes @ 0x1F
   566  000020                     	ds	1
   567  000021                     ___flmul@bexp:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0x20
   571  000021                     	ds	1
   572  000022                     ___flmul@prod:
   573                           	callstack 0
   574                           
   575                           ; 4 bytes @ 0x21
   576  000022                     	ds	4
   577  000026                     ___flmul@temp:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x25
   581  000026                     	ds	2
   582  000028                     ?___fldiv:
   583                           	callstack 0
   584  000028                     ?_fround:
   585                           	callstack 0
   586  000028                     ?_scale:
   587                           	callstack 0
   588  000028                     ___fldiv@b:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0x27
   592  000028                     	ds	4
   593  00002C                     ___fldiv@a:
   594                           	callstack 0
   595  00002C                     _fround$1116:
   596                           	callstack 0
   597  00002C                     _scale$1117:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x2B
   601  00002C                     	ds	4
   602  000030                     ??___fldiv:
   603  000030                     scale@scl:
   604                           	callstack 0
   605  000030                     _fround$1115:
   606                           	callstack 0
   607                           
   608                           ; 4 bytes @ 0x2F
   609  000030                     	ds	1
   610  000031                     ?___fltol:
   611                           	callstack 0
   612  000031                     ___fltol@f1:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x30
   616  000031                     	ds	3
   617  000034                     fround@prec:
   618                           	callstack 0
   619  000034                     ___fldiv@rem:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x33
   623  000034                     	ds	1
   624  000035                     ??___fltol:
   625  000035                     ?___fladd:
   626                           	callstack 0
   627  000035                     ___fladd@b:
   628                           	callstack 0
   629                           
   630                           ; 4 bytes @ 0x34
   631  000035                     	ds	3
   632  000038                     ___fldiv@sign:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0x37
   636  000038                     	ds	1
   637  000039                     ___fltol@sign1:
   638                           	callstack 0
   639  000039                     ___fldiv@new_exp:
   640                           	callstack 0
   641  000039                     ___fladd@a:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0x38
   645  000039                     	ds	1
   646  00003A                     ___fltol@exp1:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x39
   650  00003A                     	ds	1
   651  00003B                     ___fldiv@grs:
   652                           	callstack 0
   653                           
   654                           ; 4 bytes @ 0x3A
   655  00003B                     	ds	2
   656  00003D                     ??___fladd:
   657                           
   658                           ; 1 bytes @ 0x3C
   659  00003D                     	ds	2
   660  00003F                     ___fldiv@bexp:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x3E
   664  00003F                     	ds	1
   665  000040                     ___fldiv@aexp:
   666                           	callstack 0
   667                           
   668                           ; 1 bytes @ 0x3F
   669  000040                     	ds	1
   670  000041                     ___fladd@signs:
   671                           	callstack 0
   672                           
   673                           ; 1 bytes @ 0x40
   674  000041                     	ds	1
   675  000042                     ___fladd@aexp:
   676                           	callstack 0
   677                           
   678                           ; 1 bytes @ 0x41
   679  000042                     	ds	1
   680  000043                     ___fladd@bexp:
   681                           	callstack 0
   682                           
   683                           ; 1 bytes @ 0x42
   684  000043                     	ds	1
   685  000044                     ___fladd@grs:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x43
   689  000044                     	ds	1
   690  000045                     ?___flsub:
   691                           	callstack 0
   692  000045                     ___flsub@b:
   693                           	callstack 0
   694                           
   695                           ; 4 bytes @ 0x44
   696  000045                     	ds	4
   697  000049                     ___flsub@a:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x48
   701  000049                     	ds	4
   702  00004D                     ?_sprintf:
   703                           	callstack 0
   704  00004D                     sprintf@sp:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x4C
   708  00004D                     	ds	2
   709  00004F                     sprintf@f:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x4E
   713  00004F                     	ds	6
   714  000055                     ??_sprintf:
   715                           
   716                           ; 1 bytes @ 0x54
   717  000055                     	ds	4
   718  000059                     
   719                           ; 1 bytes @ 0x58
   720 ;;
   721 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   722 ;;
   723 ;; *************** function _main *****************
   724 ;; Defined at:
   725 ;;		line 36 in file "mainADC.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   739 ;;      Params:         0       0       0       0       0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0       0       0
   742 ;;      Totals:         0       0       0       0       0       0       0       0       0
   743 ;;Total ram usage:        0 bytes
   744 ;; Hardware stack levels required when called:    3
   745 ;; This function calls:
   746 ;;		_Lcd_Cmd
   747 ;;		_Lcd_Init
   748 ;;		_Lcd_Out
   749 ;;		___fldiv
   750 ;;		___flmul
   751 ;;		___xxtofl
   752 ;;		_adc_amostra
   753 ;;		_adc_init
   754 ;;		_sprintf
   755 ;; This function is called by:
   756 ;;		Startup code after reset
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           	psect	text0
   761  002EEE                     __ptext0:
   762                           	callstack 0
   763  002EEE                     _main:
   764                           	callstack 28
   765  002EEE                     
   766                           ;mainADC.c: 43: INTCON2bits.RBPU = 1;
   767  002EEE  8EF1               	bsf	241,7,c	;volatile
   768                           
   769                           ;mainADC.c: 46: TRISA = 0xFF;
   770  002EF0  6892               	setf	146,c	;volatile
   771  002EF2                     
   772                           ;mainADC.c: 47: TRISB = 0b00000000;
   773  002EF2  0E00               	movlw	0
   774  002EF4  6E93               	movwf	147,c	;volatile
   775                           
   776                           ;mainADC.c: 48: TRISC = 0b00000000;
   777  002EF6  0E00               	movlw	0
   778  002EF8  6E94               	movwf	148,c	;volatile
   779                           
   780                           ;mainADC.c: 49: TRISD = 0b00001111;
   781  002EFA  0E0F               	movlw	15
   782  002EFC  6E95               	movwf	149,c	;volatile
   783                           
   784                           ;mainADC.c: 50: TRISE = 0b00000000;
   785  002EFE  0E00               	movlw	0
   786  002F00  6E96               	movwf	150,c	;volatile
   787                           
   788                           ;mainADC.c: 52: PORTA = 0;
   789  002F02  0E00               	movlw	0
   790  002F04  6E80               	movwf	128,c	;volatile
   791                           
   792                           ;mainADC.c: 53: LATA = 0;
   793  002F06  0E00               	movlw	0
   794  002F08  6E89               	movwf	137,c	;volatile
   795                           
   796                           ;mainADC.c: 54: PORTB = 0;
   797  002F0A  0E00               	movlw	0
   798  002F0C  6E81               	movwf	129,c	;volatile
   799                           
   800                           ;mainADC.c: 55: LATB = 0;
   801  002F0E  0E00               	movlw	0
   802  002F10  6E8A               	movwf	138,c	;volatile
   803                           
   804                           ;mainADC.c: 56: PORTC = 0;
   805  002F12  0E00               	movlw	0
   806  002F14  6E82               	movwf	130,c	;volatile
   807                           
   808                           ;mainADC.c: 57: LATC = 0;
   809  002F16  0E00               	movlw	0
   810  002F18  6E8B               	movwf	139,c	;volatile
   811                           
   812                           ;mainADC.c: 58: PORTD = 0;
   813  002F1A  0E00               	movlw	0
   814  002F1C  6E83               	movwf	131,c	;volatile
   815                           
   816                           ;mainADC.c: 59: LATD = 0;
   817  002F1E  0E00               	movlw	0
   818  002F20  6E8C               	movwf	140,c	;volatile
   819                           
   820                           ;mainADC.c: 60: PORTE = 0;
   821  002F22  0E00               	movlw	0
   822  002F24  6E84               	movwf	132,c	;volatile
   823                           
   824                           ;mainADC.c: 61: LATE = 0;
   825  002F26  0E00               	movlw	0
   826  002F28  6E8D               	movwf	141,c	;volatile
   827  002F2A                     
   828                           ;mainADC.c: 63: adc_init();
   829  002F2A  EC40  F01D         	call	_adc_init	;wreg free
   830  002F2E                     
   831                           ;mainADC.c: 64: Lcd_Init();
   832  002F2E  ECA5  F018         	call	_Lcd_Init	;wreg free
   833  002F32                     
   834                           ;mainADC.c: 65: Lcd_Cmd(12);
   835  002F32  0E0C               	movlw	12
   836  002F34  EC0F  F018         	call	_Lcd_Cmd
   837  002F38                     l104:
   838  002F38  0004               	clrwdt		;# 
   839  002F3A                     
   840                           ;mainADC.c: 71: adcResult = (adc_amostra(0));
   841  002F3A  0E00               	movlw	0
   842  002F3C  EC1C  F01C         	call	_adc_amostra
   843  002F40  C001  F059         	movff	?_adc_amostra,_adcResult
   844  002F44  C002  F05A         	movff	?_adc_amostra+1,_adcResult+1
   845  002F48                     
   846                           ;mainADC.c: 72: volt = (adcResult*5.0)/1024;
   847  002F48  0E00               	movlw	0
   848  002F4A  6E13               	movwf	___flmul@a^0,c
   849  002F4C  0E00               	movlw	0
   850  002F4E  6E14               	movwf	(___flmul@a+1)^0,c
   851  002F50  0EA0               	movlw	160
   852  002F52  6E15               	movwf	(___flmul@a+2)^0,c
   853  002F54  0E40               	movlw	64
   854  002F56  6E16               	movwf	(___flmul@a+3)^0,c
   855  002F58  C059  F001         	movff	_adcResult,___xxtofl@val
   856  002F5C  C05A  F002         	movff	_adcResult+1,___xxtofl@val+1
   857  002F60  6A03               	clrf	(___xxtofl@val+2)^0,c
   858  002F62  6A04               	clrf	(___xxtofl@val+3)^0,c
   859  002F64  0E00               	movlw	0
   860  002F66  ECB2  F014         	call	___xxtofl
   861  002F6A  C001  F00F         	movff	?___xxtofl,___flmul@b
   862  002F6E  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
   863  002F72  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
   864  002F76  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
   865  002F7A  EC79  F00D         	call	___flmul	;wreg free
   866  002F7E  C00F  F028         	movff	?___flmul,___fldiv@b
   867  002F82  C010  F029         	movff	?___flmul+1,___fldiv@b+1
   868  002F86  C011  F02A         	movff	?___flmul+2,___fldiv@b+2
   869  002F8A  C012  F02B         	movff	?___flmul+3,___fldiv@b+3
   870  002F8E  0E00               	movlw	0
   871  002F90  6E2C               	movwf	___fldiv@a^0,c
   872  002F92  0E00               	movlw	0
   873  002F94  6E2D               	movwf	(___fldiv@a+1)^0,c
   874  002F96  0E80               	movlw	128
   875  002F98  6E2E               	movwf	(___fldiv@a+2)^0,c
   876  002F9A  0E44               	movlw	68
   877  002F9C  6E2F               	movwf	(___fldiv@a+3)^0,c
   878  002F9E  EC94  F011         	call	___fldiv	;wreg free
   879  002FA2  C028  F07B         	movff	?___fldiv,_volt
   880  002FA6  C029  F07C         	movff	?___fldiv+1,_volt+1
   881  002FAA  C02A  F07D         	movff	?___fldiv+2,_volt+2
   882  002FAE  C02B  F07E         	movff	?___fldiv+3,_volt+3
   883  002FB2                     
   884                           ;mainADC.c: 73: sprintf(str, "ADC = %04d", adcResult);
   885  002FB2  0E7F               	movlw	low _str
   886  002FB4  6E4D               	movwf	sprintf@sp^0,c
   887  002FB6  0E00               	movlw	high _str
   888  002FB8  6E4E               	movwf	(sprintf@sp+1)^0,c
   889  002FBA  0EA3               	movlw	low STR_1
   890  002FBC  6E4F               	movwf	sprintf@f^0,c
   891  002FBE  0E08               	movlw	high STR_1
   892  002FC0  6E50               	movwf	(sprintf@f+1)^0,c
   893  002FC2  C059  F051         	movff	_adcResult,?_sprintf+4
   894  002FC6  C05A  F052         	movff	_adcResult+1,?_sprintf+5
   895  002FCA  EC58  F004         	call	_sprintf	;wreg free
   896  002FCE                     
   897                           ;mainADC.c: 74: Lcd_Out(1, 0, str);
   898  002FCE  0E00               	movlw	0
   899  002FD0  6E04               	movwf	Lcd_Out@x^0,c
   900  002FD2  0E7F               	movlw	low _str
   901  002FD4  6E05               	movwf	Lcd_Out@buffer^0,c
   902  002FD6  0E00               	movlw	high _str
   903  002FD8  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   904  002FDA  0E01               	movlw	1
   905  002FDC  EC93  F01B         	call	_Lcd_Out
   906  002FE0                     
   907                           ;mainADC.c: 75: sprintf(str, "Tensao = %05.2f V", volt);
   908  002FE0  0E7F               	movlw	low _str
   909  002FE2  6E4D               	movwf	sprintf@sp^0,c
   910  002FE4  0E00               	movlw	high _str
   911  002FE6  6E4E               	movwf	(sprintf@sp+1)^0,c
   912  002FE8  0E91               	movlw	low STR_2
   913  002FEA  6E4F               	movwf	sprintf@f^0,c
   914  002FEC  0E08               	movlw	high STR_2
   915  002FEE  6E50               	movwf	(sprintf@f+1)^0,c
   916  002FF0  C07B  F051         	movff	_volt,?_sprintf+4
   917  002FF4  C07C  F052         	movff	_volt+1,?_sprintf+5
   918  002FF8  C07D  F053         	movff	_volt+2,?_sprintf+6
   919  002FFC  C07E  F054         	movff	_volt+3,?_sprintf+7
   920  003000  EC58  F004         	call	_sprintf	;wreg free
   921  003004                     
   922                           ;mainADC.c: 76: Lcd_Out(2, 0, str);
   923  003004  0E00               	movlw	0
   924  003006  6E04               	movwf	Lcd_Out@x^0,c
   925  003008  0E7F               	movlw	low _str
   926  00300A  6E05               	movwf	Lcd_Out@buffer^0,c
   927  00300C  0E00               	movlw	high _str
   928  00300E  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   929  003010  0E02               	movlw	2
   930  003012  EC93  F01B         	call	_Lcd_Out
   931  003016  EF9C  F017         	goto	l104
   932  00301A  EF00  F000         	goto	start
   933  00301E                     __end_of_main:
   934                           	callstack 0
   935                           
   936 ;; *************** function _sprintf *****************
   937 ;; Defined at:
   938 ;;		line 505 in file "D:\MPLABX\XC8\pic\sources\c90\common\doprnt.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;  sp              2   76[COMRAM] PTR unsigned char 
   941 ;;		 -> str(4), 
   942 ;;  f               2   78[COMRAM] PTR const unsigned char 
   943 ;;		 -> STR_2(18), STR_1(11), 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  fval            4   20[BANK0 ] PTR const unsigned char 
   946 ;;  val             4   10[BANK0 ] unsigned long 
   947 ;;  tmpval          4    6[BANK0 ] struct .
   948 ;;  cp              3    0        PTR const unsigned char 
   949 ;;  prec            2   24[BANK0 ] int 
   950 ;;  width           2   18[BANK0 ] int 
   951 ;;  flag            2   16[BANK0 ] unsigned short 
   952 ;;  eexp            2   14[BANK0 ] int 
   953 ;;  ap              2    4[BANK0 ] PTR void [1]
   954 ;;		 -> ?_sprintf(2), 
   955 ;;  len             2    0        unsigned int 
   956 ;;  c               1   26[BANK0 ] unsigned char 
   957 ;;  d               1    0        unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  2   76[COMRAM] int 
   960 ;; Registers used:
   961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   967 ;;      Params:         8       0       0       0       0       0       0       0       0
   968 ;;      Locals:         0      27       0       0       0       0       0       0       0
   969 ;;      Temps:          4       0       0       0       0       0       0       0       0
   970 ;;      Totals:        12      27       0       0       0       0       0       0       0
   971 ;;Total ram usage:       39 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    2
   974 ;; This function calls:
   975 ;;		___awdiv
   976 ;;		___fladd
   977 ;;		___fleq
   978 ;;		___flge
   979 ;;		___flmul
   980 ;;		___flneg
   981 ;;		___flsub
   982 ;;		___fltol
   983 ;;		___lldiv
   984 ;;		___llmod
   985 ;;		___wmul
   986 ;;		___xxtofl
   987 ;;		__div_to_l_
   988 ;;		__tdiv_to_l_
   989 ;;		_fround
   990 ;;		_isdigit
   991 ;;		_scale
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text1
   998  0008B0                     __ptext1:
   999                           	callstack 0
  1000  0008B0                     _sprintf:
  1001                           	callstack 28
  1002  0008B0                     
  1003                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  1004  0008B0  0E51               	movlw	low (?_sprintf+4)
  1005  0008B2  0100               	movlb	0	; () banked
  1006  0008B4  6F64               	movwf	sprintf@ap& (0+255),b
  1007  0008B6  0E00               	movlw	high (?_sprintf+4)
  1008  0008B8  6F65               	movwf	(sprintf@ap+1)& (0+255),b
  1009                           
  1010                           ;doprnt.c: 553: while((c = *f++)) {
  1011  0008BA  EF01  F00B         	goto	l3864
  1012  0008BE                     l3538:
  1013                           
  1014                           ; BSR set to: 0
  1015                           ;doprnt.c: 555: if(c != '%')
  1016  0008BE  0E25               	movlw	37
  1017  0008C0  197A               	xorwf	sprintf@c& (0+255),w,b
  1018  0008C2  B4D8               	btfsc	status,2,c
  1019  0008C4  EF66  F004         	goto	u3651
  1020  0008C8  EF68  F004         	goto	u3650
  1021  0008CC                     u3651:
  1022  0008CC  EF72  F004         	goto	l3544
  1023  0008D0                     u3650:
  1024  0008D0                     
  1025                           ; BSR set to: 0
  1026                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  1027  0008D0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1028  0008D4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1029  0008D8  C07A  FFDF         	movff	sprintf@c,indf2
  1030  0008DC                     
  1031                           ; BSR set to: 0
  1032  0008DC  4A4D               	infsnz	sprintf@sp^0,f,c
  1033  0008DE  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1034                           
  1035                           ;doprnt.c: 559: continue;
  1036  0008E0  EF01  F00B         	goto	l3864
  1037  0008E4                     l3544:
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  1041  0008E4  0E00               	movlw	0
  1042  0008E6  6F73               	movwf	(sprintf@width+1)& (0+255),b
  1043  0008E8  0E00               	movlw	0
  1044  0008EA  6F72               	movwf	sprintf@width& (0+255),b
  1045                           
  1046                           ;doprnt.c: 565: flag = 0;
  1047  0008EC  0E00               	movlw	0
  1048  0008EE  6F71               	movwf	(sprintf@flag+1)& (0+255),b
  1049  0008F0  0E00               	movlw	0
  1050  0008F2  6F70               	movwf	sprintf@flag& (0+255),b
  1051  0008F4  EF7F  F004         	goto	l3550
  1052  0008F8                     l3546:
  1053                           
  1054                           ; BSR set to: 0
  1055                           ;doprnt.c: 597: flag |= 0x04;
  1056  0008F8  8570               	bsf	sprintf@flag& (0+255),2,b
  1057                           
  1058                           ;doprnt.c: 598: f++;
  1059  0008FA  4A4F               	infsnz	sprintf@f^0,f,c
  1060  0008FC  2A50               	incf	(sprintf@f+1)^0,f,c
  1061  0008FE                     l3550:
  1062                           
  1063                           ; BSR set to: 0
  1064  0008FE  C04F  FFF6         	movff	sprintf@f,tblptrl
  1065  000902  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1066  000906                     	if	0	;tblptru may be non-zero
  1067  000906                     	endif
  1068  000906                     	if	0	;tblptru may be non-zero
  1069  000906                     	endif
  1070  000906  0008               	tblrd		*
  1071  000908  50F5               	movf	tablat,w,c
  1072                           
  1073                           ; Switch size 1, requested type "simple"
  1074                           ; Number of cases is 1, Range of values is 48 to 48
  1075                           ; switch strategies available:
  1076                           ; Name         Instructions Cycles
  1077                           ; simple_byte            4     3 (average)
  1078                           ;	Chosen strategy is simple_byte
  1079  00090A  0A30               	xorlw	48	; case 48
  1080  00090C  B4D8               	btfsc	status,2,c
  1081  00090E  EF7C  F004         	goto	l3546
  1082  000912  EF8B  F004         	goto	l3552
  1083  000916                     l3552:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  1087  000916  C04F  FFF6         	movff	sprintf@f,tblptrl
  1088  00091A  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1089  00091E                     	if	0	;tblptru may be non-zero
  1090  00091E                     	endif
  1091  00091E                     	if	0	;tblptru may be non-zero
  1092  00091E                     	endif
  1093  00091E  0008               	tblrd		*
  1094  000920  50F5               	movf	tablat,w,c
  1095  000922  EC05  F01D         	call	_isdigit
  1096  000926  A0D8               	btfss	status,0,c
  1097  000928  EF98  F004         	goto	u3661
  1098  00092C  EF9A  F004         	goto	u3660
  1099  000930                     u3661:
  1100  000930  EFD3  F004         	goto	l3564
  1101  000934                     u3660:
  1102  000934                     
  1103                           ;doprnt.c: 615: width = 0;
  1104  000934  0E00               	movlw	0
  1105  000936  0100               	movlb	0	; () banked
  1106  000938  6F73               	movwf	(sprintf@width+1)& (0+255),b
  1107  00093A  0E00               	movlw	0
  1108  00093C  6F72               	movwf	sprintf@width& (0+255),b
  1109  00093E                     l3556:
  1110                           
  1111                           ;doprnt.c: 617: width *= 10;
  1112  00093E  C072  F001         	movff	sprintf@width,___wmul@multiplier
  1113  000942  C073  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1114  000946  0E00               	movlw	0
  1115  000948  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1116  00094A  0E0A               	movlw	10
  1117  00094C  6E03               	movwf	___wmul@multiplicand^0,c
  1118  00094E  EC1E  F01D         	call	___wmul	;wreg free
  1119  000952  C001  F072         	movff	?___wmul,sprintf@width
  1120  000956  C002  F073         	movff	?___wmul+1,sprintf@width+1
  1121  00095A                     
  1122                           ;doprnt.c: 618: width += *f++ - '0';
  1123  00095A  0ED0               	movlw	208
  1124  00095C  6E55               	movwf	??_sprintf^0,c
  1125  00095E  0EFF               	movlw	255
  1126  000960  6E56               	movwf	(??_sprintf+1)^0,c
  1127  000962  C04F  FFF6         	movff	sprintf@f,tblptrl
  1128  000966  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1129  00096A                     	if	0	;tblptru may be non-zero
  1130  00096A                     	endif
  1131  00096A                     	if	0	;tblptru may be non-zero
  1132  00096A                     	endif
  1133  00096A  0008               	tblrd		*
  1134  00096C  50F5               	movf	tablat,w,c
  1135  00096E  6E57               	movwf	(??_sprintf+2)^0,c
  1136  000970  6A58               	clrf	(??_sprintf+3)^0,c
  1137  000972  5055               	movf	??_sprintf^0,w,c
  1138  000974  2657               	addwf	(??_sprintf+2)^0,f,c
  1139  000976  5056               	movf	(??_sprintf+1)^0,w,c
  1140  000978  2258               	addwfc	(??_sprintf+3)^0,f,c
  1141  00097A  5057               	movf	(??_sprintf+2)^0,w,c
  1142  00097C  0100               	movlb	0	; () banked
  1143  00097E  2772               	addwf	sprintf@width& (0+255),f,b
  1144  000980  5058               	movf	(??_sprintf+3)^0,w,c
  1145  000982  2373               	addwfc	(sprintf@width+1)& (0+255),f,b
  1146  000984                     
  1147                           ; BSR set to: 0
  1148  000984  4A4F               	infsnz	sprintf@f^0,f,c
  1149  000986  2A50               	incf	(sprintf@f+1)^0,f,c
  1150  000988                     
  1151                           ; BSR set to: 0
  1152                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  1153  000988  C04F  FFF6         	movff	sprintf@f,tblptrl
  1154  00098C  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1155  000990                     	if	0	;tblptru may be non-zero
  1156  000990                     	endif
  1157  000990                     	if	0	;tblptru may be non-zero
  1158  000990                     	endif
  1159  000990  0008               	tblrd		*
  1160  000992  50F5               	movf	tablat,w,c
  1161  000994  EC05  F01D         	call	_isdigit
  1162  000998  B0D8               	btfsc	status,0,c
  1163  00099A  EFD1  F004         	goto	u3671
  1164  00099E  EFD3  F004         	goto	u3670
  1165  0009A2                     u3671:
  1166  0009A2  EF9F  F004         	goto	l3556
  1167  0009A6                     u3670:
  1168  0009A6                     l3564:
  1169                           
  1170                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  1171  0009A6  C04F  FFF6         	movff	sprintf@f,tblptrl
  1172  0009AA  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1173  0009AE                     	if	0	;tblptru may be non-zero
  1174  0009AE                     	endif
  1175  0009AE                     	if	0	;tblptru may be non-zero
  1176  0009AE                     	endif
  1177  0009AE  0008               	tblrd		*
  1178  0009B0  50F5               	movf	tablat,w,c
  1179  0009B2  0A2E               	xorlw	46
  1180  0009B4  A4D8               	btfss	status,2,c
  1181  0009B6  EFDF  F004         	goto	u3681
  1182  0009BA  EFE1  F004         	goto	u3680
  1183  0009BE                     u3681:
  1184  0009BE  EF21  F005         	goto	l3578
  1185  0009C2                     u3680:
  1186  0009C2                     
  1187                           ;doprnt.c: 629: flag |= 0x4000;
  1188  0009C2  0100               	movlb	0	; () banked
  1189  0009C4  8D71               	bsf	(sprintf@flag+1)& (0+255),6,b
  1190                           
  1191                           ;doprnt.c: 630: f++;
  1192  0009C6  4A4F               	infsnz	sprintf@f^0,f,c
  1193  0009C8  2A50               	incf	(sprintf@f+1)^0,f,c
  1194  0009CA                     
  1195                           ; BSR set to: 0
  1196                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  1197  0009CA  0E00               	movlw	0
  1198  0009CC  6F79               	movwf	(sprintf@prec+1)& (0+255),b
  1199  0009CE  0E00               	movlw	0
  1200  0009D0  6F78               	movwf	sprintf@prec& (0+255),b
  1201                           
  1202                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  1203  0009D2  EF10  F005         	goto	l3576
  1204  0009D6                     l3570:
  1205                           
  1206                           ;doprnt.c: 647: prec *= 10;
  1207  0009D6  C078  F001         	movff	sprintf@prec,___wmul@multiplier
  1208  0009DA  C079  F002         	movff	sprintf@prec+1,___wmul@multiplier+1
  1209  0009DE  0E00               	movlw	0
  1210  0009E0  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1211  0009E2  0E0A               	movlw	10
  1212  0009E4  6E03               	movwf	___wmul@multiplicand^0,c
  1213  0009E6  EC1E  F01D         	call	___wmul	;wreg free
  1214  0009EA  C001  F078         	movff	?___wmul,sprintf@prec
  1215  0009EE  C002  F079         	movff	?___wmul+1,sprintf@prec+1
  1216  0009F2                     
  1217                           ;doprnt.c: 648: prec += *f++ - '0';
  1218  0009F2  0ED0               	movlw	208
  1219  0009F4  6E55               	movwf	??_sprintf^0,c
  1220  0009F6  0EFF               	movlw	255
  1221  0009F8  6E56               	movwf	(??_sprintf+1)^0,c
  1222  0009FA  C04F  FFF6         	movff	sprintf@f,tblptrl
  1223  0009FE  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1224  000A02                     	if	0	;tblptru may be non-zero
  1225  000A02                     	endif
  1226  000A02                     	if	0	;tblptru may be non-zero
  1227  000A02                     	endif
  1228  000A02  0008               	tblrd		*
  1229  000A04  50F5               	movf	tablat,w,c
  1230  000A06  6E57               	movwf	(??_sprintf+2)^0,c
  1231  000A08  6A58               	clrf	(??_sprintf+3)^0,c
  1232  000A0A  5055               	movf	??_sprintf^0,w,c
  1233  000A0C  2657               	addwf	(??_sprintf+2)^0,f,c
  1234  000A0E  5056               	movf	(??_sprintf+1)^0,w,c
  1235  000A10  2258               	addwfc	(??_sprintf+3)^0,f,c
  1236  000A12  5057               	movf	(??_sprintf+2)^0,w,c
  1237  000A14  0100               	movlb	0	; () banked
  1238  000A16  2778               	addwf	sprintf@prec& (0+255),f,b
  1239  000A18  5058               	movf	(??_sprintf+3)^0,w,c
  1240  000A1A  2379               	addwfc	(sprintf@prec+1)& (0+255),f,b
  1241  000A1C                     
  1242                           ; BSR set to: 0
  1243  000A1C  4A4F               	infsnz	sprintf@f^0,f,c
  1244  000A1E  2A50               	incf	(sprintf@f+1)^0,f,c
  1245  000A20                     l3576:
  1246                           
  1247                           ; BSR set to: 0
  1248  000A20  C04F  FFF6         	movff	sprintf@f,tblptrl
  1249  000A24  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1250  000A28                     	if	0	;tblptru may be non-zero
  1251  000A28                     	endif
  1252  000A28                     	if	0	;tblptru may be non-zero
  1253  000A28                     	endif
  1254  000A28  0008               	tblrd		*
  1255  000A2A  50F5               	movf	tablat,w,c
  1256  000A2C  EC05  F01D         	call	_isdigit
  1257  000A30  B0D8               	btfsc	status,0,c
  1258  000A32  EF1D  F005         	goto	u3691
  1259  000A36  EF1F  F005         	goto	u3690
  1260  000A3A                     u3691:
  1261  000A3A  EFEB  F004         	goto	l3570
  1262  000A3E                     u3690:
  1263  000A3E  EF2C  F005         	goto	l3586
  1264  000A42                     l3578:
  1265                           
  1266                           ;doprnt.c: 652: prec = 0;
  1267  000A42  0E00               	movlw	0
  1268  000A44  0100               	movlb	0	; () banked
  1269  000A46  6F79               	movwf	(sprintf@prec+1)& (0+255),b
  1270  000A48  0E00               	movlw	0
  1271  000A4A  6F78               	movwf	sprintf@prec& (0+255),b
  1272  000A4C                     
  1273                           ; BSR set to: 0
  1274                           ;doprnt.c: 654: flag |= 0x1000;
  1275  000A4C  8971               	bsf	(sprintf@flag+1)& (0+255),4,b
  1276  000A4E  EF2C  F005         	goto	l3586
  1277  000A52                     l3582:
  1278                           
  1279                           ; BSR set to: 0
  1280                           ;doprnt.c: 689: flag |= 0x400;
  1281  000A52  8571               	bsf	(sprintf@flag+1)& (0+255),2,b
  1282                           
  1283                           ;doprnt.c: 690: break;
  1284  000A54  EF49  F005         	goto	l3588
  1285  000A58                     l3586:
  1286  000A58  C04F  FFF6         	movff	sprintf@f,tblptrl
  1287  000A5C  C050  FFF7         	movff	sprintf@f+1,tblptrh
  1288  000A60  4A4F               	infsnz	sprintf@f^0,f,c
  1289  000A62  2A50               	incf	(sprintf@f+1)^0,f,c
  1290  000A64                     	if	0	;tblptru may be non-zero
  1291  000A64                     	endif
  1292  000A64                     	if	0	;tblptru may be non-zero
  1293  000A64                     	endif
  1294  000A64  0008               	tblrd		*
  1295  000A66  CFF5 F07A          	movff	tablat,sprintf@c
  1296  000A6A  0100               	movlb	0	; () banked
  1297  000A6C  517A               	movf	sprintf@c& (0+255),w,b
  1298                           
  1299                           ; Switch size 1, requested type "simple"
  1300                           ; Number of cases is 4, Range of values is 0 to 105
  1301                           ; switch strategies available:
  1302                           ; Name         Instructions Cycles
  1303                           ; simple_byte           13     7 (average)
  1304                           ;	Chosen strategy is simple_byte
  1305  000A6E  0A00               	xorlw	0	; case 0
  1306  000A70  B4D8               	btfsc	status,2,c
  1307  000A72  EF12  F00B         	goto	l3866
  1308  000A76  0A64               	xorlw	100	; case 100
  1309  000A78  B4D8               	btfsc	status,2,c
  1310  000A7A  EF49  F005         	goto	l3588
  1311  000A7E  0A02               	xorlw	2	; case 102
  1312  000A80  B4D8               	btfsc	status,2,c
  1313  000A82  EF29  F005         	goto	l3582
  1314  000A86  0A0F               	xorlw	15	; case 105
  1315  000A88  B4D8               	btfsc	status,2,c
  1316  000A8A  EF49  F005         	goto	l3588
  1317  000A8E  EF01  F00B         	goto	l3864
  1318  000A92                     l3588:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;doprnt.c: 851: if(flag & (0x700)) {
  1322  000A92  0E07               	movlw	7
  1323  000A94  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
  1324  000A96  B4D8               	btfsc	status,2,c
  1325  000A98  EF50  F005         	goto	u3701
  1326  000A9C  EF52  F005         	goto	u3700
  1327  000AA0                     u3701:
  1328  000AA0  EF5A  F009         	goto	l3768
  1329  000AA4                     u3700:
  1330  000AA4                     
  1331                           ; BSR set to: 0
  1332                           ;doprnt.c: 853: if(flag & 0x1000)
  1333  000AA4  A971               	btfss	(sprintf@flag+1)& (0+255),4,b
  1334  000AA6  EF57  F005         	goto	u3711
  1335  000AAA  EF59  F005         	goto	u3710
  1336  000AAE                     u3711:
  1337  000AAE  EF5D  F005         	goto	l3594
  1338  000AB2                     u3710:
  1339  000AB2                     
  1340                           ; BSR set to: 0
  1341                           ;doprnt.c: 855: prec = 6;
  1342  000AB2  0E00               	movlw	0
  1343  000AB4  6F79               	movwf	(sprintf@prec+1)& (0+255),b
  1344  000AB6  0E06               	movlw	6
  1345  000AB8  6F78               	movwf	sprintf@prec& (0+255),b
  1346  000ABA                     l3594:
  1347                           
  1348                           ; BSR set to: 0
  1349                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1350  000ABA  C064  FFD9         	movff	sprintf@ap,fsr2l
  1351  000ABE  C065  FFDA         	movff	sprintf@ap+1,fsr2h
  1352  000AC2  CFDE F074          	movff	postinc2,sprintf@fval
  1353  000AC6  CFDE F075          	movff	postinc2,sprintf@fval+1
  1354  000ACA  CFDE F076          	movff	postinc2,sprintf@fval+2
  1355  000ACE  CFDE F077          	movff	postinc2,sprintf@fval+3
  1356  000AD2                     
  1357                           ; BSR set to: 0
  1358  000AD2  0E04               	movlw	4
  1359  000AD4  2764               	addwf	sprintf@ap& (0+255),f,b
  1360  000AD6  0E00               	movlw	0
  1361  000AD8  2365               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1362  000ADA                     
  1363                           ; BSR set to: 0
  1364                           ;doprnt.c: 857: if(fval < 0.0) {
  1365  000ADA  BF77               	btfsc	(sprintf@fval+3)& (0+255),7,b
  1366  000ADC  EF74  F005         	goto	u3720
  1367  000AE0  EF72  F005         	goto	u3721
  1368  000AE4                     u3721:
  1369  000AE4  EF89  F005         	goto	l3604
  1370  000AE8                     u3720:
  1371  000AE8                     
  1372                           ; BSR set to: 0
  1373                           ;doprnt.c: 858: fval = -fval;
  1374  000AE8  C074  F001         	movff	sprintf@fval,___flneg@f1
  1375  000AEC  C075  F002         	movff	sprintf@fval+1,___flneg@f1+1
  1376  000AF0  C076  F003         	movff	sprintf@fval+2,___flneg@f1+2
  1377  000AF4  C077  F004         	movff	sprintf@fval+3,___flneg@f1+3
  1378  000AF8  ECE9  F01C         	call	___flneg	;wreg free
  1379  000AFC  C001  F074         	movff	?___flneg,sprintf@fval
  1380  000B00  C002  F075         	movff	?___flneg+1,sprintf@fval+1
  1381  000B04  C003  F076         	movff	?___flneg+2,sprintf@fval+2
  1382  000B08  C004  F077         	movff	?___flneg+3,sprintf@fval+3
  1383  000B0C                     
  1384                           ;doprnt.c: 859: flag |= 0x03;
  1385  000B0C  0E03               	movlw	3
  1386  000B0E  0100               	movlb	0	; () banked
  1387  000B10  1370               	iorwf	sprintf@flag& (0+255),f,b
  1388  000B12                     l3604:
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  1392  000B12  0E00               	movlw	0
  1393  000B14  6F6F               	movwf	(sprintf@eexp+1)& (0+255),b
  1394  000B16  0E00               	movlw	0
  1395  000B18  6F6E               	movwf	sprintf@eexp& (0+255),b
  1396  000B1A                     
  1397                           ; BSR set to: 0
  1398                           ;doprnt.c: 862: if( fval!=0) {
  1399  000B1A  C074  F001         	movff	sprintf@fval,___fleq@ff1
  1400  000B1E  C075  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1401  000B22  C076  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1402  000B26  C077  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1403  000B2A  0E00               	movlw	0
  1404  000B2C  6E05               	movwf	___fleq@ff2^0,c
  1405  000B2E  0E00               	movlw	0
  1406  000B30  6E06               	movwf	(___fleq@ff2+1)^0,c
  1407  000B32  0E00               	movlw	0
  1408  000B34  6E07               	movwf	(___fleq@ff2+2)^0,c
  1409  000B36  0E00               	movlw	0
  1410  000B38  6E08               	movwf	(___fleq@ff2+3)^0,c
  1411  000B3A  ECEC  F01A         	call	___fleq	;wreg free
  1412  000B3E  B0D8               	btfsc	status,0,c
  1413  000B40  EFA4  F005         	goto	u3731
  1414  000B44  EFA6  F005         	goto	u3730
  1415  000B48                     u3731:
  1416  000B48  EF39  F006         	goto	l3632
  1417  000B4C                     u3730:
  1418  000B4C                     
  1419                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  1420  000B4C  0100               	movlb	0	; () banked
  1421  000B4E  3576               	rlcf	(sprintf@fval+2)& (0+255),w,b
  1422  000B50  3577               	rlcf	(sprintf@fval+3)& (0+255),w,b
  1423  000B52  0F82               	addlw	130
  1424  000B54  6F6E               	movwf	sprintf@eexp& (0+255),b
  1425  000B56  6B6F               	clrf	(sprintf@eexp+1)& (0+255),b
  1426  000B58  0EFF               	movlw	255
  1427  000B5A  236F               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1428  000B5C                     
  1429                           ; BSR set to: 0
  1430                           ;doprnt.c: 864: eexp--;
  1431  000B5C  076E               	decf	sprintf@eexp& (0+255),f,b
  1432  000B5E  A0D8               	btfss	status,0,c
  1433  000B60  076F               	decf	(sprintf@eexp+1)& (0+255),f,b
  1434  000B62                     
  1435                           ; BSR set to: 0
  1436                           ;doprnt.c: 865: eexp *= 3;
  1437  000B62  C06E  F001         	movff	sprintf@eexp,___wmul@multiplier
  1438  000B66  C06F  F002         	movff	sprintf@eexp+1,___wmul@multiplier+1
  1439  000B6A  0E00               	movlw	0
  1440  000B6C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  1441  000B6E  0E03               	movlw	3
  1442  000B70  6E03               	movwf	___wmul@multiplicand^0,c
  1443  000B72  EC1E  F01D         	call	___wmul	;wreg free
  1444  000B76  C001  F06E         	movff	?___wmul,sprintf@eexp
  1445  000B7A  C002  F06F         	movff	?___wmul+1,sprintf@eexp+1
  1446  000B7E                     
  1447                           ;doprnt.c: 866: eexp /= 10;
  1448  000B7E  C06E  F007         	movff	sprintf@eexp,___awdiv@dividend
  1449  000B82  C06F  F008         	movff	sprintf@eexp+1,___awdiv@dividend+1
  1450  000B86  0E00               	movlw	0
  1451  000B88  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  1452  000B8A  0E0A               	movlw	10
  1453  000B8C  6E09               	movwf	___awdiv@divisor^0,c
  1454  000B8E  EC32  F01A         	call	___awdiv	;wreg free
  1455  000B92  C007  F06E         	movff	?___awdiv,sprintf@eexp
  1456  000B96  C008  F06F         	movff	?___awdiv+1,sprintf@eexp+1
  1457  000B9A                     
  1458                           ;doprnt.c: 867: if(eexp < 0)
  1459  000B9A  0100               	movlb	0	; () banked
  1460  000B9C  BF6F               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1461  000B9E  EFD5  F005         	goto	u3740
  1462  000BA2  EFD3  F005         	goto	u3741
  1463  000BA6                     u3741:
  1464  000BA6  EFD8  F005         	goto	l3620
  1465  000BAA                     u3740:
  1466  000BAA                     
  1467                           ; BSR set to: 0
  1468                           ;doprnt.c: 868: eexp--;
  1469  000BAA  076E               	decf	sprintf@eexp& (0+255),f,b
  1470  000BAC  A0D8               	btfss	status,0,c
  1471  000BAE  076F               	decf	(sprintf@eexp+1)& (0+255),f,b
  1472  000BB0                     l3620:
  1473                           
  1474                           ; BSR set to: 0
  1475                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  1476  000BB0  516E               	movf	sprintf@eexp& (0+255),w,b
  1477  000BB2  0800               	sublw	0
  1478  000BB4  EC8E  F00F         	call	_scale
  1479  000BB8  C028  F066         	movff	?_scale,sprintf@tmpval
  1480  000BBC  C029  F067         	movff	?_scale+1,sprintf@tmpval+1
  1481  000BC0  C02A  F068         	movff	?_scale+2,sprintf@tmpval+2
  1482  000BC4  C02B  F069         	movff	?_scale+3,sprintf@tmpval+3
  1483  000BC8                     
  1484                           ;doprnt.c: 873: tmpval.integ *= fval;
  1485  000BC8  C066  F00F         	movff	sprintf@tmpval,___flmul@b
  1486  000BCC  C067  F010         	movff	sprintf@tmpval+1,___flmul@b+1
  1487  000BD0  C068  F011         	movff	sprintf@tmpval+2,___flmul@b+2
  1488  000BD4  C069  F012         	movff	sprintf@tmpval+3,___flmul@b+3
  1489  000BD8  C074  F013         	movff	sprintf@fval,___flmul@a
  1490  000BDC  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  1491  000BE0  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  1492  000BE4  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  1493  000BE8  EC79  F00D         	call	___flmul	;wreg free
  1494  000BEC  C00F  F066         	movff	?___flmul,sprintf@tmpval
  1495  000BF0  C010  F067         	movff	?___flmul+1,sprintf@tmpval+1
  1496  000BF4  C011  F068         	movff	?___flmul+2,sprintf@tmpval+2
  1497  000BF8  C012  F069         	movff	?___flmul+3,sprintf@tmpval+3
  1498  000BFC                     
  1499                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  1500  000BFC  C066  F001         	movff	sprintf@tmpval,___flge@ff1
  1501  000C00  C067  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1502  000C04  C068  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1503  000C08  C069  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1504  000C0C  0E00               	movlw	0
  1505  000C0E  6E05               	movwf	___flge@ff2^0,c
  1506  000C10  0E00               	movlw	0
  1507  000C12  6E06               	movwf	(___flge@ff2+1)^0,c
  1508  000C14  0E80               	movlw	128
  1509  000C16  6E07               	movwf	(___flge@ff2+2)^0,c
  1510  000C18  0E3F               	movlw	63
  1511  000C1A  6E08               	movwf	(___flge@ff2+3)^0,c
  1512  000C1C  ECB0  F019         	call	___flge	;wreg free
  1513  000C20  B0D8               	btfsc	status,0,c
  1514  000C22  EF15  F006         	goto	u3751
  1515  000C26  EF17  F006         	goto	u3750
  1516  000C2A                     u3751:
  1517  000C2A  EF1D  F006         	goto	l3628
  1518  000C2E                     u3750:
  1519  000C2E                     
  1520                           ;doprnt.c: 875: eexp--;
  1521  000C2E  0100               	movlb	0	; () banked
  1522  000C30  076E               	decf	sprintf@eexp& (0+255),f,b
  1523  000C32  A0D8               	btfss	status,0,c
  1524  000C34  076F               	decf	(sprintf@eexp+1)& (0+255),f,b
  1525  000C36  EF39  F006         	goto	l3632
  1526  000C3A                     l3628:
  1527                           
  1528                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  1529  000C3A  C066  F001         	movff	sprintf@tmpval,___flge@ff1
  1530  000C3E  C067  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1531  000C42  C068  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1532  000C46  C069  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1533  000C4A  0E00               	movlw	0
  1534  000C4C  6E05               	movwf	___flge@ff2^0,c
  1535  000C4E  0E00               	movlw	0
  1536  000C50  6E06               	movwf	(___flge@ff2+1)^0,c
  1537  000C52  0E20               	movlw	32
  1538  000C54  6E07               	movwf	(___flge@ff2+2)^0,c
  1539  000C56  0E41               	movlw	65
  1540  000C58  6E08               	movwf	(___flge@ff2+3)^0,c
  1541  000C5A  ECB0  F019         	call	___flge	;wreg free
  1542  000C5E  A0D8               	btfss	status,0,c
  1543  000C60  EF34  F006         	goto	u3761
  1544  000C64  EF36  F006         	goto	u3760
  1545  000C68                     u3761:
  1546  000C68  EF39  F006         	goto	l3632
  1547  000C6C                     u3760:
  1548  000C6C                     
  1549                           ;doprnt.c: 877: eexp++;
  1550  000C6C  0100               	movlb	0	; () banked
  1551  000C6E  4B6E               	infsnz	sprintf@eexp& (0+255),f,b
  1552  000C70  2B6F               	incf	(sprintf@eexp+1)& (0+255),f,b
  1553  000C72                     l3632:
  1554                           
  1555                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  1556  000C72  0100               	movlb	0	; () banked
  1557  000C74  BF79               	btfsc	(sprintf@prec+1)& (0+255),7,b
  1558  000C76  EF48  F006         	goto	u3770
  1559  000C7A  5179               	movf	(sprintf@prec+1)& (0+255),w,b
  1560  000C7C  E107               	bnz	u3771
  1561  000C7E  0E0D               	movlw	13
  1562  000C80  5D78               	subwf	sprintf@prec& (0+255),w,b
  1563  000C82  B0D8               	btfsc	status,0,c
  1564  000C84  EF46  F006         	goto	u3771
  1565  000C88  EF48  F006         	goto	u3770
  1566  000C8C                     u3771:
  1567  000C8C  EF65  F006         	goto	l3636
  1568  000C90                     u3770:
  1569  000C90                     
  1570                           ; BSR set to: 0
  1571                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  1572  000C90  C074  F035         	movff	sprintf@fval,___fladd@b
  1573  000C94  C075  F036         	movff	sprintf@fval+1,___fladd@b+1
  1574  000C98  C076  F037         	movff	sprintf@fval+2,___fladd@b+2
  1575  000C9C  C077  F038         	movff	sprintf@fval+3,___fladd@b+3
  1576  000CA0  5178               	movf	sprintf@prec& (0+255),w,b
  1577  000CA2  EC61  F013         	call	_fround
  1578  000CA6  C028  F039         	movff	?_fround,___fladd@a
  1579  000CAA  C029  F03A         	movff	?_fround+1,___fladd@a+1
  1580  000CAE  C02A  F03B         	movff	?_fround+2,___fladd@a+2
  1581  000CB2  C02B  F03C         	movff	?_fround+3,___fladd@a+3
  1582  000CB6  EC19  F00B         	call	___fladd	;wreg free
  1583  000CBA  C035  F074         	movff	?___fladd,sprintf@fval
  1584  000CBE  C036  F075         	movff	?___fladd+1,sprintf@fval+1
  1585  000CC2  C037  F076         	movff	?___fladd+2,sprintf@fval+2
  1586  000CC6  C038  F077         	movff	?___fladd+3,sprintf@fval+3
  1587  000CCA                     l3636:
  1588                           
  1589                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1590  000CCA  0100               	movlb	0	; () banked
  1591  000CCC  BF6F               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1592  000CCE  EF74  F006         	goto	u3780
  1593  000CD2  516F               	movf	(sprintf@eexp+1)& (0+255),w,b
  1594  000CD4  E107               	bnz	u3781
  1595  000CD6  0E0A               	movlw	10
  1596  000CD8  5D6E               	subwf	sprintf@eexp& (0+255),w,b
  1597  000CDA  B0D8               	btfsc	status,0,c
  1598  000CDC  EF72  F006         	goto	u3781
  1599  000CE0  EF74  F006         	goto	u3780
  1600  000CE4                     u3781:
  1601  000CE4  EFB1  F006         	goto	l3644
  1602  000CE8                     u3780:
  1603  000CE8                     
  1604                           ; BSR set to: 0
  1605  000CE8  C074  F001         	movff	sprintf@fval,___fleq@ff1
  1606  000CEC  C075  F002         	movff	sprintf@fval+1,___fleq@ff1+1
  1607  000CF0  C076  F003         	movff	sprintf@fval+2,___fleq@ff1+2
  1608  000CF4  C077  F004         	movff	sprintf@fval+3,___fleq@ff1+3
  1609  000CF8  0E00               	movlw	0
  1610  000CFA  6E05               	movwf	___fleq@ff2^0,c
  1611  000CFC  0E00               	movlw	0
  1612  000CFE  6E06               	movwf	(___fleq@ff2+1)^0,c
  1613  000D00  0E00               	movlw	0
  1614  000D02  6E07               	movwf	(___fleq@ff2+2)^0,c
  1615  000D04  0E00               	movlw	0
  1616  000D06  6E08               	movwf	(___fleq@ff2+3)^0,c
  1617  000D08  ECEC  F01A         	call	___fleq	;wreg free
  1618  000D0C  B0D8               	btfsc	status,0,c
  1619  000D0E  EF8B  F006         	goto	u3791
  1620  000D12  EF8D  F006         	goto	u3790
  1621  000D16                     u3791:
  1622  000D16  EF06  F007         	goto	l3658
  1623  000D1A                     u3790:
  1624  000D1A  C074  F031         	movff	sprintf@fval,___fltol@f1
  1625  000D1E  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1626  000D22  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1627  000D26  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1628  000D2A  EC2D  F019         	call	___fltol	;wreg free
  1629  000D2E  5031               	movf	?___fltol^0,w,c
  1630  000D30  1032               	iorwf	(?___fltol+1)^0,w,c
  1631  000D32  1033               	iorwf	(?___fltol+2)^0,w,c
  1632  000D34  1034               	iorwf	(?___fltol+3)^0,w,c
  1633  000D36  A4D8               	btfss	status,2,c
  1634  000D38  EFA0  F006         	goto	u3801
  1635  000D3C  EFA2  F006         	goto	u3800
  1636  000D40                     u3801:
  1637  000D40  EF06  F007         	goto	l3658
  1638  000D44                     u3800:
  1639  000D44  0100               	movlb	0	; () banked
  1640  000D46  BF6F               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  1641  000D48  EFAF  F006         	goto	u3811
  1642  000D4C  516F               	movf	(sprintf@eexp+1)& (0+255),w,b
  1643  000D4E  E109               	bnz	u3810
  1644  000D50  0E02               	movlw	2
  1645  000D52  5D6E               	subwf	sprintf@eexp& (0+255),w,b
  1646  000D54  A0D8               	btfss	status,0,c
  1647  000D56  EFAF  F006         	goto	u3811
  1648  000D5A  EFB1  F006         	goto	u3810
  1649  000D5E                     u3811:
  1650  000D5E  EF06  F007         	goto	l3658
  1651  000D62                     u3810:
  1652  000D62                     l3644:
  1653                           
  1654                           ; BSR set to: 0
  1655                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  1656  000D62  C066  F001         	movff	sprintf@tmpval,___flge@ff1
  1657  000D66  C067  F002         	movff	sprintf@tmpval+1,___flge@ff1+1
  1658  000D6A  C068  F003         	movff	sprintf@tmpval+2,___flge@ff1+2
  1659  000D6E  C069  F004         	movff	sprintf@tmpval+3,___flge@ff1+3
  1660  000D72  0E5F               	movlw	95
  1661  000D74  6E05               	movwf	___flge@ff2^0,c
  1662  000D76  0E70               	movlw	112
  1663  000D78  6E06               	movwf	(___flge@ff2+1)^0,c
  1664  000D7A  0E89               	movlw	137
  1665  000D7C  6E07               	movwf	(___flge@ff2+2)^0,c
  1666  000D7E  0E40               	movlw	64
  1667  000D80  6E08               	movwf	(___flge@ff2+3)^0,c
  1668  000D82  ECB0  F019         	call	___flge	;wreg free
  1669  000D86  B0D8               	btfsc	status,0,c
  1670  000D88  EFC8  F006         	goto	u3821
  1671  000D8C  EFCA  F006         	goto	u3820
  1672  000D90                     u3821:
  1673  000D90  EFD1  F006         	goto	l3648
  1674  000D94                     u3820:
  1675  000D94                     
  1676                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1677  000D94  0100               	movlb	0	; () banked
  1678  000D96  0EF7               	movlw	247
  1679  000D98  276E               	addwf	sprintf@eexp& (0+255),f,b
  1680  000D9A  0EFF               	movlw	255
  1681  000D9C  236F               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1682                           
  1683                           ;doprnt.c: 1148: }else{
  1684  000D9E  EFD6  F006         	goto	l3650
  1685  000DA2                     l3648:
  1686                           
  1687                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1688  000DA2  0100               	movlb	0	; () banked
  1689  000DA4  0EF8               	movlw	248
  1690  000DA6  276E               	addwf	sprintf@eexp& (0+255),f,b
  1691  000DA8  0EFF               	movlw	255
  1692  000DAA  236F               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  1693  000DAC                     l3650:
  1694                           
  1695                           ; BSR set to: 0
  1696                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1697  000DAC  516E               	movf	sprintf@eexp& (0+255),w,b
  1698  000DAE  EC8E  F00F         	call	_scale
  1699  000DB2  C028  F066         	movff	?_scale,sprintf@tmpval
  1700  000DB6  C029  F067         	movff	?_scale+1,sprintf@tmpval+1
  1701  000DBA  C02A  F068         	movff	?_scale+2,sprintf@tmpval+2
  1702  000DBE  C02B  F069         	movff	?_scale+3,sprintf@tmpval+3
  1703  000DC2  C074  F001         	movff	sprintf@fval,__div_to_l_@f1
  1704  000DC6  C075  F002         	movff	sprintf@fval+1,__div_to_l_@f1+1
  1705  000DCA  C076  F003         	movff	sprintf@fval+2,__div_to_l_@f1+2
  1706  000DCE  C077  F004         	movff	sprintf@fval+3,__div_to_l_@f1+3
  1707  000DD2  C066  F005         	movff	sprintf@tmpval,__div_to_l_@f2
  1708  000DD6  C067  F006         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  1709  000DDA  C068  F007         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  1710  000DDE  C069  F008         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  1711  000DE2  EC37  F016         	call	__div_to_l_	;wreg free
  1712  000DE6  C001  F06A         	movff	?__div_to_l_,sprintf@val
  1713  000DEA  C002  F06B         	movff	?__div_to_l_+1,sprintf@val+1
  1714  000DEE  C003  F06C         	movff	?__div_to_l_+2,sprintf@val+2
  1715  000DF2  C004  F06D         	movff	?__div_to_l_+3,sprintf@val+3
  1716  000DF6                     
  1717                           ;doprnt.c: 1155: fval = 0.0;
  1718  000DF6  0E00               	movlw	0
  1719  000DF8  0100               	movlb	0	; () banked
  1720  000DFA  6F74               	movwf	sprintf@fval& (0+255),b
  1721  000DFC  0E00               	movlw	0
  1722  000DFE  6F75               	movwf	(sprintf@fval+1)& (0+255),b
  1723  000E00  0E00               	movlw	0
  1724  000E02  6F76               	movwf	(sprintf@fval+2)& (0+255),b
  1725  000E04  0E00               	movlw	0
  1726  000E06  6F77               	movwf	(sprintf@fval+3)& (0+255),b
  1727                           
  1728                           ;doprnt.c: 1156: } else {
  1729  000E08  EF42  F007         	goto	l3662
  1730  000E0C                     l3658:
  1731                           
  1732                           ;doprnt.c: 1157: val = (unsigned long)fval;
  1733  000E0C  C074  F031         	movff	sprintf@fval,___fltol@f1
  1734  000E10  C075  F032         	movff	sprintf@fval+1,___fltol@f1+1
  1735  000E14  C076  F033         	movff	sprintf@fval+2,___fltol@f1+2
  1736  000E18  C077  F034         	movff	sprintf@fval+3,___fltol@f1+3
  1737  000E1C  EC2D  F019         	call	___fltol	;wreg free
  1738  000E20  C031  F06A         	movff	?___fltol,sprintf@val
  1739  000E24  C032  F06B         	movff	?___fltol+1,sprintf@val+1
  1740  000E28  C033  F06C         	movff	?___fltol+2,sprintf@val+2
  1741  000E2C  C034  F06D         	movff	?___fltol+3,sprintf@val+3
  1742                           
  1743                           ;doprnt.c: 1158: fval -= (double)val;
  1744  000E30  C074  F045         	movff	sprintf@fval,___flsub@b
  1745  000E34  C075  F046         	movff	sprintf@fval+1,___flsub@b+1
  1746  000E38  C076  F047         	movff	sprintf@fval+2,___flsub@b+2
  1747  000E3C  C077  F048         	movff	sprintf@fval+3,___flsub@b+3
  1748  000E40  C06A  F001         	movff	sprintf@val,___xxtofl@val
  1749  000E44  C06B  F002         	movff	sprintf@val+1,___xxtofl@val+1
  1750  000E48  C06C  F003         	movff	sprintf@val+2,___xxtofl@val+2
  1751  000E4C  C06D  F004         	movff	sprintf@val+3,___xxtofl@val+3
  1752  000E50  0E00               	movlw	0
  1753  000E52  ECB2  F014         	call	___xxtofl
  1754  000E56  C001  F049         	movff	?___xxtofl,___flsub@a
  1755  000E5A  C002  F04A         	movff	?___xxtofl+1,___flsub@a+1
  1756  000E5E  C003  F04B         	movff	?___xxtofl+2,___flsub@a+2
  1757  000E62  C004  F04C         	movff	?___xxtofl+3,___flsub@a+3
  1758  000E66  ECC6  F01C         	call	___flsub	;wreg free
  1759  000E6A  C045  F074         	movff	?___flsub,sprintf@fval
  1760  000E6E  C046  F075         	movff	?___flsub+1,sprintf@fval+1
  1761  000E72  C047  F076         	movff	?___flsub+2,sprintf@fval+2
  1762  000E76  C048  F077         	movff	?___flsub+3,sprintf@fval+3
  1763  000E7A                     
  1764                           ;doprnt.c: 1159: eexp = 0;
  1765  000E7A  0E00               	movlw	0
  1766  000E7C  0100               	movlb	0	; () banked
  1767  000E7E  6F6F               	movwf	(sprintf@eexp+1)& (0+255),b
  1768  000E80  0E00               	movlw	0
  1769  000E82  6F6E               	movwf	sprintf@eexp& (0+255),b
  1770  000E84                     l3662:
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  1774  000E84  0E01               	movlw	1
  1775  000E86  6F7A               	movwf	sprintf@c& (0+255),b
  1776  000E88                     l3668:
  1777                           
  1778                           ; BSR set to: 0
  1779                           ;doprnt.c: 1163: if(val < dpowers[c])
  1780  000E88  517A               	movf	sprintf@c& (0+255),w,b
  1781  000E8A  0D04               	mullw	4
  1782  000E8C  0E69               	movlw	low _dpowers
  1783  000E8E  24F3               	addwf	243,w,c
  1784  000E90  6EF6               	movwf	tblptrl,c
  1785  000E92  0E08               	movlw	high _dpowers
  1786  000E94  20F4               	addwfc	244,w,c
  1787  000E96  6EF7               	movwf	tblptrh,c
  1788  000E98                     	if	0	;There are less than 3 active tblptr bytes
  1789  000E98                     	endif
  1790  000E98  0009               	tblrd		*+
  1791  000E9A  50F5               	movf	tablat,w,c
  1792  000E9C  5D6A               	subwf	sprintf@val& (0+255),w,b
  1793  000E9E  0009               	tblrd		*+
  1794  000EA0  50F5               	movf	tablat,w,c
  1795  000EA2  596B               	subwfb	(sprintf@val+1)& (0+255),w,b
  1796  000EA4  0009               	tblrd		*+
  1797  000EA6  50F5               	movf	tablat,w,c
  1798  000EA8  596C               	subwfb	(sprintf@val+2)& (0+255),w,b
  1799  000EAA  0009               	tblrd		*+
  1800  000EAC  50F5               	movf	tablat,w,c
  1801  000EAE  596D               	subwfb	(sprintf@val+3)& (0+255),w,b
  1802  000EB0  B0D8               	btfsc	status,0,c
  1803  000EB2  EF5D  F007         	goto	u3831
  1804  000EB6  EF5F  F007         	goto	u3830
  1805  000EBA                     u3831:
  1806  000EBA  EF61  F007         	goto	l3672
  1807  000EBE                     u3830:
  1808  000EBE  EF6B  F007         	goto	l3676
  1809  000EC2                     l3672:
  1810                           
  1811                           ; BSR set to: 0
  1812  000EC2  2B7A               	incf	sprintf@c& (0+255),f,b
  1813  000EC4                     
  1814                           ; BSR set to: 0
  1815  000EC4  0E0A               	movlw	10
  1816  000EC6  197A               	xorwf	sprintf@c& (0+255),w,b
  1817  000EC8  A4D8               	btfss	status,2,c
  1818  000ECA  EF69  F007         	goto	u3841
  1819  000ECE  EF6B  F007         	goto	u3840
  1820  000ED2                     u3841:
  1821  000ED2  EF44  F007         	goto	l3668
  1822  000ED6                     u3840:
  1823  000ED6                     l3676:
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;doprnt.c: 1168: width -= prec + c + eexp;
  1827  000ED6  517A               	movf	sprintf@c& (0+255),w,b
  1828  000ED8  2578               	addwf	sprintf@prec& (0+255),w,b
  1829  000EDA  6E55               	movwf	??_sprintf^0,c
  1830  000EDC  0E00               	movlw	0
  1831  000EDE  2179               	addwfc	(sprintf@prec+1)& (0+255),w,b
  1832  000EE0  6E56               	movwf	(??_sprintf+1)^0,c
  1833  000EE2  516E               	movf	sprintf@eexp& (0+255),w,b
  1834  000EE4  2655               	addwf	??_sprintf^0,f,c
  1835  000EE6  516F               	movf	(sprintf@eexp+1)& (0+255),w,b
  1836  000EE8  2256               	addwfc	(??_sprintf+1)^0,f,c
  1837  000EEA  5055               	movf	??_sprintf^0,w,c
  1838  000EEC  5F72               	subwf	sprintf@width& (0+255),f,b
  1839  000EEE  5056               	movf	(??_sprintf+1)^0,w,c
  1840  000EF0  5B73               	subwfb	(sprintf@width+1)& (0+255),f,b
  1841                           
  1842                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  1843  000EF2  5178               	movf	sprintf@prec& (0+255),w,b
  1844  000EF4  1179               	iorwf	(sprintf@prec+1)& (0+255),w,b
  1845  000EF6  B4D8               	btfsc	status,2,c
  1846  000EF8  EF80  F007         	goto	u3851
  1847  000EFC  EF82  F007         	goto	u3850
  1848  000F00                     u3851:
  1849  000F00  EF85  F007         	goto	l3680
  1850  000F04                     u3850:
  1851  000F04                     
  1852                           ; BSR set to: 0
  1853                           ;doprnt.c: 1174: width--;
  1854  000F04  0772               	decf	sprintf@width& (0+255),f,b
  1855  000F06  A0D8               	btfss	status,0,c
  1856  000F08  0773               	decf	(sprintf@width+1)& (0+255),f,b
  1857  000F0A                     l3680:
  1858                           
  1859                           ; BSR set to: 0
  1860                           ;doprnt.c: 1175: if(flag & 0x03)
  1861  000F0A  0E03               	movlw	3
  1862  000F0C  1570               	andwf	sprintf@flag& (0+255),w,b
  1863  000F0E  6E55               	movwf	??_sprintf^0,c
  1864  000F10  0E00               	movlw	0
  1865  000F12  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
  1866  000F14  6E56               	movwf	(??_sprintf+1)^0,c
  1867  000F16  5055               	movf	??_sprintf^0,w,c
  1868  000F18  1056               	iorwf	(??_sprintf+1)^0,w,c
  1869  000F1A  B4D8               	btfsc	status,2,c
  1870  000F1C  EF92  F007         	goto	u3861
  1871  000F20  EF94  F007         	goto	u3860
  1872  000F24                     u3861:
  1873  000F24  EF97  F007         	goto	l3684
  1874  000F28                     u3860:
  1875  000F28                     
  1876                           ; BSR set to: 0
  1877                           ;doprnt.c: 1176: width--;
  1878  000F28  0772               	decf	sprintf@width& (0+255),f,b
  1879  000F2A  A0D8               	btfss	status,0,c
  1880  000F2C  0773               	decf	(sprintf@width+1)& (0+255),f,b
  1881  000F2E                     l3684:
  1882                           
  1883                           ; BSR set to: 0
  1884                           ;doprnt.c: 1179: if(flag & 0x04) {
  1885  000F2E  A570               	btfss	sprintf@flag& (0+255),2,b
  1886  000F30  EF9C  F007         	goto	u3871
  1887  000F34  EF9E  F007         	goto	u3870
  1888  000F38                     u3871:
  1889  000F38  EFDC  F007         	goto	l3706
  1890  000F3C                     u3870:
  1891  000F3C                     
  1892                           ; BSR set to: 0
  1893                           ;doprnt.c: 1183: if(flag & 0x03)
  1894  000F3C  0E03               	movlw	3
  1895  000F3E  1570               	andwf	sprintf@flag& (0+255),w,b
  1896  000F40  6E55               	movwf	??_sprintf^0,c
  1897  000F42  0E00               	movlw	0
  1898  000F44  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
  1899  000F46  6E56               	movwf	(??_sprintf+1)^0,c
  1900  000F48  5055               	movf	??_sprintf^0,w,c
  1901  000F4A  1056               	iorwf	(??_sprintf+1)^0,w,c
  1902  000F4C  B4D8               	btfsc	status,2,c
  1903  000F4E  EFAB  F007         	goto	u3881
  1904  000F52  EFAD  F007         	goto	u3880
  1905  000F56                     u3881:
  1906  000F56  EFC2  F007         	goto	l3698
  1907  000F5A                     u3880:
  1908  000F5A                     
  1909                           ; BSR set to: 0
  1910                           ;doprnt.c: 1185: ((*sp++ = ('-')));
  1911  000F5A  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1912  000F5E  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1913  000F62  0E2D               	movlw	45
  1914  000F64  6EDF               	movwf	indf2,c
  1915  000F66                     
  1916                           ; BSR set to: 0
  1917  000F66  4A4D               	infsnz	sprintf@sp^0,f,c
  1918  000F68  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1919  000F6A  EFC2  F007         	goto	l3698
  1920  000F6E                     l3692:
  1921                           
  1922                           ; BSR set to: 0
  1923                           ;doprnt.c: 1195: ((*sp++ = ('0')));
  1924  000F6E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1925  000F72  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1926  000F76  0E30               	movlw	48
  1927  000F78  6EDF               	movwf	indf2,c
  1928  000F7A                     
  1929                           ; BSR set to: 0
  1930  000F7A  4A4D               	infsnz	sprintf@sp^0,f,c
  1931  000F7C  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1932  000F7E                     
  1933                           ; BSR set to: 0
  1934                           ;doprnt.c: 1196: width--;
  1935  000F7E  0772               	decf	sprintf@width& (0+255),f,b
  1936  000F80  A0D8               	btfss	status,0,c
  1937  000F82  0773               	decf	(sprintf@width+1)& (0+255),f,b
  1938  000F84                     l3698:
  1939                           
  1940                           ; BSR set to: 0
  1941  000F84  BF73               	btfsc	(sprintf@width+1)& (0+255),7,b
  1942  000F86  EFCF  F007         	goto	u3890
  1943  000F8A  5173               	movf	(sprintf@width+1)& (0+255),w,b
  1944  000F8C  E106               	bnz	u3891
  1945  000F8E  0572               	decf	sprintf@width& (0+255),w,b
  1946  000F90  B0D8               	btfsc	status,0,c
  1947  000F92  EFCD  F007         	goto	u3891
  1948  000F96  EFCF  F007         	goto	u3890
  1949  000F9A                     u3891:
  1950  000F9A  EFB7  F007         	goto	l3692
  1951  000F9E                     u3890:
  1952  000F9E  EF4C  F008         	goto	l3722
  1953  000FA2                     l3700:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  1957  000FA2  C04D  FFD9         	movff	sprintf@sp,fsr2l
  1958  000FA6  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  1959  000FAA  0E20               	movlw	32
  1960  000FAC  6EDF               	movwf	indf2,c
  1961  000FAE                     
  1962                           ; BSR set to: 0
  1963  000FAE  4A4D               	infsnz	sprintf@sp^0,f,c
  1964  000FB0  2A4E               	incf	(sprintf@sp+1)^0,f,c
  1965  000FB2                     
  1966                           ; BSR set to: 0
  1967                           ;doprnt.c: 1208: width--;
  1968  000FB2  0772               	decf	sprintf@width& (0+255),f,b
  1969  000FB4  A0D8               	btfss	status,0,c
  1970  000FB6  0773               	decf	(sprintf@width+1)& (0+255),f,b
  1971  000FB8                     l3706:
  1972                           
  1973                           ; BSR set to: 0
  1974  000FB8  BF73               	btfsc	(sprintf@width+1)& (0+255),7,b
  1975  000FBA  EFE9  F007         	goto	u3900
  1976  000FBE  5173               	movf	(sprintf@width+1)& (0+255),w,b
  1977  000FC0  E106               	bnz	u3901
  1978  000FC2  0572               	decf	sprintf@width& (0+255),w,b
  1979  000FC4  B0D8               	btfsc	status,0,c
  1980  000FC6  EFE7  F007         	goto	u3901
  1981  000FCA  EFE9  F007         	goto	u3900
  1982  000FCE                     u3901:
  1983  000FCE  EFD1  F007         	goto	l3700
  1984  000FD2                     u3900:
  1985  000FD2                     
  1986                           ; BSR set to: 0
  1987                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  1988  000FD2  0E03               	movlw	3
  1989  000FD4  1570               	andwf	sprintf@flag& (0+255),w,b
  1990  000FD6  6E55               	movwf	??_sprintf^0,c
  1991  000FD8  0E00               	movlw	0
  1992  000FDA  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
  1993  000FDC  6E56               	movwf	(??_sprintf+1)^0,c
  1994  000FDE  5055               	movf	??_sprintf^0,w,c
  1995  000FE0  1056               	iorwf	(??_sprintf+1)^0,w,c
  1996  000FE2  B4D8               	btfsc	status,2,c
  1997  000FE4  EFF6  F007         	goto	u3911
  1998  000FE8  EFF8  F007         	goto	u3910
  1999  000FEC                     u3911:
  2000  000FEC  EF4C  F008         	goto	l3722
  2001  000FF0                     u3910:
  2002  000FF0                     
  2003                           ; BSR set to: 0
  2004                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  2005  000FF0  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2006  000FF4  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2007  000FF8  0E2D               	movlw	45
  2008  000FFA  6EDF               	movwf	indf2,c
  2009  000FFC                     l3712:
  2010                           
  2011                           ; BSR set to: 0
  2012  000FFC  4A4D               	infsnz	sprintf@sp^0,f,c
  2013  000FFE  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2014  001000  EF4C  F008         	goto	l3722
  2015  001004                     l3714:
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  2019  001004  C06A  F001         	movff	sprintf@val,___lldiv@dividend
  2020  001008  C06B  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2021  00100C  C06C  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2022  001010  C06D  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2023  001014  517A               	movf	sprintf@c& (0+255),w,b
  2024  001016  0D04               	mullw	4
  2025  001018  0E69               	movlw	low _dpowers
  2026  00101A  24F3               	addwf	243,w,c
  2027  00101C  6EF6               	movwf	tblptrl,c
  2028  00101E  0E08               	movlw	high _dpowers
  2029  001020  20F4               	addwfc	244,w,c
  2030  001022  6EF7               	movwf	tblptrh,c
  2031  001024                     	if	0	;There are less than 3 active tblptr bytes
  2032  001024                     	endif
  2033  001024  0009               	tblrd		*+
  2034  001026  CFF5 F005          	movff	tablat,___lldiv@divisor
  2035  00102A  0009               	tblrd		*+
  2036  00102C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2037  001030  0009               	tblrd		*+
  2038  001032  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2039  001036  000A               	tblrd		*-
  2040  001038  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2041  00103C  EC41  F01B         	call	___lldiv	;wreg free
  2042  001040  C001  F066         	movff	?___lldiv,sprintf@tmpval
  2043  001044  C002  F067         	movff	?___lldiv+1,sprintf@tmpval+1
  2044  001048  C003  F068         	movff	?___lldiv+2,sprintf@tmpval+2
  2045  00104C  C004  F069         	movff	?___lldiv+3,sprintf@tmpval+3
  2046  001050                     
  2047                           ;doprnt.c: 1228: tmpval.vd %= 10;
  2048  001050  C066  F00E         	movff	sprintf@tmpval,___llmod@dividend
  2049  001054  C067  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2050  001058  C068  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2051  00105C  C069  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2052  001060  0E0A               	movlw	10
  2053  001062  6E12               	movwf	___llmod@divisor^0,c
  2054  001064  0E00               	movlw	0
  2055  001066  6E13               	movwf	(___llmod@divisor+1)^0,c
  2056  001068  0E00               	movlw	0
  2057  00106A  6E14               	movwf	(___llmod@divisor+2)^0,c
  2058  00106C  0E00               	movlw	0
  2059  00106E  6E15               	movwf	(___llmod@divisor+3)^0,c
  2060  001070  ECD8  F01B         	call	___llmod	;wreg free
  2061  001074  C00E  F066         	movff	?___llmod,sprintf@tmpval
  2062  001078  C00F  F067         	movff	?___llmod+1,sprintf@tmpval+1
  2063  00107C  C010  F068         	movff	?___llmod+2,sprintf@tmpval+2
  2064  001080  C011  F069         	movff	?___llmod+3,sprintf@tmpval+3
  2065  001084                     
  2066                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  2067  001084  0100               	movlb	0	; () banked
  2068  001086  5166               	movf	sprintf@tmpval& (0+255),w,b
  2069  001088  0F30               	addlw	48
  2070  00108A  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2071  00108E  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2072  001092  6EDF               	movwf	indf2,c
  2073  001094  EFFE  F007         	goto	l3712
  2074  001098                     l3722:
  2075                           
  2076                           ; BSR set to: 0
  2077  001098  077A               	decf	sprintf@c& (0+255),f,b
  2078  00109A  297A               	incf	sprintf@c& (0+255),w,b
  2079  00109C  A4D8               	btfss	status,2,c
  2080  00109E  EF53  F008         	goto	u3921
  2081  0010A2  EF55  F008         	goto	u3920
  2082  0010A6                     u3921:
  2083  0010A6  EF02  F008         	goto	l3714
  2084  0010AA                     u3920:
  2085  0010AA  EF62  F008         	goto	l3730
  2086  0010AE                     l3724:
  2087                           
  2088                           ; BSR set to: 0
  2089                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  2090  0010AE  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2091  0010B2  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2092  0010B6  0E30               	movlw	48
  2093  0010B8  6EDF               	movwf	indf2,c
  2094  0010BA                     
  2095                           ; BSR set to: 0
  2096  0010BA  4A4D               	infsnz	sprintf@sp^0,f,c
  2097  0010BC  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2098  0010BE                     
  2099                           ; BSR set to: 0
  2100                           ;doprnt.c: 1235: eexp--;
  2101  0010BE  076E               	decf	sprintf@eexp& (0+255),f,b
  2102  0010C0  A0D8               	btfss	status,0,c
  2103  0010C2  076F               	decf	(sprintf@eexp+1)& (0+255),f,b
  2104  0010C4                     l3730:
  2105                           
  2106                           ; BSR set to: 0
  2107  0010C4  BF6F               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  2108  0010C6  EF6F  F008         	goto	u3930
  2109  0010CA  516F               	movf	(sprintf@eexp+1)& (0+255),w,b
  2110  0010CC  E106               	bnz	u3931
  2111  0010CE  056E               	decf	sprintf@eexp& (0+255),w,b
  2112  0010D0  B0D8               	btfsc	status,0,c
  2113  0010D2  EF6D  F008         	goto	u3931
  2114  0010D6  EF6F  F008         	goto	u3930
  2115  0010DA                     u3931:
  2116  0010DA  EF57  F008         	goto	l3724
  2117  0010DE                     u3930:
  2118  0010DE                     
  2119                           ; BSR set to: 0
  2120                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  2121  0010DE  BF79               	btfsc	(sprintf@prec+1)& (0+255),7,b
  2122  0010E0  EF7B  F008         	goto	u3941
  2123  0010E4  5179               	movf	(sprintf@prec+1)& (0+255),w,b
  2124  0010E6  E109               	bnz	u3940
  2125  0010E8  0E09               	movlw	9
  2126  0010EA  5D78               	subwf	sprintf@prec& (0+255),w,b
  2127  0010EC  A0D8               	btfss	status,0,c
  2128  0010EE  EF7B  F008         	goto	u3941
  2129  0010F2  EF7D  F008         	goto	u3940
  2130  0010F6                     u3941:
  2131  0010F6  EF81  F008         	goto	l236
  2132  0010FA                     u3940:
  2133  0010FA                     
  2134                           ; BSR set to: 0
  2135                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  2136  0010FA  0E08               	movlw	8
  2137  0010FC  6F7A               	movwf	sprintf@c& (0+255),b
  2138  0010FE  EF83  F008         	goto	l3736
  2139  001102                     l236:
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  2143  001102  C078  F07A         	movff	sprintf@prec,sprintf@c
  2144  001106                     l3736:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;doprnt.c: 1241: prec -= (int)c;
  2148  001106  517A               	movf	sprintf@c& (0+255),w,b
  2149  001108  5F78               	subwf	sprintf@prec& (0+255),f,b
  2150  00110A  0E00               	movlw	0
  2151  00110C  5B79               	subwfb	(sprintf@prec+1)& (0+255),f,b
  2152  00110E                     
  2153                           ; BSR set to: 0
  2154                           ;doprnt.c: 1245: if(c)
  2155  00110E  517A               	movf	sprintf@c& (0+255),w,b
  2156  001110  B4D8               	btfsc	status,2,c
  2157  001112  EF8D  F008         	goto	u3951
  2158  001116  EF8F  F008         	goto	u3950
  2159  00111A                     u3951:
  2160  00111A  EF97  F008         	goto	l3744
  2161  00111E                     u3950:
  2162  00111E                     
  2163                           ; BSR set to: 0
  2164                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  2165  00111E  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2166  001122  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2167  001126  0E2E               	movlw	46
  2168  001128  6EDF               	movwf	indf2,c
  2169  00112A                     
  2170                           ; BSR set to: 0
  2171  00112A  4A4D               	infsnz	sprintf@sp^0,f,c
  2172  00112C  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2173  00112E                     l3744:
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2177  00112E  517A               	movf	sprintf@c& (0+255),w,b
  2178  001130  EC8E  F00F         	call	_scale
  2179  001134  C028  F060         	movff	?_scale,_sprintf$1118
  2180  001138  C029  F061         	movff	?_scale+1,_sprintf$1118+1
  2181  00113C  C02A  F062         	movff	?_scale+2,_sprintf$1118+2
  2182  001140  C02B  F063         	movff	?_scale+3,_sprintf$1118+3
  2183  001144                     
  2184                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  2185  001144  C074  F013         	movff	sprintf@fval,___flmul@a
  2186  001148  C075  F014         	movff	sprintf@fval+1,___flmul@a+1
  2187  00114C  C076  F015         	movff	sprintf@fval+2,___flmul@a+2
  2188  001150  C077  F016         	movff	sprintf@fval+3,___flmul@a+3
  2189  001154  C060  F00F         	movff	_sprintf$1118,___flmul@b
  2190  001158  C061  F010         	movff	_sprintf$1118+1,___flmul@b+1
  2191  00115C  C062  F011         	movff	_sprintf$1118+2,___flmul@b+2
  2192  001160  C063  F012         	movff	_sprintf$1118+3,___flmul@b+3
  2193  001164  EC79  F00D         	call	___flmul	;wreg free
  2194  001168  C00F  F031         	movff	?___flmul,___fltol@f1
  2195  00116C  C010  F032         	movff	?___flmul+1,___fltol@f1+1
  2196  001170  C011  F033         	movff	?___flmul+2,___fltol@f1+2
  2197  001174  C012  F034         	movff	?___flmul+3,___fltol@f1+3
  2198  001178  EC2D  F019         	call	___fltol	;wreg free
  2199  00117C  C031  F06A         	movff	?___fltol,sprintf@val
  2200  001180  C032  F06B         	movff	?___fltol+1,sprintf@val+1
  2201  001184  C033  F06C         	movff	?___fltol+2,sprintf@val+2
  2202  001188  C034  F06D         	movff	?___fltol+3,sprintf@val+3
  2203                           
  2204                           ;doprnt.c: 1254: while(c--) {
  2205  00118C  EF38  F009         	goto	l3758
  2206  001190                     l3748:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  2210  001190  C06A  F001         	movff	sprintf@val,___lldiv@dividend
  2211  001194  C06B  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2212  001198  C06C  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2213  00119C  C06D  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2214  0011A0  517A               	movf	sprintf@c& (0+255),w,b
  2215  0011A2  0D04               	mullw	4
  2216  0011A4  0E69               	movlw	low _dpowers
  2217  0011A6  24F3               	addwf	243,w,c
  2218  0011A8  6EF6               	movwf	tblptrl,c
  2219  0011AA  0E08               	movlw	high _dpowers
  2220  0011AC  20F4               	addwfc	244,w,c
  2221  0011AE  6EF7               	movwf	tblptrh,c
  2222  0011B0                     	if	0	;There are less than 3 active tblptr bytes
  2223  0011B0                     	endif
  2224  0011B0  0009               	tblrd		*+
  2225  0011B2  CFF5 F005          	movff	tablat,___lldiv@divisor
  2226  0011B6  0009               	tblrd		*+
  2227  0011B8  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2228  0011BC  0009               	tblrd		*+
  2229  0011BE  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2230  0011C2  000A               	tblrd		*-
  2231  0011C4  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2232  0011C8  EC41  F01B         	call	___lldiv	;wreg free
  2233  0011CC  C001  F066         	movff	?___lldiv,sprintf@tmpval
  2234  0011D0  C002  F067         	movff	?___lldiv+1,sprintf@tmpval+1
  2235  0011D4  C003  F068         	movff	?___lldiv+2,sprintf@tmpval+2
  2236  0011D8  C004  F069         	movff	?___lldiv+3,sprintf@tmpval+3
  2237  0011DC                     
  2238                           ;doprnt.c: 1256: tmpval.vd %= 10;
  2239  0011DC  C066  F00E         	movff	sprintf@tmpval,___llmod@dividend
  2240  0011E0  C067  F00F         	movff	sprintf@tmpval+1,___llmod@dividend+1
  2241  0011E4  C068  F010         	movff	sprintf@tmpval+2,___llmod@dividend+2
  2242  0011E8  C069  F011         	movff	sprintf@tmpval+3,___llmod@dividend+3
  2243  0011EC  0E0A               	movlw	10
  2244  0011EE  6E12               	movwf	___llmod@divisor^0,c
  2245  0011F0  0E00               	movlw	0
  2246  0011F2  6E13               	movwf	(___llmod@divisor+1)^0,c
  2247  0011F4  0E00               	movlw	0
  2248  0011F6  6E14               	movwf	(___llmod@divisor+2)^0,c
  2249  0011F8  0E00               	movlw	0
  2250  0011FA  6E15               	movwf	(___llmod@divisor+3)^0,c
  2251  0011FC  ECD8  F01B         	call	___llmod	;wreg free
  2252  001200  C00E  F066         	movff	?___llmod,sprintf@tmpval
  2253  001204  C00F  F067         	movff	?___llmod+1,sprintf@tmpval+1
  2254  001208  C010  F068         	movff	?___llmod+2,sprintf@tmpval+2
  2255  00120C  C011  F069         	movff	?___llmod+3,sprintf@tmpval+3
  2256  001210                     
  2257                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  2258  001210  0100               	movlb	0	; () banked
  2259  001212  5166               	movf	sprintf@tmpval& (0+255),w,b
  2260  001214  0F30               	addlw	48
  2261  001216  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2262  00121A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2263  00121E  6EDF               	movwf	indf2,c
  2264  001220                     
  2265                           ; BSR set to: 0
  2266  001220  4A4D               	infsnz	sprintf@sp^0,f,c
  2267  001222  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2268  001224                     
  2269                           ; BSR set to: 0
  2270                           ;doprnt.c: 1258: val %= dpowers[c];
  2271  001224  C06A  F00E         	movff	sprintf@val,___llmod@dividend
  2272  001228  C06B  F00F         	movff	sprintf@val+1,___llmod@dividend+1
  2273  00122C  C06C  F010         	movff	sprintf@val+2,___llmod@dividend+2
  2274  001230  C06D  F011         	movff	sprintf@val+3,___llmod@dividend+3
  2275  001234  517A               	movf	sprintf@c& (0+255),w,b
  2276  001236  0D04               	mullw	4
  2277  001238  0E69               	movlw	low _dpowers
  2278  00123A  24F3               	addwf	243,w,c
  2279  00123C  6EF6               	movwf	tblptrl,c
  2280  00123E  0E08               	movlw	high _dpowers
  2281  001240  20F4               	addwfc	244,w,c
  2282  001242  6EF7               	movwf	tblptrh,c
  2283  001244                     	if	0	;There are less than 3 active tblptr bytes
  2284  001244                     	endif
  2285  001244  0009               	tblrd		*+
  2286  001246  CFF5 F012          	movff	tablat,___llmod@divisor
  2287  00124A  0009               	tblrd		*+
  2288  00124C  CFF5 F013          	movff	tablat,___llmod@divisor+1
  2289  001250  0009               	tblrd		*+
  2290  001252  CFF5 F014          	movff	tablat,___llmod@divisor+2
  2291  001256  000A               	tblrd		*-
  2292  001258  CFF5 F015          	movff	tablat,___llmod@divisor+3
  2293  00125C  ECD8  F01B         	call	___llmod	;wreg free
  2294  001260  C00E  F06A         	movff	?___llmod,sprintf@val
  2295  001264  C00F  F06B         	movff	?___llmod+1,sprintf@val+1
  2296  001268  C010  F06C         	movff	?___llmod+2,sprintf@val+2
  2297  00126C  C011  F06D         	movff	?___llmod+3,sprintf@val+3
  2298  001270                     l3758:
  2299  001270  0100               	movlb	0	; () banked
  2300  001272  077A               	decf	sprintf@c& (0+255),f,b
  2301  001274  297A               	incf	sprintf@c& (0+255),w,b
  2302  001276  A4D8               	btfss	status,2,c
  2303  001278  EF40  F009         	goto	u3961
  2304  00127C  EF42  F009         	goto	u3960
  2305  001280                     u3961:
  2306  001280  EFC8  F008         	goto	l3748
  2307  001284                     u3960:
  2308  001284  EF4F  F009         	goto	l3766
  2309  001288                     l3760:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  2313  001288  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2314  00128C  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2315  001290  0E30               	movlw	48
  2316  001292  6EDF               	movwf	indf2,c
  2317  001294                     
  2318                           ; BSR set to: 0
  2319  001294  4A4D               	infsnz	sprintf@sp^0,f,c
  2320  001296  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2321  001298                     
  2322                           ; BSR set to: 0
  2323                           ;doprnt.c: 1263: prec--;
  2324  001298  0778               	decf	sprintf@prec& (0+255),f,b
  2325  00129A  A0D8               	btfss	status,0,c
  2326  00129C  0779               	decf	(sprintf@prec+1)& (0+255),f,b
  2327  00129E                     l3766:
  2328                           
  2329                           ; BSR set to: 0
  2330  00129E  5178               	movf	sprintf@prec& (0+255),w,b
  2331  0012A0  1179               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2332  0012A2  A4D8               	btfss	status,2,c
  2333  0012A4  EF56  F009         	goto	u3971
  2334  0012A8  EF58  F009         	goto	u3970
  2335  0012AC                     u3971:
  2336  0012AC  EF44  F009         	goto	l3760
  2337  0012B0                     u3970:
  2338  0012B0  EF01  F00B         	goto	l3864
  2339  0012B4                     l3768:
  2340                           
  2341                           ; BSR set to: 0
  2342                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  2343  0012B4  C064  FFD9         	movff	sprintf@ap,fsr2l
  2344  0012B8  C065  FFDA         	movff	sprintf@ap+1,fsr2h
  2345  0012BC  CFDE F06A          	movff	postinc2,sprintf@val
  2346  0012C0  CFDD F06B          	movff	postdec2,sprintf@val+1
  2347  0012C4  0E00               	movlw	0
  2348  0012C6  BF6B               	btfsc	(sprintf@val+1)& (0+255),7,b
  2349  0012C8  0EFF               	movlw	-1
  2350  0012CA  6F6C               	movwf	(sprintf@val+2)& (0+255),b
  2351  0012CC  6F6D               	movwf	(sprintf@val+3)& (0+255),b
  2352  0012CE                     
  2353                           ; BSR set to: 0
  2354  0012CE  0E02               	movlw	2
  2355  0012D0  2764               	addwf	sprintf@ap& (0+255),f,b
  2356  0012D2  0E00               	movlw	0
  2357  0012D4  2365               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2358  0012D6                     
  2359                           ; BSR set to: 0
  2360                           ;doprnt.c: 1287: if((long)val < 0) {
  2361  0012D6  BF6D               	btfsc	(sprintf@val+3)& (0+255),7,b
  2362  0012D8  EF72  F009         	goto	u3980
  2363  0012DC  EF70  F009         	goto	u3981
  2364  0012E0                     u3981:
  2365  0012E0  EF7C  F009         	goto	l3778
  2366  0012E4                     u3980:
  2367  0012E4                     
  2368                           ; BSR set to: 0
  2369                           ;doprnt.c: 1288: flag |= 0x03;
  2370  0012E4  0E03               	movlw	3
  2371  0012E6  1370               	iorwf	sprintf@flag& (0+255),f,b
  2372  0012E8                     
  2373                           ; BSR set to: 0
  2374                           ;doprnt.c: 1289: val = -val;
  2375  0012E8  1F6D               	comf	(sprintf@val+3)& (0+255),f,b
  2376  0012EA  1F6C               	comf	(sprintf@val+2)& (0+255),f,b
  2377  0012EC  1F6B               	comf	(sprintf@val+1)& (0+255),f,b
  2378  0012EE  6D6A               	negf	sprintf@val& (0+255),b
  2379  0012F0  0E00               	movlw	0
  2380  0012F2  236B               	addwfc	(sprintf@val+1)& (0+255),f,b
  2381  0012F4  236C               	addwfc	(sprintf@val+2)& (0+255),f,b
  2382  0012F6  236D               	addwfc	(sprintf@val+3)& (0+255),f,b
  2383  0012F8                     l3778:
  2384                           
  2385                           ; BSR set to: 0
  2386                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  2387  0012F8  5178               	movf	sprintf@prec& (0+255),w,b
  2388  0012FA  1179               	iorwf	(sprintf@prec+1)& (0+255),w,b
  2389  0012FC  A4D8               	btfss	status,2,c
  2390  0012FE  EF83  F009         	goto	u3991
  2391  001302  EF85  F009         	goto	u3990
  2392  001306                     u3991:
  2393  001306  EF92  F009         	goto	l3784
  2394  00130A                     u3990:
  2395  00130A                     
  2396                           ; BSR set to: 0
  2397  00130A  516A               	movf	sprintf@val& (0+255),w,b
  2398  00130C  116B               	iorwf	(sprintf@val+1)& (0+255),w,b
  2399  00130E  116C               	iorwf	(sprintf@val+2)& (0+255),w,b
  2400  001310  116D               	iorwf	(sprintf@val+3)& (0+255),w,b
  2401  001312  A4D8               	btfss	status,2,c
  2402  001314  EF8E  F009         	goto	u4001
  2403  001318  EF90  F009         	goto	u4000
  2404  00131C                     u4001:
  2405  00131C  EF92  F009         	goto	l3784
  2406  001320                     u4000:
  2407  001320                     
  2408                           ; BSR set to: 0
  2409                           ;doprnt.c: 1317: prec++;
  2410  001320  4B78               	infsnz	sprintf@prec& (0+255),f,b
  2411  001322  2B79               	incf	(sprintf@prec+1)& (0+255),f,b
  2412  001324                     l3784:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2416  001324  0E01               	movlw	1
  2417  001326  6F7A               	movwf	sprintf@c& (0+255),b
  2418  001328                     l3790:
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;doprnt.c: 1332: if(val < dpowers[c])
  2422  001328  517A               	movf	sprintf@c& (0+255),w,b
  2423  00132A  0D04               	mullw	4
  2424  00132C  0E69               	movlw	low _dpowers
  2425  00132E  24F3               	addwf	243,w,c
  2426  001330  6EF6               	movwf	tblptrl,c
  2427  001332  0E08               	movlw	high _dpowers
  2428  001334  20F4               	addwfc	244,w,c
  2429  001336  6EF7               	movwf	tblptrh,c
  2430  001338                     	if	0	;There are less than 3 active tblptr bytes
  2431  001338                     	endif
  2432  001338  0009               	tblrd		*+
  2433  00133A  50F5               	movf	tablat,w,c
  2434  00133C  5D6A               	subwf	sprintf@val& (0+255),w,b
  2435  00133E  0009               	tblrd		*+
  2436  001340  50F5               	movf	tablat,w,c
  2437  001342  596B               	subwfb	(sprintf@val+1)& (0+255),w,b
  2438  001344  0009               	tblrd		*+
  2439  001346  50F5               	movf	tablat,w,c
  2440  001348  596C               	subwfb	(sprintf@val+2)& (0+255),w,b
  2441  00134A  0009               	tblrd		*+
  2442  00134C  50F5               	movf	tablat,w,c
  2443  00134E  596D               	subwfb	(sprintf@val+3)& (0+255),w,b
  2444  001350  B0D8               	btfsc	status,0,c
  2445  001352  EFAD  F009         	goto	u4011
  2446  001356  EFAF  F009         	goto	u4010
  2447  00135A                     u4011:
  2448  00135A  EFB1  F009         	goto	l3794
  2449  00135E                     u4010:
  2450  00135E  EFBB  F009         	goto	l3798
  2451  001362                     l3794:
  2452                           
  2453                           ; BSR set to: 0
  2454  001362  2B7A               	incf	sprintf@c& (0+255),f,b
  2455  001364                     
  2456                           ; BSR set to: 0
  2457  001364  0E0A               	movlw	10
  2458  001366  197A               	xorwf	sprintf@c& (0+255),w,b
  2459  001368  A4D8               	btfss	status,2,c
  2460  00136A  EFB9  F009         	goto	u4021
  2461  00136E  EFBB  F009         	goto	u4020
  2462  001372                     u4021:
  2463  001372  EF94  F009         	goto	l3790
  2464  001376                     u4020:
  2465  001376                     l3798:
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;doprnt.c: 1365: if(c < prec)
  2469  001376  517A               	movf	sprintf@c& (0+255),w,b
  2470  001378  6E55               	movwf	??_sprintf^0,c
  2471  00137A  6A56               	clrf	(??_sprintf+1)^0,c
  2472  00137C  5178               	movf	sprintf@prec& (0+255),w,b
  2473  00137E  5C55               	subwf	??_sprintf^0,w,c
  2474  001380  5056               	movf	(??_sprintf+1)^0,w,c
  2475  001382  0A80               	xorlw	128
  2476  001384  6E57               	movwf	(??_sprintf+2)^0,c
  2477  001386  5179               	movf	(sprintf@prec+1)& (0+255),w,b
  2478  001388  0A80               	xorlw	128
  2479  00138A  5857               	subwfb	(??_sprintf+2)^0,w,c
  2480  00138C  B0D8               	btfsc	status,0,c
  2481  00138E  EFCB  F009         	goto	u4031
  2482  001392  EFCD  F009         	goto	u4030
  2483  001396                     u4031:
  2484  001396  EFD1  F009         	goto	l3802
  2485  00139A                     u4030:
  2486  00139A                     
  2487                           ; BSR set to: 0
  2488                           ;doprnt.c: 1366: c = (char)prec;
  2489  00139A  C078  F07A         	movff	sprintf@prec,sprintf@c
  2490  00139E  EFE6  F009         	goto	l3806
  2491  0013A2                     l3802:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ;doprnt.c: 1367: else if(prec < c)
  2495  0013A2  517A               	movf	sprintf@c& (0+255),w,b
  2496  0013A4  6E55               	movwf	??_sprintf^0,c
  2497  0013A6  6A56               	clrf	(??_sprintf+1)^0,c
  2498  0013A8  5055               	movf	??_sprintf^0,w,c
  2499  0013AA  5D78               	subwf	sprintf@prec& (0+255),w,b
  2500  0013AC  5179               	movf	(sprintf@prec+1)& (0+255),w,b
  2501  0013AE  0A80               	xorlw	128
  2502  0013B0  6E57               	movwf	(??_sprintf+2)^0,c
  2503  0013B2  5056               	movf	(??_sprintf+1)^0,w,c
  2504  0013B4  0A80               	xorlw	128
  2505  0013B6  5857               	subwfb	(??_sprintf+2)^0,w,c
  2506  0013B8  B0D8               	btfsc	status,0,c
  2507  0013BA  EFE1  F009         	goto	u4041
  2508  0013BE  EFE3  F009         	goto	u4040
  2509  0013C2                     u4041:
  2510  0013C2  EFE6  F009         	goto	l3806
  2511  0013C6                     u4040:
  2512  0013C6                     
  2513                           ; BSR set to: 0
  2514                           ;doprnt.c: 1368: prec = c;
  2515  0013C6  C07A  F078         	movff	sprintf@c,sprintf@prec
  2516  0013CA  6B79               	clrf	(sprintf@prec+1)& (0+255),b
  2517  0013CC                     l3806:
  2518                           
  2519                           ; BSR set to: 0
  2520                           ;doprnt.c: 1371: if(width && flag & 0x03)
  2521  0013CC  5172               	movf	sprintf@width& (0+255),w,b
  2522  0013CE  1173               	iorwf	(sprintf@width+1)& (0+255),w,b
  2523  0013D0  B4D8               	btfsc	status,2,c
  2524  0013D2  EFED  F009         	goto	u4051
  2525  0013D6  EFEF  F009         	goto	u4050
  2526  0013DA                     u4051:
  2527  0013DA  EF01  F00A         	goto	l3812
  2528  0013DE                     u4050:
  2529  0013DE                     
  2530                           ; BSR set to: 0
  2531  0013DE  0E03               	movlw	3
  2532  0013E0  1570               	andwf	sprintf@flag& (0+255),w,b
  2533  0013E2  6E55               	movwf	??_sprintf^0,c
  2534  0013E4  0E00               	movlw	0
  2535  0013E6  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
  2536  0013E8  6E56               	movwf	(??_sprintf+1)^0,c
  2537  0013EA  5055               	movf	??_sprintf^0,w,c
  2538  0013EC  1056               	iorwf	(??_sprintf+1)^0,w,c
  2539  0013EE  B4D8               	btfsc	status,2,c
  2540  0013F0  EFFC  F009         	goto	u4061
  2541  0013F4  EFFE  F009         	goto	u4060
  2542  0013F8                     u4061:
  2543  0013F8  EF01  F00A         	goto	l3812
  2544  0013FC                     u4060:
  2545  0013FC                     
  2546                           ; BSR set to: 0
  2547                           ;doprnt.c: 1372: width--;
  2548  0013FC  0772               	decf	sprintf@width& (0+255),f,b
  2549  0013FE  A0D8               	btfss	status,0,c
  2550  001400  0773               	decf	(sprintf@width+1)& (0+255),f,b
  2551  001402                     l3812:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;doprnt.c: 1374: if(flag & 0x4000) {
  2555  001402  AD71               	btfss	(sprintf@flag+1)& (0+255),6,b
  2556  001404  EF06  F00A         	goto	u4071
  2557  001408  EF08  F00A         	goto	u4070
  2558  00140C                     u4071:
  2559  00140C  EF21  F00A         	goto	l3820
  2560  001410                     u4070:
  2561  001410                     
  2562                           ; BSR set to: 0
  2563                           ;doprnt.c: 1375: if(width > prec)
  2564  001410  5172               	movf	sprintf@width& (0+255),w,b
  2565  001412  5D78               	subwf	sprintf@prec& (0+255),w,b
  2566  001414  5179               	movf	(sprintf@prec+1)& (0+255),w,b
  2567  001416  0A80               	xorlw	128
  2568  001418  6E55               	movwf	??_sprintf^0,c
  2569  00141A  5173               	movf	(sprintf@width+1)& (0+255),w,b
  2570  00141C  0A80               	xorlw	128
  2571  00141E  5855               	subwfb	??_sprintf^0,w,c
  2572  001420  B0D8               	btfsc	status,0,c
  2573  001422  EF15  F00A         	goto	u4081
  2574  001426  EF17  F00A         	goto	u4080
  2575  00142A                     u4081:
  2576  00142A  EF1D  F00A         	goto	l3818
  2577  00142E                     u4080:
  2578  00142E                     
  2579                           ; BSR set to: 0
  2580                           ;doprnt.c: 1376: width -= prec;
  2581  00142E  5178               	movf	sprintf@prec& (0+255),w,b
  2582  001430  5F72               	subwf	sprintf@width& (0+255),f,b
  2583  001432  5179               	movf	(sprintf@prec+1)& (0+255),w,b
  2584  001434  5B73               	subwfb	(sprintf@width+1)& (0+255),f,b
  2585  001436  EF21  F00A         	goto	l3820
  2586  00143A                     l3818:
  2587                           
  2588                           ; BSR set to: 0
  2589                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  2590  00143A  0E00               	movlw	0
  2591  00143C  6F73               	movwf	(sprintf@width+1)& (0+255),b
  2592  00143E  0E00               	movlw	0
  2593  001440  6F72               	movwf	sprintf@width& (0+255),b
  2594  001442                     l3820:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  2598  001442  517A               	movf	sprintf@c& (0+255),w,b
  2599  001444  6E55               	movwf	??_sprintf^0,c
  2600  001446  6A56               	clrf	(??_sprintf+1)^0,c
  2601  001448  5172               	movf	sprintf@width& (0+255),w,b
  2602  00144A  5C55               	subwf	??_sprintf^0,w,c
  2603  00144C  5056               	movf	(??_sprintf+1)^0,w,c
  2604  00144E  0A80               	xorlw	128
  2605  001450  6E57               	movwf	(??_sprintf+2)^0,c
  2606  001452  5173               	movf	(sprintf@width+1)& (0+255),w,b
  2607  001454  0A80               	xorlw	128
  2608  001456  5857               	subwfb	(??_sprintf+2)^0,w,c
  2609  001458  B0D8               	btfsc	status,0,c
  2610  00145A  EF31  F00A         	goto	u4091
  2611  00145E  EF33  F00A         	goto	u4090
  2612  001462                     u4091:
  2613  001462  EF39  F00A         	goto	l3824
  2614  001466                     u4090:
  2615  001466                     
  2616                           ; BSR set to: 0
  2617                           ;doprnt.c: 1408: width -= c;
  2618  001466  517A               	movf	sprintf@c& (0+255),w,b
  2619  001468  5F72               	subwf	sprintf@width& (0+255),f,b
  2620  00146A  0E00               	movlw	0
  2621  00146C  5B73               	subwfb	(sprintf@width+1)& (0+255),f,b
  2622  00146E  EF3D  F00A         	goto	l3826
  2623  001472                     l3824:
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  2627  001472  0E00               	movlw	0
  2628  001474  6F73               	movwf	(sprintf@width+1)& (0+255),b
  2629  001476  0E00               	movlw	0
  2630  001478  6F72               	movwf	sprintf@width& (0+255),b
  2631  00147A                     l3826:
  2632                           
  2633                           ; BSR set to: 0
  2634                           ;doprnt.c: 1413: if(flag & 0x04) {
  2635  00147A  A570               	btfss	sprintf@flag& (0+255),2,b
  2636  00147C  EF42  F00A         	goto	u4101
  2637  001480  EF44  F00A         	goto	u4100
  2638  001484                     u4101:
  2639  001484  EF7A  F00A         	goto	l3842
  2640  001488                     u4100:
  2641  001488                     
  2642                           ; BSR set to: 0
  2643                           ;doprnt.c: 1418: if(flag & 0x03)
  2644  001488  0E03               	movlw	3
  2645  00148A  1570               	andwf	sprintf@flag& (0+255),w,b
  2646  00148C  6E55               	movwf	??_sprintf^0,c
  2647  00148E  0E00               	movlw	0
  2648  001490  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
  2649  001492  6E56               	movwf	(??_sprintf+1)^0,c
  2650  001494  5055               	movf	??_sprintf^0,w,c
  2651  001496  1056               	iorwf	(??_sprintf+1)^0,w,c
  2652  001498  B4D8               	btfsc	status,2,c
  2653  00149A  EF51  F00A         	goto	u4111
  2654  00149E  EF53  F00A         	goto	u4110
  2655  0014A2                     u4111:
  2656  0014A2  EF5B  F00A         	goto	l3834
  2657  0014A6                     u4110:
  2658  0014A6                     
  2659                           ; BSR set to: 0
  2660                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  2661  0014A6  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2662  0014AA  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2663  0014AE  0E2D               	movlw	45
  2664  0014B0  6EDF               	movwf	indf2,c
  2665  0014B2                     
  2666                           ; BSR set to: 0
  2667  0014B2  4A4D               	infsnz	sprintf@sp^0,f,c
  2668  0014B4  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2669  0014B6                     l3834:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;doprnt.c: 1441: if(width)
  2673  0014B6  5172               	movf	sprintf@width& (0+255),w,b
  2674  0014B8  1173               	iorwf	(sprintf@width+1)& (0+255),w,b
  2675  0014BA  B4D8               	btfsc	status,2,c
  2676  0014BC  EF62  F00A         	goto	u4121
  2677  0014C0  EF64  F00A         	goto	u4120
  2678  0014C4                     u4121:
  2679  0014C4  EFF4  F00A         	goto	l3862
  2680  0014C8                     u4120:
  2681  0014C8                     l3836:
  2682                           
  2683                           ; BSR set to: 0
  2684                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  2685  0014C8  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2686  0014CC  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2687  0014D0  0E30               	movlw	48
  2688  0014D2  6EDF               	movwf	indf2,c
  2689  0014D4                     
  2690                           ; BSR set to: 0
  2691  0014D4  4A4D               	infsnz	sprintf@sp^0,f,c
  2692  0014D6  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2693  0014D8                     
  2694                           ; BSR set to: 0
  2695                           ;doprnt.c: 1444: while(--width);
  2696  0014D8  0772               	decf	sprintf@width& (0+255),f,b
  2697  0014DA  A0D8               	btfss	status,0,c
  2698  0014DC  0773               	decf	(sprintf@width+1)& (0+255),f,b
  2699  0014DE  5172               	movf	sprintf@width& (0+255),w,b
  2700  0014E0  1173               	iorwf	(sprintf@width+1)& (0+255),w,b
  2701  0014E2  A4D8               	btfss	status,2,c
  2702  0014E4  EF76  F00A         	goto	u4131
  2703  0014E8  EF78  F00A         	goto	u4130
  2704  0014EC                     u4131:
  2705  0014EC  EF64  F00A         	goto	l3836
  2706  0014F0                     u4130:
  2707  0014F0  EFF4  F00A         	goto	l3862
  2708  0014F4                     l3842:
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  2712  0014F4  5172               	movf	sprintf@width& (0+255),w,b
  2713  0014F6  1173               	iorwf	(sprintf@width+1)& (0+255),w,b
  2714  0014F8  B4D8               	btfsc	status,2,c
  2715  0014FA  EF81  F00A         	goto	u4141
  2716  0014FE  EF83  F00A         	goto	u4140
  2717  001502                     u4141:
  2718  001502  EF97  F00A         	goto	l3850
  2719  001506                     u4140:
  2720  001506                     l3844:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  2724  001506  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2725  00150A  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2726  00150E  0E20               	movlw	32
  2727  001510  6EDF               	movwf	indf2,c
  2728  001512                     
  2729                           ; BSR set to: 0
  2730  001512  4A4D               	infsnz	sprintf@sp^0,f,c
  2731  001514  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2732  001516                     
  2733                           ; BSR set to: 0
  2734                           ;doprnt.c: 1457: while(--width);
  2735  001516  0772               	decf	sprintf@width& (0+255),f,b
  2736  001518  A0D8               	btfss	status,0,c
  2737  00151A  0773               	decf	(sprintf@width+1)& (0+255),f,b
  2738  00151C  5172               	movf	sprintf@width& (0+255),w,b
  2739  00151E  1173               	iorwf	(sprintf@width+1)& (0+255),w,b
  2740  001520  A4D8               	btfss	status,2,c
  2741  001522  EF95  F00A         	goto	u4151
  2742  001526  EF97  F00A         	goto	u4150
  2743  00152A                     u4151:
  2744  00152A  EF83  F00A         	goto	l3844
  2745  00152E                     u4150:
  2746  00152E                     l3850:
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;doprnt.c: 1464: if(flag & 0x03)
  2750  00152E  0E03               	movlw	3
  2751  001530  1570               	andwf	sprintf@flag& (0+255),w,b
  2752  001532  6E55               	movwf	??_sprintf^0,c
  2753  001534  0E00               	movlw	0
  2754  001536  1571               	andwf	(sprintf@flag+1)& (0+255),w,b
  2755  001538  6E56               	movwf	(??_sprintf+1)^0,c
  2756  00153A  5055               	movf	??_sprintf^0,w,c
  2757  00153C  1056               	iorwf	(??_sprintf+1)^0,w,c
  2758  00153E  B4D8               	btfsc	status,2,c
  2759  001540  EFA4  F00A         	goto	u4161
  2760  001544  EFA6  F00A         	goto	u4160
  2761  001548                     u4161:
  2762  001548  EFF4  F00A         	goto	l3862
  2763  00154C                     u4160:
  2764  00154C                     
  2765                           ; BSR set to: 0
  2766                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  2767  00154C  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2768  001550  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2769  001554  0E2D               	movlw	45
  2770  001556  6EDF               	movwf	indf2,c
  2771  001558                     l3854:
  2772                           
  2773                           ; BSR set to: 0
  2774  001558  4A4D               	infsnz	sprintf@sp^0,f,c
  2775  00155A  2A4E               	incf	(sprintf@sp+1)^0,f,c
  2776  00155C  EFF4  F00A         	goto	l3862
  2777  001560                     l3856:
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  2781  001560  C078  F055         	movff	sprintf@prec,??_sprintf
  2782  001564  C079  F056         	movff	sprintf@prec+1,??_sprintf+1
  2783  001568  90D8               	bcf	status,0,c
  2784  00156A  3655               	rlcf	??_sprintf^0,f,c
  2785  00156C  3656               	rlcf	(??_sprintf+1)^0,f,c
  2786  00156E  90D8               	bcf	status,0,c
  2787  001570  3655               	rlcf	??_sprintf^0,f,c
  2788  001572  3656               	rlcf	(??_sprintf+1)^0,f,c
  2789  001574  0E69               	movlw	low _dpowers
  2790  001576  2455               	addwf	??_sprintf^0,w,c
  2791  001578  6EF6               	movwf	tblptrl,c
  2792  00157A  0E08               	movlw	high _dpowers
  2793  00157C  2056               	addwfc	(??_sprintf+1)^0,w,c
  2794  00157E  6EF7               	movwf	tblptrh,c
  2795  001580                     	if	0	;There are less than 3 active tblptr bytes
  2796  001580                     	endif
  2797  001580  0009               	tblrd		*+
  2798  001582  CFF5 F005          	movff	tablat,___lldiv@divisor
  2799  001586  0009               	tblrd		*+
  2800  001588  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2801  00158C  0009               	tblrd		*+
  2802  00158E  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2803  001592  000A               	tblrd		*-
  2804  001594  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2805  001598  C06A  F001         	movff	sprintf@val,___lldiv@dividend
  2806  00159C  C06B  F002         	movff	sprintf@val+1,___lldiv@dividend+1
  2807  0015A0  C06C  F003         	movff	sprintf@val+2,___lldiv@dividend+2
  2808  0015A4  C06D  F004         	movff	sprintf@val+3,___lldiv@dividend+3
  2809  0015A8  EC41  F01B         	call	___lldiv	;wreg free
  2810  0015AC  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2811  0015B0  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2812  0015B4  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2813  0015B8  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2814  0015BC  0E0A               	movlw	10
  2815  0015BE  6E12               	movwf	___llmod@divisor^0,c
  2816  0015C0  0E00               	movlw	0
  2817  0015C2  6E13               	movwf	(___llmod@divisor+1)^0,c
  2818  0015C4  0E00               	movlw	0
  2819  0015C6  6E14               	movwf	(___llmod@divisor+2)^0,c
  2820  0015C8  0E00               	movlw	0
  2821  0015CA  6E15               	movwf	(___llmod@divisor+3)^0,c
  2822  0015CC  ECD8  F01B         	call	___llmod	;wreg free
  2823  0015D0  500E               	movf	?___llmod^0,w,c
  2824  0015D2  0F30               	addlw	48
  2825  0015D4  0100               	movlb	0	; () banked
  2826  0015D6  6F7A               	movwf	sprintf@c& (0+255),b
  2827  0015D8                     
  2828                           ; BSR set to: 0
  2829                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  2830  0015D8  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2831  0015DC  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2832  0015E0  C07A  FFDF         	movff	sprintf@c,indf2
  2833  0015E4  EFAC  F00A         	goto	l3854
  2834  0015E8                     l3862:
  2835                           
  2836                           ; BSR set to: 0
  2837  0015E8  0778               	decf	sprintf@prec& (0+255),f,b
  2838  0015EA  A0D8               	btfss	status,0,c
  2839  0015EC  0779               	decf	(sprintf@prec+1)& (0+255),f,b
  2840  0015EE  2978               	incf	sprintf@prec& (0+255),w,b
  2841  0015F0  E106               	bnz	u4171
  2842  0015F2  2979               	incf	(sprintf@prec+1)& (0+255),w,b
  2843  0015F4  A4D8               	btfss	status,2,c
  2844  0015F6  EFFF  F00A         	goto	u4171
  2845  0015FA  EF01  F00B         	goto	u4170
  2846  0015FE                     u4171:
  2847  0015FE  EFB0  F00A         	goto	l3856
  2848  001602                     u4170:
  2849  001602                     l3864:
  2850                           
  2851                           ; BSR set to: 0
  2852  001602  C04F  FFF6         	movff	sprintf@f,tblptrl
  2853  001606  C050  FFF7         	movff	sprintf@f+1,tblptrh
  2854  00160A  4A4F               	infsnz	sprintf@f^0,f,c
  2855  00160C  2A50               	incf	(sprintf@f+1)^0,f,c
  2856  00160E                     	if	0	;tblptru may be non-zero
  2857  00160E                     	endif
  2858  00160E                     	if	0	;tblptru may be non-zero
  2859  00160E                     	endif
  2860  00160E  0008               	tblrd		*
  2861  001610  CFF5 F07A          	movff	tablat,sprintf@c
  2862  001614  517A               	movf	sprintf@c& (0+255),w,b
  2863  001616  A4D8               	btfss	status,2,c
  2864  001618  EF10  F00B         	goto	u4181
  2865  00161C  EF12  F00B         	goto	u4180
  2866  001620                     u4181:
  2867  001620  EF5F  F004         	goto	l3538
  2868  001624                     u4180:
  2869  001624                     l3866:
  2870                           
  2871                           ; BSR set to: 0
  2872                           ;doprnt.c: 1564: *sp = 0;
  2873  001624  C04D  FFD9         	movff	sprintf@sp,fsr2l
  2874  001628  C04E  FFDA         	movff	sprintf@sp+1,fsr2h
  2875  00162C  0E00               	movlw	0
  2876  00162E  6EDF               	movwf	indf2,c
  2877  001630                     
  2878                           ; BSR set to: 0
  2879  001630  0012               	return		;funcret
  2880  001632                     __end_of_sprintf:
  2881                           	callstack 0
  2882                           
  2883 ;; *************** function _scale *****************
  2884 ;; Defined at:
  2885 ;;		line 433 in file "D:\MPLABX\XC8\pic\sources\c90\common\doprnt.c"
  2886 ;; Parameters:    Size  Location     Type
  2887 ;;  scl             1    wreg     char 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  scl             1   47[COMRAM] char 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  4   39[COMRAM] char 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2899 ;;      Params:         4       0       0       0       0       0       0       0       0
  2900 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2901 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2902 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2903 ;;Total ram usage:        9 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    1
  2906 ;; This function calls:
  2907 ;;		___awdiv
  2908 ;;		___awmod
  2909 ;;		___flmul
  2910 ;; This function is called by:
  2911 ;;		_sprintf
  2912 ;; This function uses a non-reentrant model
  2913 ;;
  2914                           
  2915                           	psect	text2
  2916  001F1C                     __ptext2:
  2917                           	callstack 0
  2918  001F1C                     _scale:
  2919                           	callstack 28
  2920                           
  2921                           ; BSR set to: 0
  2922                           ;incstack = 0
  2923                           ;scale@scl stored from wreg
  2924  001F1C  6E30               	movwf	scale@scl^0,c
  2925  001F1E                     
  2926                           ;doprnt.c: 436: if(scl < 0) {
  2927  001F1E  BE30               	btfsc	scale@scl^0,7,c
  2928  001F20  EF96  F00F         	goto	u3060
  2929  001F24  EF94  F00F         	goto	u3061
  2930  001F28                     u3061:
  2931  001F28  EF96  F010         	goto	l3108
  2932  001F2C                     u3060:
  2933  001F2C                     
  2934                           ;doprnt.c: 437: scl = -scl;
  2935  001F2C  6C30               	negf	scale@scl^0,c
  2936                           
  2937                           ;doprnt.c: 438: if(scl>=110)
  2938  001F2E  5030               	movf	scale@scl^0,w,c
  2939  001F30  0A80               	xorlw	128
  2940  001F32  0F12               	addlw	-238
  2941  001F34  A0D8               	btfss	status,0,c
  2942  001F36  EF9F  F00F         	goto	u3071
  2943  001F3A  EFA1  F00F         	goto	u3070
  2944  001F3E                     u3071:
  2945  001F3E  EF2A  F010         	goto	l3098
  2946  001F42                     u3070:
  2947  001F42                     
  2948                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2949  001F42  0E00               	movlw	0
  2950  001F44  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2951  001F46  0E0A               	movlw	10
  2952  001F48  6E09               	movwf	___awdiv@divisor^0,c
  2953  001F4A  0E00               	movlw	0
  2954  001F4C  6E04               	movwf	(___awmod@divisor+1)^0,c
  2955  001F4E  0E64               	movlw	100
  2956  001F50  6E03               	movwf	___awmod@divisor^0,c
  2957  001F52  5030               	movf	scale@scl^0,w,c
  2958  001F54  6E01               	movwf	___awmod@dividend^0,c
  2959  001F56  6A02               	clrf	(___awmod@dividend+1)^0,c
  2960  001F58  BE01               	btfsc	___awmod@dividend^0,7,c
  2961  001F5A  0602               	decf	(___awmod@dividend+1)^0,f,c
  2962  001F5C  EC94  F01A         	call	___awmod	;wreg free
  2963  001F60  C001  F007         	movff	?___awmod,___awdiv@dividend
  2964  001F64  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2965  001F68  EC32  F01A         	call	___awdiv	;wreg free
  2966  001F6C  0E09               	movlw	9
  2967  001F6E  2607               	addwf	?___awdiv^0,f,c
  2968  001F70  5007               	movf	?___awdiv^0,w,c
  2969  001F72  0D04               	mullw	4
  2970  001F74  0E35               	movlw	low __npowers_
  2971  001F76  24F3               	addwf	243,w,c
  2972  001F78  6EF6               	movwf	tblptrl,c
  2973  001F7A  0E08               	movlw	high __npowers_
  2974  001F7C  20F4               	addwfc	244,w,c
  2975  001F7E  6EF7               	movwf	tblptrh,c
  2976  001F80                     	if	0	;There are less than 3 active tblptr bytes
  2977  001F80                     	endif
  2978  001F80  0009               	tblrd		*+
  2979  001F82  CFF5 F013          	movff	tablat,___flmul@a
  2980  001F86  0009               	tblrd		*+
  2981  001F88  CFF5 F014          	movff	tablat,___flmul@a+1
  2982  001F8C  0009               	tblrd		*+
  2983  001F8E  CFF5 F015          	movff	tablat,___flmul@a+2
  2984  001F92  000A               	tblrd		*-
  2985  001F94  CFF5 F016          	movff	tablat,___flmul@a+3
  2986  001F98  0E00               	movlw	0
  2987  001F9A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  2988  001F9C  0E64               	movlw	100
  2989  001F9E  6E09               	movwf	___awdiv@divisor^0,c
  2990  001FA0  5030               	movf	scale@scl^0,w,c
  2991  001FA2  6E07               	movwf	___awdiv@dividend^0,c
  2992  001FA4  6A08               	clrf	(___awdiv@dividend+1)^0,c
  2993  001FA6  BE07               	btfsc	___awdiv@dividend^0,7,c
  2994  001FA8  0608               	decf	(___awdiv@dividend+1)^0,f,c
  2995  001FAA  EC32  F01A         	call	___awdiv	;wreg free
  2996  001FAE  0E12               	movlw	18
  2997  001FB0  2607               	addwf	?___awdiv^0,f,c
  2998  001FB2  5007               	movf	?___awdiv^0,w,c
  2999  001FB4  0D04               	mullw	4
  3000  001FB6  0E35               	movlw	low __npowers_
  3001  001FB8  24F3               	addwf	243,w,c
  3002  001FBA  6EF6               	movwf	tblptrl,c
  3003  001FBC  0E08               	movlw	high __npowers_
  3004  001FBE  20F4               	addwfc	244,w,c
  3005  001FC0  6EF7               	movwf	tblptrh,c
  3006  001FC2                     	if	0	;There are less than 3 active tblptr bytes
  3007  001FC2                     	endif
  3008  001FC2  0009               	tblrd		*+
  3009  001FC4  CFF5 F00F          	movff	tablat,___flmul@b
  3010  001FC8  0009               	tblrd		*+
  3011  001FCA  CFF5 F010          	movff	tablat,___flmul@b+1
  3012  001FCE  0009               	tblrd		*+
  3013  001FD0  CFF5 F011          	movff	tablat,___flmul@b+2
  3014  001FD4  000A               	tblrd		*-
  3015  001FD6  CFF5 F012          	movff	tablat,___flmul@b+3
  3016  001FDA  EC79  F00D         	call	___flmul	;wreg free
  3017  001FDE  C00F  F02C         	movff	?___flmul,_scale$1117
  3018  001FE2  C010  F02D         	movff	?___flmul+1,_scale$1117+1
  3019  001FE6  C011  F02E         	movff	?___flmul+2,_scale$1117+2
  3020  001FEA  C012  F02F         	movff	?___flmul+3,_scale$1117+3
  3021                           
  3022                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3023  001FEE  C02C  F00F         	movff	_scale$1117,___flmul@b
  3024  001FF2  C02D  F010         	movff	_scale$1117+1,___flmul@b+1
  3025  001FF6  C02E  F011         	movff	_scale$1117+2,___flmul@b+2
  3026  001FFA  C02F  F012         	movff	_scale$1117+3,___flmul@b+3
  3027  001FFE  0E00               	movlw	0
  3028  002000  6E04               	movwf	(___awmod@divisor+1)^0,c
  3029  002002  0E0A               	movlw	10
  3030  002004  6E03               	movwf	___awmod@divisor^0,c
  3031  002006  5030               	movf	scale@scl^0,w,c
  3032  002008  6E01               	movwf	___awmod@dividend^0,c
  3033  00200A  6A02               	clrf	(___awmod@dividend+1)^0,c
  3034  00200C  BE01               	btfsc	___awmod@dividend^0,7,c
  3035  00200E  0602               	decf	(___awmod@dividend+1)^0,f,c
  3036  002010  EC94  F01A         	call	___awmod	;wreg free
  3037  002014  5001               	movf	?___awmod^0,w,c
  3038  002016  0D04               	mullw	4
  3039  002018  0E35               	movlw	low __npowers_
  3040  00201A  24F3               	addwf	243,w,c
  3041  00201C  6EF6               	movwf	tblptrl,c
  3042  00201E  0E08               	movlw	high __npowers_
  3043  002020  20F4               	addwfc	244,w,c
  3044  002022  6EF7               	movwf	tblptrh,c
  3045  002024                     	if	0	;There are less than 3 active tblptr bytes
  3046  002024                     	endif
  3047  002024  0009               	tblrd		*+
  3048  002026  CFF5 F013          	movff	tablat,___flmul@a
  3049  00202A  0009               	tblrd		*+
  3050  00202C  CFF5 F014          	movff	tablat,___flmul@a+1
  3051  002030  0009               	tblrd		*+
  3052  002032  CFF5 F015          	movff	tablat,___flmul@a+2
  3053  002036  000A               	tblrd		*-
  3054  002038  CFF5 F016          	movff	tablat,___flmul@a+3
  3055  00203C  EC79  F00D         	call	___flmul	;wreg free
  3056  002040  C00F  F028         	movff	?___flmul,?_scale
  3057  002044  C010  F029         	movff	?___flmul+1,?_scale+1
  3058  002048  C011  F02A         	movff	?___flmul+2,?_scale+2
  3059  00204C  C012  F02B         	movff	?___flmul+3,?_scale+3
  3060  002050  EF93  F011         	goto	l163
  3061  002054                     l3098:
  3062                           
  3063                           ;doprnt.c: 440: else if(scl > 10)
  3064  002054  5030               	movf	scale@scl^0,w,c
  3065  002056  0A80               	xorlw	128
  3066  002058  0F75               	addlw	-139
  3067  00205A  A0D8               	btfss	status,0,c
  3068  00205C  EF32  F010         	goto	u3081
  3069  002060  EF34  F010         	goto	u3080
  3070  002064                     u3081:
  3071  002064  EF80  F010         	goto	l3104
  3072  002068                     u3080:
  3073  002068                     
  3074                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  3075  002068  0E00               	movlw	0
  3076  00206A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3077  00206C  0E0A               	movlw	10
  3078  00206E  6E09               	movwf	___awdiv@divisor^0,c
  3079  002070  5030               	movf	scale@scl^0,w,c
  3080  002072  6E07               	movwf	___awdiv@dividend^0,c
  3081  002074  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3082  002076  BE07               	btfsc	___awdiv@dividend^0,7,c
  3083  002078  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3084  00207A  EC32  F01A         	call	___awdiv	;wreg free
  3085  00207E  0E09               	movlw	9
  3086  002080  2607               	addwf	?___awdiv^0,f,c
  3087  002082  5007               	movf	?___awdiv^0,w,c
  3088  002084  0D04               	mullw	4
  3089  002086  0E35               	movlw	low __npowers_
  3090  002088  24F3               	addwf	243,w,c
  3091  00208A  6EF6               	movwf	tblptrl,c
  3092  00208C  0E08               	movlw	high __npowers_
  3093  00208E  20F4               	addwfc	244,w,c
  3094  002090  6EF7               	movwf	tblptrh,c
  3095  002092                     	if	0	;There are less than 3 active tblptr bytes
  3096  002092                     	endif
  3097  002092  0009               	tblrd		*+
  3098  002094  CFF5 F00F          	movff	tablat,___flmul@b
  3099  002098  0009               	tblrd		*+
  3100  00209A  CFF5 F010          	movff	tablat,___flmul@b+1
  3101  00209E  0009               	tblrd		*+
  3102  0020A0  CFF5 F011          	movff	tablat,___flmul@b+2
  3103  0020A4  000A               	tblrd		*-
  3104  0020A6  CFF5 F012          	movff	tablat,___flmul@b+3
  3105  0020AA  0E00               	movlw	0
  3106  0020AC  6E04               	movwf	(___awmod@divisor+1)^0,c
  3107  0020AE  0E0A               	movlw	10
  3108  0020B0  6E03               	movwf	___awmod@divisor^0,c
  3109  0020B2  5030               	movf	scale@scl^0,w,c
  3110  0020B4  6E01               	movwf	___awmod@dividend^0,c
  3111  0020B6  6A02               	clrf	(___awmod@dividend+1)^0,c
  3112  0020B8  BE01               	btfsc	___awmod@dividend^0,7,c
  3113  0020BA  0602               	decf	(___awmod@dividend+1)^0,f,c
  3114  0020BC  EC94  F01A         	call	___awmod	;wreg free
  3115  0020C0  5001               	movf	?___awmod^0,w,c
  3116  0020C2  0D04               	mullw	4
  3117  0020C4  0E35               	movlw	low __npowers_
  3118  0020C6  24F3               	addwf	243,w,c
  3119  0020C8  6EF6               	movwf	tblptrl,c
  3120  0020CA  0E08               	movlw	high __npowers_
  3121  0020CC  20F4               	addwfc	244,w,c
  3122  0020CE  6EF7               	movwf	tblptrh,c
  3123  0020D0                     	if	0	;There are less than 3 active tblptr bytes
  3124  0020D0                     	endif
  3125  0020D0  0009               	tblrd		*+
  3126  0020D2  CFF5 F013          	movff	tablat,___flmul@a
  3127  0020D6  0009               	tblrd		*+
  3128  0020D8  CFF5 F014          	movff	tablat,___flmul@a+1
  3129  0020DC  0009               	tblrd		*+
  3130  0020DE  CFF5 F015          	movff	tablat,___flmul@a+2
  3131  0020E2  000A               	tblrd		*-
  3132  0020E4  CFF5 F016          	movff	tablat,___flmul@a+3
  3133  0020E8  EC79  F00D         	call	___flmul	;wreg free
  3134  0020EC  C00F  F028         	movff	?___flmul,?_scale
  3135  0020F0  C010  F029         	movff	?___flmul+1,?_scale+1
  3136  0020F4  C011  F02A         	movff	?___flmul+2,?_scale+2
  3137  0020F8  C012  F02B         	movff	?___flmul+3,?_scale+3
  3138  0020FC  EF93  F011         	goto	l163
  3139  002100                     l3104:
  3140                           
  3141                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  3142  002100  5030               	movf	scale@scl^0,w,c
  3143  002102  0D04               	mullw	4
  3144  002104  0E35               	movlw	low __npowers_
  3145  002106  24F3               	addwf	243,w,c
  3146  002108  6EF6               	movwf	tblptrl,c
  3147  00210A  0E08               	movlw	high __npowers_
  3148  00210C  20F4               	addwfc	244,w,c
  3149  00210E  6EF7               	movwf	tblptrh,c
  3150  002110                     	if	0	;There are less than 3 active tblptr bytes
  3151  002110                     	endif
  3152  002110  0009               	tblrd		*+
  3153  002112  CFF5 F028          	movff	tablat,?_scale
  3154  002116  0009               	tblrd		*+
  3155  002118  CFF5 F029          	movff	tablat,?_scale+1
  3156  00211C  0009               	tblrd		*+
  3157  00211E  CFF5 F02A          	movff	tablat,?_scale+2
  3158  002122  000A               	tblrd		*-
  3159  002124  CFF5 F02B          	movff	tablat,?_scale+3
  3160  002128  EF93  F011         	goto	l163
  3161  00212C                     l3108:
  3162                           
  3163                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  3164  00212C  5030               	movf	scale@scl^0,w,c
  3165  00212E  0A80               	xorlw	128
  3166  002130  0F12               	addlw	-238
  3167  002132  A0D8               	btfss	status,0,c
  3168  002134  EF9E  F010         	goto	u3091
  3169  002138  EFA0  F010         	goto	u3090
  3170  00213C                     u3091:
  3171  00213C  EF29  F011         	goto	l3116
  3172  002140                     u3090:
  3173  002140                     
  3174                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3175  002140  0E00               	movlw	0
  3176  002142  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3177  002144  0E0A               	movlw	10
  3178  002146  6E09               	movwf	___awdiv@divisor^0,c
  3179  002148  0E00               	movlw	0
  3180  00214A  6E04               	movwf	(___awmod@divisor+1)^0,c
  3181  00214C  0E64               	movlw	100
  3182  00214E  6E03               	movwf	___awmod@divisor^0,c
  3183  002150  5030               	movf	scale@scl^0,w,c
  3184  002152  6E01               	movwf	___awmod@dividend^0,c
  3185  002154  6A02               	clrf	(___awmod@dividend+1)^0,c
  3186  002156  BE01               	btfsc	___awmod@dividend^0,7,c
  3187  002158  0602               	decf	(___awmod@dividend+1)^0,f,c
  3188  00215A  EC94  F01A         	call	___awmod	;wreg free
  3189  00215E  C001  F007         	movff	?___awmod,___awdiv@dividend
  3190  002162  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3191  002166  EC32  F01A         	call	___awdiv	;wreg free
  3192  00216A  0E09               	movlw	9
  3193  00216C  2607               	addwf	?___awdiv^0,f,c
  3194  00216E  5007               	movf	?___awdiv^0,w,c
  3195  002170  0D04               	mullw	4
  3196  002172  0E01               	movlw	low __powers_
  3197  002174  24F3               	addwf	243,w,c
  3198  002176  6EF6               	movwf	tblptrl,c
  3199  002178  0E08               	movlw	high __powers_
  3200  00217A  20F4               	addwfc	244,w,c
  3201  00217C  6EF7               	movwf	tblptrh,c
  3202  00217E                     	if	0	;There are less than 3 active tblptr bytes
  3203  00217E                     	endif
  3204  00217E  0009               	tblrd		*+
  3205  002180  CFF5 F013          	movff	tablat,___flmul@a
  3206  002184  0009               	tblrd		*+
  3207  002186  CFF5 F014          	movff	tablat,___flmul@a+1
  3208  00218A  0009               	tblrd		*+
  3209  00218C  CFF5 F015          	movff	tablat,___flmul@a+2
  3210  002190  000A               	tblrd		*-
  3211  002192  CFF5 F016          	movff	tablat,___flmul@a+3
  3212  002196  0E00               	movlw	0
  3213  002198  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3214  00219A  0E64               	movlw	100
  3215  00219C  6E09               	movwf	___awdiv@divisor^0,c
  3216  00219E  5030               	movf	scale@scl^0,w,c
  3217  0021A0  6E07               	movwf	___awdiv@dividend^0,c
  3218  0021A2  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3219  0021A4  BE07               	btfsc	___awdiv@dividend^0,7,c
  3220  0021A6  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3221  0021A8  EC32  F01A         	call	___awdiv	;wreg free
  3222  0021AC  0E12               	movlw	18
  3223  0021AE  2607               	addwf	?___awdiv^0,f,c
  3224  0021B0  5007               	movf	?___awdiv^0,w,c
  3225  0021B2  0D04               	mullw	4
  3226  0021B4  0E01               	movlw	low __powers_
  3227  0021B6  24F3               	addwf	243,w,c
  3228  0021B8  6EF6               	movwf	tblptrl,c
  3229  0021BA  0E08               	movlw	high __powers_
  3230  0021BC  20F4               	addwfc	244,w,c
  3231  0021BE  6EF7               	movwf	tblptrh,c
  3232  0021C0                     	if	0	;There are less than 3 active tblptr bytes
  3233  0021C0                     	endif
  3234  0021C0  0009               	tblrd		*+
  3235  0021C2  CFF5 F00F          	movff	tablat,___flmul@b
  3236  0021C6  0009               	tblrd		*+
  3237  0021C8  CFF5 F010          	movff	tablat,___flmul@b+1
  3238  0021CC  0009               	tblrd		*+
  3239  0021CE  CFF5 F011          	movff	tablat,___flmul@b+2
  3240  0021D2  000A               	tblrd		*-
  3241  0021D4  CFF5 F012          	movff	tablat,___flmul@b+3
  3242  0021D8  EC79  F00D         	call	___flmul	;wreg free
  3243  0021DC  C00F  F02C         	movff	?___flmul,_scale$1117
  3244  0021E0  C010  F02D         	movff	?___flmul+1,_scale$1117+1
  3245  0021E4  C011  F02E         	movff	?___flmul+2,_scale$1117+2
  3246  0021E8  C012  F02F         	movff	?___flmul+3,_scale$1117+3
  3247                           
  3248                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  3249  0021EC  C02C  F00F         	movff	_scale$1117,___flmul@b
  3250  0021F0  C02D  F010         	movff	_scale$1117+1,___flmul@b+1
  3251  0021F4  C02E  F011         	movff	_scale$1117+2,___flmul@b+2
  3252  0021F8  C02F  F012         	movff	_scale$1117+3,___flmul@b+3
  3253  0021FC  0E00               	movlw	0
  3254  0021FE  6E04               	movwf	(___awmod@divisor+1)^0,c
  3255  002200  0E0A               	movlw	10
  3256  002202  6E03               	movwf	___awmod@divisor^0,c
  3257  002204  5030               	movf	scale@scl^0,w,c
  3258  002206  6E01               	movwf	___awmod@dividend^0,c
  3259  002208  6A02               	clrf	(___awmod@dividend+1)^0,c
  3260  00220A  BE01               	btfsc	___awmod@dividend^0,7,c
  3261  00220C  0602               	decf	(___awmod@dividend+1)^0,f,c
  3262  00220E  EC94  F01A         	call	___awmod	;wreg free
  3263  002212  5001               	movf	?___awmod^0,w,c
  3264  002214  0D04               	mullw	4
  3265  002216  0E01               	movlw	low __powers_
  3266  002218  24F3               	addwf	243,w,c
  3267  00221A  6EF6               	movwf	tblptrl,c
  3268  00221C  0E08               	movlw	high __powers_
  3269  00221E  20F4               	addwfc	244,w,c
  3270  002220  6EF7               	movwf	tblptrh,c
  3271  002222                     	if	0	;There are less than 3 active tblptr bytes
  3272  002222                     	endif
  3273  002222  0009               	tblrd		*+
  3274  002224  CFF5 F013          	movff	tablat,___flmul@a
  3275  002228  0009               	tblrd		*+
  3276  00222A  CFF5 F014          	movff	tablat,___flmul@a+1
  3277  00222E  0009               	tblrd		*+
  3278  002230  CFF5 F015          	movff	tablat,___flmul@a+2
  3279  002234  000A               	tblrd		*-
  3280  002236  CFF5 F016          	movff	tablat,___flmul@a+3
  3281  00223A  EC79  F00D         	call	___flmul	;wreg free
  3282  00223E  C00F  F028         	movff	?___flmul,?_scale
  3283  002242  C010  F029         	movff	?___flmul+1,?_scale+1
  3284  002246  C011  F02A         	movff	?___flmul+2,?_scale+2
  3285  00224A  C012  F02B         	movff	?___flmul+3,?_scale+3
  3286  00224E  EF93  F011         	goto	l163
  3287  002252                     l3116:
  3288                           
  3289                           ;doprnt.c: 446: else if(scl > 10)
  3290  002252  5030               	movf	scale@scl^0,w,c
  3291  002254  0A80               	xorlw	128
  3292  002256  0F75               	addlw	-139
  3293  002258  A0D8               	btfss	status,0,c
  3294  00225A  EF31  F011         	goto	u3101
  3295  00225E  EF33  F011         	goto	u3100
  3296  002262                     u3101:
  3297  002262  EF7F  F011         	goto	l3122
  3298  002266                     u3100:
  3299  002266                     
  3300                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  3301  002266  0E00               	movlw	0
  3302  002268  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  3303  00226A  0E0A               	movlw	10
  3304  00226C  6E09               	movwf	___awdiv@divisor^0,c
  3305  00226E  5030               	movf	scale@scl^0,w,c
  3306  002270  6E07               	movwf	___awdiv@dividend^0,c
  3307  002272  6A08               	clrf	(___awdiv@dividend+1)^0,c
  3308  002274  BE07               	btfsc	___awdiv@dividend^0,7,c
  3309  002276  0608               	decf	(___awdiv@dividend+1)^0,f,c
  3310  002278  EC32  F01A         	call	___awdiv	;wreg free
  3311  00227C  0E09               	movlw	9
  3312  00227E  2607               	addwf	?___awdiv^0,f,c
  3313  002280  5007               	movf	?___awdiv^0,w,c
  3314  002282  0D04               	mullw	4
  3315  002284  0E01               	movlw	low __powers_
  3316  002286  24F3               	addwf	243,w,c
  3317  002288  6EF6               	movwf	tblptrl,c
  3318  00228A  0E08               	movlw	high __powers_
  3319  00228C  20F4               	addwfc	244,w,c
  3320  00228E  6EF7               	movwf	tblptrh,c
  3321  002290                     	if	0	;There are less than 3 active tblptr bytes
  3322  002290                     	endif
  3323  002290  0009               	tblrd		*+
  3324  002292  CFF5 F00F          	movff	tablat,___flmul@b
  3325  002296  0009               	tblrd		*+
  3326  002298  CFF5 F010          	movff	tablat,___flmul@b+1
  3327  00229C  0009               	tblrd		*+
  3328  00229E  CFF5 F011          	movff	tablat,___flmul@b+2
  3329  0022A2  000A               	tblrd		*-
  3330  0022A4  CFF5 F012          	movff	tablat,___flmul@b+3
  3331  0022A8  0E00               	movlw	0
  3332  0022AA  6E04               	movwf	(___awmod@divisor+1)^0,c
  3333  0022AC  0E0A               	movlw	10
  3334  0022AE  6E03               	movwf	___awmod@divisor^0,c
  3335  0022B0  5030               	movf	scale@scl^0,w,c
  3336  0022B2  6E01               	movwf	___awmod@dividend^0,c
  3337  0022B4  6A02               	clrf	(___awmod@dividend+1)^0,c
  3338  0022B6  BE01               	btfsc	___awmod@dividend^0,7,c
  3339  0022B8  0602               	decf	(___awmod@dividend+1)^0,f,c
  3340  0022BA  EC94  F01A         	call	___awmod	;wreg free
  3341  0022BE  5001               	movf	?___awmod^0,w,c
  3342  0022C0  0D04               	mullw	4
  3343  0022C2  0E01               	movlw	low __powers_
  3344  0022C4  24F3               	addwf	243,w,c
  3345  0022C6  6EF6               	movwf	tblptrl,c
  3346  0022C8  0E08               	movlw	high __powers_
  3347  0022CA  20F4               	addwfc	244,w,c
  3348  0022CC  6EF7               	movwf	tblptrh,c
  3349  0022CE                     	if	0	;There are less than 3 active tblptr bytes
  3350  0022CE                     	endif
  3351  0022CE  0009               	tblrd		*+
  3352  0022D0  CFF5 F013          	movff	tablat,___flmul@a
  3353  0022D4  0009               	tblrd		*+
  3354  0022D6  CFF5 F014          	movff	tablat,___flmul@a+1
  3355  0022DA  0009               	tblrd		*+
  3356  0022DC  CFF5 F015          	movff	tablat,___flmul@a+2
  3357  0022E0  000A               	tblrd		*-
  3358  0022E2  CFF5 F016          	movff	tablat,___flmul@a+3
  3359  0022E6  EC79  F00D         	call	___flmul	;wreg free
  3360  0022EA  C00F  F028         	movff	?___flmul,?_scale
  3361  0022EE  C010  F029         	movff	?___flmul+1,?_scale+1
  3362  0022F2  C011  F02A         	movff	?___flmul+2,?_scale+2
  3363  0022F6  C012  F02B         	movff	?___flmul+3,?_scale+3
  3364  0022FA  EF93  F011         	goto	l163
  3365  0022FE                     l3122:
  3366                           
  3367                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  3368  0022FE  5030               	movf	scale@scl^0,w,c
  3369  002300  0D04               	mullw	4
  3370  002302  0E01               	movlw	low __powers_
  3371  002304  24F3               	addwf	243,w,c
  3372  002306  6EF6               	movwf	tblptrl,c
  3373  002308  0E08               	movlw	high __powers_
  3374  00230A  20F4               	addwfc	244,w,c
  3375  00230C  6EF7               	movwf	tblptrh,c
  3376  00230E                     	if	0	;There are less than 3 active tblptr bytes
  3377  00230E                     	endif
  3378  00230E  0009               	tblrd		*+
  3379  002310  CFF5 F028          	movff	tablat,?_scale
  3380  002314  0009               	tblrd		*+
  3381  002316  CFF5 F029          	movff	tablat,?_scale+1
  3382  00231A  0009               	tblrd		*+
  3383  00231C  CFF5 F02A          	movff	tablat,?_scale+2
  3384  002320  000A               	tblrd		*-
  3385  002322  CFF5 F02B          	movff	tablat,?_scale+3
  3386  002326                     l163:
  3387  002326  0012               	return		;funcret
  3388  002328                     __end_of_scale:
  3389                           	callstack 0
  3390                           
  3391 ;; *************** function ___awmod *****************
  3392 ;; Defined at:
  3393 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\awmod.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  dividend        2    0[COMRAM] int 
  3396 ;;  divisor         2    2[COMRAM] int 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  sign            1    5[COMRAM] unsigned char 
  3399 ;;  counter         1    4[COMRAM] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  2    0[COMRAM] int 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3409 ;;      Params:         4       0       0       0       0       0       0       0       0
  3410 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3412 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3413 ;;Total ram usage:        6 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_scale
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text3
  3423  003528                     __ptext3:
  3424                           	callstack 0
  3425  003528                     ___awmod:
  3426                           	callstack 28
  3427  003528  0E00               	movlw	0
  3428  00352A  6E06               	movwf	___awmod@sign^0,c
  3429  00352C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  3430  00352E  EF9D  F01A         	goto	u2860
  3431  003532  EF9B  F01A         	goto	u2861
  3432  003536                     u2861:
  3433  003536  EFA3  F01A         	goto	l2958
  3434  00353A                     u2860:
  3435  00353A  6C01               	negf	___awmod@dividend^0,c
  3436  00353C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3437  00353E  B0D8               	btfsc	status,0,c
  3438  003540  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3439  003542  0E01               	movlw	1
  3440  003544  6E06               	movwf	___awmod@sign^0,c
  3441  003546                     l2958:
  3442  003546  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  3443  003548  EFAA  F01A         	goto	u2870
  3444  00354C  EFA8  F01A         	goto	u2871
  3445  003550                     u2871:
  3446  003550  EFAE  F01A         	goto	l2962
  3447  003554                     u2870:
  3448  003554  6C03               	negf	___awmod@divisor^0,c
  3449  003556  1E04               	comf	(___awmod@divisor+1)^0,f,c
  3450  003558  B0D8               	btfsc	status,0,c
  3451  00355A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  3452  00355C                     l2962:
  3453  00355C  5003               	movf	___awmod@divisor^0,w,c
  3454  00355E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3455  003560  B4D8               	btfsc	status,2,c
  3456  003562  EFB5  F01A         	goto	u2881
  3457  003566  EFB7  F01A         	goto	u2880
  3458  00356A                     u2881:
  3459  00356A  EFDB  F01A         	goto	l2978
  3460  00356E                     u2880:
  3461  00356E  0E01               	movlw	1
  3462  003570  6E05               	movwf	___awmod@counter^0,c
  3463  003572  EFBF  F01A         	goto	l2968
  3464  003576                     l2966:
  3465  003576  90D8               	bcf	status,0,c
  3466  003578  3603               	rlcf	___awmod@divisor^0,f,c
  3467  00357A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3468  00357C  2A05               	incf	___awmod@counter^0,f,c
  3469  00357E                     l2968:
  3470  00357E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3471  003580  EFC4  F01A         	goto	u2891
  3472  003584  EFC6  F01A         	goto	u2890
  3473  003588                     u2891:
  3474  003588  EFBB  F01A         	goto	l2966
  3475  00358C                     u2890:
  3476  00358C                     l2970:
  3477  00358C  5003               	movf	___awmod@divisor^0,w,c
  3478  00358E  5C01               	subwf	___awmod@dividend^0,w,c
  3479  003590  5004               	movf	(___awmod@divisor+1)^0,w,c
  3480  003592  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3481  003594  A0D8               	btfss	status,0,c
  3482  003596  EFCF  F01A         	goto	u2901
  3483  00359A  EFD1  F01A         	goto	u2900
  3484  00359E                     u2901:
  3485  00359E  EFD5  F01A         	goto	l2974
  3486  0035A2                     u2900:
  3487  0035A2  5003               	movf	___awmod@divisor^0,w,c
  3488  0035A4  5E01               	subwf	___awmod@dividend^0,f,c
  3489  0035A6  5004               	movf	(___awmod@divisor+1)^0,w,c
  3490  0035A8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3491  0035AA                     l2974:
  3492  0035AA  90D8               	bcf	status,0,c
  3493  0035AC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3494  0035AE  3203               	rrcf	___awmod@divisor^0,f,c
  3495  0035B0  2E05               	decfsz	___awmod@counter^0,f,c
  3496  0035B2  EFC6  F01A         	goto	l2970
  3497  0035B6                     l2978:
  3498  0035B6  5006               	movf	___awmod@sign^0,w,c
  3499  0035B8  B4D8               	btfsc	status,2,c
  3500  0035BA  EFE1  F01A         	goto	u2911
  3501  0035BE  EFE3  F01A         	goto	u2910
  3502  0035C2                     u2911:
  3503  0035C2  EFE7  F01A         	goto	l2982
  3504  0035C6                     u2910:
  3505  0035C6  6C01               	negf	___awmod@dividend^0,c
  3506  0035C8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3507  0035CA  B0D8               	btfsc	status,0,c
  3508  0035CC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3509  0035CE                     l2982:
  3510  0035CE  C001  F001         	movff	___awmod@dividend,?___awmod
  3511  0035D2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3512  0035D6  0012               	return		;funcret
  3513  0035D8                     __end_of___awmod:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function ___awdiv *****************
  3517 ;; Defined at:
  3518 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\awdiv.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  dividend        2    6[COMRAM] int 
  3521 ;;  divisor         2    8[COMRAM] int 
  3522 ;; Auto vars:     Size  Location     Type
  3523 ;;  quotient        2   12[COMRAM] int 
  3524 ;;  sign            1   11[COMRAM] unsigned char 
  3525 ;;  counter         1   10[COMRAM] unsigned char 
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  2    6[COMRAM] int 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3535 ;;      Params:         4       0       0       0       0       0       0       0       0
  3536 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3538 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3539 ;;Total ram usage:        8 bytes
  3540 ;; Hardware stack levels used:    1
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_scale
  3545 ;;		_sprintf
  3546 ;; This function uses a non-reentrant model
  3547 ;;
  3548                           
  3549                           	psect	text4
  3550  003464                     __ptext4:
  3551                           	callstack 0
  3552  003464                     ___awdiv:
  3553                           	callstack 28
  3554  003464  0E00               	movlw	0
  3555  003466  6E0C               	movwf	___awdiv@sign^0,c
  3556  003468  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  3557  00346A  EF3B  F01A         	goto	u2800
  3558  00346E  EF39  F01A         	goto	u2801
  3559  003472                     u2801:
  3560  003472  EF41  F01A         	goto	l2914
  3561  003476                     u2800:
  3562  003476  6C09               	negf	___awdiv@divisor^0,c
  3563  003478  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  3564  00347A  B0D8               	btfsc	status,0,c
  3565  00347C  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  3566  00347E  0E01               	movlw	1
  3567  003480  6E0C               	movwf	___awdiv@sign^0,c
  3568  003482                     l2914:
  3569  003482  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  3570  003484  EF48  F01A         	goto	u2810
  3571  003488  EF46  F01A         	goto	u2811
  3572  00348C                     u2811:
  3573  00348C  EF4E  F01A         	goto	l2920
  3574  003490                     u2810:
  3575  003490  6C07               	negf	___awdiv@dividend^0,c
  3576  003492  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  3577  003494  B0D8               	btfsc	status,0,c
  3578  003496  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  3579  003498  0E01               	movlw	1
  3580  00349A  1A0C               	xorwf	___awdiv@sign^0,f,c
  3581  00349C                     l2920:
  3582  00349C  0E00               	movlw	0
  3583  00349E  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  3584  0034A0  0E00               	movlw	0
  3585  0034A2  6E0D               	movwf	___awdiv@quotient^0,c
  3586  0034A4  5009               	movf	___awdiv@divisor^0,w,c
  3587  0034A6  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  3588  0034A8  B4D8               	btfsc	status,2,c
  3589  0034AA  EF59  F01A         	goto	u2821
  3590  0034AE  EF5B  F01A         	goto	u2820
  3591  0034B2                     u2821:
  3592  0034B2  EF83  F01A         	goto	l2942
  3593  0034B6                     u2820:
  3594  0034B6  0E01               	movlw	1
  3595  0034B8  6E0B               	movwf	___awdiv@counter^0,c
  3596  0034BA  EF63  F01A         	goto	l2928
  3597  0034BE                     l2926:
  3598  0034BE  90D8               	bcf	status,0,c
  3599  0034C0  3609               	rlcf	___awdiv@divisor^0,f,c
  3600  0034C2  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  3601  0034C4  2A0B               	incf	___awdiv@counter^0,f,c
  3602  0034C6                     l2928:
  3603  0034C6  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  3604  0034C8  EF68  F01A         	goto	u2831
  3605  0034CC  EF6A  F01A         	goto	u2830
  3606  0034D0                     u2831:
  3607  0034D0  EF5F  F01A         	goto	l2926
  3608  0034D4                     u2830:
  3609  0034D4                     l2930:
  3610  0034D4  90D8               	bcf	status,0,c
  3611  0034D6  360D               	rlcf	___awdiv@quotient^0,f,c
  3612  0034D8  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  3613  0034DA  5009               	movf	___awdiv@divisor^0,w,c
  3614  0034DC  5C07               	subwf	___awdiv@dividend^0,w,c
  3615  0034DE  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3616  0034E0  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  3617  0034E2  A0D8               	btfss	status,0,c
  3618  0034E4  EF76  F01A         	goto	u2841
  3619  0034E8  EF78  F01A         	goto	u2840
  3620  0034EC                     u2841:
  3621  0034EC  EF7D  F01A         	goto	l2938
  3622  0034F0                     u2840:
  3623  0034F0  5009               	movf	___awdiv@divisor^0,w,c
  3624  0034F2  5E07               	subwf	___awdiv@dividend^0,f,c
  3625  0034F4  500A               	movf	(___awdiv@divisor+1)^0,w,c
  3626  0034F6  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  3627  0034F8  800D               	bsf	___awdiv@quotient^0,0,c
  3628  0034FA                     l2938:
  3629  0034FA  90D8               	bcf	status,0,c
  3630  0034FC  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  3631  0034FE  3209               	rrcf	___awdiv@divisor^0,f,c
  3632  003500  2E0B               	decfsz	___awdiv@counter^0,f,c
  3633  003502  EF6A  F01A         	goto	l2930
  3634  003506                     l2942:
  3635  003506  500C               	movf	___awdiv@sign^0,w,c
  3636  003508  B4D8               	btfsc	status,2,c
  3637  00350A  EF89  F01A         	goto	u2851
  3638  00350E  EF8B  F01A         	goto	u2850
  3639  003512                     u2851:
  3640  003512  EF8F  F01A         	goto	l2946
  3641  003516                     u2850:
  3642  003516  6C0D               	negf	___awdiv@quotient^0,c
  3643  003518  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  3644  00351A  B0D8               	btfsc	status,0,c
  3645  00351C  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  3646  00351E                     l2946:
  3647  00351E  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3648  003522  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3649  003526  0012               	return		;funcret
  3650  003528                     __end_of___awdiv:
  3651                           	callstack 0
  3652                           
  3653 ;; *************** function _isdigit *****************
  3654 ;; Defined at:
  3655 ;;		line 8 in file "D:\MPLABX\XC8\pic\sources\c90\common\isdigit.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  c               1    wreg     unsigned char 
  3658 ;; Auto vars:     Size  Location     Type
  3659 ;;  c               1    2[COMRAM] unsigned char 
  3660 ;; Return value:  Size  Location     Type
  3661 ;;		None               void
  3662 ;; Registers used:
  3663 ;;		wreg, status,2, status,0
  3664 ;; Tracked objects:
  3665 ;;		On entry : 0/0
  3666 ;;		On exit  : 0/0
  3667 ;;		Unchanged: 0/0
  3668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3669 ;;      Params:         0       0       0       0       0       0       0       0       0
  3670 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3671 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3672 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3673 ;;Total ram usage:        3 bytes
  3674 ;; Hardware stack levels used:    1
  3675 ;; This function calls:
  3676 ;;		Nothing
  3677 ;; This function is called by:
  3678 ;;		_sprintf
  3679 ;; This function uses a non-reentrant model
  3680 ;;
  3681                           
  3682                           	psect	text5
  3683  003A0A                     __ptext5:
  3684                           	callstack 0
  3685  003A0A                     _isdigit:
  3686                           	callstack 29
  3687                           
  3688                           ;incstack = 0
  3689                           ;isdigit@c stored from wreg
  3690  003A0A  6E03               	movwf	isdigit@c^0,c
  3691  003A0C  0E00               	movlw	0
  3692  003A0E  6E02               	movwf	_isdigit$929^0,c
  3693  003A10  0E3A               	movlw	58
  3694  003A12  6003               	cpfslt	isdigit@c^0,c
  3695  003A14  EF0E  F01D         	goto	u3111
  3696  003A18  EF10  F01D         	goto	u3110
  3697  003A1C                     u3111:
  3698  003A1C  EF1A  F01D         	goto	l3134
  3699  003A20                     u3110:
  3700  003A20  0E2F               	movlw	47
  3701  003A22  6403               	cpfsgt	isdigit@c^0,c
  3702  003A24  EF16  F01D         	goto	u3121
  3703  003A28  EF18  F01D         	goto	u3120
  3704  003A2C                     u3121:
  3705  003A2C  EF1A  F01D         	goto	l3134
  3706  003A30                     u3120:
  3707  003A30  0E01               	movlw	1
  3708  003A32  6E02               	movwf	_isdigit$929^0,c
  3709  003A34                     l3134:
  3710  003A34  C002  F001         	movff	_isdigit$929,??_isdigit
  3711  003A38  3001               	rrcf	??_isdigit^0,w,c
  3712  003A3A  0012               	return		;funcret
  3713  003A3C                     __end_of_isdigit:
  3714                           	callstack 0
  3715                           
  3716 ;; *************** function _fround *****************
  3717 ;; Defined at:
  3718 ;;		line 417 in file "D:\MPLABX\XC8\pic\sources\c90\common\doprnt.c"
  3719 ;; Parameters:    Size  Location     Type
  3720 ;;  prec            1    wreg     unsigned char 
  3721 ;; Auto vars:     Size  Location     Type
  3722 ;;  prec            1   51[COMRAM] unsigned char 
  3723 ;; Return value:  Size  Location     Type
  3724 ;;                  4   39[COMRAM] unsigned char 
  3725 ;; Registers used:
  3726 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3727 ;; Tracked objects:
  3728 ;;		On entry : 0/0
  3729 ;;		On exit  : 0/0
  3730 ;;		Unchanged: 0/0
  3731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3732 ;;      Params:         4       0       0       0       0       0       0       0       0
  3733 ;;      Locals:         9       0       0       0       0       0       0       0       0
  3734 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3735 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3736 ;;Total ram usage:       13 bytes
  3737 ;; Hardware stack levels used:    1
  3738 ;; Hardware stack levels required when called:    1
  3739 ;; This function calls:
  3740 ;;		___flmul
  3741 ;;		___lwdiv
  3742 ;;		___lwmod
  3743 ;; This function is called by:
  3744 ;;		_sprintf
  3745 ;; This function uses a non-reentrant model
  3746 ;;
  3747                           
  3748                           	psect	text6
  3749  0026C2                     __ptext6:
  3750                           	callstack 0
  3751  0026C2                     _fround:
  3752                           	callstack 28
  3753                           
  3754                           ;incstack = 0
  3755                           ;fround@prec stored from wreg
  3756  0026C2  6E34               	movwf	fround@prec^0,c
  3757  0026C4                     
  3758                           ;doprnt.c: 421: if(prec>=110)
  3759  0026C4  0E6D               	movlw	109
  3760  0026C6  6434               	cpfsgt	fround@prec^0,c
  3761  0026C8  EF68  F013         	goto	u3041
  3762  0026CC  EF6A  F013         	goto	u3040
  3763  0026D0                     u3041:
  3764  0026D0  EF17  F014         	goto	l3078
  3765  0026D4                     u3040:
  3766  0026D4                     
  3767                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3768  0026D4  0E00               	movlw	0
  3769  0026D6  6E13               	movwf	___flmul@a^0,c
  3770  0026D8  0E00               	movlw	0
  3771  0026DA  6E14               	movwf	(___flmul@a+1)^0,c
  3772  0026DC  0E00               	movlw	0
  3773  0026DE  6E15               	movwf	(___flmul@a+2)^0,c
  3774  0026E0  0E3F               	movlw	63
  3775  0026E2  6E16               	movwf	(___flmul@a+3)^0,c
  3776  0026E4  0E00               	movlw	0
  3777  0026E6  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3778  0026E8  0E64               	movlw	100
  3779  0026EA  6E08               	movwf	___lwdiv@divisor^0,c
  3780  0026EC  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3781  0026F0  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3782  0026F2  EC5A  F01C         	call	___lwdiv	;wreg free
  3783  0026F6  90D8               	bcf	status,0,c
  3784  0026F8  3606               	rlcf	?___lwdiv^0,f,c
  3785  0026FA  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3786  0026FC  90D8               	bcf	status,0,c
  3787  0026FE  3606               	rlcf	?___lwdiv^0,f,c
  3788  002700  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3789  002702  0E48               	movlw	72
  3790  002704  2606               	addwf	?___lwdiv^0,f,c
  3791  002706  0E00               	movlw	0
  3792  002708  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3793  00270A  0E35               	movlw	low __npowers_
  3794  00270C  2406               	addwf	?___lwdiv^0,w,c
  3795  00270E  6EF6               	movwf	tblptrl,c
  3796  002710  0E08               	movlw	high __npowers_
  3797  002712  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3798  002714  6EF7               	movwf	tblptrh,c
  3799  002716                     	if	0	;There are less than 3 active tblptr bytes
  3800  002716                     	endif
  3801  002716  0009               	tblrd		*+
  3802  002718  CFF5 F00F          	movff	tablat,___flmul@b
  3803  00271C  0009               	tblrd		*+
  3804  00271E  CFF5 F010          	movff	tablat,___flmul@b+1
  3805  002722  0009               	tblrd		*+
  3806  002724  CFF5 F011          	movff	tablat,___flmul@b+2
  3807  002728  000A               	tblrd		*-
  3808  00272A  CFF5 F012          	movff	tablat,___flmul@b+3
  3809  00272E  EC79  F00D         	call	___flmul	;wreg free
  3810  002732  C00F  F030         	movff	?___flmul,_fround$1115
  3811  002736  C010  F031         	movff	?___flmul+1,_fround$1115+1
  3812  00273A  C011  F032         	movff	?___flmul+2,_fround$1115+2
  3813  00273E  C012  F033         	movff	?___flmul+3,_fround$1115+3
  3814                           
  3815                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3816  002742  0E00               	movlw	0
  3817  002744  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3818  002746  0E0A               	movlw	10
  3819  002748  6E08               	movwf	___lwdiv@divisor^0,c
  3820  00274A  0E00               	movlw	0
  3821  00274C  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3822  00274E  0E64               	movlw	100
  3823  002750  6E03               	movwf	___lwmod@divisor^0,c
  3824  002752  C034  F001         	movff	fround@prec,___lwmod@dividend
  3825  002756  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3826  002758  EC94  F01C         	call	___lwmod	;wreg free
  3827  00275C  C001  F006         	movff	?___lwmod,___lwdiv@dividend
  3828  002760  C002  F007         	movff	?___lwmod+1,___lwdiv@dividend+1
  3829  002764  EC5A  F01C         	call	___lwdiv	;wreg free
  3830  002768  90D8               	bcf	status,0,c
  3831  00276A  3606               	rlcf	?___lwdiv^0,f,c
  3832  00276C  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3833  00276E  90D8               	bcf	status,0,c
  3834  002770  3606               	rlcf	?___lwdiv^0,f,c
  3835  002772  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3836  002774  0E24               	movlw	36
  3837  002776  2606               	addwf	?___lwdiv^0,f,c
  3838  002778  0E00               	movlw	0
  3839  00277A  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3840  00277C  0E35               	movlw	low __npowers_
  3841  00277E  2406               	addwf	?___lwdiv^0,w,c
  3842  002780  6EF6               	movwf	tblptrl,c
  3843  002782  0E08               	movlw	high __npowers_
  3844  002784  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3845  002786  6EF7               	movwf	tblptrh,c
  3846  002788                     	if	0	;There are less than 3 active tblptr bytes
  3847  002788                     	endif
  3848  002788  0009               	tblrd		*+
  3849  00278A  CFF5 F013          	movff	tablat,___flmul@a
  3850  00278E  0009               	tblrd		*+
  3851  002790  CFF5 F014          	movff	tablat,___flmul@a+1
  3852  002794  0009               	tblrd		*+
  3853  002796  CFF5 F015          	movff	tablat,___flmul@a+2
  3854  00279A  000A               	tblrd		*-
  3855  00279C  CFF5 F016          	movff	tablat,___flmul@a+3
  3856  0027A0  C030  F00F         	movff	_fround$1115,___flmul@b
  3857  0027A4  C031  F010         	movff	_fround$1115+1,___flmul@b+1
  3858  0027A8  C032  F011         	movff	_fround$1115+2,___flmul@b+2
  3859  0027AC  C033  F012         	movff	_fround$1115+3,___flmul@b+3
  3860  0027B0  EC79  F00D         	call	___flmul	;wreg free
  3861  0027B4  C00F  F02C         	movff	?___flmul,_fround$1116
  3862  0027B8  C010  F02D         	movff	?___flmul+1,_fround$1116+1
  3863  0027BC  C011  F02E         	movff	?___flmul+2,_fround$1116+2
  3864  0027C0  C012  F02F         	movff	?___flmul+3,_fround$1116+3
  3865                           
  3866                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  3867  0027C4  C02C  F00F         	movff	_fround$1116,___flmul@b
  3868  0027C8  C02D  F010         	movff	_fround$1116+1,___flmul@b+1
  3869  0027CC  C02E  F011         	movff	_fround$1116+2,___flmul@b+2
  3870  0027D0  C02F  F012         	movff	_fround$1116+3,___flmul@b+3
  3871  0027D4  0E00               	movlw	0
  3872  0027D6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3873  0027D8  0E0A               	movlw	10
  3874  0027DA  6E03               	movwf	___lwmod@divisor^0,c
  3875  0027DC  C034  F001         	movff	fround@prec,___lwmod@dividend
  3876  0027E0  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3877  0027E2  EC94  F01C         	call	___lwmod	;wreg free
  3878  0027E6  90D8               	bcf	status,0,c
  3879  0027E8  3601               	rlcf	?___lwmod^0,f,c
  3880  0027EA  3602               	rlcf	(?___lwmod+1)^0,f,c
  3881  0027EC  90D8               	bcf	status,0,c
  3882  0027EE  3601               	rlcf	?___lwmod^0,f,c
  3883  0027F0  3602               	rlcf	(?___lwmod+1)^0,f,c
  3884  0027F2  0E35               	movlw	low __npowers_
  3885  0027F4  2401               	addwf	?___lwmod^0,w,c
  3886  0027F6  6EF6               	movwf	tblptrl,c
  3887  0027F8  0E08               	movlw	high __npowers_
  3888  0027FA  2002               	addwfc	(?___lwmod+1)^0,w,c
  3889  0027FC  6EF7               	movwf	tblptrh,c
  3890  0027FE                     	if	0	;There are less than 3 active tblptr bytes
  3891  0027FE                     	endif
  3892  0027FE  0009               	tblrd		*+
  3893  002800  CFF5 F013          	movff	tablat,___flmul@a
  3894  002804  0009               	tblrd		*+
  3895  002806  CFF5 F014          	movff	tablat,___flmul@a+1
  3896  00280A  0009               	tblrd		*+
  3897  00280C  CFF5 F015          	movff	tablat,___flmul@a+2
  3898  002810  000A               	tblrd		*-
  3899  002812  CFF5 F016          	movff	tablat,___flmul@a+3
  3900  002816  EC79  F00D         	call	___flmul	;wreg free
  3901  00281A  C00F  F028         	movff	?___flmul,?_fround
  3902  00281E  C010  F029         	movff	?___flmul+1,?_fround+1
  3903  002822  C011  F02A         	movff	?___flmul+2,?_fround+2
  3904  002826  C012  F02B         	movff	?___flmul+3,?_fround+3
  3905  00282A  EFB1  F014         	goto	l156
  3906  00282E                     l3078:
  3907                           
  3908                           ;doprnt.c: 423: else if(prec > 10)
  3909  00282E  0E0A               	movlw	10
  3910  002830  6434               	cpfsgt	fround@prec^0,c
  3911  002832  EF1D  F014         	goto	u3051
  3912  002836  EF1F  F014         	goto	u3050
  3913  00283A                     u3051:
  3914  00283A  EF8B  F014         	goto	l3084
  3915  00283E                     u3050:
  3916  00283E                     
  3917                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3918  00283E  0E00               	movlw	0
  3919  002840  6E13               	movwf	___flmul@a^0,c
  3920  002842  0E00               	movlw	0
  3921  002844  6E14               	movwf	(___flmul@a+1)^0,c
  3922  002846  0E00               	movlw	0
  3923  002848  6E15               	movwf	(___flmul@a+2)^0,c
  3924  00284A  0E3F               	movlw	63
  3925  00284C  6E16               	movwf	(___flmul@a+3)^0,c
  3926  00284E  0E00               	movlw	0
  3927  002850  6E09               	movwf	(___lwdiv@divisor+1)^0,c
  3928  002852  0E0A               	movlw	10
  3929  002854  6E08               	movwf	___lwdiv@divisor^0,c
  3930  002856  C034  F006         	movff	fround@prec,___lwdiv@dividend
  3931  00285A  6A07               	clrf	(___lwdiv@dividend+1)^0,c
  3932  00285C  EC5A  F01C         	call	___lwdiv	;wreg free
  3933  002860  90D8               	bcf	status,0,c
  3934  002862  3606               	rlcf	?___lwdiv^0,f,c
  3935  002864  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3936  002866  90D8               	bcf	status,0,c
  3937  002868  3606               	rlcf	?___lwdiv^0,f,c
  3938  00286A  3607               	rlcf	(?___lwdiv+1)^0,f,c
  3939  00286C  0E24               	movlw	36
  3940  00286E  2606               	addwf	?___lwdiv^0,f,c
  3941  002870  0E00               	movlw	0
  3942  002872  2207               	addwfc	(?___lwdiv+1)^0,f,c
  3943  002874  0E35               	movlw	low __npowers_
  3944  002876  2406               	addwf	?___lwdiv^0,w,c
  3945  002878  6EF6               	movwf	tblptrl,c
  3946  00287A  0E08               	movlw	high __npowers_
  3947  00287C  2007               	addwfc	(?___lwdiv+1)^0,w,c
  3948  00287E  6EF7               	movwf	tblptrh,c
  3949  002880                     	if	0	;There are less than 3 active tblptr bytes
  3950  002880                     	endif
  3951  002880  0009               	tblrd		*+
  3952  002882  CFF5 F00F          	movff	tablat,___flmul@b
  3953  002886  0009               	tblrd		*+
  3954  002888  CFF5 F010          	movff	tablat,___flmul@b+1
  3955  00288C  0009               	tblrd		*+
  3956  00288E  CFF5 F011          	movff	tablat,___flmul@b+2
  3957  002892  000A               	tblrd		*-
  3958  002894  CFF5 F012          	movff	tablat,___flmul@b+3
  3959  002898  EC79  F00D         	call	___flmul	;wreg free
  3960  00289C  C00F  F030         	movff	?___flmul,_fround$1115
  3961  0028A0  C010  F031         	movff	?___flmul+1,_fround$1115+1
  3962  0028A4  C011  F032         	movff	?___flmul+2,_fround$1115+2
  3963  0028A8  C012  F033         	movff	?___flmul+3,_fround$1115+3
  3964                           
  3965                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3966  0028AC  C030  F00F         	movff	_fround$1115,___flmul@b
  3967  0028B0  C031  F010         	movff	_fround$1115+1,___flmul@b+1
  3968  0028B4  C032  F011         	movff	_fround$1115+2,___flmul@b+2
  3969  0028B8  C033  F012         	movff	_fround$1115+3,___flmul@b+3
  3970  0028BC  0E00               	movlw	0
  3971  0028BE  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3972  0028C0  0E0A               	movlw	10
  3973  0028C2  6E03               	movwf	___lwmod@divisor^0,c
  3974  0028C4  C034  F001         	movff	fround@prec,___lwmod@dividend
  3975  0028C8  6A02               	clrf	(___lwmod@dividend+1)^0,c
  3976  0028CA  EC94  F01C         	call	___lwmod	;wreg free
  3977  0028CE  90D8               	bcf	status,0,c
  3978  0028D0  3601               	rlcf	?___lwmod^0,f,c
  3979  0028D2  3602               	rlcf	(?___lwmod+1)^0,f,c
  3980  0028D4  90D8               	bcf	status,0,c
  3981  0028D6  3601               	rlcf	?___lwmod^0,f,c
  3982  0028D8  3602               	rlcf	(?___lwmod+1)^0,f,c
  3983  0028DA  0E35               	movlw	low __npowers_
  3984  0028DC  2401               	addwf	?___lwmod^0,w,c
  3985  0028DE  6EF6               	movwf	tblptrl,c
  3986  0028E0  0E08               	movlw	high __npowers_
  3987  0028E2  2002               	addwfc	(?___lwmod+1)^0,w,c
  3988  0028E4  6EF7               	movwf	tblptrh,c
  3989  0028E6                     	if	0	;There are less than 3 active tblptr bytes
  3990  0028E6                     	endif
  3991  0028E6  0009               	tblrd		*+
  3992  0028E8  CFF5 F013          	movff	tablat,___flmul@a
  3993  0028EC  0009               	tblrd		*+
  3994  0028EE  CFF5 F014          	movff	tablat,___flmul@a+1
  3995  0028F2  0009               	tblrd		*+
  3996  0028F4  CFF5 F015          	movff	tablat,___flmul@a+2
  3997  0028F8  000A               	tblrd		*-
  3998  0028FA  CFF5 F016          	movff	tablat,___flmul@a+3
  3999  0028FE  EC79  F00D         	call	___flmul	;wreg free
  4000  002902  C00F  F028         	movff	?___flmul,?_fround
  4001  002906  C010  F029         	movff	?___flmul+1,?_fround+1
  4002  00290A  C011  F02A         	movff	?___flmul+2,?_fround+2
  4003  00290E  C012  F02B         	movff	?___flmul+3,?_fround+3
  4004  002912  EFB1  F014         	goto	l156
  4005  002916                     l3084:
  4006                           
  4007                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  4008  002916  5034               	movf	fround@prec^0,w,c
  4009  002918  0D04               	mullw	4
  4010  00291A  0E35               	movlw	low __npowers_
  4011  00291C  24F3               	addwf	243,w,c
  4012  00291E  6EF6               	movwf	tblptrl,c
  4013  002920  0E08               	movlw	high __npowers_
  4014  002922  20F4               	addwfc	244,w,c
  4015  002924  6EF7               	movwf	tblptrh,c
  4016  002926                     	if	0	;There are less than 3 active tblptr bytes
  4017  002926                     	endif
  4018  002926  0009               	tblrd		*+
  4019  002928  CFF5 F00F          	movff	tablat,___flmul@b
  4020  00292C  0009               	tblrd		*+
  4021  00292E  CFF5 F010          	movff	tablat,___flmul@b+1
  4022  002932  0009               	tblrd		*+
  4023  002934  CFF5 F011          	movff	tablat,___flmul@b+2
  4024  002938  000A               	tblrd		*-
  4025  00293A  CFF5 F012          	movff	tablat,___flmul@b+3
  4026  00293E  0E00               	movlw	0
  4027  002940  6E13               	movwf	___flmul@a^0,c
  4028  002942  0E00               	movlw	0
  4029  002944  6E14               	movwf	(___flmul@a+1)^0,c
  4030  002946  0E00               	movlw	0
  4031  002948  6E15               	movwf	(___flmul@a+2)^0,c
  4032  00294A  0E3F               	movlw	63
  4033  00294C  6E16               	movwf	(___flmul@a+3)^0,c
  4034  00294E  EC79  F00D         	call	___flmul	;wreg free
  4035  002952  C00F  F028         	movff	?___flmul,?_fround
  4036  002956  C010  F029         	movff	?___flmul+1,?_fround+1
  4037  00295A  C011  F02A         	movff	?___flmul+2,?_fround+2
  4038  00295E  C012  F02B         	movff	?___flmul+3,?_fround+3
  4039  002962                     l156:
  4040  002962  0012               	return		;funcret
  4041  002964                     __end_of_fround:
  4042                           	callstack 0
  4043                           
  4044 ;; *************** function ___lwmod *****************
  4045 ;; Defined at:
  4046 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\lwmod.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  dividend        2    0[COMRAM] unsigned int 
  4049 ;;  divisor         2    2[COMRAM] unsigned int 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  counter         1    4[COMRAM] unsigned char 
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  2    0[COMRAM] unsigned int 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4061 ;;      Params:         4       0       0       0       0       0       0       0       0
  4062 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4064 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4065 ;;Total ram usage:        5 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; This function calls:
  4068 ;;		Nothing
  4069 ;; This function is called by:
  4070 ;;		_fround
  4071 ;; This function uses a non-reentrant model
  4072 ;;
  4073                           
  4074                           	psect	text7
  4075  003928                     __ptext7:
  4076                           	callstack 0
  4077  003928                     ___lwmod:
  4078                           	callstack 28
  4079  003928  5003               	movf	___lwmod@divisor^0,w,c
  4080  00392A  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  4081  00392C  B4D8               	btfsc	status,2,c
  4082  00392E  EF9B  F01C         	goto	u2951
  4083  003932  EF9D  F01C         	goto	u2950
  4084  003936                     u2951:
  4085  003936  EFC1  F01C         	goto	l799
  4086  00393A                     u2950:
  4087  00393A  0E01               	movlw	1
  4088  00393C  6E05               	movwf	___lwmod@counter^0,c
  4089  00393E  EFA5  F01C         	goto	l3014
  4090  003942                     l3012:
  4091  003942  90D8               	bcf	status,0,c
  4092  003944  3603               	rlcf	___lwmod@divisor^0,f,c
  4093  003946  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  4094  003948  2A05               	incf	___lwmod@counter^0,f,c
  4095  00394A                     l3014:
  4096  00394A  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  4097  00394C  EFAA  F01C         	goto	u2961
  4098  003950  EFAC  F01C         	goto	u2960
  4099  003954                     u2961:
  4100  003954  EFA1  F01C         	goto	l3012
  4101  003958                     u2960:
  4102  003958                     l3016:
  4103  003958  5003               	movf	___lwmod@divisor^0,w,c
  4104  00395A  5C01               	subwf	___lwmod@dividend^0,w,c
  4105  00395C  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4106  00395E  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  4107  003960  A0D8               	btfss	status,0,c
  4108  003962  EFB5  F01C         	goto	u2971
  4109  003966  EFB7  F01C         	goto	u2970
  4110  00396A                     u2971:
  4111  00396A  EFBB  F01C         	goto	l3020
  4112  00396E                     u2970:
  4113  00396E  5003               	movf	___lwmod@divisor^0,w,c
  4114  003970  5E01               	subwf	___lwmod@dividend^0,f,c
  4115  003972  5004               	movf	(___lwmod@divisor+1)^0,w,c
  4116  003974  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  4117  003976                     l3020:
  4118  003976  90D8               	bcf	status,0,c
  4119  003978  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  4120  00397A  3203               	rrcf	___lwmod@divisor^0,f,c
  4121  00397C  2E05               	decfsz	___lwmod@counter^0,f,c
  4122  00397E  EFAC  F01C         	goto	l3016
  4123  003982                     l799:
  4124  003982  C001  F001         	movff	___lwmod@dividend,?___lwmod
  4125  003986  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  4126  00398A  0012               	return		;funcret
  4127  00398C                     __end_of___lwmod:
  4128                           	callstack 0
  4129                           
  4130 ;; *************** function ___lwdiv *****************
  4131 ;; Defined at:
  4132 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\lwdiv.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  dividend        2    5[COMRAM] unsigned int 
  4135 ;;  divisor         2    7[COMRAM] unsigned int 
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;  quotient        2    9[COMRAM] unsigned int 
  4138 ;;  counter         1   11[COMRAM] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;                  2    5[COMRAM] unsigned int 
  4141 ;; Registers used:
  4142 ;;		wreg, status,2, status,0
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4148 ;;      Params:         4       0       0       0       0       0       0       0       0
  4149 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4151 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4152 ;;Total ram usage:        7 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_fround
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text8
  4162  0038B4                     __ptext8:
  4163                           	callstack 0
  4164  0038B4                     ___lwdiv:
  4165                           	callstack 28
  4166  0038B4  0E00               	movlw	0
  4167  0038B6  6E0B               	movwf	(___lwdiv@quotient+1)^0,c
  4168  0038B8  0E00               	movlw	0
  4169  0038BA  6E0A               	movwf	___lwdiv@quotient^0,c
  4170  0038BC  5008               	movf	___lwdiv@divisor^0,w,c
  4171  0038BE  1009               	iorwf	(___lwdiv@divisor+1)^0,w,c
  4172  0038C0  B4D8               	btfsc	status,2,c
  4173  0038C2  EF65  F01C         	goto	u2921
  4174  0038C6  EF67  F01C         	goto	u2920
  4175  0038CA                     u2921:
  4176  0038CA  EF8F  F01C         	goto	l789
  4177  0038CE                     u2920:
  4178  0038CE  0E01               	movlw	1
  4179  0038D0  6E0C               	movwf	___lwdiv@counter^0,c
  4180  0038D2  EF6F  F01C         	goto	l2994
  4181  0038D6                     l2992:
  4182  0038D6  90D8               	bcf	status,0,c
  4183  0038D8  3608               	rlcf	___lwdiv@divisor^0,f,c
  4184  0038DA  3609               	rlcf	(___lwdiv@divisor+1)^0,f,c
  4185  0038DC  2A0C               	incf	___lwdiv@counter^0,f,c
  4186  0038DE                     l2994:
  4187  0038DE  AE09               	btfss	(___lwdiv@divisor+1)^0,7,c
  4188  0038E0  EF74  F01C         	goto	u2931
  4189  0038E4  EF76  F01C         	goto	u2930
  4190  0038E8                     u2931:
  4191  0038E8  EF6B  F01C         	goto	l2992
  4192  0038EC                     u2930:
  4193  0038EC                     l2996:
  4194  0038EC  90D8               	bcf	status,0,c
  4195  0038EE  360A               	rlcf	___lwdiv@quotient^0,f,c
  4196  0038F0  360B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  4197  0038F2  5008               	movf	___lwdiv@divisor^0,w,c
  4198  0038F4  5C06               	subwf	___lwdiv@dividend^0,w,c
  4199  0038F6  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4200  0038F8  5807               	subwfb	(___lwdiv@dividend+1)^0,w,c
  4201  0038FA  A0D8               	btfss	status,0,c
  4202  0038FC  EF82  F01C         	goto	u2941
  4203  003900  EF84  F01C         	goto	u2940
  4204  003904                     u2941:
  4205  003904  EF89  F01C         	goto	l3004
  4206  003908                     u2940:
  4207  003908  5008               	movf	___lwdiv@divisor^0,w,c
  4208  00390A  5E06               	subwf	___lwdiv@dividend^0,f,c
  4209  00390C  5009               	movf	(___lwdiv@divisor+1)^0,w,c
  4210  00390E  5A07               	subwfb	(___lwdiv@dividend+1)^0,f,c
  4211  003910  800A               	bsf	___lwdiv@quotient^0,0,c
  4212  003912                     l3004:
  4213  003912  90D8               	bcf	status,0,c
  4214  003914  3209               	rrcf	(___lwdiv@divisor+1)^0,f,c
  4215  003916  3208               	rrcf	___lwdiv@divisor^0,f,c
  4216  003918  2E0C               	decfsz	___lwdiv@counter^0,f,c
  4217  00391A  EF76  F01C         	goto	l2996
  4218  00391E                     l789:
  4219  00391E  C00A  F006         	movff	___lwdiv@quotient,?___lwdiv
  4220  003922  C00B  F007         	movff	___lwdiv@quotient+1,?___lwdiv+1
  4221  003926  0012               	return		;funcret
  4222  003928                     __end_of___lwdiv:
  4223                           	callstack 0
  4224                           
  4225 ;; *************** function ___flmul *****************
  4226 ;; Defined at:
  4227 ;;		line 8 in file "D:\MPLABX\XC8\pic\sources\c90\common\sprcmul.c"
  4228 ;; Parameters:    Size  Location     Type
  4229 ;;  b               4   14[COMRAM] unsigned int 
  4230 ;;  a               4   18[COMRAM] unsigned int 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;  prod            4   33[COMRAM] struct .
  4233 ;;  grs             4   27[COMRAM] unsigned long 
  4234 ;;  temp            2   37[COMRAM] struct .
  4235 ;;  bexp            1   32[COMRAM] unsigned char 
  4236 ;;  aexp            1   31[COMRAM] unsigned char 
  4237 ;;  sign            1   26[COMRAM] unsigned char 
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  4   14[COMRAM] unsigned char 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2, status,0, prodl, prodh
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4247 ;;      Params:         8       0       0       0       0       0       0       0       0
  4248 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4249 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4250 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4251 ;;Total ram usage:       25 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; This function calls:
  4254 ;;		Nothing
  4255 ;; This function is called by:
  4256 ;;		_main
  4257 ;;		_fround
  4258 ;;		_scale
  4259 ;;		_sprintf
  4260 ;; This function uses a non-reentrant model
  4261 ;;
  4262                           
  4263                           	psect	text9
  4264  001AF2                     __ptext9:
  4265                           	callstack 0
  4266  001AF2                     ___flmul:
  4267                           	callstack 28
  4268  001AF2  5012               	movf	(___flmul@b+3)^0,w,c
  4269  001AF4  0B80               	andlw	128
  4270  001AF6  6E1B               	movwf	___flmul@sign^0,c
  4271  001AF8  5012               	movf	(___flmul@b+3)^0,w,c
  4272  001AFA  2412               	addwf	(___flmul@b+3)^0,w,c
  4273  001AFC  6E21               	movwf	___flmul@bexp^0,c
  4274  001AFE  AE11               	btfss	(___flmul@b+2)^0,7,c
  4275  001B00  EF84  F00D         	goto	u2611
  4276  001B04  EF86  F00D         	goto	u2610
  4277  001B08                     u2611:
  4278  001B08  EF87  F00D         	goto	l2782
  4279  001B0C                     u2610:
  4280  001B0C  8021               	bsf	___flmul@bexp^0,0,c
  4281  001B0E                     l2782:
  4282  001B0E  5021               	movf	___flmul@bexp^0,w,c
  4283  001B10  B4D8               	btfsc	status,2,c
  4284  001B12  EF8D  F00D         	goto	u2621
  4285  001B16  EF8F  F00D         	goto	u2620
  4286  001B1A                     u2621:
  4287  001B1A  EFA2  F00D         	goto	l2790
  4288  001B1E                     u2620:
  4289  001B1E  2821               	incf	___flmul@bexp^0,w,c
  4290  001B20  A4D8               	btfss	status,2,c
  4291  001B22  EF95  F00D         	goto	u2631
  4292  001B26  EF97  F00D         	goto	u2630
  4293  001B2A                     u2631:
  4294  001B2A  EF9F  F00D         	goto	l2788
  4295  001B2E                     u2630:
  4296  001B2E  0E00               	movlw	0
  4297  001B30  6E0F               	movwf	___flmul@b^0,c
  4298  001B32  0E00               	movlw	0
  4299  001B34  6E10               	movwf	(___flmul@b+1)^0,c
  4300  001B36  0E00               	movlw	0
  4301  001B38  6E11               	movwf	(___flmul@b+2)^0,c
  4302  001B3A  0E00               	movlw	0
  4303  001B3C  6E12               	movwf	(___flmul@b+3)^0,c
  4304  001B3E                     l2788:
  4305  001B3E  8E11               	bsf	(___flmul@b+2)^0,7,c
  4306  001B40  EFAA  F00D         	goto	l2792
  4307  001B44                     l2790:
  4308  001B44  0E00               	movlw	0
  4309  001B46  6E0F               	movwf	___flmul@b^0,c
  4310  001B48  0E00               	movlw	0
  4311  001B4A  6E10               	movwf	(___flmul@b+1)^0,c
  4312  001B4C  0E00               	movlw	0
  4313  001B4E  6E11               	movwf	(___flmul@b+2)^0,c
  4314  001B50  0E00               	movlw	0
  4315  001B52  6E12               	movwf	(___flmul@b+3)^0,c
  4316  001B54                     l2792:
  4317  001B54  5016               	movf	(___flmul@a+3)^0,w,c
  4318  001B56  0B80               	andlw	128
  4319  001B58  1A1B               	xorwf	___flmul@sign^0,f,c
  4320  001B5A  5016               	movf	(___flmul@a+3)^0,w,c
  4321  001B5C  2416               	addwf	(___flmul@a+3)^0,w,c
  4322  001B5E  6E20               	movwf	___flmul@aexp^0,c
  4323  001B60  AE15               	btfss	(___flmul@a+2)^0,7,c
  4324  001B62  EFB5  F00D         	goto	u2641
  4325  001B66  EFB7  F00D         	goto	u2640
  4326  001B6A                     u2641:
  4327  001B6A  EFB8  F00D         	goto	l2800
  4328  001B6E                     u2640:
  4329  001B6E  8020               	bsf	___flmul@aexp^0,0,c
  4330  001B70                     l2800:
  4331  001B70  5020               	movf	___flmul@aexp^0,w,c
  4332  001B72  B4D8               	btfsc	status,2,c
  4333  001B74  EFBE  F00D         	goto	u2651
  4334  001B78  EFC0  F00D         	goto	u2650
  4335  001B7C                     u2651:
  4336  001B7C  EFD3  F00D         	goto	l2808
  4337  001B80                     u2650:
  4338  001B80  2820               	incf	___flmul@aexp^0,w,c
  4339  001B82  A4D8               	btfss	status,2,c
  4340  001B84  EFC6  F00D         	goto	u2661
  4341  001B88  EFC8  F00D         	goto	u2660
  4342  001B8C                     u2661:
  4343  001B8C  EFD0  F00D         	goto	l2806
  4344  001B90                     u2660:
  4345  001B90  0E00               	movlw	0
  4346  001B92  6E13               	movwf	___flmul@a^0,c
  4347  001B94  0E00               	movlw	0
  4348  001B96  6E14               	movwf	(___flmul@a+1)^0,c
  4349  001B98  0E00               	movlw	0
  4350  001B9A  6E15               	movwf	(___flmul@a+2)^0,c
  4351  001B9C  0E00               	movlw	0
  4352  001B9E  6E16               	movwf	(___flmul@a+3)^0,c
  4353  001BA0                     l2806:
  4354  001BA0  8E15               	bsf	(___flmul@a+2)^0,7,c
  4355  001BA2  EFDB  F00D         	goto	l912
  4356  001BA6                     l2808:
  4357  001BA6  0E00               	movlw	0
  4358  001BA8  6E13               	movwf	___flmul@a^0,c
  4359  001BAA  0E00               	movlw	0
  4360  001BAC  6E14               	movwf	(___flmul@a+1)^0,c
  4361  001BAE  0E00               	movlw	0
  4362  001BB0  6E15               	movwf	(___flmul@a+2)^0,c
  4363  001BB2  0E00               	movlw	0
  4364  001BB4  6E16               	movwf	(___flmul@a+3)^0,c
  4365  001BB6                     l912:
  4366  001BB6  5020               	movf	___flmul@aexp^0,w,c
  4367  001BB8  B4D8               	btfsc	status,2,c
  4368  001BBA  EFE1  F00D         	goto	u2671
  4369  001BBE  EFE3  F00D         	goto	u2670
  4370  001BC2                     u2671:
  4371  001BC2  EFEB  F00D         	goto	l2812
  4372  001BC6                     u2670:
  4373  001BC6  5021               	movf	___flmul@bexp^0,w,c
  4374  001BC8  A4D8               	btfss	status,2,c
  4375  001BCA  EFE9  F00D         	goto	u2681
  4376  001BCE  EFEB  F00D         	goto	u2680
  4377  001BD2                     u2681:
  4378  001BD2  EFF5  F00D         	goto	l2816
  4379  001BD6                     u2680:
  4380  001BD6                     l2812:
  4381  001BD6  0E00               	movlw	0
  4382  001BD8  6E0F               	movwf	?___flmul^0,c
  4383  001BDA  0E00               	movlw	0
  4384  001BDC  6E10               	movwf	(?___flmul+1)^0,c
  4385  001BDE  0E00               	movlw	0
  4386  001BE0  6E11               	movwf	(?___flmul+2)^0,c
  4387  001BE2  0E00               	movlw	0
  4388  001BE4  6E12               	movwf	(?___flmul+3)^0,c
  4389  001BE6  EF8D  F00F         	goto	l916
  4390  001BEA                     l2816:
  4391  001BEA  5015               	movf	(___flmul@a+2)^0,w,c
  4392  001BEC  020F               	mulwf	___flmul@b^0,c
  4393  001BEE  CFF3 F026          	movff	prodl,___flmul@temp
  4394  001BF2  CFF4 F027          	movff	prodh,___flmul@temp+1
  4395  001BF6  5026               	movf	___flmul@temp^0,w,c
  4396  001BF8  6E1C               	movwf	___flmul@grs^0,c
  4397  001BFA  6A1D               	clrf	(___flmul@grs+1)^0,c
  4398  001BFC  6A1E               	clrf	(___flmul@grs+2)^0,c
  4399  001BFE  6A1F               	clrf	(___flmul@grs+3)^0,c
  4400  001C00  5027               	movf	(___flmul@temp+1)^0,w,c
  4401  001C02  6E22               	movwf	___flmul@prod^0,c
  4402  001C04  6A23               	clrf	(___flmul@prod+1)^0,c
  4403  001C06  6A24               	clrf	(___flmul@prod+2)^0,c
  4404  001C08  6A25               	clrf	(___flmul@prod+3)^0,c
  4405  001C0A  5014               	movf	(___flmul@a+1)^0,w,c
  4406  001C0C  0210               	mulwf	(___flmul@b+1)^0,c
  4407  001C0E  CFF3 F026          	movff	prodl,___flmul@temp
  4408  001C12  CFF4 F027          	movff	prodh,___flmul@temp+1
  4409  001C16  5026               	movf	___flmul@temp^0,w,c
  4410  001C18  261C               	addwf	___flmul@grs^0,f,c
  4411  001C1A  0E00               	movlw	0
  4412  001C1C  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4413  001C1E  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4414  001C20  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4415  001C22  5027               	movf	(___flmul@temp+1)^0,w,c
  4416  001C24  2622               	addwf	___flmul@prod^0,f,c
  4417  001C26  0E00               	movlw	0
  4418  001C28  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4419  001C2A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4420  001C2C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4421  001C2E  5013               	movf	___flmul@a^0,w,c
  4422  001C30  0211               	mulwf	(___flmul@b+2)^0,c
  4423  001C32  CFF3 F026          	movff	prodl,___flmul@temp
  4424  001C36  CFF4 F027          	movff	prodh,___flmul@temp+1
  4425  001C3A  5026               	movf	___flmul@temp^0,w,c
  4426  001C3C  261C               	addwf	___flmul@grs^0,f,c
  4427  001C3E  0E00               	movlw	0
  4428  001C40  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4429  001C42  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4430  001C44  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4431  001C46  5027               	movf	(___flmul@temp+1)^0,w,c
  4432  001C48  2622               	addwf	___flmul@prod^0,f,c
  4433  001C4A  0E00               	movlw	0
  4434  001C4C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4435  001C4E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4436  001C50  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4437  001C52  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4438  001C56  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4439  001C5A  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4440  001C5E  6A1C               	clrf	___flmul@grs^0,c
  4441  001C60  5013               	movf	___flmul@a^0,w,c
  4442  001C62  0210               	mulwf	(___flmul@b+1)^0,c
  4443  001C64  CFF3 F026          	movff	prodl,___flmul@temp
  4444  001C68  CFF4 F027          	movff	prodh,___flmul@temp+1
  4445  001C6C  5026               	movf	___flmul@temp^0,w,c
  4446  001C6E  261C               	addwf	___flmul@grs^0,f,c
  4447  001C70  5027               	movf	(___flmul@temp+1)^0,w,c
  4448  001C72  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4449  001C74  0E00               	movlw	0
  4450  001C76  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4451  001C78  0E00               	movlw	0
  4452  001C7A  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4453  001C7C  5014               	movf	(___flmul@a+1)^0,w,c
  4454  001C7E  020F               	mulwf	___flmul@b^0,c
  4455  001C80  CFF3 F026          	movff	prodl,___flmul@temp
  4456  001C84  CFF4 F027          	movff	prodh,___flmul@temp+1
  4457  001C88  5026               	movf	___flmul@temp^0,w,c
  4458  001C8A  261C               	addwf	___flmul@grs^0,f,c
  4459  001C8C  5027               	movf	(___flmul@temp+1)^0,w,c
  4460  001C8E  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4461  001C90  0E00               	movlw	0
  4462  001C92  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4463  001C94  0E00               	movlw	0
  4464  001C96  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4465  001C98  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4466  001C9C  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4467  001CA0  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4468  001CA4  6A1C               	clrf	___flmul@grs^0,c
  4469  001CA6  5013               	movf	___flmul@a^0,w,c
  4470  001CA8  020F               	mulwf	___flmul@b^0,c
  4471  001CAA  CFF3 F026          	movff	prodl,___flmul@temp
  4472  001CAE  CFF4 F027          	movff	prodh,___flmul@temp+1
  4473  001CB2  5026               	movf	___flmul@temp^0,w,c
  4474  001CB4  261C               	addwf	___flmul@grs^0,f,c
  4475  001CB6  5027               	movf	(___flmul@temp+1)^0,w,c
  4476  001CB8  221D               	addwfc	(___flmul@grs+1)^0,f,c
  4477  001CBA  0E00               	movlw	0
  4478  001CBC  221E               	addwfc	(___flmul@grs+2)^0,f,c
  4479  001CBE  0E00               	movlw	0
  4480  001CC0  221F               	addwfc	(___flmul@grs+3)^0,f,c
  4481  001CC2  5015               	movf	(___flmul@a+2)^0,w,c
  4482  001CC4  0210               	mulwf	(___flmul@b+1)^0,c
  4483  001CC6  CFF3 F026          	movff	prodl,___flmul@temp
  4484  001CCA  CFF4 F027          	movff	prodh,___flmul@temp+1
  4485  001CCE  5026               	movf	___flmul@temp^0,w,c
  4486  001CD0  2622               	addwf	___flmul@prod^0,f,c
  4487  001CD2  5027               	movf	(___flmul@temp+1)^0,w,c
  4488  001CD4  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4489  001CD6  0E00               	movlw	0
  4490  001CD8  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4491  001CDA  0E00               	movlw	0
  4492  001CDC  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4493  001CDE  5014               	movf	(___flmul@a+1)^0,w,c
  4494  001CE0  0211               	mulwf	(___flmul@b+2)^0,c
  4495  001CE2  CFF3 F026          	movff	prodl,___flmul@temp
  4496  001CE6  CFF4 F027          	movff	prodh,___flmul@temp+1
  4497  001CEA  5026               	movf	___flmul@temp^0,w,c
  4498  001CEC  2622               	addwf	___flmul@prod^0,f,c
  4499  001CEE  5027               	movf	(___flmul@temp+1)^0,w,c
  4500  001CF0  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4501  001CF2  0E00               	movlw	0
  4502  001CF4  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4503  001CF6  0E00               	movlw	0
  4504  001CF8  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4505  001CFA  5015               	movf	(___flmul@a+2)^0,w,c
  4506  001CFC  0211               	mulwf	(___flmul@b+2)^0,c
  4507  001CFE  CFF3 F026          	movff	prodl,___flmul@temp
  4508  001D02  CFF4 F027          	movff	prodh,___flmul@temp+1
  4509  001D06  5026               	movf	___flmul@temp^0,w,c
  4510  001D08  6E17               	movwf	??___flmul^0,c
  4511  001D0A  5027               	movf	(___flmul@temp+1)^0,w,c
  4512  001D0C  6E18               	movwf	(??___flmul+1)^0,c
  4513  001D0E  6A19               	clrf	(??___flmul+2)^0,c
  4514  001D10  6A1A               	clrf	(??___flmul+3)^0,c
  4515  001D12  C019  F01A         	movff	??___flmul+2,??___flmul+3
  4516  001D16  C018  F019         	movff	??___flmul+1,??___flmul+2
  4517  001D1A  C017  F018         	movff	??___flmul,??___flmul+1
  4518  001D1E  6A17               	clrf	??___flmul^0,c
  4519  001D20  5017               	movf	??___flmul^0,w,c
  4520  001D22  2622               	addwf	___flmul@prod^0,f,c
  4521  001D24  5018               	movf	(??___flmul+1)^0,w,c
  4522  001D26  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4523  001D28  5019               	movf	(??___flmul+2)^0,w,c
  4524  001D2A  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4525  001D2C  501A               	movf	(??___flmul+3)^0,w,c
  4526  001D2E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4527  001D30  C01C  F017         	movff	___flmul@grs,??___flmul
  4528  001D34  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  4529  001D38  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  4530  001D3C  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  4531  001D40  0E19               	movlw	25
  4532  001D42  EFA8  F00E         	goto	u2690
  4533  001D46                     u2695:
  4534  001D46  90D8               	bcf	status,0,c
  4535  001D48  321A               	rrcf	(??___flmul+3)^0,f,c
  4536  001D4A  3219               	rrcf	(??___flmul+2)^0,f,c
  4537  001D4C  3218               	rrcf	(??___flmul+1)^0,f,c
  4538  001D4E  3217               	rrcf	??___flmul^0,f,c
  4539  001D50                     u2690:
  4540  001D50  2EE8               	decfsz	wreg,f,c
  4541  001D52  EFA3  F00E         	goto	u2695
  4542  001D56  5017               	movf	??___flmul^0,w,c
  4543  001D58  2622               	addwf	___flmul@prod^0,f,c
  4544  001D5A  5018               	movf	(??___flmul+1)^0,w,c
  4545  001D5C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4546  001D5E  5019               	movf	(??___flmul+2)^0,w,c
  4547  001D60  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4548  001D62  501A               	movf	(??___flmul+3)^0,w,c
  4549  001D64  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4550  001D66  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  4551  001D6A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  4552  001D6E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  4553  001D72  6A1C               	clrf	___flmul@grs^0,c
  4554  001D74  5020               	movf	___flmul@aexp^0,w,c
  4555  001D76  C021  F017         	movff	___flmul@bexp,??___flmul
  4556  001D7A  6A18               	clrf	(??___flmul+1)^0,c
  4557  001D7C  2617               	addwf	??___flmul^0,f,c
  4558  001D7E  0E00               	movlw	0
  4559  001D80  2218               	addwfc	(??___flmul+1)^0,f,c
  4560  001D82  0E82               	movlw	130
  4561  001D84  2417               	addwf	??___flmul^0,w,c
  4562  001D86  6E26               	movwf	___flmul@temp^0,c
  4563  001D88  0EFF               	movlw	255
  4564  001D8A  2018               	addwfc	(??___flmul+1)^0,w,c
  4565  001D8C  6E27               	movwf	(___flmul@temp+1)^0,c
  4566  001D8E  EFDE  F00E         	goto	l2864
  4567  001D92                     l2858:
  4568  001D92  90D8               	bcf	status,0,c
  4569  001D94  3622               	rlcf	___flmul@prod^0,f,c
  4570  001D96  3623               	rlcf	(___flmul@prod+1)^0,f,c
  4571  001D98  3624               	rlcf	(___flmul@prod+2)^0,f,c
  4572  001D9A  3625               	rlcf	(___flmul@prod+3)^0,f,c
  4573  001D9C  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4574  001D9E  EFD3  F00E         	goto	u2701
  4575  001DA2  EFD5  F00E         	goto	u2700
  4576  001DA6                     u2701:
  4577  001DA6  EFD6  F00E         	goto	l919
  4578  001DAA                     u2700:
  4579  001DAA  8022               	bsf	___flmul@prod^0,0,c
  4580  001DAC                     l919:
  4581  001DAC  90D8               	bcf	status,0,c
  4582  001DAE  361C               	rlcf	___flmul@grs^0,f,c
  4583  001DB0  361D               	rlcf	(___flmul@grs+1)^0,f,c
  4584  001DB2  361E               	rlcf	(___flmul@grs+2)^0,f,c
  4585  001DB4  361F               	rlcf	(___flmul@grs+3)^0,f,c
  4586  001DB6  0626               	decf	___flmul@temp^0,f,c
  4587  001DB8  A0D8               	btfss	status,0,c
  4588  001DBA  0627               	decf	(___flmul@temp+1)^0,f,c
  4589  001DBC                     l2864:
  4590  001DBC  AE24               	btfss	(___flmul@prod+2)^0,7,c
  4591  001DBE  EFE3  F00E         	goto	u2711
  4592  001DC2  EFE5  F00E         	goto	u2710
  4593  001DC6                     u2711:
  4594  001DC6  EFC9  F00E         	goto	l2858
  4595  001DCA                     u2710:
  4596  001DCA  0E00               	movlw	0
  4597  001DCC  6E20               	movwf	___flmul@aexp^0,c
  4598  001DCE  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  4599  001DD0  EFEC  F00E         	goto	u2721
  4600  001DD4  EFEE  F00E         	goto	u2720
  4601  001DD8                     u2721:
  4602  001DD8  EF12  F00F         	goto	l921
  4603  001DDC                     u2720:
  4604  001DDC  0EFF               	movlw	255
  4605  001DDE  141C               	andwf	___flmul@grs^0,w,c
  4606  001DE0  6E17               	movwf	??___flmul^0,c
  4607  001DE2  0EFF               	movlw	255
  4608  001DE4  141D               	andwf	(___flmul@grs+1)^0,w,c
  4609  001DE6  6E18               	movwf	(??___flmul+1)^0,c
  4610  001DE8  0EFF               	movlw	255
  4611  001DEA  141E               	andwf	(___flmul@grs+2)^0,w,c
  4612  001DEC  6E19               	movwf	(??___flmul+2)^0,c
  4613  001DEE  0E7F               	movlw	127
  4614  001DF0  141F               	andwf	(___flmul@grs+3)^0,w,c
  4615  001DF2  6E1A               	movwf	(??___flmul+3)^0,c
  4616  001DF4  5017               	movf	??___flmul^0,w,c
  4617  001DF6  1018               	iorwf	(??___flmul+1)^0,w,c
  4618  001DF8  1019               	iorwf	(??___flmul+2)^0,w,c
  4619  001DFA  101A               	iorwf	(??___flmul+3)^0,w,c
  4620  001DFC  B4D8               	btfsc	status,2,c
  4621  001DFE  EF03  F00F         	goto	u2731
  4622  001E02  EF05  F00F         	goto	u2730
  4623  001E06                     u2731:
  4624  001E06  EF09  F00F         	goto	l922
  4625  001E0A                     u2730:
  4626  001E0A                     l2872:
  4627  001E0A  0E01               	movlw	1
  4628  001E0C  6E20               	movwf	___flmul@aexp^0,c
  4629  001E0E  EF12  F00F         	goto	l921
  4630  001E12                     l922:
  4631  001E12  A022               	btfss	___flmul@prod^0,0,c
  4632  001E14  EF0E  F00F         	goto	u2741
  4633  001E18  EF10  F00F         	goto	u2740
  4634  001E1C                     u2741:
  4635  001E1C  EF12  F00F         	goto	l921
  4636  001E20                     u2740:
  4637  001E20  EF05  F00F         	goto	l2872
  4638  001E24                     l921:
  4639  001E24  5020               	movf	___flmul@aexp^0,w,c
  4640  001E26  B4D8               	btfsc	status,2,c
  4641  001E28  EF18  F00F         	goto	u2751
  4642  001E2C  EF1A  F00F         	goto	u2750
  4643  001E30                     u2751:
  4644  001E30  EF3E  F00F         	goto	l2884
  4645  001E34                     u2750:
  4646  001E34  0E01               	movlw	1
  4647  001E36  2622               	addwf	___flmul@prod^0,f,c
  4648  001E38  0E00               	movlw	0
  4649  001E3A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  4650  001E3C  2224               	addwfc	(___flmul@prod+2)^0,f,c
  4651  001E3E  2225               	addwfc	(___flmul@prod+3)^0,f,c
  4652  001E40  A025               	btfss	(___flmul@prod+3)^0,0,c
  4653  001E42  EF25  F00F         	goto	u2761
  4654  001E46  EF27  F00F         	goto	u2760
  4655  001E4A                     u2761:
  4656  001E4A  EF3E  F00F         	goto	l2884
  4657  001E4E                     u2760:
  4658  001E4E  C022  F017         	movff	___flmul@prod,??___flmul
  4659  001E52  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  4660  001E56  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  4661  001E5A  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  4662  001E5E  341A               	rlcf	(??___flmul+3)^0,w,c
  4663  001E60  321A               	rrcf	(??___flmul+3)^0,f,c
  4664  001E62  3219               	rrcf	(??___flmul+2)^0,f,c
  4665  001E64  3218               	rrcf	(??___flmul+1)^0,f,c
  4666  001E66  3217               	rrcf	??___flmul^0,f,c
  4667  001E68  C017  F022         	movff	??___flmul,___flmul@prod
  4668  001E6C  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  4669  001E70  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  4670  001E74  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  4671  001E78  4A26               	infsnz	___flmul@temp^0,f,c
  4672  001E7A  2A27               	incf	(___flmul@temp+1)^0,f,c
  4673  001E7C                     l2884:
  4674  001E7C  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4675  001E7E  EF49  F00F         	goto	u2771
  4676  001E82  5027               	movf	(___flmul@temp+1)^0,w,c
  4677  001E84  E108               	bnz	u2770
  4678  001E86  2826               	incf	___flmul@temp^0,w,c
  4679  001E88  A0D8               	btfss	status,0,c
  4680  001E8A  EF49  F00F         	goto	u2771
  4681  001E8E  EF4B  F00F         	goto	u2770
  4682  001E92                     u2771:
  4683  001E92  EF55  F00F         	goto	l2888
  4684  001E96                     u2770:
  4685  001E96  0E00               	movlw	0
  4686  001E98  6E22               	movwf	___flmul@prod^0,c
  4687  001E9A  0E00               	movlw	0
  4688  001E9C  6E23               	movwf	(___flmul@prod+1)^0,c
  4689  001E9E  0E80               	movlw	128
  4690  001EA0  6E24               	movwf	(___flmul@prod+2)^0,c
  4691  001EA2  0E7F               	movlw	127
  4692  001EA4  6E25               	movwf	(___flmul@prod+3)^0,c
  4693  001EA6  EF83  F00F         	goto	l2900
  4694  001EAA                     l2888:
  4695  001EAA  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  4696  001EAC  EF62  F00F         	goto	u2780
  4697  001EB0  5027               	movf	(___flmul@temp+1)^0,w,c
  4698  001EB2  E106               	bnz	u2781
  4699  001EB4  0426               	decf	___flmul@temp^0,w,c
  4700  001EB6  B0D8               	btfsc	status,0,c
  4701  001EB8  EF60  F00F         	goto	u2781
  4702  001EBC  EF62  F00F         	goto	u2780
  4703  001EC0                     u2781:
  4704  001EC0  EF6E  F00F         	goto	l929
  4705  001EC4                     u2780:
  4706  001EC4  0E00               	movlw	0
  4707  001EC6  6E22               	movwf	___flmul@prod^0,c
  4708  001EC8  0E00               	movlw	0
  4709  001ECA  6E23               	movwf	(___flmul@prod+1)^0,c
  4710  001ECC  0E00               	movlw	0
  4711  001ECE  6E24               	movwf	(___flmul@prod+2)^0,c
  4712  001ED0  0E00               	movlw	0
  4713  001ED2  6E25               	movwf	(___flmul@prod+3)^0,c
  4714  001ED4  0E00               	movlw	0
  4715  001ED6  6E1B               	movwf	___flmul@sign^0,c
  4716  001ED8  EF83  F00F         	goto	l2900
  4717  001EDC                     l929:
  4718  001EDC  C026  F021         	movff	___flmul@temp,___flmul@bexp
  4719  001EE0  0EFF               	movlw	255
  4720  001EE2  1622               	andwf	___flmul@prod^0,f,c
  4721  001EE4  0EFF               	movlw	255
  4722  001EE6  1623               	andwf	(___flmul@prod+1)^0,f,c
  4723  001EE8  0E7F               	movlw	127
  4724  001EEA  1624               	andwf	(___flmul@prod+2)^0,f,c
  4725  001EEC  0E00               	movlw	0
  4726  001EEE  1625               	andwf	(___flmul@prod+3)^0,f,c
  4727  001EF0  A021               	btfss	___flmul@bexp^0,0,c
  4728  001EF2  EF7D  F00F         	goto	u2791
  4729  001EF6  EF7F  F00F         	goto	u2790
  4730  001EFA                     u2791:
  4731  001EFA  EF80  F00F         	goto	l2898
  4732  001EFE                     u2790:
  4733  001EFE  8E24               	bsf	(___flmul@prod+2)^0,7,c
  4734  001F00                     l2898:
  4735  001F00  90D8               	bcf	status,0,c
  4736  001F02  3021               	rrcf	___flmul@bexp^0,w,c
  4737  001F04  6E25               	movwf	(___flmul@prod+3)^0,c
  4738  001F06                     l2900:
  4739  001F06  501B               	movf	___flmul@sign^0,w,c
  4740  001F08  1225               	iorwf	(___flmul@prod+3)^0,f,c
  4741  001F0A  C022  F00F         	movff	___flmul@prod,?___flmul
  4742  001F0E  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  4743  001F12  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  4744  001F16  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  4745  001F1A                     l916:
  4746  001F1A  0012               	return		;funcret
  4747  001F1C                     __end_of___flmul:
  4748                           	callstack 0
  4749                           
  4750 ;; *************** function __tdiv_to_l_ *****************
  4751 ;; Defined at:
  4752 ;;		line 60 in file "D:\MPLABX\XC8\pic\sources\c90\common\ftdivl.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  f1              4    0[COMRAM] float 
  4755 ;;  f2              4    4[COMRAM] float 
  4756 ;; Auto vars:     Size  Location     Type
  4757 ;;  quot            4   11[COMRAM] unsigned long 
  4758 ;;  exp1            1   16[COMRAM] unsigned char 
  4759 ;;  cntr            1   15[COMRAM] unsigned char 
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  4    0[COMRAM] unsigned long 
  4762 ;; Registers used:
  4763 ;;		wreg, status,2, status,0
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/0
  4766 ;;		On exit  : 0/0
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4769 ;;      Params:         8       0       0       0       0       0       0       0       0
  4770 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4771 ;;      Temps:          3       0       0       0       0       0       0       0       0
  4772 ;;      Totals:        17       0       0       0       0       0       0       0       0
  4773 ;;Total ram usage:       17 bytes
  4774 ;; Hardware stack levels used:    1
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_sprintf
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text10
  4783  002B18                     __ptext10:
  4784                           	callstack 0
  4785  002B18                     __tdiv_to_l_:
  4786                           	callstack 29
  4787  002B18  C003  F009         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  4788  002B1C  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4789  002B1E  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4790  002B20  3402               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  4791  002B22  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4792  002B24  E301               	bnc	u3131
  4793  002B26  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  4794  002B28                     u3131:
  4795  002B28  5009               	movf	??__tdiv_to_l_^0,w,c
  4796  002B2A  6E11               	movwf	__tdiv_to_l_@exp1^0,c
  4797  002B2C  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4798  002B2E  A4D8               	btfss	status,2,c
  4799  002B30  EF9C  F015         	goto	u3141
  4800  002B34  EF9E  F015         	goto	u3140
  4801  002B38                     u3141:
  4802  002B38  EFA8  F015         	goto	l3144
  4803  002B3C                     u3140:
  4804  002B3C                     l3140:
  4805  002B3C  0E00               	movlw	0
  4806  002B3E  6E01               	movwf	?__tdiv_to_l_^0,c
  4807  002B40  0E00               	movlw	0
  4808  002B42  6E02               	movwf	(?__tdiv_to_l_+1)^0,c
  4809  002B44  0E00               	movlw	0
  4810  002B46  6E03               	movwf	(?__tdiv_to_l_+2)^0,c
  4811  002B48  0E00               	movlw	0
  4812  002B4A  6E04               	movwf	(?__tdiv_to_l_+3)^0,c
  4813  002B4C  EF36  F016         	goto	l639
  4814  002B50                     l3144:
  4815  002B50  C007  F009         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  4816  002B54  6A0A               	clrf	(??__tdiv_to_l_+1)^0,c
  4817  002B56  6A0B               	clrf	(??__tdiv_to_l_+2)^0,c
  4818  002B58  3406               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  4819  002B5A  3609               	rlcf	??__tdiv_to_l_^0,f,c
  4820  002B5C  E301               	bnc	u3151
  4821  002B5E  800A               	bsf	(??__tdiv_to_l_+1)^0,0,c
  4822  002B60                     u3151:
  4823  002B60  5009               	movf	??__tdiv_to_l_^0,w,c
  4824  002B62  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  4825  002B64  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  4826  002B66  A4D8               	btfss	status,2,c
  4827  002B68  EFB8  F015         	goto	u3161
  4828  002B6C  EFBA  F015         	goto	u3160
  4829  002B70                     u3161:
  4830  002B70  EFBC  F015         	goto	l3150
  4831  002B74                     u3160:
  4832  002B74  EF9E  F015         	goto	l3140
  4833  002B78                     l3150:
  4834  002B78  8E02               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  4835  002B7A  0EFF               	movlw	255
  4836  002B7C  1601               	andwf	__tdiv_to_l_@f1^0,f,c
  4837  002B7E  0EFF               	movlw	255
  4838  002B80  1602               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  4839  002B82  0E00               	movlw	0
  4840  002B84  1603               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  4841  002B86  8E06               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  4842  002B88  0EFF               	movlw	255
  4843  002B8A  1605               	andwf	__tdiv_to_l_@f2^0,f,c
  4844  002B8C  0EFF               	movlw	255
  4845  002B8E  1606               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  4846  002B90  0E00               	movlw	0
  4847  002B92  1607               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  4848  002B94  0E00               	movlw	0
  4849  002B96  6E0C               	movwf	__tdiv_to_l_@quot^0,c
  4850  002B98  0E00               	movlw	0
  4851  002B9A  6E0D               	movwf	(__tdiv_to_l_@quot+1)^0,c
  4852  002B9C  0E00               	movlw	0
  4853  002B9E  6E0E               	movwf	(__tdiv_to_l_@quot+2)^0,c
  4854  002BA0  0E00               	movlw	0
  4855  002BA2  6E0F               	movwf	(__tdiv_to_l_@quot+3)^0,c
  4856  002BA4  0E7F               	movlw	127
  4857  002BA6  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  4858  002BA8  5010               	movf	__tdiv_to_l_@cntr^0,w,c
  4859  002BAA  0F98               	addlw	152
  4860  002BAC  5E11               	subwf	__tdiv_to_l_@exp1^0,f,c
  4861  002BAE  0E18               	movlw	24
  4862  002BB0  6E10               	movwf	__tdiv_to_l_@cntr^0,c
  4863  002BB2                     l641:
  4864  002BB2  90D8               	bcf	status,0,c
  4865  002BB4  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  4866  002BB6  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  4867  002BB8  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  4868  002BBA  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  4869  002BBC  5005               	movf	__tdiv_to_l_@f2^0,w,c
  4870  002BBE  5C01               	subwf	__tdiv_to_l_@f1^0,w,c
  4871  002BC0  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  4872  002BC2  5802               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  4873  002BC4  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  4874  002BC6  5803               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  4875  002BC8  A0D8               	btfss	status,0,c
  4876  002BCA  EFE9  F015         	goto	u3171
  4877  002BCE  EFEB  F015         	goto	u3170
  4878  002BD2                     u3171:
  4879  002BD2  EFF2  F015         	goto	l642
  4880  002BD6                     u3170:
  4881  002BD6  5005               	movf	__tdiv_to_l_@f2^0,w,c
  4882  002BD8  5E01               	subwf	__tdiv_to_l_@f1^0,f,c
  4883  002BDA  5006               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  4884  002BDC  5A02               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  4885  002BDE  5007               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  4886  002BE0  5A03               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  4887  002BE2  800C               	bsf	__tdiv_to_l_@quot^0,0,c
  4888  002BE4                     l642:
  4889  002BE4  90D8               	bcf	status,0,c
  4890  002BE6  3601               	rlcf	__tdiv_to_l_@f1^0,f,c
  4891  002BE8  3602               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  4892  002BEA  3603               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  4893  002BEC  2E10               	decfsz	__tdiv_to_l_@cntr^0,f,c
  4894  002BEE  EFD9  F015         	goto	l641
  4895  002BF2  BE11               	btfsc	__tdiv_to_l_@exp1^0,7,c
  4896  002BF4  EF00  F016         	goto	u3180
  4897  002BF8  EFFE  F015         	goto	u3181
  4898  002BFC                     u3181:
  4899  002BFC  EF16  F016         	goto	l3184
  4900  002C00                     u3180:
  4901  002C00  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4902  002C02  0A80               	xorlw	128
  4903  002C04  0F97               	addlw	151
  4904  002C06  B0D8               	btfsc	status,0,c
  4905  002C08  EF08  F016         	goto	u3191
  4906  002C0C  EF0A  F016         	goto	u3190
  4907  002C10                     u3191:
  4908  002C10  EF0C  F016         	goto	l3180
  4909  002C14                     u3190:
  4910  002C14  EF9E  F015         	goto	l3140
  4911  002C18                     l3180:
  4912  002C18  90D8               	bcf	status,0,c
  4913  002C1A  320F               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  4914  002C1C  320E               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  4915  002C1E  320D               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  4916  002C20  320C               	rrcf	__tdiv_to_l_@quot^0,f,c
  4917  002C22  3E11               	incfsz	__tdiv_to_l_@exp1^0,f,c
  4918  002C24  EF0C  F016         	goto	l3180
  4919  002C28  EF2E  F016         	goto	l648
  4920  002C2C                     l3184:
  4921  002C2C  0E17               	movlw	23
  4922  002C2E  6411               	cpfsgt	__tdiv_to_l_@exp1^0,c
  4923  002C30  EF1C  F016         	goto	u3201
  4924  002C34  EF1E  F016         	goto	u3200
  4925  002C38                     u3201:
  4926  002C38  EF26  F016         	goto	l3192
  4927  002C3C                     u3200:
  4928  002C3C  EF9E  F015         	goto	l3140
  4929  002C40                     l3190:
  4930  002C40  90D8               	bcf	status,0,c
  4931  002C42  360C               	rlcf	__tdiv_to_l_@quot^0,f,c
  4932  002C44  360D               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  4933  002C46  360E               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  4934  002C48  360F               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  4935  002C4A  0611               	decf	__tdiv_to_l_@exp1^0,f,c
  4936  002C4C                     l3192:
  4937  002C4C  5011               	movf	__tdiv_to_l_@exp1^0,w,c
  4938  002C4E  A4D8               	btfss	status,2,c
  4939  002C50  EF2C  F016         	goto	u3211
  4940  002C54  EF2E  F016         	goto	u3210
  4941  002C58                     u3211:
  4942  002C58  EF20  F016         	goto	l3190
  4943  002C5C                     u3210:
  4944  002C5C                     l648:
  4945  002C5C  C00C  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  4946  002C60  C00D  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  4947  002C64  C00E  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  4948  002C68  C00F  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  4949  002C6C                     l639:
  4950  002C6C  0012               	return		;funcret
  4951  002C6E                     __end_of__tdiv_to_l_:
  4952                           	callstack 0
  4953                           
  4954 ;; *************** function __div_to_l_ *****************
  4955 ;; Defined at:
  4956 ;;		line 60 in file "D:\MPLABX\XC8\pic\sources\c90\common\fldivl.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  f1              4    0[COMRAM] unsigned long 
  4959 ;;  f2              4    4[COMRAM] unsigned long 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  quot            4    8[COMRAM] unsigned long 
  4962 ;;  exp1            1   13[COMRAM] unsigned char 
  4963 ;;  cntr            1   12[COMRAM] unsigned char 
  4964 ;; Return value:  Size  Location     Type
  4965 ;;                  4    0[COMRAM] unsigned long 
  4966 ;; Registers used:
  4967 ;;		wreg, status,2, status,0
  4968 ;; Tracked objects:
  4969 ;;		On entry : 0/0
  4970 ;;		On exit  : 0/0
  4971 ;;		Unchanged: 0/0
  4972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4973 ;;      Params:         8       0       0       0       0       0       0       0       0
  4974 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4975 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4976 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4977 ;;Total ram usage:       14 bytes
  4978 ;; Hardware stack levels used:    1
  4979 ;; This function calls:
  4980 ;;		Nothing
  4981 ;; This function is called by:
  4982 ;;		_sprintf
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           	psect	text11
  4987  002C6E                     __ptext11:
  4988                           	callstack 0
  4989  002C6E                     __div_to_l_:
  4990                           	callstack 29
  4991  002C6E  3403               	rlcf	(__div_to_l_@f1+2)^0,w,c
  4992  002C70  3404               	rlcf	(__div_to_l_@f1+3)^0,w,c
  4993  002C72  6E0E               	movwf	__div_to_l_@exp1^0,c
  4994  002C74  500E               	movf	__div_to_l_@exp1^0,w,c
  4995  002C76  A4D8               	btfss	status,2,c
  4996  002C78  EF40  F016         	goto	u3221
  4997  002C7C  EF42  F016         	goto	u3220
  4998  002C80                     u3221:
  4999  002C80  EF4C  F016         	goto	l3200
  5000  002C84                     u3220:
  5001  002C84                     l3196:
  5002  002C84  0E00               	movlw	0
  5003  002C86  6E01               	movwf	?__div_to_l_^0,c
  5004  002C88  0E00               	movlw	0
  5005  002C8A  6E02               	movwf	(?__div_to_l_+1)^0,c
  5006  002C8C  0E00               	movlw	0
  5007  002C8E  6E03               	movwf	(?__div_to_l_+2)^0,c
  5008  002C90  0E00               	movlw	0
  5009  002C92  6E04               	movwf	(?__div_to_l_+3)^0,c
  5010  002C94  EFDC  F016         	goto	l530
  5011  002C98                     l3200:
  5012  002C98  3407               	rlcf	(__div_to_l_@f2+2)^0,w,c
  5013  002C9A  3408               	rlcf	(__div_to_l_@f2+3)^0,w,c
  5014  002C9C  6E0D               	movwf	__div_to_l_@cntr^0,c
  5015  002C9E  500D               	movf	__div_to_l_@cntr^0,w,c
  5016  002CA0  A4D8               	btfss	status,2,c
  5017  002CA2  EF55  F016         	goto	u3231
  5018  002CA6  EF57  F016         	goto	u3230
  5019  002CAA                     u3231:
  5020  002CAA  EF59  F016         	goto	l3206
  5021  002CAE                     u3230:
  5022  002CAE  EF42  F016         	goto	l3196
  5023  002CB2                     l3206:
  5024  002CB2  8E03               	bsf	(__div_to_l_@f1+2)^0,7,c
  5025  002CB4  0EFF               	movlw	255
  5026  002CB6  1601               	andwf	__div_to_l_@f1^0,f,c
  5027  002CB8  0EFF               	movlw	255
  5028  002CBA  1602               	andwf	(__div_to_l_@f1+1)^0,f,c
  5029  002CBC  0EFF               	movlw	255
  5030  002CBE  1603               	andwf	(__div_to_l_@f1+2)^0,f,c
  5031  002CC0  0E00               	movlw	0
  5032  002CC2  1604               	andwf	(__div_to_l_@f1+3)^0,f,c
  5033  002CC4  8E07               	bsf	(__div_to_l_@f2+2)^0,7,c
  5034  002CC6  0EFF               	movlw	255
  5035  002CC8  1605               	andwf	__div_to_l_@f2^0,f,c
  5036  002CCA  0EFF               	movlw	255
  5037  002CCC  1606               	andwf	(__div_to_l_@f2+1)^0,f,c
  5038  002CCE  0EFF               	movlw	255
  5039  002CD0  1607               	andwf	(__div_to_l_@f2+2)^0,f,c
  5040  002CD2  0E00               	movlw	0
  5041  002CD4  1608               	andwf	(__div_to_l_@f2+3)^0,f,c
  5042  002CD6  0E00               	movlw	0
  5043  002CD8  6E09               	movwf	__div_to_l_@quot^0,c
  5044  002CDA  0E00               	movlw	0
  5045  002CDC  6E0A               	movwf	(__div_to_l_@quot+1)^0,c
  5046  002CDE  0E00               	movlw	0
  5047  002CE0  6E0B               	movwf	(__div_to_l_@quot+2)^0,c
  5048  002CE2  0E00               	movlw	0
  5049  002CE4  6E0C               	movwf	(__div_to_l_@quot+3)^0,c
  5050  002CE6  0E7F               	movlw	127
  5051  002CE8  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  5052  002CEA  500D               	movf	__div_to_l_@cntr^0,w,c
  5053  002CEC  0FA0               	addlw	160
  5054  002CEE  5E0E               	subwf	__div_to_l_@exp1^0,f,c
  5055  002CF0  0E20               	movlw	32
  5056  002CF2  6E0D               	movwf	__div_to_l_@cntr^0,c
  5057  002CF4                     l3220:
  5058  002CF4  90D8               	bcf	status,0,c
  5059  002CF6  3609               	rlcf	__div_to_l_@quot^0,f,c
  5060  002CF8  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  5061  002CFA  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  5062  002CFC  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  5063  002CFE  5005               	movf	__div_to_l_@f2^0,w,c
  5064  002D00  5C01               	subwf	__div_to_l_@f1^0,w,c
  5065  002D02  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  5066  002D04  5802               	subwfb	(__div_to_l_@f1+1)^0,w,c
  5067  002D06  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  5068  002D08  5803               	subwfb	(__div_to_l_@f1+2)^0,w,c
  5069  002D0A  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  5070  002D0C  5804               	subwfb	(__div_to_l_@f1+3)^0,w,c
  5071  002D0E  A0D8               	btfss	status,0,c
  5072  002D10  EF8C  F016         	goto	u3241
  5073  002D14  EF8E  F016         	goto	u3240
  5074  002D18                     u3241:
  5075  002D18  EF97  F016         	goto	l3228
  5076  002D1C                     u3240:
  5077  002D1C  5005               	movf	__div_to_l_@f2^0,w,c
  5078  002D1E  5E01               	subwf	__div_to_l_@f1^0,f,c
  5079  002D20  5006               	movf	(__div_to_l_@f2+1)^0,w,c
  5080  002D22  5A02               	subwfb	(__div_to_l_@f1+1)^0,f,c
  5081  002D24  5007               	movf	(__div_to_l_@f2+2)^0,w,c
  5082  002D26  5A03               	subwfb	(__div_to_l_@f1+2)^0,f,c
  5083  002D28  5008               	movf	(__div_to_l_@f2+3)^0,w,c
  5084  002D2A  5A04               	subwfb	(__div_to_l_@f1+3)^0,f,c
  5085  002D2C  8009               	bsf	__div_to_l_@quot^0,0,c
  5086  002D2E                     l3228:
  5087  002D2E  90D8               	bcf	status,0,c
  5088  002D30  3601               	rlcf	__div_to_l_@f1^0,f,c
  5089  002D32  3602               	rlcf	(__div_to_l_@f1+1)^0,f,c
  5090  002D34  3603               	rlcf	(__div_to_l_@f1+2)^0,f,c
  5091  002D36  3604               	rlcf	(__div_to_l_@f1+3)^0,f,c
  5092  002D38  2E0D               	decfsz	__div_to_l_@cntr^0,f,c
  5093  002D3A  EF7A  F016         	goto	l3220
  5094  002D3E  BE0E               	btfsc	__div_to_l_@exp1^0,7,c
  5095  002D40  EFA6  F016         	goto	u3250
  5096  002D44  EFA4  F016         	goto	u3251
  5097  002D48                     u3251:
  5098  002D48  EFBC  F016         	goto	l3244
  5099  002D4C                     u3250:
  5100  002D4C  500E               	movf	__div_to_l_@exp1^0,w,c
  5101  002D4E  0A80               	xorlw	128
  5102  002D50  0F9F               	addlw	159
  5103  002D52  B0D8               	btfsc	status,0,c
  5104  002D54  EFAE  F016         	goto	u3261
  5105  002D58  EFB0  F016         	goto	u3260
  5106  002D5C                     u3261:
  5107  002D5C  EFB2  F016         	goto	l3240
  5108  002D60                     u3260:
  5109  002D60  EF42  F016         	goto	l3196
  5110  002D64                     l3240:
  5111  002D64  90D8               	bcf	status,0,c
  5112  002D66  320C               	rrcf	(__div_to_l_@quot+3)^0,f,c
  5113  002D68  320B               	rrcf	(__div_to_l_@quot+2)^0,f,c
  5114  002D6A  320A               	rrcf	(__div_to_l_@quot+1)^0,f,c
  5115  002D6C  3209               	rrcf	__div_to_l_@quot^0,f,c
  5116  002D6E  3E0E               	incfsz	__div_to_l_@exp1^0,f,c
  5117  002D70  EFB2  F016         	goto	l3240
  5118  002D74  EFD4  F016         	goto	l539
  5119  002D78                     l3244:
  5120  002D78  0E1F               	movlw	31
  5121  002D7A  640E               	cpfsgt	__div_to_l_@exp1^0,c
  5122  002D7C  EFC2  F016         	goto	u3271
  5123  002D80  EFC4  F016         	goto	u3270
  5124  002D84                     u3271:
  5125  002D84  EFCC  F016         	goto	l3252
  5126  002D88                     u3270:
  5127  002D88  EF42  F016         	goto	l3196
  5128  002D8C                     l3250:
  5129  002D8C  90D8               	bcf	status,0,c
  5130  002D8E  3609               	rlcf	__div_to_l_@quot^0,f,c
  5131  002D90  360A               	rlcf	(__div_to_l_@quot+1)^0,f,c
  5132  002D92  360B               	rlcf	(__div_to_l_@quot+2)^0,f,c
  5133  002D94  360C               	rlcf	(__div_to_l_@quot+3)^0,f,c
  5134  002D96  060E               	decf	__div_to_l_@exp1^0,f,c
  5135  002D98                     l3252:
  5136  002D98  500E               	movf	__div_to_l_@exp1^0,w,c
  5137  002D9A  A4D8               	btfss	status,2,c
  5138  002D9C  EFD2  F016         	goto	u3281
  5139  002DA0  EFD4  F016         	goto	u3280
  5140  002DA4                     u3281:
  5141  002DA4  EFC6  F016         	goto	l3250
  5142  002DA8                     u3280:
  5143  002DA8                     l539:
  5144  002DA8  C009  F001         	movff	__div_to_l_@quot,?__div_to_l_
  5145  002DAC  C00A  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5146  002DB0  C00B  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5147  002DB4  C00C  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5148  002DB8                     l530:
  5149  002DB8  0012               	return		;funcret
  5150  002DBA                     __end_of__div_to_l_:
  5151                           	callstack 0
  5152                           
  5153 ;; *************** function ___xxtofl *****************
  5154 ;; Defined at:
  5155 ;;		line 10 in file "D:\MPLABX\XC8\pic\sources\c90\common\xxtofl.c"
  5156 ;; Parameters:    Size  Location     Type
  5157 ;;  sign            1    wreg     unsigned char 
  5158 ;;  val             4    0[COMRAM] long 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  sign            1    8[COMRAM] unsigned char 
  5161 ;;  arg             4   10[COMRAM] unsigned long 
  5162 ;;  exp             1    9[COMRAM] unsigned char 
  5163 ;; Return value:  Size  Location     Type
  5164 ;;                  4    0[COMRAM] unsigned char 
  5165 ;; Registers used:
  5166 ;;		wreg, status,2, status,0
  5167 ;; Tracked objects:
  5168 ;;		On entry : 0/0
  5169 ;;		On exit  : 0/0
  5170 ;;		Unchanged: 0/0
  5171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5172 ;;      Params:         4       0       0       0       0       0       0       0       0
  5173 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5174 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5175 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5176 ;;Total ram usage:       14 bytes
  5177 ;; Hardware stack levels used:    1
  5178 ;; This function calls:
  5179 ;;		Nothing
  5180 ;; This function is called by:
  5181 ;;		_main
  5182 ;;		_sprintf
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text12
  5187  002964                     __ptext12:
  5188                           	callstack 0
  5189  002964                     ___xxtofl:
  5190                           	callstack 29
  5191                           
  5192                           ;incstack = 0
  5193                           ;___xxtofl@sign stored from wreg
  5194  002964  6E09               	movwf	___xxtofl@sign^0,c
  5195  002966  5009               	movf	___xxtofl@sign^0,w,c
  5196  002968  B4D8               	btfsc	status,2,c
  5197  00296A  EFB9  F014         	goto	u3511
  5198  00296E  EFBB  F014         	goto	u3510
  5199  002972                     u3511:
  5200  002972  EFDD  F014         	goto	l953
  5201  002976                     u3510:
  5202  002976  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5203  002978  EFC2  F014         	goto	u3520
  5204  00297C  EFC0  F014         	goto	u3521
  5205  002980                     u3521:
  5206  002980  EFDD  F014         	goto	l953
  5207  002984                     u3520:
  5208  002984  C001  F005         	movff	___xxtofl@val,??___xxtofl
  5209  002988  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  5210  00298C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  5211  002990  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  5212  002994  1E05               	comf	??___xxtofl^0,f,c
  5213  002996  1E06               	comf	(??___xxtofl+1)^0,f,c
  5214  002998  1E07               	comf	(??___xxtofl+2)^0,f,c
  5215  00299A  1E08               	comf	(??___xxtofl+3)^0,f,c
  5216  00299C  2A05               	incf	??___xxtofl^0,f,c
  5217  00299E  0E00               	movlw	0
  5218  0029A0  2206               	addwfc	(??___xxtofl+1)^0,f,c
  5219  0029A2  2207               	addwfc	(??___xxtofl+2)^0,f,c
  5220  0029A4  2208               	addwfc	(??___xxtofl+3)^0,f,c
  5221  0029A6  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  5222  0029AA  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  5223  0029AE  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  5224  0029B2  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  5225  0029B6  EFE5  F014         	goto	l3400
  5226  0029BA                     l953:
  5227  0029BA  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  5228  0029BE  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5229  0029C2  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5230  0029C6  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5231  0029CA                     l3400:
  5232  0029CA  5001               	movf	___xxtofl@val^0,w,c
  5233  0029CC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  5234  0029CE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  5235  0029D0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  5236  0029D2  A4D8               	btfss	status,2,c
  5237  0029D4  EFEE  F014         	goto	u3531
  5238  0029D8  EFF0  F014         	goto	u3530
  5239  0029DC                     u3531:
  5240  0029DC  EFFA  F014         	goto	l3406
  5241  0029E0                     u3530:
  5242  0029E0  0E00               	movlw	0
  5243  0029E2  6E01               	movwf	?___xxtofl^0,c
  5244  0029E4  0E00               	movlw	0
  5245  0029E6  6E02               	movwf	(?___xxtofl+1)^0,c
  5246  0029E8  0E00               	movlw	0
  5247  0029EA  6E03               	movwf	(?___xxtofl+2)^0,c
  5248  0029EC  0E00               	movlw	0
  5249  0029EE  6E04               	movwf	(?___xxtofl+3)^0,c
  5250  0029F0  EF8B  F015         	goto	l956
  5251  0029F4                     l3406:
  5252  0029F4  0E96               	movlw	150
  5253  0029F6  6E0A               	movwf	___xxtofl@exp^0,c
  5254  0029F8  EF04  F015         	goto	l3410
  5255  0029FC                     l3408:
  5256  0029FC  2A0A               	incf	___xxtofl@exp^0,f,c
  5257  0029FE  90D8               	bcf	status,0,c
  5258  002A00  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5259  002A02  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5260  002A04  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5261  002A06  320B               	rrcf	___xxtofl@arg^0,f,c
  5262  002A08                     l3410:
  5263  002A08  0E00               	movlw	0
  5264  002A0A  140B               	andwf	___xxtofl@arg^0,w,c
  5265  002A0C  6E05               	movwf	??___xxtofl^0,c
  5266  002A0E  0E00               	movlw	0
  5267  002A10  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5268  002A12  6E06               	movwf	(??___xxtofl+1)^0,c
  5269  002A14  0E00               	movlw	0
  5270  002A16  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5271  002A18  6E07               	movwf	(??___xxtofl+2)^0,c
  5272  002A1A  0EFE               	movlw	254
  5273  002A1C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5274  002A1E  6E08               	movwf	(??___xxtofl+3)^0,c
  5275  002A20  5005               	movf	??___xxtofl^0,w,c
  5276  002A22  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5277  002A24  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5278  002A26  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5279  002A28  A4D8               	btfss	status,2,c
  5280  002A2A  EF19  F015         	goto	u3541
  5281  002A2E  EF1B  F015         	goto	u3540
  5282  002A32                     u3541:
  5283  002A32  EFFE  F014         	goto	l3408
  5284  002A36                     u3540:
  5285  002A36  EF29  F015         	goto	l960
  5286  002A3A                     l3412:
  5287  002A3A  2A0A               	incf	___xxtofl@exp^0,f,c
  5288  002A3C  0E01               	movlw	1
  5289  002A3E  260B               	addwf	___xxtofl@arg^0,f,c
  5290  002A40  0E00               	movlw	0
  5291  002A42  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  5292  002A44  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  5293  002A46  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  5294  002A48  90D8               	bcf	status,0,c
  5295  002A4A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  5296  002A4C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  5297  002A4E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  5298  002A50  320B               	rrcf	___xxtofl@arg^0,f,c
  5299  002A52                     l960:
  5300  002A52  0E00               	movlw	0
  5301  002A54  140B               	andwf	___xxtofl@arg^0,w,c
  5302  002A56  6E05               	movwf	??___xxtofl^0,c
  5303  002A58  0E00               	movlw	0
  5304  002A5A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  5305  002A5C  6E06               	movwf	(??___xxtofl+1)^0,c
  5306  002A5E  0E00               	movlw	0
  5307  002A60  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  5308  002A62  6E07               	movwf	(??___xxtofl+2)^0,c
  5309  002A64  0EFF               	movlw	255
  5310  002A66  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  5311  002A68  6E08               	movwf	(??___xxtofl+3)^0,c
  5312  002A6A  5005               	movf	??___xxtofl^0,w,c
  5313  002A6C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  5314  002A6E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  5315  002A70  1008               	iorwf	(??___xxtofl+3)^0,w,c
  5316  002A72  A4D8               	btfss	status,2,c
  5317  002A74  EF3E  F015         	goto	u3551
  5318  002A78  EF40  F015         	goto	u3550
  5319  002A7C                     u3551:
  5320  002A7C  EF1D  F015         	goto	l3412
  5321  002A80                     u3550:
  5322  002A80  EF48  F015         	goto	l3420
  5323  002A84                     l3418:
  5324  002A84  060A               	decf	___xxtofl@exp^0,f,c
  5325  002A86  90D8               	bcf	status,0,c
  5326  002A88  360B               	rlcf	___xxtofl@arg^0,f,c
  5327  002A8A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  5328  002A8C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  5329  002A8E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  5330  002A90                     l3420:
  5331  002A90  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  5332  002A92  EF4D  F015         	goto	u3561
  5333  002A96  EF4F  F015         	goto	u3560
  5334  002A9A                     u3561:
  5335  002A9A  EF57  F015         	goto	l967
  5336  002A9E                     u3560:
  5337  002A9E  0E02               	movlw	2
  5338  002AA0  600A               	cpfslt	___xxtofl@exp^0,c
  5339  002AA2  EF55  F015         	goto	u3571
  5340  002AA6  EF57  F015         	goto	u3570
  5341  002AAA                     u3571:
  5342  002AAA  EF42  F015         	goto	l3418
  5343  002AAE                     u3570:
  5344  002AAE                     l967:
  5345  002AAE  B00A               	btfsc	___xxtofl@exp^0,0,c
  5346  002AB0  EF5C  F015         	goto	u3581
  5347  002AB4  EF5E  F015         	goto	u3580
  5348  002AB8                     u3581:
  5349  002AB8  EF5F  F015         	goto	l3426
  5350  002ABC                     u3580:
  5351  002ABC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  5352  002ABE                     l3426:
  5353  002ABE  90D8               	bcf	status,0,c
  5354  002AC0  320A               	rrcf	___xxtofl@exp^0,f,c
  5355  002AC2  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  5356  002AC6  6A06               	clrf	(??___xxtofl+1)^0,c
  5357  002AC8  6A07               	clrf	(??___xxtofl+2)^0,c
  5358  002ACA  6A08               	clrf	(??___xxtofl+3)^0,c
  5359  002ACC  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  5360  002AD0  6A07               	clrf	(??___xxtofl+2)^0,c
  5361  002AD2  6A06               	clrf	(??___xxtofl+1)^0,c
  5362  002AD4  6A05               	clrf	??___xxtofl^0,c
  5363  002AD6  5005               	movf	??___xxtofl^0,w,c
  5364  002AD8  120B               	iorwf	___xxtofl@arg^0,f,c
  5365  002ADA  5006               	movf	(??___xxtofl+1)^0,w,c
  5366  002ADC  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  5367  002ADE  5007               	movf	(??___xxtofl+2)^0,w,c
  5368  002AE0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  5369  002AE2  5008               	movf	(??___xxtofl+3)^0,w,c
  5370  002AE4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  5371  002AE6  5009               	movf	___xxtofl@sign^0,w,c
  5372  002AE8  B4D8               	btfsc	status,2,c
  5373  002AEA  EF79  F015         	goto	u3591
  5374  002AEE  EF7B  F015         	goto	u3590
  5375  002AF2                     u3591:
  5376  002AF2  EF83  F015         	goto	l3436
  5377  002AF6                     u3590:
  5378  002AF6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  5379  002AF8  EF82  F015         	goto	u3600
  5380  002AFC  EF80  F015         	goto	u3601
  5381  002B00                     u3601:
  5382  002B00  EF83  F015         	goto	l3436
  5383  002B04                     u3600:
  5384  002B04  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  5385  002B06                     l3436:
  5386  002B06  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  5387  002B0A  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  5388  002B0E  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  5389  002B12  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  5390  002B16                     l956:
  5391  002B16  0012               	return		;funcret
  5392  002B18                     __end_of___xxtofl:
  5393                           	callstack 0
  5394                           
  5395 ;; *************** function ___wmul *****************
  5396 ;; Defined at:
  5397 ;;		line 15 in file "D:\MPLABX\XC8\pic\sources\c90\common\Umul16.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;  multiplier      2    0[COMRAM] unsigned int 
  5400 ;;  multiplicand    2    2[COMRAM] unsigned int 
  5401 ;; Auto vars:     Size  Location     Type
  5402 ;;  product         2    4[COMRAM] unsigned int 
  5403 ;; Return value:  Size  Location     Type
  5404 ;;                  2    0[COMRAM] unsigned int 
  5405 ;; Registers used:
  5406 ;;		wreg, status,2, status,0, prodl, prodh
  5407 ;; Tracked objects:
  5408 ;;		On entry : 0/0
  5409 ;;		On exit  : 0/0
  5410 ;;		Unchanged: 0/0
  5411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5412 ;;      Params:         4       0       0       0       0       0       0       0       0
  5413 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5414 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5415 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5416 ;;Total ram usage:        6 bytes
  5417 ;; Hardware stack levels used:    1
  5418 ;; This function calls:
  5419 ;;		Nothing
  5420 ;; This function is called by:
  5421 ;;		_sprintf
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425                           	psect	text13
  5426  003A3C                     __ptext13:
  5427                           	callstack 0
  5428  003A3C                     ___wmul:
  5429                           	callstack 29
  5430  003A3C  5001               	movf	___wmul@multiplier^0,w,c
  5431  003A3E  0203               	mulwf	___wmul@multiplicand^0,c
  5432  003A40  CFF3 F005          	movff	prodl,___wmul@product
  5433  003A44  CFF4 F006          	movff	prodh,___wmul@product+1
  5434  003A48  5001               	movf	___wmul@multiplier^0,w,c
  5435  003A4A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  5436  003A4C  50F3               	movf	243,w,c
  5437  003A4E  2606               	addwf	(___wmul@product+1)^0,f,c
  5438  003A50  5002               	movf	(___wmul@multiplier+1)^0,w,c
  5439  003A52  0203               	mulwf	___wmul@multiplicand^0,c
  5440  003A54  50F3               	movf	243,w,c
  5441  003A56  2606               	addwf	(___wmul@product+1)^0,f,c
  5442  003A58  C005  F001         	movff	___wmul@product,?___wmul
  5443  003A5C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  5444  003A60  0012               	return		;funcret
  5445  003A62                     __end_of___wmul:
  5446                           	callstack 0
  5447                           
  5448 ;; *************** function ___llmod *****************
  5449 ;; Defined at:
  5450 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\llmod.c"
  5451 ;; Parameters:    Size  Location     Type
  5452 ;;  dividend        4   13[COMRAM] unsigned long 
  5453 ;;  divisor         4   17[COMRAM] unsigned long 
  5454 ;; Auto vars:     Size  Location     Type
  5455 ;;  counter         1   21[COMRAM] unsigned char 
  5456 ;; Return value:  Size  Location     Type
  5457 ;;                  4   13[COMRAM] unsigned long 
  5458 ;; Registers used:
  5459 ;;		wreg, status,2, status,0
  5460 ;; Tracked objects:
  5461 ;;		On entry : 0/0
  5462 ;;		On exit  : 0/0
  5463 ;;		Unchanged: 0/0
  5464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5465 ;;      Params:         8       0       0       0       0       0       0       0       0
  5466 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5468 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5469 ;;Total ram usage:        9 bytes
  5470 ;; Hardware stack levels used:    1
  5471 ;; This function calls:
  5472 ;;		Nothing
  5473 ;; This function is called by:
  5474 ;;		_sprintf
  5475 ;; This function uses a non-reentrant model
  5476 ;;
  5477                           
  5478                           	psect	text14
  5479  0037B0                     __ptext14:
  5480                           	callstack 0
  5481  0037B0                     ___llmod:
  5482                           	callstack 29
  5483  0037B0  5012               	movf	___llmod@divisor^0,w,c
  5484  0037B2  1013               	iorwf	(___llmod@divisor+1)^0,w,c
  5485  0037B4  1014               	iorwf	(___llmod@divisor+2)^0,w,c
  5486  0037B6  1015               	iorwf	(___llmod@divisor+3)^0,w,c
  5487  0037B8  B4D8               	btfsc	status,2,c
  5488  0037BA  EFE1  F01B         	goto	u3481
  5489  0037BE  EFE3  F01B         	goto	u3480
  5490  0037C2                     u3481:
  5491  0037C2  EF13  F01C         	goto	l718
  5492  0037C6                     u3480:
  5493  0037C6  0E01               	movlw	1
  5494  0037C8  6E16               	movwf	___llmod@counter^0,c
  5495  0037CA  EFED  F01B         	goto	l3384
  5496  0037CE                     l3382:
  5497  0037CE  90D8               	bcf	status,0,c
  5498  0037D0  3612               	rlcf	___llmod@divisor^0,f,c
  5499  0037D2  3613               	rlcf	(___llmod@divisor+1)^0,f,c
  5500  0037D4  3614               	rlcf	(___llmod@divisor+2)^0,f,c
  5501  0037D6  3615               	rlcf	(___llmod@divisor+3)^0,f,c
  5502  0037D8  2A16               	incf	___llmod@counter^0,f,c
  5503  0037DA                     l3384:
  5504  0037DA  AE15               	btfss	(___llmod@divisor+3)^0,7,c
  5505  0037DC  EFF2  F01B         	goto	u3491
  5506  0037E0  EFF4  F01B         	goto	u3490
  5507  0037E4                     u3491:
  5508  0037E4  EFE7  F01B         	goto	l3382
  5509  0037E8                     u3490:
  5510  0037E8                     l3386:
  5511  0037E8  5012               	movf	___llmod@divisor^0,w,c
  5512  0037EA  5C0E               	subwf	___llmod@dividend^0,w,c
  5513  0037EC  5013               	movf	(___llmod@divisor+1)^0,w,c
  5514  0037EE  580F               	subwfb	(___llmod@dividend+1)^0,w,c
  5515  0037F0  5014               	movf	(___llmod@divisor+2)^0,w,c
  5516  0037F2  5810               	subwfb	(___llmod@dividend+2)^0,w,c
  5517  0037F4  5015               	movf	(___llmod@divisor+3)^0,w,c
  5518  0037F6  5811               	subwfb	(___llmod@dividend+3)^0,w,c
  5519  0037F8  A0D8               	btfss	status,0,c
  5520  0037FA  EF01  F01C         	goto	u3501
  5521  0037FE  EF03  F01C         	goto	u3500
  5522  003802                     u3501:
  5523  003802  EF0B  F01C         	goto	l3390
  5524  003806                     u3500:
  5525  003806  5012               	movf	___llmod@divisor^0,w,c
  5526  003808  5E0E               	subwf	___llmod@dividend^0,f,c
  5527  00380A  5013               	movf	(___llmod@divisor+1)^0,w,c
  5528  00380C  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
  5529  00380E  5014               	movf	(___llmod@divisor+2)^0,w,c
  5530  003810  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
  5531  003812  5015               	movf	(___llmod@divisor+3)^0,w,c
  5532  003814  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
  5533  003816                     l3390:
  5534  003816  90D8               	bcf	status,0,c
  5535  003818  3215               	rrcf	(___llmod@divisor+3)^0,f,c
  5536  00381A  3214               	rrcf	(___llmod@divisor+2)^0,f,c
  5537  00381C  3213               	rrcf	(___llmod@divisor+1)^0,f,c
  5538  00381E  3212               	rrcf	___llmod@divisor^0,f,c
  5539  003820  2E16               	decfsz	___llmod@counter^0,f,c
  5540  003822  EFF4  F01B         	goto	l3386
  5541  003826                     l718:
  5542  003826  C00E  F00E         	movff	___llmod@dividend,?___llmod
  5543  00382A  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  5544  00382E  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  5545  003832  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  5546  003836  0012               	return		;funcret
  5547  003838                     __end_of___llmod:
  5548                           	callstack 0
  5549                           
  5550 ;; *************** function ___lldiv *****************
  5551 ;; Defined at:
  5552 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\__lldiv.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  dividend        4    0[COMRAM] unsigned long 
  5555 ;;  divisor         4    4[COMRAM] unsigned long 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  quotient        4    8[COMRAM] unsigned long 
  5558 ;;  counter         1   12[COMRAM] unsigned char 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  4    0[COMRAM] unsigned long 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5568 ;;      Params:         8       0       0       0       0       0       0       0       0
  5569 ;;      Locals:         5       0       0       0       0       0       0       0       0
  5570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5571 ;;      Totals:        13       0       0       0       0       0       0       0       0
  5572 ;;Total ram usage:       13 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_sprintf
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           	psect	text15
  5582  003682                     __ptext15:
  5583                           	callstack 0
  5584  003682                     ___lldiv:
  5585                           	callstack 29
  5586  003682  0E00               	movlw	0
  5587  003684  6E09               	movwf	___lldiv@quotient^0,c
  5588  003686  0E00               	movlw	0
  5589  003688  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5590  00368A  0E00               	movlw	0
  5591  00368C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5592  00368E  0E00               	movlw	0
  5593  003690  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5594  003692  5005               	movf	___lldiv@divisor^0,w,c
  5595  003694  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5596  003696  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5597  003698  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5598  00369A  B4D8               	btfsc	status,2,c
  5599  00369C  EF52  F01B         	goto	u3291
  5600  0036A0  EF54  F01B         	goto	u3290
  5601  0036A4                     u3291:
  5602  0036A4  EF8A  F01B         	goto	l303
  5603  0036A8                     u3290:
  5604  0036A8  0E01               	movlw	1
  5605  0036AA  6E0D               	movwf	___lldiv@counter^0,c
  5606  0036AC  EF5E  F01B         	goto	l3268
  5607  0036B0                     l3266:
  5608  0036B0  90D8               	bcf	status,0,c
  5609  0036B2  3605               	rlcf	___lldiv@divisor^0,f,c
  5610  0036B4  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5611  0036B6  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5612  0036B8  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5613  0036BA  2A0D               	incf	___lldiv@counter^0,f,c
  5614  0036BC                     l3268:
  5615  0036BC  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5616  0036BE  EF63  F01B         	goto	u3301
  5617  0036C2  EF65  F01B         	goto	u3300
  5618  0036C6                     u3301:
  5619  0036C6  EF58  F01B         	goto	l3266
  5620  0036CA                     u3300:
  5621  0036CA                     l3270:
  5622  0036CA  90D8               	bcf	status,0,c
  5623  0036CC  3609               	rlcf	___lldiv@quotient^0,f,c
  5624  0036CE  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5625  0036D0  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5626  0036D2  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5627  0036D4  5005               	movf	___lldiv@divisor^0,w,c
  5628  0036D6  5C01               	subwf	___lldiv@dividend^0,w,c
  5629  0036D8  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5630  0036DA  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5631  0036DC  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5632  0036DE  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5633  0036E0  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5634  0036E2  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5635  0036E4  A0D8               	btfss	status,0,c
  5636  0036E6  EF77  F01B         	goto	u3311
  5637  0036EA  EF79  F01B         	goto	u3310
  5638  0036EE                     u3311:
  5639  0036EE  EF82  F01B         	goto	l3278
  5640  0036F2                     u3310:
  5641  0036F2  5005               	movf	___lldiv@divisor^0,w,c
  5642  0036F4  5E01               	subwf	___lldiv@dividend^0,f,c
  5643  0036F6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5644  0036F8  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5645  0036FA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5646  0036FC  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5647  0036FE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5648  003700  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5649  003702  8009               	bsf	___lldiv@quotient^0,0,c
  5650  003704                     l3278:
  5651  003704  90D8               	bcf	status,0,c
  5652  003706  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5653  003708  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5654  00370A  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5655  00370C  3205               	rrcf	___lldiv@divisor^0,f,c
  5656  00370E  2E0D               	decfsz	___lldiv@counter^0,f,c
  5657  003710  EF65  F01B         	goto	l3270
  5658  003714                     l303:
  5659  003714  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5660  003718  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5661  00371C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5662  003720  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5663  003724  0012               	return		;funcret
  5664  003726                     __end_of___lldiv:
  5665                           	callstack 0
  5666                           
  5667 ;; *************** function ___fltol *****************
  5668 ;; Defined at:
  5669 ;;		line 43 in file "D:\MPLABX\XC8\pic\sources\c90\common\fltol.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  f1              4   48[COMRAM] unsigned long 
  5672 ;; Auto vars:     Size  Location     Type
  5673 ;;  exp1            1   57[COMRAM] unsigned char 
  5674 ;;  sign1           1   56[COMRAM] unsigned char 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  4   48[COMRAM] long 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5684 ;;      Params:         4       0       0       0       0       0       0       0       0
  5685 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5686 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5687 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5688 ;;Total ram usage:       10 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; This function calls:
  5691 ;;		Nothing
  5692 ;; This function is called by:
  5693 ;;		_sprintf
  5694 ;; This function uses a non-reentrant model
  5695 ;;
  5696                           
  5697                           	psect	text16
  5698  00325A                     __ptext16:
  5699                           	callstack 0
  5700  00325A                     ___fltol:
  5701                           	callstack 29
  5702  00325A  3433               	rlcf	(___fltol@f1+2)^0,w,c
  5703  00325C  3434               	rlcf	(___fltol@f1+3)^0,w,c
  5704  00325E  6E3A               	movwf	___fltol@exp1^0,c
  5705  003260  503A               	movf	___fltol@exp1^0,w,c
  5706  003262  A4D8               	btfss	status,2,c
  5707  003264  EF36  F019         	goto	u3411
  5708  003268  EF38  F019         	goto	u3410
  5709  00326C                     u3411:
  5710  00326C  EF42  F019         	goto	l3340
  5711  003270                     u3410:
  5712  003270                     l3336:
  5713  003270  0E00               	movlw	0
  5714  003272  6E31               	movwf	?___fltol^0,c
  5715  003274  0E00               	movlw	0
  5716  003276  6E32               	movwf	(?___fltol+1)^0,c
  5717  003278  0E00               	movlw	0
  5718  00327A  6E33               	movwf	(?___fltol+2)^0,c
  5719  00327C  0E00               	movlw	0
  5720  00327E  6E34               	movwf	(?___fltol+3)^0,c
  5721  003280  EFAF  F019         	goto	l582
  5722  003284                     l3340:
  5723  003284  C031  F035         	movff	___fltol@f1,??___fltol
  5724  003288  C032  F036         	movff	___fltol@f1+1,??___fltol+1
  5725  00328C  C033  F037         	movff	___fltol@f1+2,??___fltol+2
  5726  003290  C034  F038         	movff	___fltol@f1+3,??___fltol+3
  5727  003294  0E20               	movlw	32
  5728  003296  EF52  F019         	goto	u3420
  5729  00329A                     u3425:
  5730  00329A  90D8               	bcf	status,0,c
  5731  00329C  3238               	rrcf	(??___fltol+3)^0,f,c
  5732  00329E  3237               	rrcf	(??___fltol+2)^0,f,c
  5733  0032A0  3236               	rrcf	(??___fltol+1)^0,f,c
  5734  0032A2  3235               	rrcf	??___fltol^0,f,c
  5735  0032A4                     u3420:
  5736  0032A4  2EE8               	decfsz	wreg,f,c
  5737  0032A6  EF4D  F019         	goto	u3425
  5738  0032AA  5035               	movf	??___fltol^0,w,c
  5739  0032AC  6E39               	movwf	___fltol@sign1^0,c
  5740  0032AE  8E33               	bsf	(___fltol@f1+2)^0,7,c
  5741  0032B0  0EFF               	movlw	255
  5742  0032B2  1631               	andwf	___fltol@f1^0,f,c
  5743  0032B4  0EFF               	movlw	255
  5744  0032B6  1632               	andwf	(___fltol@f1+1)^0,f,c
  5745  0032B8  0EFF               	movlw	255
  5746  0032BA  1633               	andwf	(___fltol@f1+2)^0,f,c
  5747  0032BC  0E00               	movlw	0
  5748  0032BE  1634               	andwf	(___fltol@f1+3)^0,f,c
  5749  0032C0  0E96               	movlw	150
  5750  0032C2  5E3A               	subwf	___fltol@exp1^0,f,c
  5751  0032C4  BE3A               	btfsc	___fltol@exp1^0,7,c
  5752  0032C6  EF69  F019         	goto	u3430
  5753  0032CA  EF67  F019         	goto	u3431
  5754  0032CE                     u3431:
  5755  0032CE  EF7F  F019         	goto	l3360
  5756  0032D2                     u3430:
  5757  0032D2  503A               	movf	___fltol@exp1^0,w,c
  5758  0032D4  0A80               	xorlw	128
  5759  0032D6  0F97               	addlw	151
  5760  0032D8  B0D8               	btfsc	status,0,c
  5761  0032DA  EF71  F019         	goto	u3441
  5762  0032DE  EF73  F019         	goto	u3440
  5763  0032E2                     u3441:
  5764  0032E2  EF75  F019         	goto	l3356
  5765  0032E6                     u3440:
  5766  0032E6  EF38  F019         	goto	l3336
  5767  0032EA                     l3356:
  5768  0032EA  90D8               	bcf	status,0,c
  5769  0032EC  3234               	rrcf	(___fltol@f1+3)^0,f,c
  5770  0032EE  3233               	rrcf	(___fltol@f1+2)^0,f,c
  5771  0032F0  3232               	rrcf	(___fltol@f1+1)^0,f,c
  5772  0032F2  3231               	rrcf	___fltol@f1^0,f,c
  5773  0032F4  3E3A               	incfsz	___fltol@exp1^0,f,c
  5774  0032F6  EF75  F019         	goto	l3356
  5775  0032FA  EF97  F019         	goto	l3370
  5776  0032FE                     l3360:
  5777  0032FE  0E1F               	movlw	31
  5778  003300  643A               	cpfsgt	___fltol@exp1^0,c
  5779  003302  EF85  F019         	goto	u3451
  5780  003306  EF87  F019         	goto	u3450
  5781  00330A                     u3451:
  5782  00330A  EF8F  F019         	goto	l3368
  5783  00330E                     u3450:
  5784  00330E  EF38  F019         	goto	l3336
  5785  003312                     l3366:
  5786  003312  90D8               	bcf	status,0,c
  5787  003314  3631               	rlcf	___fltol@f1^0,f,c
  5788  003316  3632               	rlcf	(___fltol@f1+1)^0,f,c
  5789  003318  3633               	rlcf	(___fltol@f1+2)^0,f,c
  5790  00331A  3634               	rlcf	(___fltol@f1+3)^0,f,c
  5791  00331C  063A               	decf	___fltol@exp1^0,f,c
  5792  00331E                     l3368:
  5793  00331E  503A               	movf	___fltol@exp1^0,w,c
  5794  003320  A4D8               	btfss	status,2,c
  5795  003322  EF95  F019         	goto	u3461
  5796  003326  EF97  F019         	goto	u3460
  5797  00332A                     u3461:
  5798  00332A  EF89  F019         	goto	l3366
  5799  00332E                     u3460:
  5800  00332E                     l3370:
  5801  00332E  5039               	movf	___fltol@sign1^0,w,c
  5802  003330  B4D8               	btfsc	status,2,c
  5803  003332  EF9D  F019         	goto	u3471
  5804  003336  EF9F  F019         	goto	u3470
  5805  00333A                     u3471:
  5806  00333A  EFA7  F019         	goto	l3374
  5807  00333E                     u3470:
  5808  00333E  1E34               	comf	(___fltol@f1+3)^0,f,c
  5809  003340  1E33               	comf	(___fltol@f1+2)^0,f,c
  5810  003342  1E32               	comf	(___fltol@f1+1)^0,f,c
  5811  003344  6C31               	negf	___fltol@f1^0,c
  5812  003346  0E00               	movlw	0
  5813  003348  2232               	addwfc	(___fltol@f1+1)^0,f,c
  5814  00334A  2233               	addwfc	(___fltol@f1+2)^0,f,c
  5815  00334C  2234               	addwfc	(___fltol@f1+3)^0,f,c
  5816  00334E                     l3374:
  5817  00334E  C031  F031         	movff	___fltol@f1,?___fltol
  5818  003352  C032  F032         	movff	___fltol@f1+1,?___fltol+1
  5819  003356  C033  F033         	movff	___fltol@f1+2,?___fltol+2
  5820  00335A  C034  F034         	movff	___fltol@f1+3,?___fltol+3
  5821  00335E                     l582:
  5822  00335E  0012               	return		;funcret
  5823  003360                     __end_of___fltol:
  5824                           	callstack 0
  5825                           
  5826 ;; *************** function ___flsub *****************
  5827 ;; Defined at:
  5828 ;;		line 245 in file "D:\MPLABX\XC8\pic\sources\c90\common\sprcadd.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;  b               4   68[COMRAM] long 
  5831 ;;  a               4   72[COMRAM] long 
  5832 ;; Auto vars:     Size  Location     Type
  5833 ;;		None
  5834 ;; Return value:  Size  Location     Type
  5835 ;;                  4   68[COMRAM] long 
  5836 ;; Registers used:
  5837 ;;		wreg, status,2, status,0, cstack
  5838 ;; Tracked objects:
  5839 ;;		On entry : 0/0
  5840 ;;		On exit  : 0/0
  5841 ;;		Unchanged: 0/0
  5842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5843 ;;      Params:         8       0       0       0       0       0       0       0       0
  5844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5846 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5847 ;;Total ram usage:        8 bytes
  5848 ;; Hardware stack levels used:    1
  5849 ;; Hardware stack levels required when called:    1
  5850 ;; This function calls:
  5851 ;;		___fladd
  5852 ;; This function is called by:
  5853 ;;		_sprintf
  5854 ;; This function uses a non-reentrant model
  5855 ;;
  5856                           
  5857                           	psect	text17
  5858  00398C                     __ptext17:
  5859                           	callstack 0
  5860  00398C                     ___flsub:
  5861                           	callstack 28
  5862  00398C  0E00               	movlw	0
  5863  00398E  1A49               	xorwf	___flsub@a^0,f,c
  5864  003990  0E00               	movlw	0
  5865  003992  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  5866  003994  0E00               	movlw	0
  5867  003996  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  5868  003998  0E80               	movlw	128
  5869  00399A  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  5870  00399C  C045  F035         	movff	___flsub@b,___fladd@b
  5871  0039A0  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  5872  0039A4  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  5873  0039A8  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  5874  0039AC  C049  F039         	movff	___flsub@a,___fladd@a
  5875  0039B0  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  5876  0039B4  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  5877  0039B8  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  5878  0039BC  EC19  F00B         	call	___fladd	;wreg free
  5879  0039C0  C035  F045         	movff	?___fladd,?___flsub
  5880  0039C4  C036  F046         	movff	?___fladd+1,?___flsub+1
  5881  0039C8  C037  F047         	movff	?___fladd+2,?___flsub+2
  5882  0039CC  C038  F048         	movff	?___fladd+3,?___flsub+3
  5883  0039D0  0012               	return		;funcret
  5884  0039D2                     __end_of___flsub:
  5885                           	callstack 0
  5886                           
  5887 ;; *************** function ___fladd *****************
  5888 ;; Defined at:
  5889 ;;		line 10 in file "D:\MPLABX\XC8\pic\sources\c90\common\sprcadd.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  b               4   52[COMRAM] long 
  5892 ;;  a               4   56[COMRAM] long 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  grs             1   67[COMRAM] unsigned char 
  5895 ;;  bexp            1   66[COMRAM] unsigned char 
  5896 ;;  aexp            1   65[COMRAM] unsigned char 
  5897 ;;  signs           1   64[COMRAM] unsigned char 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  4   52[COMRAM] unsigned char 
  5900 ;; Registers used:
  5901 ;;		wreg, status,2, status,0
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5907 ;;      Params:         8       0       0       0       0       0       0       0       0
  5908 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5909 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5910 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5911 ;;Total ram usage:       16 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; This function calls:
  5914 ;;		Nothing
  5915 ;; This function is called by:
  5916 ;;		_sprintf
  5917 ;;		___flsub
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text18
  5922  001632                     __ptext18:
  5923                           	callstack 0
  5924  001632                     ___fladd:
  5925                           	callstack 28
  5926  001632  5038               	movf	(___fladd@b+3)^0,w,c
  5927  001634  0B80               	andlw	128
  5928  001636  6E41               	movwf	___fladd@signs^0,c
  5929  001638  5038               	movf	(___fladd@b+3)^0,w,c
  5930  00163A  2438               	addwf	(___fladd@b+3)^0,w,c
  5931  00163C  6E43               	movwf	___fladd@bexp^0,c
  5932  00163E  AE37               	btfss	(___fladd@b+2)^0,7,c
  5933  001640  EF24  F00B         	goto	u2221
  5934  001644  EF26  F00B         	goto	u2220
  5935  001648                     u2221:
  5936  001648  EF27  F00B         	goto	l2580
  5937  00164C                     u2220:
  5938  00164C  8043               	bsf	___fladd@bexp^0,0,c
  5939  00164E                     l2580:
  5940  00164E  5043               	movf	___fladd@bexp^0,w,c
  5941  001650  B4D8               	btfsc	status,2,c
  5942  001652  EF2D  F00B         	goto	u2231
  5943  001656  EF2F  F00B         	goto	u2230
  5944  00165A                     u2231:
  5945  00165A  EF44  F00B         	goto	l2590
  5946  00165E                     u2230:
  5947  00165E  2843               	incf	___fladd@bexp^0,w,c
  5948  001660  A4D8               	btfss	status,2,c
  5949  001662  EF35  F00B         	goto	u2241
  5950  001666  EF37  F00B         	goto	u2240
  5951  00166A                     u2241:
  5952  00166A  EF3F  F00B         	goto	l2586
  5953  00166E                     u2240:
  5954  00166E  0E00               	movlw	0
  5955  001670  6E35               	movwf	___fladd@b^0,c
  5956  001672  0E00               	movlw	0
  5957  001674  6E36               	movwf	(___fladd@b+1)^0,c
  5958  001676  0E00               	movlw	0
  5959  001678  6E37               	movwf	(___fladd@b+2)^0,c
  5960  00167A  0E00               	movlw	0
  5961  00167C  6E38               	movwf	(___fladd@b+3)^0,c
  5962  00167E                     l2586:
  5963  00167E  8E37               	bsf	(___fladd@b+2)^0,7,c
  5964  001680  0E00               	movlw	0
  5965  001682  6E38               	movwf	(___fladd@b+3)^0,c
  5966  001684  EF4C  F00B         	goto	l2592
  5967  001688                     l2590:
  5968  001688  0E00               	movlw	0
  5969  00168A  6E35               	movwf	___fladd@b^0,c
  5970  00168C  0E00               	movlw	0
  5971  00168E  6E36               	movwf	(___fladd@b+1)^0,c
  5972  001690  0E00               	movlw	0
  5973  001692  6E37               	movwf	(___fladd@b+2)^0,c
  5974  001694  0E00               	movlw	0
  5975  001696  6E38               	movwf	(___fladd@b+3)^0,c
  5976  001698                     l2592:
  5977  001698  503C               	movf	(___fladd@a+3)^0,w,c
  5978  00169A  0B80               	andlw	128
  5979  00169C  6E42               	movwf	___fladd@aexp^0,c
  5980  00169E  5041               	movf	___fladd@signs^0,w,c
  5981  0016A0  1842               	xorwf	___fladd@aexp^0,w,c
  5982  0016A2  B4D8               	btfsc	status,2,c
  5983  0016A4  EF56  F00B         	goto	u2251
  5984  0016A8  EF58  F00B         	goto	u2250
  5985  0016AC                     u2251:
  5986  0016AC  EF59  F00B         	goto	l2598
  5987  0016B0                     u2250:
  5988  0016B0  8C41               	bsf	___fladd@signs^0,6,c
  5989  0016B2                     l2598:
  5990  0016B2  503C               	movf	(___fladd@a+3)^0,w,c
  5991  0016B4  243C               	addwf	(___fladd@a+3)^0,w,c
  5992  0016B6  6E42               	movwf	___fladd@aexp^0,c
  5993  0016B8  AE3B               	btfss	(___fladd@a+2)^0,7,c
  5994  0016BA  EF61  F00B         	goto	u2261
  5995  0016BE  EF63  F00B         	goto	u2260
  5996  0016C2                     u2261:
  5997  0016C2  EF64  F00B         	goto	l2604
  5998  0016C6                     u2260:
  5999  0016C6  8042               	bsf	___fladd@aexp^0,0,c
  6000  0016C8                     l2604:
  6001  0016C8  5042               	movf	___fladd@aexp^0,w,c
  6002  0016CA  B4D8               	btfsc	status,2,c
  6003  0016CC  EF6A  F00B         	goto	u2271
  6004  0016D0  EF6C  F00B         	goto	u2270
  6005  0016D4                     u2271:
  6006  0016D4  EF81  F00B         	goto	l2614
  6007  0016D8                     u2270:
  6008  0016D8  2842               	incf	___fladd@aexp^0,w,c
  6009  0016DA  A4D8               	btfss	status,2,c
  6010  0016DC  EF72  F00B         	goto	u2281
  6011  0016E0  EF74  F00B         	goto	u2280
  6012  0016E4                     u2281:
  6013  0016E4  EF7C  F00B         	goto	l2610
  6014  0016E8                     u2280:
  6015  0016E8  0E00               	movlw	0
  6016  0016EA  6E39               	movwf	___fladd@a^0,c
  6017  0016EC  0E00               	movlw	0
  6018  0016EE  6E3A               	movwf	(___fladd@a+1)^0,c
  6019  0016F0  0E00               	movlw	0
  6020  0016F2  6E3B               	movwf	(___fladd@a+2)^0,c
  6021  0016F4  0E00               	movlw	0
  6022  0016F6  6E3C               	movwf	(___fladd@a+3)^0,c
  6023  0016F8                     l2610:
  6024  0016F8  8E3B               	bsf	(___fladd@a+2)^0,7,c
  6025  0016FA  0E00               	movlw	0
  6026  0016FC  6E3C               	movwf	(___fladd@a+3)^0,c
  6027  0016FE  EF89  F00B         	goto	l2616
  6028  001702                     l2614:
  6029  001702  0E00               	movlw	0
  6030  001704  6E39               	movwf	___fladd@a^0,c
  6031  001706  0E00               	movlw	0
  6032  001708  6E3A               	movwf	(___fladd@a+1)^0,c
  6033  00170A  0E00               	movlw	0
  6034  00170C  6E3B               	movwf	(___fladd@a+2)^0,c
  6035  00170E  0E00               	movlw	0
  6036  001710  6E3C               	movwf	(___fladd@a+3)^0,c
  6037  001712                     l2616:
  6038  001712  5043               	movf	___fladd@bexp^0,w,c
  6039  001714  5C42               	subwf	___fladd@aexp^0,w,c
  6040  001716  B0D8               	btfsc	status,0,c
  6041  001718  EF90  F00B         	goto	u2291
  6042  00171C  EF92  F00B         	goto	u2290
  6043  001720                     u2291:
  6044  001720  EFB9  F00B         	goto	l2652
  6045  001724                     u2290:
  6046  001724  AC41               	btfss	___fladd@signs^0,6,c
  6047  001726  EF97  F00B         	goto	u2301
  6048  00172A  EF99  F00B         	goto	u2300
  6049  00172E                     u2301:
  6050  00172E  EF9B  F00B         	goto	l2622
  6051  001732                     u2300:
  6052  001732  0E80               	movlw	128
  6053  001734  1A41               	xorwf	___fladd@signs^0,f,c
  6054  001736                     l2622:
  6055  001736  C043  F044         	movff	___fladd@bexp,___fladd@grs
  6056  00173A  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  6057  00173E  C044  F042         	movff	___fladd@grs,___fladd@aexp
  6058  001742  C035  F044         	movff	___fladd@b,___fladd@grs
  6059  001746  C039  F035         	movff	___fladd@a,___fladd@b
  6060  00174A  C044  F039         	movff	___fladd@grs,___fladd@a
  6061  00174E  C036  F044         	movff	___fladd@b+1,___fladd@grs
  6062  001752  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  6063  001756  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  6064  00175A  C037  F044         	movff	___fladd@b+2,___fladd@grs
  6065  00175E  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  6066  001762  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  6067  001766  C038  F044         	movff	___fladd@b+3,___fladd@grs
  6068  00176A  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  6069  00176E  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  6070  001772                     l2652:
  6071  001772  0E00               	movlw	0
  6072  001774  6E44               	movwf	___fladd@grs^0,c
  6073  001776  5043               	movf	___fladd@bexp^0,w,c
  6074  001778  C042  F03D         	movff	___fladd@aexp,??___fladd
  6075  00177C  6A3E               	clrf	(??___fladd+1)^0,c
  6076  00177E  5E3D               	subwf	??___fladd^0,f,c
  6077  001780  0E00               	movlw	0
  6078  001782  5A3E               	subwfb	(??___fladd+1)^0,f,c
  6079  001784  BE3E               	btfsc	(??___fladd+1)^0,7,c
  6080  001786  EFCE  F00B         	goto	u2311
  6081  00178A  503E               	movf	(??___fladd+1)^0,w,c
  6082  00178C  E109               	bnz	u2310
  6083  00178E  0E1A               	movlw	26
  6084  001790  5C3D               	subwf	??___fladd^0,w,c
  6085  001792  A0D8               	btfss	status,0,c
  6086  001794  EFCE  F00B         	goto	u2311
  6087  001798  EFD0  F00B         	goto	u2310
  6088  00179C                     u2311:
  6089  00179C  EF07  F00C         	goto	l827
  6090  0017A0                     u2310:
  6091  0017A0  5035               	movf	___fladd@b^0,w,c
  6092  0017A2  1036               	iorwf	(___fladd@b+1)^0,w,c
  6093  0017A4  1037               	iorwf	(___fladd@b+2)^0,w,c
  6094  0017A6  1038               	iorwf	(___fladd@b+3)^0,w,c
  6095  0017A8  A4D8               	btfss	status,2,c
  6096  0017AA  EFD9  F00B         	goto	u2321
  6097  0017AE  EFDC  F00B         	goto	u2320
  6098  0017B2                     u2321:
  6099  0017B2  0E01               	movlw	1
  6100  0017B4  EFDD  F00B         	goto	u2330
  6101  0017B8                     u2320:
  6102  0017B8  0E00               	movlw	0
  6103  0017BA                     u2330:
  6104  0017BA  6E44               	movwf	___fladd@grs^0,c
  6105  0017BC  0E00               	movlw	0
  6106  0017BE  6E35               	movwf	___fladd@b^0,c
  6107  0017C0  0E00               	movlw	0
  6108  0017C2  6E36               	movwf	(___fladd@b+1)^0,c
  6109  0017C4  0E00               	movlw	0
  6110  0017C6  6E37               	movwf	(___fladd@b+2)^0,c
  6111  0017C8  0E00               	movlw	0
  6112  0017CA  6E38               	movwf	(___fladd@b+3)^0,c
  6113  0017CC  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  6114  0017D0  EF10  F00C         	goto	l826
  6115  0017D4                     l828:
  6116  0017D4  A044               	btfss	___fladd@grs^0,0,c
  6117  0017D6  EFEF  F00B         	goto	u2341
  6118  0017DA  EFF1  F00B         	goto	u2340
  6119  0017DE                     u2341:
  6120  0017DE  EFF7  F00B         	goto	l2664
  6121  0017E2                     u2340:
  6122  0017E2  90D8               	bcf	status,0,c
  6123  0017E4  3044               	rrcf	___fladd@grs^0,w,c
  6124  0017E6  0901               	iorlw	1
  6125  0017E8  6E44               	movwf	___fladd@grs^0,c
  6126  0017EA  EFF9  F00B         	goto	l2666
  6127  0017EE                     l2664:
  6128  0017EE  90D8               	bcf	status,0,c
  6129  0017F0  3244               	rrcf	___fladd@grs^0,f,c
  6130  0017F2                     l2666:
  6131  0017F2  A035               	btfss	___fladd@b^0,0,c
  6132  0017F4  EFFE  F00B         	goto	u2351
  6133  0017F8  EF00  F00C         	goto	u2350
  6134  0017FC                     u2351:
  6135  0017FC  EF01  F00C         	goto	l2670
  6136  001800                     u2350:
  6137  001800  8E44               	bsf	___fladd@grs^0,7,c
  6138  001802                     l2670:
  6139  001802  3438               	rlcf	(___fladd@b+3)^0,w,c
  6140  001804  3238               	rrcf	(___fladd@b+3)^0,f,c
  6141  001806  3237               	rrcf	(___fladd@b+2)^0,f,c
  6142  001808  3236               	rrcf	(___fladd@b+1)^0,f,c
  6143  00180A  3235               	rrcf	___fladd@b^0,f,c
  6144  00180C  2A43               	incf	___fladd@bexp^0,f,c
  6145  00180E                     l827:
  6146  00180E  5042               	movf	___fladd@aexp^0,w,c
  6147  001810  5C43               	subwf	___fladd@bexp^0,w,c
  6148  001812  A0D8               	btfss	status,0,c
  6149  001814  EF0E  F00C         	goto	u2361
  6150  001818  EF10  F00C         	goto	u2360
  6151  00181C                     u2361:
  6152  00181C  EFEA  F00B         	goto	l828
  6153  001820                     u2360:
  6154  001820                     l826:
  6155  001820  BC41               	btfsc	___fladd@signs^0,6,c
  6156  001822  EF15  F00C         	goto	u2371
  6157  001826  EF17  F00C         	goto	u2370
  6158  00182A                     u2371:
  6159  00182A  EF57  F00C         	goto	l2698
  6160  00182E                     u2370:
  6161  00182E  5043               	movf	___fladd@bexp^0,w,c
  6162  001830  A4D8               	btfss	status,2,c
  6163  001832  EF1D  F00C         	goto	u2381
  6164  001836  EF1F  F00C         	goto	u2380
  6165  00183A                     u2381:
  6166  00183A  EF29  F00C         	goto	l2680
  6167  00183E                     u2380:
  6168  00183E  0E00               	movlw	0
  6169  001840  6E35               	movwf	?___fladd^0,c
  6170  001842  0E00               	movlw	0
  6171  001844  6E36               	movwf	(?___fladd+1)^0,c
  6172  001846  0E00               	movlw	0
  6173  001848  6E37               	movwf	(?___fladd+2)^0,c
  6174  00184A  0E00               	movlw	0
  6175  00184C  6E38               	movwf	(?___fladd+3)^0,c
  6176  00184E  EF78  F00D         	goto	l835
  6177  001852                     l2680:
  6178  001852  5039               	movf	___fladd@a^0,w,c
  6179  001854  2635               	addwf	___fladd@b^0,f,c
  6180  001856  503A               	movf	(___fladd@a+1)^0,w,c
  6181  001858  2236               	addwfc	(___fladd@b+1)^0,f,c
  6182  00185A  503B               	movf	(___fladd@a+2)^0,w,c
  6183  00185C  2237               	addwfc	(___fladd@b+2)^0,f,c
  6184  00185E  503C               	movf	(___fladd@a+3)^0,w,c
  6185  001860  2238               	addwfc	(___fladd@b+3)^0,f,c
  6186  001862  A038               	btfss	(___fladd@b+3)^0,0,c
  6187  001864  EF36  F00C         	goto	u2391
  6188  001868  EF38  F00C         	goto	u2390
  6189  00186C                     u2391:
  6190  00186C  EFE4  F00C         	goto	l2734
  6191  001870                     u2390:
  6192  001870  A044               	btfss	___fladd@grs^0,0,c
  6193  001872  EF3D  F00C         	goto	u2401
  6194  001876  EF3F  F00C         	goto	u2400
  6195  00187A                     u2401:
  6196  00187A  EF45  F00C         	goto	l2688
  6197  00187E                     u2400:
  6198  00187E  90D8               	bcf	status,0,c
  6199  001880  3044               	rrcf	___fladd@grs^0,w,c
  6200  001882  0901               	iorlw	1
  6201  001884  6E44               	movwf	___fladd@grs^0,c
  6202  001886  EF47  F00C         	goto	l2690
  6203  00188A                     l2688:
  6204  00188A  90D8               	bcf	status,0,c
  6205  00188C  3244               	rrcf	___fladd@grs^0,f,c
  6206  00188E                     l2690:
  6207  00188E  A035               	btfss	___fladd@b^0,0,c
  6208  001890  EF4C  F00C         	goto	u2411
  6209  001894  EF4E  F00C         	goto	u2410
  6210  001898                     u2411:
  6211  001898  EF4F  F00C         	goto	l2694
  6212  00189C                     u2410:
  6213  00189C  8E44               	bsf	___fladd@grs^0,7,c
  6214  00189E                     l2694:
  6215  00189E  3438               	rlcf	(___fladd@b+3)^0,w,c
  6216  0018A0  3238               	rrcf	(___fladd@b+3)^0,f,c
  6217  0018A2  3237               	rrcf	(___fladd@b+2)^0,f,c
  6218  0018A4  3236               	rrcf	(___fladd@b+1)^0,f,c
  6219  0018A6  3235               	rrcf	___fladd@b^0,f,c
  6220  0018A8  2A43               	incf	___fladd@bexp^0,f,c
  6221  0018AA  EFE4  F00C         	goto	l2734
  6222  0018AE                     l2698:
  6223  0018AE  5039               	movf	___fladd@a^0,w,c
  6224  0018B0  5C35               	subwf	___fladd@b^0,w,c
  6225  0018B2  503A               	movf	(___fladd@a+1)^0,w,c
  6226  0018B4  5836               	subwfb	(___fladd@b+1)^0,w,c
  6227  0018B6  503B               	movf	(___fladd@a+2)^0,w,c
  6228  0018B8  5837               	subwfb	(___fladd@b+2)^0,w,c
  6229  0018BA  5038               	movf	(___fladd@b+3)^0,w,c
  6230  0018BC  0A80               	xorlw	128
  6231  0018BE  6E3D               	movwf	??___fladd^0,c
  6232  0018C0  503C               	movf	(___fladd@a+3)^0,w,c
  6233  0018C2  0A80               	xorlw	128
  6234  0018C4  583D               	subwfb	??___fladd^0,w,c
  6235  0018C6  B0D8               	btfsc	status,0,c
  6236  0018C8  EF68  F00C         	goto	u2421
  6237  0018CC  EF6A  F00C         	goto	u2420
  6238  0018D0                     u2421:
  6239  0018D0  EF95  F00C         	goto	l2708
  6240  0018D4                     u2420:
  6241  0018D4  5035               	movf	___fladd@b^0,w,c
  6242  0018D6  5C39               	subwf	___fladd@a^0,w,c
  6243  0018D8  6E3D               	movwf	??___fladd^0,c
  6244  0018DA  5036               	movf	(___fladd@b+1)^0,w,c
  6245  0018DC  583A               	subwfb	(___fladd@a+1)^0,w,c
  6246  0018DE  6E3E               	movwf	(??___fladd+1)^0,c
  6247  0018E0  5037               	movf	(___fladd@b+2)^0,w,c
  6248  0018E2  583B               	subwfb	(___fladd@a+2)^0,w,c
  6249  0018E4  6E3F               	movwf	(??___fladd+2)^0,c
  6250  0018E6  5038               	movf	(___fladd@b+3)^0,w,c
  6251  0018E8  583C               	subwfb	(___fladd@a+3)^0,w,c
  6252  0018EA  6E40               	movwf	(??___fladd+3)^0,c
  6253  0018EC  0EFF               	movlw	255
  6254  0018EE  243D               	addwf	??___fladd^0,w,c
  6255  0018F0  6E35               	movwf	___fladd@b^0,c
  6256  0018F2  0EFF               	movlw	255
  6257  0018F4  203E               	addwfc	(??___fladd+1)^0,w,c
  6258  0018F6  6E36               	movwf	(___fladd@b+1)^0,c
  6259  0018F8  0EFF               	movlw	255
  6260  0018FA  203F               	addwfc	(??___fladd+2)^0,w,c
  6261  0018FC  6E37               	movwf	(___fladd@b+2)^0,c
  6262  0018FE  0EFF               	movlw	255
  6263  001900  2040               	addwfc	(??___fladd+3)^0,w,c
  6264  001902  6E38               	movwf	(___fladd@b+3)^0,c
  6265  001904  0E80               	movlw	128
  6266  001906  1A41               	xorwf	___fladd@signs^0,f,c
  6267  001908  6C44               	negf	___fladd@grs^0,c
  6268  00190A  5044               	movf	___fladd@grs^0,w,c
  6269  00190C  A4D8               	btfss	status,2,c
  6270  00190E  EF8B  F00C         	goto	u2431
  6271  001912  EF8D  F00C         	goto	u2430
  6272  001916                     u2431:
  6273  001916  EF9D  F00C         	goto	l843
  6274  00191A                     u2430:
  6275  00191A  0E01               	movlw	1
  6276  00191C  2635               	addwf	___fladd@b^0,f,c
  6277  00191E  0E00               	movlw	0
  6278  001920  2236               	addwfc	(___fladd@b+1)^0,f,c
  6279  001922  2237               	addwfc	(___fladd@b+2)^0,f,c
  6280  001924  2238               	addwfc	(___fladd@b+3)^0,f,c
  6281  001926  EF9D  F00C         	goto	l843
  6282  00192A                     l2708:
  6283  00192A  5039               	movf	___fladd@a^0,w,c
  6284  00192C  5E35               	subwf	___fladd@b^0,f,c
  6285  00192E  503A               	movf	(___fladd@a+1)^0,w,c
  6286  001930  5A36               	subwfb	(___fladd@b+1)^0,f,c
  6287  001932  503B               	movf	(___fladd@a+2)^0,w,c
  6288  001934  5A37               	subwfb	(___fladd@b+2)^0,f,c
  6289  001936  503C               	movf	(___fladd@a+3)^0,w,c
  6290  001938  5A38               	subwfb	(___fladd@b+3)^0,f,c
  6291  00193A                     l843:
  6292  00193A  5035               	movf	___fladd@b^0,w,c
  6293  00193C  1036               	iorwf	(___fladd@b+1)^0,w,c
  6294  00193E  1037               	iorwf	(___fladd@b+2)^0,w,c
  6295  001940  1038               	iorwf	(___fladd@b+3)^0,w,c
  6296  001942  A4D8               	btfss	status,2,c
  6297  001944  EFA6  F00C         	goto	u2441
  6298  001948  EFA8  F00C         	goto	u2440
  6299  00194C                     u2441:
  6300  00194C  EFDD  F00C         	goto	l2732
  6301  001950                     u2440:
  6302  001950  5044               	movf	___fladd@grs^0,w,c
  6303  001952  A4D8               	btfss	status,2,c
  6304  001954  EFAE  F00C         	goto	u2451
  6305  001958  EFB0  F00C         	goto	u2450
  6306  00195C                     u2451:
  6307  00195C  EFDD  F00C         	goto	l2732
  6308  001960                     u2450:
  6309  001960  0E00               	movlw	0
  6310  001962  6E35               	movwf	?___fladd^0,c
  6311  001964  0E00               	movlw	0
  6312  001966  6E36               	movwf	(?___fladd+1)^0,c
  6313  001968  0E00               	movlw	0
  6314  00196A  6E37               	movwf	(?___fladd+2)^0,c
  6315  00196C  0E00               	movlw	0
  6316  00196E  6E38               	movwf	(?___fladd+3)^0,c
  6317  001970  EF78  F00D         	goto	l835
  6318  001974                     l2716:
  6319  001974  90D8               	bcf	status,0,c
  6320  001976  3635               	rlcf	___fladd@b^0,f,c
  6321  001978  3636               	rlcf	(___fladd@b+1)^0,f,c
  6322  00197A  3637               	rlcf	(___fladd@b+2)^0,f,c
  6323  00197C  3638               	rlcf	(___fladd@b+3)^0,f,c
  6324  00197E  AE44               	btfss	___fladd@grs^0,7,c
  6325  001980  EFC4  F00C         	goto	u2461
  6326  001984  EFC6  F00C         	goto	u2460
  6327  001988                     u2461:
  6328  001988  EFC7  F00C         	goto	l2722
  6329  00198C                     u2460:
  6330  00198C  8035               	bsf	___fladd@b^0,0,c
  6331  00198E                     l2722:
  6332  00198E  A044               	btfss	___fladd@grs^0,0,c
  6333  001990  EFCC  F00C         	goto	u2471
  6334  001994  EFCE  F00C         	goto	u2470
  6335  001998                     u2471:
  6336  001998  EFD2  F00C         	goto	l2726
  6337  00199C                     u2470:
  6338  00199C  80D8               	bsf	status,0,c
  6339  00199E  3644               	rlcf	___fladd@grs^0,f,c
  6340  0019A0  EFD4  F00C         	goto	l2728
  6341  0019A4                     l2726:
  6342  0019A4  90D8               	bcf	status,0,c
  6343  0019A6  3644               	rlcf	___fladd@grs^0,f,c
  6344  0019A8                     l2728:
  6345  0019A8  5043               	movf	___fladd@bexp^0,w,c
  6346  0019AA  B4D8               	btfsc	status,2,c
  6347  0019AC  EFDA  F00C         	goto	u2481
  6348  0019B0  EFDC  F00C         	goto	u2480
  6349  0019B4                     u2481:
  6350  0019B4  EFDD  F00C         	goto	l2732
  6351  0019B8                     u2480:
  6352  0019B8  0643               	decf	___fladd@bexp^0,f,c
  6353  0019BA                     l2732:
  6354  0019BA  AE37               	btfss	(___fladd@b+2)^0,7,c
  6355  0019BC  EFE2  F00C         	goto	u2491
  6356  0019C0  EFE4  F00C         	goto	u2490
  6357  0019C4                     u2491:
  6358  0019C4  EFBA  F00C         	goto	l2716
  6359  0019C8                     u2490:
  6360  0019C8                     l2734:
  6361  0019C8  0E00               	movlw	0
  6362  0019CA  6E42               	movwf	___fladd@aexp^0,c
  6363  0019CC  AE44               	btfss	___fladd@grs^0,7,c
  6364  0019CE  EFEB  F00C         	goto	u2501
  6365  0019D2  EFED  F00C         	goto	u2500
  6366  0019D6                     u2501:
  6367  0019D6  EF05  F00D         	goto	l852
  6368  0019DA                     u2500:
  6369  0019DA  C044  F03D         	movff	___fladd@grs,??___fladd
  6370  0019DE  0E7F               	movlw	127
  6371  0019E0  163D               	andwf	??___fladd^0,f,c
  6372  0019E2  B4D8               	btfsc	status,2,c
  6373  0019E4  EFF6  F00C         	goto	u2511
  6374  0019E8  EFF8  F00C         	goto	u2510
  6375  0019EC                     u2511:
  6376  0019EC  EFFC  F00C         	goto	l853
  6377  0019F0                     u2510:
  6378  0019F0                     l2740:
  6379  0019F0  0E01               	movlw	1
  6380  0019F2  6E42               	movwf	___fladd@aexp^0,c
  6381  0019F4  EF05  F00D         	goto	l852
  6382  0019F8                     l853:
  6383  0019F8  A035               	btfss	___fladd@b^0,0,c
  6384  0019FA  EF01  F00D         	goto	u2521
  6385  0019FE  EF03  F00D         	goto	u2520
  6386  001A02                     u2521:
  6387  001A02  EF05  F00D         	goto	l852
  6388  001A06                     u2520:
  6389  001A06  EFF8  F00C         	goto	l2740
  6390  001A0A                     l852:
  6391  001A0A  5042               	movf	___fladd@aexp^0,w,c
  6392  001A0C  B4D8               	btfsc	status,2,c
  6393  001A0E  EF0B  F00D         	goto	u2531
  6394  001A12  EF0D  F00D         	goto	u2530
  6395  001A16                     u2531:
  6396  001A16  EF38  F00D         	goto	l2752
  6397  001A1A                     u2530:
  6398  001A1A  0E01               	movlw	1
  6399  001A1C  2635               	addwf	___fladd@b^0,f,c
  6400  001A1E  0E00               	movlw	0
  6401  001A20  2236               	addwfc	(___fladd@b+1)^0,f,c
  6402  001A22  2237               	addwfc	(___fladd@b+2)^0,f,c
  6403  001A24  2238               	addwfc	(___fladd@b+3)^0,f,c
  6404  001A26  A038               	btfss	(___fladd@b+3)^0,0,c
  6405  001A28  EF18  F00D         	goto	u2541
  6406  001A2C  EF1A  F00D         	goto	u2540
  6407  001A30                     u2541:
  6408  001A30  EF38  F00D         	goto	l2752
  6409  001A34                     u2540:
  6410  001A34  C035  F03D         	movff	___fladd@b,??___fladd
  6411  001A38  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  6412  001A3C  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  6413  001A40  C038  F040         	movff	___fladd@b+3,??___fladd+3
  6414  001A44  3440               	rlcf	(??___fladd+3)^0,w,c
  6415  001A46  3240               	rrcf	(??___fladd+3)^0,f,c
  6416  001A48  323F               	rrcf	(??___fladd+2)^0,f,c
  6417  001A4A  323E               	rrcf	(??___fladd+1)^0,f,c
  6418  001A4C  323D               	rrcf	??___fladd^0,f,c
  6419  001A4E  C03D  F035         	movff	??___fladd,___fladd@b
  6420  001A52  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  6421  001A56  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  6422  001A5A  C040  F038         	movff	??___fladd+3,___fladd@b+3
  6423  001A5E  2843               	incf	___fladd@bexp^0,w,c
  6424  001A60  B4D8               	btfsc	status,2,c
  6425  001A62  EF35  F00D         	goto	u2551
  6426  001A66  EF37  F00D         	goto	u2550
  6427  001A6A                     u2551:
  6428  001A6A  EF38  F00D         	goto	l2752
  6429  001A6E                     u2550:
  6430  001A6E  2A43               	incf	___fladd@bexp^0,f,c
  6431  001A70                     l2752:
  6432  001A70  2843               	incf	___fladd@bexp^0,w,c
  6433  001A72  B4D8               	btfsc	status,2,c
  6434  001A74  EF3E  F00D         	goto	u2561
  6435  001A78  EF40  F00D         	goto	u2560
  6436  001A7C                     u2561:
  6437  001A7C  EF48  F00D         	goto	l2756
  6438  001A80                     u2560:
  6439  001A80  5043               	movf	___fladd@bexp^0,w,c
  6440  001A82  A4D8               	btfss	status,2,c
  6441  001A84  EF46  F00D         	goto	u2571
  6442  001A88  EF48  F00D         	goto	u2570
  6443  001A8C                     u2571:
  6444  001A8C  EF5A  F00D         	goto	l2760
  6445  001A90                     u2570:
  6446  001A90                     l2756:
  6447  001A90  0E00               	movlw	0
  6448  001A92  6E35               	movwf	___fladd@b^0,c
  6449  001A94  0E00               	movlw	0
  6450  001A96  6E36               	movwf	(___fladd@b+1)^0,c
  6451  001A98  0E00               	movlw	0
  6452  001A9A  6E37               	movwf	(___fladd@b+2)^0,c
  6453  001A9C  0E00               	movlw	0
  6454  001A9E  6E38               	movwf	(___fladd@b+3)^0,c
  6455  001AA0  5043               	movf	___fladd@bexp^0,w,c
  6456  001AA2  A4D8               	btfss	status,2,c
  6457  001AA4  EF56  F00D         	goto	u2581
  6458  001AA8  EF58  F00D         	goto	u2580
  6459  001AAC                     u2581:
  6460  001AAC  EF5A  F00D         	goto	l2760
  6461  001AB0                     u2580:
  6462  001AB0  0E00               	movlw	0
  6463  001AB2  6E41               	movwf	___fladd@signs^0,c
  6464  001AB4                     l2760:
  6465  001AB4  A043               	btfss	___fladd@bexp^0,0,c
  6466  001AB6  EF5F  F00D         	goto	u2591
  6467  001ABA  EF61  F00D         	goto	u2590
  6468  001ABE                     u2591:
  6469  001ABE  EF64  F00D         	goto	l2764
  6470  001AC2                     u2590:
  6471  001AC2  8E37               	bsf	(___fladd@b+2)^0,7,c
  6472  001AC4  EF65  F00D         	goto	l2766
  6473  001AC8                     l2764:
  6474  001AC8  9E37               	bcf	(___fladd@b+2)^0,7,c
  6475  001ACA                     l2766:
  6476  001ACA  90D8               	bcf	status,0,c
  6477  001ACC  3043               	rrcf	___fladd@bexp^0,w,c
  6478  001ACE  6E38               	movwf	(___fladd@b+3)^0,c
  6479  001AD0  AE41               	btfss	___fladd@signs^0,7,c
  6480  001AD2  EF6D  F00D         	goto	u2601
  6481  001AD6  EF6F  F00D         	goto	u2600
  6482  001ADA                     u2601:
  6483  001ADA  EF70  F00D         	goto	l2772
  6484  001ADE                     u2600:
  6485  001ADE  8E38               	bsf	(___fladd@b+3)^0,7,c
  6486  001AE0                     l2772:
  6487  001AE0  C035  F035         	movff	___fladd@b,?___fladd
  6488  001AE4  C036  F036         	movff	___fladd@b+1,?___fladd+1
  6489  001AE8  C037  F037         	movff	___fladd@b+2,?___fladd+2
  6490  001AEC  C038  F038         	movff	___fladd@b+3,?___fladd+3
  6491  001AF0                     l835:
  6492  001AF0  0012               	return		;funcret
  6493  001AF2                     __end_of___fladd:
  6494                           	callstack 0
  6495                           
  6496 ;; *************** function ___flneg *****************
  6497 ;; Defined at:
  6498 ;;		line 15 in file "D:\MPLABX\XC8\pic\sources\c90\common\flneg.c"
  6499 ;; Parameters:    Size  Location     Type
  6500 ;;  f1              4    0[COMRAM] unsigned char 
  6501 ;; Auto vars:     Size  Location     Type
  6502 ;;		None
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  4    0[COMRAM] unsigned char 
  6505 ;; Registers used:
  6506 ;;		wreg, status,2, status,0
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6512 ;;      Params:         4       0       0       0       0       0       0       0       0
  6513 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6515 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6516 ;;Total ram usage:        4 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; This function calls:
  6519 ;;		Nothing
  6520 ;; This function is called by:
  6521 ;;		_sprintf
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           
  6525                           	psect	text19
  6526  0039D2                     __ptext19:
  6527                           	callstack 0
  6528  0039D2                     ___flneg:
  6529                           	callstack 29
  6530  0039D2  5001               	movf	___flneg@f1^0,w,c
  6531  0039D4  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6532  0039D6  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6533  0039D8  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6534  0039DA  B4D8               	btfsc	status,2,c
  6535  0039DC  EFF2  F01C         	goto	u3401
  6536  0039E0  EFF4  F01C         	goto	u3400
  6537  0039E4                     u3401:
  6538  0039E4  EFFC  F01C         	goto	l3330
  6539  0039E8                     u3400:
  6540  0039E8  0E00               	movlw	0
  6541  0039EA  1A01               	xorwf	___flneg@f1^0,f,c
  6542  0039EC  0E00               	movlw	0
  6543  0039EE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6544  0039F0  0E00               	movlw	0
  6545  0039F2  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6546  0039F4  0E80               	movlw	128
  6547  0039F6  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6548  0039F8                     l3330:
  6549  0039F8  C001  F001         	movff	___flneg@f1,?___flneg
  6550  0039FC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6551  003A00  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6552  003A04  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6553  003A08  0012               	return		;funcret
  6554  003A0A                     __end_of___flneg:
  6555                           	callstack 0
  6556                           
  6557 ;; *************** function ___flge *****************
  6558 ;; Defined at:
  6559 ;;		line 4 in file "D:\MPLABX\XC8\pic\sources\c90\common\flge.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  ff1             4    0[COMRAM] unsigned char 
  6562 ;;  ff2             4    4[COMRAM] unsigned char 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;		None               void
  6567 ;; Registers used:
  6568 ;;		wreg, status,2, status,0
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6574 ;;      Params:         8       0       0       0       0       0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6576 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6577 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6578 ;;Total ram usage:       12 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_sprintf
  6584 ;; This function uses a non-reentrant model
  6585 ;;
  6586                           
  6587                           	psect	text20
  6588  003360                     __ptext20:
  6589                           	callstack 0
  6590  003360                     ___flge:
  6591                           	callstack 29
  6592  003360  0E00               	movlw	0
  6593  003362  1401               	andwf	___flge@ff1^0,w,c
  6594  003364  6E09               	movwf	??___flge^0,c
  6595  003366  0E00               	movlw	0
  6596  003368  1402               	andwf	(___flge@ff1+1)^0,w,c
  6597  00336A  6E0A               	movwf	(??___flge+1)^0,c
  6598  00336C  0E80               	movlw	128
  6599  00336E  1403               	andwf	(___flge@ff1+2)^0,w,c
  6600  003370  6E0B               	movwf	(??___flge+2)^0,c
  6601  003372  0E7F               	movlw	127
  6602  003374  1404               	andwf	(___flge@ff1+3)^0,w,c
  6603  003376  6E0C               	movwf	(??___flge+3)^0,c
  6604  003378  5009               	movf	??___flge^0,w,c
  6605  00337A  100A               	iorwf	(??___flge+1)^0,w,c
  6606  00337C  100B               	iorwf	(??___flge+2)^0,w,c
  6607  00337E  100C               	iorwf	(??___flge+3)^0,w,c
  6608  003380  A4D8               	btfss	status,2,c
  6609  003382  EFC5  F019         	goto	u3351
  6610  003386  EFC7  F019         	goto	u3350
  6611  00338A                     u3351:
  6612  00338A  EFCF  F019         	goto	l3308
  6613  00338E                     u3350:
  6614  00338E  0E00               	movlw	0
  6615  003390  6E01               	movwf	___flge@ff1^0,c
  6616  003392  0E00               	movlw	0
  6617  003394  6E02               	movwf	(___flge@ff1+1)^0,c
  6618  003396  0E00               	movlw	0
  6619  003398  6E03               	movwf	(___flge@ff1+2)^0,c
  6620  00339A  0E00               	movlw	0
  6621  00339C  6E04               	movwf	(___flge@ff1+3)^0,c
  6622  00339E                     l3308:
  6623  00339E  0E00               	movlw	0
  6624  0033A0  1405               	andwf	___flge@ff2^0,w,c
  6625  0033A2  6E09               	movwf	??___flge^0,c
  6626  0033A4  0E00               	movlw	0
  6627  0033A6  1406               	andwf	(___flge@ff2+1)^0,w,c
  6628  0033A8  6E0A               	movwf	(??___flge+1)^0,c
  6629  0033AA  0E80               	movlw	128
  6630  0033AC  1407               	andwf	(___flge@ff2+2)^0,w,c
  6631  0033AE  6E0B               	movwf	(??___flge+2)^0,c
  6632  0033B0  0E7F               	movlw	127
  6633  0033B2  1408               	andwf	(___flge@ff2+3)^0,w,c
  6634  0033B4  6E0C               	movwf	(??___flge+3)^0,c
  6635  0033B6  5009               	movf	??___flge^0,w,c
  6636  0033B8  100A               	iorwf	(??___flge+1)^0,w,c
  6637  0033BA  100B               	iorwf	(??___flge+2)^0,w,c
  6638  0033BC  100C               	iorwf	(??___flge+3)^0,w,c
  6639  0033BE  A4D8               	btfss	status,2,c
  6640  0033C0  EFE4  F019         	goto	u3361
  6641  0033C4  EFE6  F019         	goto	u3360
  6642  0033C8                     u3361:
  6643  0033C8  EFEE  F019         	goto	l3312
  6644  0033CC                     u3360:
  6645  0033CC  0E00               	movlw	0
  6646  0033CE  6E05               	movwf	___flge@ff2^0,c
  6647  0033D0  0E00               	movlw	0
  6648  0033D2  6E06               	movwf	(___flge@ff2+1)^0,c
  6649  0033D4  0E00               	movlw	0
  6650  0033D6  6E07               	movwf	(___flge@ff2+2)^0,c
  6651  0033D8  0E00               	movlw	0
  6652  0033DA  6E08               	movwf	(___flge@ff2+3)^0,c
  6653  0033DC                     l3312:
  6654  0033DC  AE04               	btfss	(___flge@ff1+3)^0,7,c
  6655  0033DE  EFF3  F019         	goto	u3371
  6656  0033E2  EFF5  F019         	goto	u3370
  6657  0033E6                     u3371:
  6658  0033E6  EFFE  F019         	goto	l3316
  6659  0033EA                     u3370:
  6660  0033EA  6C01               	negf	___flge@ff1^0,c
  6661  0033EC  1E02               	comf	(___flge@ff1+1)^0,f,c
  6662  0033EE  B0D8               	btfsc	status,0,c
  6663  0033F0  2A02               	incf	(___flge@ff1+1)^0,f,c
  6664  0033F2  1E03               	comf	(___flge@ff1+2)^0,f,c
  6665  0033F4  B0D8               	btfsc	status,0,c
  6666  0033F6  2A03               	incf	(___flge@ff1+2)^0,f,c
  6667  0033F8  0E80               	movlw	128
  6668  0033FA  5604               	subfwb	(___flge@ff1+3)^0,f,c
  6669  0033FC                     l3316:
  6670  0033FC  AE08               	btfss	(___flge@ff2+3)^0,7,c
  6671  0033FE  EF03  F01A         	goto	u3381
  6672  003402  EF05  F01A         	goto	u3380
  6673  003406                     u3381:
  6674  003406  EF0E  F01A         	goto	l554
  6675  00340A                     u3380:
  6676  00340A  6C05               	negf	___flge@ff2^0,c
  6677  00340C  1E06               	comf	(___flge@ff2+1)^0,f,c
  6678  00340E  B0D8               	btfsc	status,0,c
  6679  003410  2A06               	incf	(___flge@ff2+1)^0,f,c
  6680  003412  1E07               	comf	(___flge@ff2+2)^0,f,c
  6681  003414  B0D8               	btfsc	status,0,c
  6682  003416  2A07               	incf	(___flge@ff2+2)^0,f,c
  6683  003418  0E80               	movlw	128
  6684  00341A  5608               	subfwb	(___flge@ff2+3)^0,f,c
  6685  00341C                     l554:
  6686  00341C  0E00               	movlw	0
  6687  00341E  1A01               	xorwf	___flge@ff1^0,f,c
  6688  003420  0E00               	movlw	0
  6689  003422  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  6690  003424  0E00               	movlw	0
  6691  003426  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  6692  003428  0E80               	movlw	128
  6693  00342A  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  6694  00342C  0E00               	movlw	0
  6695  00342E  1A05               	xorwf	___flge@ff2^0,f,c
  6696  003430  0E00               	movlw	0
  6697  003432  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  6698  003434  0E00               	movlw	0
  6699  003436  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  6700  003438  0E80               	movlw	128
  6701  00343A  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  6702  00343C  5005               	movf	___flge@ff2^0,w,c
  6703  00343E  5C01               	subwf	___flge@ff1^0,w,c
  6704  003440  5006               	movf	(___flge@ff2+1)^0,w,c
  6705  003442  5802               	subwfb	(___flge@ff1+1)^0,w,c
  6706  003444  5007               	movf	(___flge@ff2+2)^0,w,c
  6707  003446  5803               	subwfb	(___flge@ff1+2)^0,w,c
  6708  003448  5008               	movf	(___flge@ff2+3)^0,w,c
  6709  00344A  5804               	subwfb	(___flge@ff1+3)^0,w,c
  6710  00344C  B0D8               	btfsc	status,0,c
  6711  00344E  EF2B  F01A         	goto	u3391
  6712  003452  EF2D  F01A         	goto	u3390
  6713  003456                     u3391:
  6714  003456  EF30  F01A         	goto	l3322
  6715  00345A                     u3390:
  6716  00345A  90D8               	bcf	status,0,c
  6717  00345C  EF31  F01A         	goto	l555
  6718  003460                     l3322:
  6719  003460  80D8               	bsf	status,0,c
  6720  003462                     l555:
  6721  003462  0012               	return		;funcret
  6722  003464                     __end_of___flge:
  6723                           	callstack 0
  6724                           
  6725 ;; *************** function ___fleq *****************
  6726 ;; Defined at:
  6727 ;;		line 4 in file "D:\MPLABX\XC8\pic\sources\c90\common\fleq.c"
  6728 ;; Parameters:    Size  Location     Type
  6729 ;;  ff1             4    0[COMRAM] unsigned char 
  6730 ;;  ff2             4    4[COMRAM] unsigned char 
  6731 ;; Auto vars:     Size  Location     Type
  6732 ;;		None
  6733 ;; Return value:  Size  Location     Type
  6734 ;;		None               void
  6735 ;; Registers used:
  6736 ;;		wreg, status,2, status,0
  6737 ;; Tracked objects:
  6738 ;;		On entry : 0/0
  6739 ;;		On exit  : 0/0
  6740 ;;		Unchanged: 0/0
  6741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6742 ;;      Params:         8       0       0       0       0       0       0       0       0
  6743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6744 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6745 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6746 ;;Total ram usage:       12 bytes
  6747 ;; Hardware stack levels used:    1
  6748 ;; This function calls:
  6749 ;;		Nothing
  6750 ;; This function is called by:
  6751 ;;		_sprintf
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text21
  6756  0035D8                     __ptext21:
  6757                           	callstack 0
  6758  0035D8                     ___fleq:
  6759                           	callstack 29
  6760  0035D8  0E00               	movlw	0
  6761  0035DA  1401               	andwf	___fleq@ff1^0,w,c
  6762  0035DC  6E09               	movwf	??___fleq^0,c
  6763  0035DE  0E00               	movlw	0
  6764  0035E0  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6765  0035E2  6E0A               	movwf	(??___fleq+1)^0,c
  6766  0035E4  0E80               	movlw	128
  6767  0035E6  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6768  0035E8  6E0B               	movwf	(??___fleq+2)^0,c
  6769  0035EA  0E7F               	movlw	127
  6770  0035EC  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6771  0035EE  6E0C               	movwf	(??___fleq+3)^0,c
  6772  0035F0  5009               	movf	??___fleq^0,w,c
  6773  0035F2  100A               	iorwf	(??___fleq+1)^0,w,c
  6774  0035F4  100B               	iorwf	(??___fleq+2)^0,w,c
  6775  0035F6  100C               	iorwf	(??___fleq+3)^0,w,c
  6776  0035F8  A4D8               	btfss	status,2,c
  6777  0035FA  EF01  F01B         	goto	u3321
  6778  0035FE  EF03  F01B         	goto	u3320
  6779  003602                     u3321:
  6780  003602  EF0B  F01B         	goto	l3292
  6781  003606                     u3320:
  6782  003606  0E00               	movlw	0
  6783  003608  6E01               	movwf	___fleq@ff1^0,c
  6784  00360A  0E00               	movlw	0
  6785  00360C  6E02               	movwf	(___fleq@ff1+1)^0,c
  6786  00360E  0E00               	movlw	0
  6787  003610  6E03               	movwf	(___fleq@ff1+2)^0,c
  6788  003612  0E00               	movlw	0
  6789  003614  6E04               	movwf	(___fleq@ff1+3)^0,c
  6790  003616                     l3292:
  6791  003616  0E00               	movlw	0
  6792  003618  1405               	andwf	___fleq@ff2^0,w,c
  6793  00361A  6E09               	movwf	??___fleq^0,c
  6794  00361C  0E00               	movlw	0
  6795  00361E  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6796  003620  6E0A               	movwf	(??___fleq+1)^0,c
  6797  003622  0E80               	movlw	128
  6798  003624  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6799  003626  6E0B               	movwf	(??___fleq+2)^0,c
  6800  003628  0E7F               	movlw	127
  6801  00362A  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6802  00362C  6E0C               	movwf	(??___fleq+3)^0,c
  6803  00362E  5009               	movf	??___fleq^0,w,c
  6804  003630  100A               	iorwf	(??___fleq+1)^0,w,c
  6805  003632  100B               	iorwf	(??___fleq+2)^0,w,c
  6806  003634  100C               	iorwf	(??___fleq+3)^0,w,c
  6807  003636  A4D8               	btfss	status,2,c
  6808  003638  EF20  F01B         	goto	u3331
  6809  00363C  EF22  F01B         	goto	u3330
  6810  003640                     u3331:
  6811  003640  EF2A  F01B         	goto	l3296
  6812  003644                     u3330:
  6813  003644  0E00               	movlw	0
  6814  003646  6E05               	movwf	___fleq@ff2^0,c
  6815  003648  0E00               	movlw	0
  6816  00364A  6E06               	movwf	(___fleq@ff2+1)^0,c
  6817  00364C  0E00               	movlw	0
  6818  00364E  6E07               	movwf	(___fleq@ff2+2)^0,c
  6819  003650  0E00               	movlw	0
  6820  003652  6E08               	movwf	(___fleq@ff2+3)^0,c
  6821  003654                     l3296:
  6822  003654  5005               	movf	___fleq@ff2^0,w,c
  6823  003656  1801               	xorwf	___fleq@ff1^0,w,c
  6824  003658  E10F               	bnz	u3340
  6825  00365A  5006               	movf	(___fleq@ff2+1)^0,w,c
  6826  00365C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6827  00365E  E10C               	bnz	u3340
  6828  003660  5007               	movf	(___fleq@ff2+2)^0,w,c
  6829  003662  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6830  003664  E109               	bnz	u3340
  6831  003666  5008               	movf	(___fleq@ff2+3)^0,w,c
  6832  003668  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6833  00366A  B4D8               	btfsc	status,2,c
  6834  00366C  EF3A  F01B         	goto	u3341
  6835  003670  EF3C  F01B         	goto	u3340
  6836  003674                     u3341:
  6837  003674  EF3F  F01B         	goto	l3300
  6838  003678                     u3340:
  6839  003678  90D8               	bcf	status,0,c
  6840  00367A  EF40  F01B         	goto	l548
  6841  00367E                     l3300:
  6842  00367E  80D8               	bsf	status,0,c
  6843  003680                     l548:
  6844  003680  0012               	return		;funcret
  6845  003682                     __end_of___fleq:
  6846                           	callstack 0
  6847                           
  6848 ;; *************** function _adc_init *****************
  6849 ;; Defined at:
  6850 ;;		line 30 in file "adc.c"
  6851 ;; Parameters:    Size  Location     Type
  6852 ;;		None
  6853 ;; Auto vars:     Size  Location     Type
  6854 ;;		None
  6855 ;; Return value:  Size  Location     Type
  6856 ;;                  1    wreg      void 
  6857 ;; Registers used:
  6858 ;;		wreg, status,2
  6859 ;; Tracked objects:
  6860 ;;		On entry : 0/0
  6861 ;;		On exit  : 0/0
  6862 ;;		Unchanged: 0/0
  6863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6864 ;;      Params:         0       0       0       0       0       0       0       0       0
  6865 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6867 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6868 ;;Total ram usage:        0 bytes
  6869 ;; Hardware stack levels used:    1
  6870 ;; This function calls:
  6871 ;;		Nothing
  6872 ;; This function is called by:
  6873 ;;		_main
  6874 ;; This function uses a non-reentrant model
  6875 ;;
  6876                           
  6877                           	psect	text22
  6878  003A80                     __ptext22:
  6879                           	callstack 0
  6880  003A80                     _adc_init:
  6881                           	callstack 30
  6882  003A80                     
  6883                           ;adc.c: 36: ADCON0=0x01;
  6884  003A80  0E01               	movlw	1
  6885  003A82  6EC2               	movwf	194,c	;volatile
  6886                           
  6887                           ;adc.c: 37: ADCON1=0x0B;
  6888  003A84  0E0B               	movlw	11
  6889  003A86  6EC1               	movwf	193,c	;volatile
  6890                           
  6891                           ;adc.c: 38: ADCON2=0x01;
  6892  003A88  0E01               	movlw	1
  6893  003A8A  6EC0               	movwf	192,c	;volatile
  6894  003A8C  0012               	return		;funcret
  6895  003A8E                     __end_of_adc_init:
  6896                           	callstack 0
  6897                           
  6898 ;; *************** function _adc_amostra *****************
  6899 ;; Defined at:
  6900 ;;		line 44 in file "adc.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  canal           1    wreg     unsigned char 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;  canal           1    6[COMRAM] unsigned char 
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  2    0[COMRAM] unsigned int 
  6907 ;; Registers used:
  6908 ;;		wreg, status,2, status,0
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6914 ;;      Params:         2       0       0       0       0       0       0       0       0
  6915 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6916 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6917 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6918 ;;Total ram usage:        7 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; This function calls:
  6921 ;;		Nothing
  6922 ;; This function is called by:
  6923 ;;		_main
  6924 ;; This function uses a non-reentrant model
  6925 ;;
  6926                           
  6927                           	psect	text23
  6928  003838                     __ptext23:
  6929                           	callstack 0
  6930  003838                     _adc_amostra:
  6931                           	callstack 30
  6932                           
  6933                           ;incstack = 0
  6934                           ;adc_amostra@canal stored from wreg
  6935  003838  6E07               	movwf	adc_amostra@canal^0,c
  6936  00383A                     
  6937                           ;adc.c: 49: switch(canal)
  6938  00383A  EF2B  F01C         	goto	l3530
  6939  00383E                     l3522:
  6940                           
  6941                           ;adc.c: 52: ADCON0=0x01;
  6942  00383E  0E01               	movlw	1
  6943  003840  6EC2               	movwf	194,c	;volatile
  6944                           
  6945                           ;adc.c: 53: break;
  6946  003842  EF3A  F01C         	goto	l127
  6947  003846                     l3524:
  6948                           
  6949                           ;adc.c: 55: ADCON0=0x05;
  6950  003846  0E05               	movlw	5
  6951  003848  6EC2               	movwf	194,c	;volatile
  6952                           
  6953                           ;adc.c: 56: break;
  6954  00384A  EF3A  F01C         	goto	l127
  6955  00384E                     l3526:
  6956                           
  6957                           ;adc.c: 58: ADCON0=0x09;
  6958  00384E  0E09               	movlw	9
  6959  003850  6EC2               	movwf	194,c	;volatile
  6960                           
  6961                           ;adc.c: 59: break;
  6962  003852  EF3A  F01C         	goto	l127
  6963  003856                     l3530:
  6964  003856  5007               	movf	adc_amostra@canal^0,w,c
  6965                           
  6966                           ; Switch size 1, requested type "simple"
  6967                           ; Number of cases is 3, Range of values is 0 to 2
  6968                           ; switch strategies available:
  6969                           ; Name         Instructions Cycles
  6970                           ; simple_byte           10     6 (average)
  6971                           ;	Chosen strategy is simple_byte
  6972  003858  0A00               	xorlw	0	; case 0
  6973  00385A  B4D8               	btfsc	status,2,c
  6974  00385C  EF1F  F01C         	goto	l3522
  6975  003860  0A01               	xorlw	1	; case 1
  6976  003862  B4D8               	btfsc	status,2,c
  6977  003864  EF23  F01C         	goto	l3524
  6978  003868  0A03               	xorlw	3	; case 2
  6979  00386A  B4D8               	btfsc	status,2,c
  6980  00386C  EF27  F01C         	goto	l3526
  6981  003870  EF3A  F01C         	goto	l127
  6982  003874                     l127:
  6983                           
  6984                           ;adc.c: 77: ADCON0bits.GO=1;
  6985  003874  82C2               	bsf	194,1,c	;volatile
  6986  003876                     l130:
  6987  003876  B2C2               	btfsc	194,1,c	;volatile
  6988  003878  EF40  F01C         	goto	u3631
  6989  00387C  EF42  F01C         	goto	u3630
  6990  003880                     u3631:
  6991  003880  EF3B  F01C         	goto	l130
  6992  003884                     u3630:
  6993  003884                     
  6994                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  6995  003884  CFC3 F003          	movff	4035,??_adc_amostra	;volatile
  6996  003888  0E06               	movlw	6
  6997  00388A  6E04               	movwf	(??_adc_amostra+1)^0,c
  6998  00388C                     u3645:
  6999  00388C  90D8               	bcf	status,0,c
  7000  00388E  3203               	rrcf	??_adc_amostra^0,f,c
  7001  003890  2E04               	decfsz	(??_adc_amostra+1)^0,f,c
  7002  003892  EF46  F01C         	goto	u3645
  7003  003896  5003               	movf	??_adc_amostra^0,w,c
  7004  003898  CFC4 F005          	movff	4036,??_adc_amostra+2	;volatile
  7005  00389C  6A06               	clrf	(??_adc_amostra+3)^0,c
  7006  00389E  90D8               	bcf	status,0,c
  7007  0038A0  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  7008  0038A2  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  7009  0038A4  90D8               	bcf	status,0,c
  7010  0038A6  3605               	rlcf	(??_adc_amostra+2)^0,f,c
  7011  0038A8  3606               	rlcf	(??_adc_amostra+3)^0,f,c
  7012  0038AA  1005               	iorwf	(??_adc_amostra+2)^0,w,c
  7013  0038AC  6E01               	movwf	?_adc_amostra^0,c
  7014  0038AE  5006               	movf	(??_adc_amostra+3)^0,w,c
  7015  0038B0  6E02               	movwf	(?_adc_amostra+1)^0,c
  7016  0038B2  0012               	return		;funcret
  7017  0038B4                     __end_of_adc_amostra:
  7018                           	callstack 0
  7019                           
  7020 ;; *************** function ___fldiv *****************
  7021 ;; Defined at:
  7022 ;;		line 11 in file "D:\MPLABX\XC8\pic\sources\c90\common\sprcdiv.c"
  7023 ;; Parameters:    Size  Location     Type
  7024 ;;  b               4   39[COMRAM] unsigned int 
  7025 ;;  a               4   43[COMRAM] unsigned int 
  7026 ;; Auto vars:     Size  Location     Type
  7027 ;;  grs             4   58[COMRAM] unsigned long 
  7028 ;;  rem             4   51[COMRAM] unsigned long 
  7029 ;;  new_exp         2   56[COMRAM] int 
  7030 ;;  aexp            1   63[COMRAM] unsigned char 
  7031 ;;  bexp            1   62[COMRAM] unsigned char 
  7032 ;;  sign            1   55[COMRAM] unsigned char 
  7033 ;; Return value:  Size  Location     Type
  7034 ;;                  4   39[COMRAM] unsigned char 
  7035 ;; Registers used:
  7036 ;;		wreg, status,2, status,0
  7037 ;; Tracked objects:
  7038 ;;		On entry : 0/0
  7039 ;;		On exit  : 0/0
  7040 ;;		Unchanged: 0/0
  7041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7042 ;;      Params:         8       0       0       0       0       0       0       0       0
  7043 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7044 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7045 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7046 ;;Total ram usage:       25 bytes
  7047 ;; Hardware stack levels used:    1
  7048 ;; This function calls:
  7049 ;;		Nothing
  7050 ;; This function is called by:
  7051 ;;		_main
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text24
  7056  002328                     __ptext24:
  7057                           	callstack 0
  7058  002328                     ___fldiv:
  7059                           	callstack 30
  7060  002328  502B               	movf	(___fldiv@b+3)^0,w,c
  7061  00232A  0B80               	andlw	128
  7062  00232C  6E38               	movwf	___fldiv@sign^0,c
  7063  00232E  502B               	movf	(___fldiv@b+3)^0,w,c
  7064  002330  242B               	addwf	(___fldiv@b+3)^0,w,c
  7065  002332  6E3F               	movwf	___fldiv@bexp^0,c
  7066  002334  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7067  002336  EF9F  F011         	goto	u4191
  7068  00233A  EFA1  F011         	goto	u4190
  7069  00233E                     u4191:
  7070  00233E  EFA2  F011         	goto	l3876
  7071  002342                     u4190:
  7072  002342  803F               	bsf	___fldiv@bexp^0,0,c
  7073  002344                     l3876:
  7074  002344  503F               	movf	___fldiv@bexp^0,w,c
  7075  002346  B4D8               	btfsc	status,2,c
  7076  002348  EFA8  F011         	goto	u4201
  7077  00234C  EFAA  F011         	goto	u4200
  7078  002350                     u4201:
  7079  002350  EFBF  F011         	goto	l3886
  7080  002354                     u4200:
  7081  002354  283F               	incf	___fldiv@bexp^0,w,c
  7082  002356  A4D8               	btfss	status,2,c
  7083  002358  EFB0  F011         	goto	u4211
  7084  00235C  EFB2  F011         	goto	u4210
  7085  002360                     u4211:
  7086  002360  EFBA  F011         	goto	l3882
  7087  002364                     u4210:
  7088  002364  0E00               	movlw	0
  7089  002366  6E28               	movwf	___fldiv@b^0,c
  7090  002368  0E00               	movlw	0
  7091  00236A  6E29               	movwf	(___fldiv@b+1)^0,c
  7092  00236C  0E00               	movlw	0
  7093  00236E  6E2A               	movwf	(___fldiv@b+2)^0,c
  7094  002370  0E00               	movlw	0
  7095  002372  6E2B               	movwf	(___fldiv@b+3)^0,c
  7096  002374                     l3882:
  7097  002374  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7098  002376  0E00               	movlw	0
  7099  002378  6E2B               	movwf	(___fldiv@b+3)^0,c
  7100  00237A  EFC7  F011         	goto	l3888
  7101  00237E                     l3886:
  7102  00237E  0E00               	movlw	0
  7103  002380  6E28               	movwf	___fldiv@b^0,c
  7104  002382  0E00               	movlw	0
  7105  002384  6E29               	movwf	(___fldiv@b+1)^0,c
  7106  002386  0E00               	movlw	0
  7107  002388  6E2A               	movwf	(___fldiv@b+2)^0,c
  7108  00238A  0E00               	movlw	0
  7109  00238C  6E2B               	movwf	(___fldiv@b+3)^0,c
  7110  00238E                     l3888:
  7111  00238E  502F               	movf	(___fldiv@a+3)^0,w,c
  7112  002390  0B80               	andlw	128
  7113  002392  1A38               	xorwf	___fldiv@sign^0,f,c
  7114  002394  502F               	movf	(___fldiv@a+3)^0,w,c
  7115  002396  242F               	addwf	(___fldiv@a+3)^0,w,c
  7116  002398  6E40               	movwf	___fldiv@aexp^0,c
  7117  00239A  AE2E               	btfss	(___fldiv@a+2)^0,7,c
  7118  00239C  EFD2  F011         	goto	u4221
  7119  0023A0  EFD4  F011         	goto	u4220
  7120  0023A4                     u4221:
  7121  0023A4  EFD5  F011         	goto	l3896
  7122  0023A8                     u4220:
  7123  0023A8  8040               	bsf	___fldiv@aexp^0,0,c
  7124  0023AA                     l3896:
  7125  0023AA  5040               	movf	___fldiv@aexp^0,w,c
  7126  0023AC  B4D8               	btfsc	status,2,c
  7127  0023AE  EFDB  F011         	goto	u4231
  7128  0023B2  EFDD  F011         	goto	u4230
  7129  0023B6                     u4231:
  7130  0023B6  EFF2  F011         	goto	l3906
  7131  0023BA                     u4230:
  7132  0023BA  2840               	incf	___fldiv@aexp^0,w,c
  7133  0023BC  A4D8               	btfss	status,2,c
  7134  0023BE  EFE3  F011         	goto	u4241
  7135  0023C2  EFE5  F011         	goto	u4240
  7136  0023C6                     u4241:
  7137  0023C6  EFED  F011         	goto	l3902
  7138  0023CA                     u4240:
  7139  0023CA  0E00               	movlw	0
  7140  0023CC  6E2C               	movwf	___fldiv@a^0,c
  7141  0023CE  0E00               	movlw	0
  7142  0023D0  6E2D               	movwf	(___fldiv@a+1)^0,c
  7143  0023D2  0E00               	movlw	0
  7144  0023D4  6E2E               	movwf	(___fldiv@a+2)^0,c
  7145  0023D6  0E00               	movlw	0
  7146  0023D8  6E2F               	movwf	(___fldiv@a+3)^0,c
  7147  0023DA                     l3902:
  7148  0023DA  8E2E               	bsf	(___fldiv@a+2)^0,7,c
  7149  0023DC  0E00               	movlw	0
  7150  0023DE  6E2F               	movwf	(___fldiv@a+3)^0,c
  7151  0023E0  EFFA  F011         	goto	l3908
  7152  0023E4                     l3906:
  7153  0023E4  0E00               	movlw	0
  7154  0023E6  6E2C               	movwf	___fldiv@a^0,c
  7155  0023E8  0E00               	movlw	0
  7156  0023EA  6E2D               	movwf	(___fldiv@a+1)^0,c
  7157  0023EC  0E00               	movlw	0
  7158  0023EE  6E2E               	movwf	(___fldiv@a+2)^0,c
  7159  0023F0  0E00               	movlw	0
  7160  0023F2  6E2F               	movwf	(___fldiv@a+3)^0,c
  7161  0023F4                     l3908:
  7162  0023F4  502C               	movf	___fldiv@a^0,w,c
  7163  0023F6  102D               	iorwf	(___fldiv@a+1)^0,w,c
  7164  0023F8  102E               	iorwf	(___fldiv@a+2)^0,w,c
  7165  0023FA  102F               	iorwf	(___fldiv@a+3)^0,w,c
  7166  0023FC  A4D8               	btfss	status,2,c
  7167  0023FE  EF03  F012         	goto	u4251
  7168  002402  EF05  F012         	goto	u4250
  7169  002406                     u4251:
  7170  002406  EF1D  F012         	goto	l3920
  7171  00240A                     u4250:
  7172  00240A  0E00               	movlw	0
  7173  00240C  6E28               	movwf	___fldiv@b^0,c
  7174  00240E  0E00               	movlw	0
  7175  002410  6E29               	movwf	(___fldiv@b+1)^0,c
  7176  002412  0E00               	movlw	0
  7177  002414  6E2A               	movwf	(___fldiv@b+2)^0,c
  7178  002416  0E00               	movlw	0
  7179  002418  6E2B               	movwf	(___fldiv@b+3)^0,c
  7180  00241A  0E80               	movlw	128
  7181  00241C  122A               	iorwf	(___fldiv@b+2)^0,f,c
  7182  00241E  0E7F               	movlw	127
  7183  002420  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7184  002422                     l3914:
  7185  002422  5038               	movf	___fldiv@sign^0,w,c
  7186  002424  122B               	iorwf	(___fldiv@b+3)^0,f,c
  7187  002426  C028  F028         	movff	___fldiv@b,?___fldiv
  7188  00242A  C029  F029         	movff	___fldiv@b+1,?___fldiv+1
  7189  00242E  C02A  F02A         	movff	___fldiv@b+2,?___fldiv+2
  7190  002432  C02B  F02B         	movff	___fldiv@b+3,?___fldiv+3
  7191  002436  EF60  F013         	goto	l880
  7192  00243A                     l3920:
  7193  00243A  503F               	movf	___fldiv@bexp^0,w,c
  7194  00243C  A4D8               	btfss	status,2,c
  7195  00243E  EF23  F012         	goto	u4261
  7196  002442  EF25  F012         	goto	u4260
  7197  002446                     u4261:
  7198  002446  EF2F  F012         	goto	l3928
  7199  00244A                     u4260:
  7200  00244A  0E00               	movlw	0
  7201  00244C  6E28               	movwf	?___fldiv^0,c
  7202  00244E  0E00               	movlw	0
  7203  002450  6E29               	movwf	(?___fldiv+1)^0,c
  7204  002452  0E00               	movlw	0
  7205  002454  6E2A               	movwf	(?___fldiv+2)^0,c
  7206  002456  0E00               	movlw	0
  7207  002458  6E2B               	movwf	(?___fldiv+3)^0,c
  7208  00245A  EF60  F013         	goto	l880
  7209  00245E                     l3928:
  7210  00245E  5040               	movf	___fldiv@aexp^0,w,c
  7211  002460  C03F  F030         	movff	___fldiv@bexp,??___fldiv
  7212  002464  6A31               	clrf	(??___fldiv+1)^0,c
  7213  002466  5E30               	subwf	??___fldiv^0,f,c
  7214  002468  0E00               	movlw	0
  7215  00246A  5A31               	subwfb	(??___fldiv+1)^0,f,c
  7216  00246C  0E7F               	movlw	127
  7217  00246E  2430               	addwf	??___fldiv^0,w,c
  7218  002470  6E39               	movwf	___fldiv@new_exp^0,c
  7219  002472  0E00               	movlw	0
  7220  002474  2031               	addwfc	(??___fldiv+1)^0,w,c
  7221  002476  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7222  002478  C028  F034         	movff	___fldiv@b,___fldiv@rem
  7223  00247C  C029  F035         	movff	___fldiv@b+1,___fldiv@rem+1
  7224  002480  C02A  F036         	movff	___fldiv@b+2,___fldiv@rem+2
  7225  002484  C02B  F037         	movff	___fldiv@b+3,___fldiv@rem+3
  7226  002488  0E00               	movlw	0
  7227  00248A  6E28               	movwf	___fldiv@b^0,c
  7228  00248C  0E00               	movlw	0
  7229  00248E  6E29               	movwf	(___fldiv@b+1)^0,c
  7230  002490  0E00               	movlw	0
  7231  002492  6E2A               	movwf	(___fldiv@b+2)^0,c
  7232  002494  0E00               	movlw	0
  7233  002496  6E2B               	movwf	(___fldiv@b+3)^0,c
  7234  002498  0E00               	movlw	0
  7235  00249A  6E3B               	movwf	___fldiv@grs^0,c
  7236  00249C  0E00               	movlw	0
  7237  00249E  6E3C               	movwf	(___fldiv@grs+1)^0,c
  7238  0024A0  0E00               	movlw	0
  7239  0024A2  6E3D               	movwf	(___fldiv@grs+2)^0,c
  7240  0024A4  0E00               	movlw	0
  7241  0024A6  6E3E               	movwf	(___fldiv@grs+3)^0,c
  7242  0024A8  0E00               	movlw	0
  7243  0024AA  6E40               	movwf	___fldiv@aexp^0,c
  7244  0024AC  EF90  F012         	goto	l882
  7245  0024B0                     l3938:
  7246  0024B0  5040               	movf	___fldiv@aexp^0,w,c
  7247  0024B2  B4D8               	btfsc	status,2,c
  7248  0024B4  EF5E  F012         	goto	u4271
  7249  0024B8  EF60  F012         	goto	u4270
  7250  0024BC                     u4271:
  7251  0024BC  EF77  F012         	goto	l3946
  7252  0024C0                     u4270:
  7253  0024C0  90D8               	bcf	status,0,c
  7254  0024C2  3634               	rlcf	___fldiv@rem^0,f,c
  7255  0024C4  3635               	rlcf	(___fldiv@rem+1)^0,f,c
  7256  0024C6  3636               	rlcf	(___fldiv@rem+2)^0,f,c
  7257  0024C8  3637               	rlcf	(___fldiv@rem+3)^0,f,c
  7258  0024CA  90D8               	bcf	status,0,c
  7259  0024CC  3628               	rlcf	___fldiv@b^0,f,c
  7260  0024CE  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7261  0024D0  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7262  0024D2  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7263  0024D4  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7264  0024D6  EF6F  F012         	goto	u4281
  7265  0024DA  EF71  F012         	goto	u4280
  7266  0024DE                     u4281:
  7267  0024DE  EF72  F012         	goto	l885
  7268  0024E2                     u4280:
  7269  0024E2  8028               	bsf	___fldiv@b^0,0,c
  7270  0024E4                     l885:
  7271  0024E4  90D8               	bcf	status,0,c
  7272  0024E6  363B               	rlcf	___fldiv@grs^0,f,c
  7273  0024E8  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7274  0024EA  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7275  0024EC  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7276  0024EE                     l3946:
  7277  0024EE  502C               	movf	___fldiv@a^0,w,c
  7278  0024F0  5C34               	subwf	___fldiv@rem^0,w,c
  7279  0024F2  502D               	movf	(___fldiv@a+1)^0,w,c
  7280  0024F4  5835               	subwfb	(___fldiv@rem+1)^0,w,c
  7281  0024F6  502E               	movf	(___fldiv@a+2)^0,w,c
  7282  0024F8  5836               	subwfb	(___fldiv@rem+2)^0,w,c
  7283  0024FA  502F               	movf	(___fldiv@a+3)^0,w,c
  7284  0024FC  5837               	subwfb	(___fldiv@rem+3)^0,w,c
  7285  0024FE  A0D8               	btfss	status,0,c
  7286  002500  EF84  F012         	goto	u4291
  7287  002504  EF86  F012         	goto	u4290
  7288  002508                     u4291:
  7289  002508  EF8F  F012         	goto	l3952
  7290  00250C                     u4290:
  7291  00250C  8C3E               	bsf	(___fldiv@grs+3)^0,6,c
  7292  00250E  502C               	movf	___fldiv@a^0,w,c
  7293  002510  5E34               	subwf	___fldiv@rem^0,f,c
  7294  002512  502D               	movf	(___fldiv@a+1)^0,w,c
  7295  002514  5A35               	subwfb	(___fldiv@rem+1)^0,f,c
  7296  002516  502E               	movf	(___fldiv@a+2)^0,w,c
  7297  002518  5A36               	subwfb	(___fldiv@rem+2)^0,f,c
  7298  00251A  502F               	movf	(___fldiv@a+3)^0,w,c
  7299  00251C  5A37               	subwfb	(___fldiv@rem+3)^0,f,c
  7300  00251E                     l3952:
  7301  00251E  2A40               	incf	___fldiv@aexp^0,f,c
  7302  002520                     l882:
  7303  002520  0E19               	movlw	25
  7304  002522  6440               	cpfsgt	___fldiv@aexp^0,c
  7305  002524  EF96  F012         	goto	u4301
  7306  002528  EF98  F012         	goto	u4300
  7307  00252C                     u4301:
  7308  00252C  EF58  F012         	goto	l3938
  7309  002530                     u4300:
  7310  002530  5034               	movf	___fldiv@rem^0,w,c
  7311  002532  1035               	iorwf	(___fldiv@rem+1)^0,w,c
  7312  002534  1036               	iorwf	(___fldiv@rem+2)^0,w,c
  7313  002536  1037               	iorwf	(___fldiv@rem+3)^0,w,c
  7314  002538  B4D8               	btfsc	status,2,c
  7315  00253A  EFA1  F012         	goto	u4311
  7316  00253E  EFA3  F012         	goto	u4310
  7317  002542                     u4311:
  7318  002542  EFBB  F012         	goto	l3964
  7319  002546                     u4310:
  7320  002546  803B               	bsf	___fldiv@grs^0,0,c
  7321  002548  EFBB  F012         	goto	l3964
  7322  00254C                     l3958:
  7323  00254C  90D8               	bcf	status,0,c
  7324  00254E  3628               	rlcf	___fldiv@b^0,f,c
  7325  002550  3629               	rlcf	(___fldiv@b+1)^0,f,c
  7326  002552  362A               	rlcf	(___fldiv@b+2)^0,f,c
  7327  002554  362B               	rlcf	(___fldiv@b+3)^0,f,c
  7328  002556  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7329  002558  EFB0  F012         	goto	u4321
  7330  00255C  EFB2  F012         	goto	u4320
  7331  002560                     u4321:
  7332  002560  EFB3  F012         	goto	l891
  7333  002564                     u4320:
  7334  002564  8028               	bsf	___fldiv@b^0,0,c
  7335  002566                     l891:
  7336  002566  90D8               	bcf	status,0,c
  7337  002568  363B               	rlcf	___fldiv@grs^0,f,c
  7338  00256A  363C               	rlcf	(___fldiv@grs+1)^0,f,c
  7339  00256C  363D               	rlcf	(___fldiv@grs+2)^0,f,c
  7340  00256E  363E               	rlcf	(___fldiv@grs+3)^0,f,c
  7341  002570  0639               	decf	___fldiv@new_exp^0,f,c
  7342  002572  A0D8               	btfss	status,0,c
  7343  002574  063A               	decf	(___fldiv@new_exp+1)^0,f,c
  7344  002576                     l3964:
  7345  002576  AE2A               	btfss	(___fldiv@b+2)^0,7,c
  7346  002578  EFC0  F012         	goto	u4331
  7347  00257C  EFC2  F012         	goto	u4330
  7348  002580                     u4331:
  7349  002580  EFA6  F012         	goto	l3958
  7350  002584                     u4330:
  7351  002584  0E00               	movlw	0
  7352  002586  6E40               	movwf	___fldiv@aexp^0,c
  7353  002588  AE3E               	btfss	(___fldiv@grs+3)^0,7,c
  7354  00258A  EFC9  F012         	goto	u4341
  7355  00258E  EFCB  F012         	goto	u4340
  7356  002592                     u4341:
  7357  002592  EFEF  F012         	goto	l893
  7358  002596                     u4340:
  7359  002596  0EFF               	movlw	255
  7360  002598  143B               	andwf	___fldiv@grs^0,w,c
  7361  00259A  6E30               	movwf	??___fldiv^0,c
  7362  00259C  0EFF               	movlw	255
  7363  00259E  143C               	andwf	(___fldiv@grs+1)^0,w,c
  7364  0025A0  6E31               	movwf	(??___fldiv+1)^0,c
  7365  0025A2  0EFF               	movlw	255
  7366  0025A4  143D               	andwf	(___fldiv@grs+2)^0,w,c
  7367  0025A6  6E32               	movwf	(??___fldiv+2)^0,c
  7368  0025A8  0E7F               	movlw	127
  7369  0025AA  143E               	andwf	(___fldiv@grs+3)^0,w,c
  7370  0025AC  6E33               	movwf	(??___fldiv+3)^0,c
  7371  0025AE  5030               	movf	??___fldiv^0,w,c
  7372  0025B0  1031               	iorwf	(??___fldiv+1)^0,w,c
  7373  0025B2  1032               	iorwf	(??___fldiv+2)^0,w,c
  7374  0025B4  1033               	iorwf	(??___fldiv+3)^0,w,c
  7375  0025B6  B4D8               	btfsc	status,2,c
  7376  0025B8  EFE0  F012         	goto	u4351
  7377  0025BC  EFE2  F012         	goto	u4350
  7378  0025C0                     u4351:
  7379  0025C0  EFE6  F012         	goto	l894
  7380  0025C4                     u4350:
  7381  0025C4                     l3972:
  7382  0025C4  0E01               	movlw	1
  7383  0025C6  6E40               	movwf	___fldiv@aexp^0,c
  7384  0025C8  EFEF  F012         	goto	l893
  7385  0025CC                     l894:
  7386  0025CC  A028               	btfss	___fldiv@b^0,0,c
  7387  0025CE  EFEB  F012         	goto	u4361
  7388  0025D2  EFED  F012         	goto	u4360
  7389  0025D6                     u4361:
  7390  0025D6  EFEF  F012         	goto	l893
  7391  0025DA                     u4360:
  7392  0025DA  EFE2  F012         	goto	l3972
  7393  0025DE                     l893:
  7394  0025DE  5040               	movf	___fldiv@aexp^0,w,c
  7395  0025E0  B4D8               	btfsc	status,2,c
  7396  0025E2  EFF5  F012         	goto	u4371
  7397  0025E6  EFF7  F012         	goto	u4370
  7398  0025EA                     u4371:
  7399  0025EA  EF1B  F013         	goto	l3984
  7400  0025EE                     u4370:
  7401  0025EE  0E01               	movlw	1
  7402  0025F0  2628               	addwf	___fldiv@b^0,f,c
  7403  0025F2  0E00               	movlw	0
  7404  0025F4  2229               	addwfc	(___fldiv@b+1)^0,f,c
  7405  0025F6  222A               	addwfc	(___fldiv@b+2)^0,f,c
  7406  0025F8  222B               	addwfc	(___fldiv@b+3)^0,f,c
  7407  0025FA  A02B               	btfss	(___fldiv@b+3)^0,0,c
  7408  0025FC  EF02  F013         	goto	u4381
  7409  002600  EF04  F013         	goto	u4380
  7410  002604                     u4381:
  7411  002604  EF1B  F013         	goto	l3984
  7412  002608                     u4380:
  7413  002608  C028  F030         	movff	___fldiv@b,??___fldiv
  7414  00260C  C029  F031         	movff	___fldiv@b+1,??___fldiv+1
  7415  002610  C02A  F032         	movff	___fldiv@b+2,??___fldiv+2
  7416  002614  C02B  F033         	movff	___fldiv@b+3,??___fldiv+3
  7417  002618  3433               	rlcf	(??___fldiv+3)^0,w,c
  7418  00261A  3233               	rrcf	(??___fldiv+3)^0,f,c
  7419  00261C  3232               	rrcf	(??___fldiv+2)^0,f,c
  7420  00261E  3231               	rrcf	(??___fldiv+1)^0,f,c
  7421  002620  3230               	rrcf	??___fldiv^0,f,c
  7422  002622  C030  F028         	movff	??___fldiv,___fldiv@b
  7423  002626  C031  F029         	movff	??___fldiv+1,___fldiv@b+1
  7424  00262A  C032  F02A         	movff	??___fldiv+2,___fldiv@b+2
  7425  00262E  C033  F02B         	movff	??___fldiv+3,___fldiv@b+3
  7426  002632  4A39               	infsnz	___fldiv@new_exp^0,f,c
  7427  002634  2A3A               	incf	(___fldiv@new_exp+1)^0,f,c
  7428  002636                     l3984:
  7429  002636  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7430  002638  EF26  F013         	goto	u4391
  7431  00263C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7432  00263E  E108               	bnz	u4390
  7433  002640  2839               	incf	___fldiv@new_exp^0,w,c
  7434  002642  A0D8               	btfss	status,0,c
  7435  002644  EF26  F013         	goto	u4391
  7436  002648  EF28  F013         	goto	u4390
  7437  00264C                     u4391:
  7438  00264C  EF33  F013         	goto	l3988
  7439  002650                     u4390:
  7440  002650  0E00               	movlw	0
  7441  002652  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7442  002654  6839               	setf	___fldiv@new_exp^0,c
  7443  002656  0E00               	movlw	0
  7444  002658  6E28               	movwf	___fldiv@b^0,c
  7445  00265A  0E00               	movlw	0
  7446  00265C  6E29               	movwf	(___fldiv@b+1)^0,c
  7447  00265E  0E00               	movlw	0
  7448  002660  6E2A               	movwf	(___fldiv@b+2)^0,c
  7449  002662  0E00               	movlw	0
  7450  002664  6E2B               	movwf	(___fldiv@b+3)^0,c
  7451  002666                     l3988:
  7452  002666  BE3A               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7453  002668  EF40  F013         	goto	u4400
  7454  00266C  503A               	movf	(___fldiv@new_exp+1)^0,w,c
  7455  00266E  E106               	bnz	u4401
  7456  002670  0439               	decf	___fldiv@new_exp^0,w,c
  7457  002672  B0D8               	btfsc	status,0,c
  7458  002674  EF3E  F013         	goto	u4401
  7459  002678  EF40  F013         	goto	u4400
  7460  00267C                     u4401:
  7461  00267C  EF4E  F013         	goto	l3992
  7462  002680                     u4400:
  7463  002680  0E00               	movlw	0
  7464  002682  6E3A               	movwf	(___fldiv@new_exp+1)^0,c
  7465  002684  0E00               	movlw	0
  7466  002686  6E39               	movwf	___fldiv@new_exp^0,c
  7467  002688  0E00               	movlw	0
  7468  00268A  6E28               	movwf	___fldiv@b^0,c
  7469  00268C  0E00               	movlw	0
  7470  00268E  6E29               	movwf	(___fldiv@b+1)^0,c
  7471  002690  0E00               	movlw	0
  7472  002692  6E2A               	movwf	(___fldiv@b+2)^0,c
  7473  002694  0E00               	movlw	0
  7474  002696  6E2B               	movwf	(___fldiv@b+3)^0,c
  7475  002698  0E00               	movlw	0
  7476  00269A  6E38               	movwf	___fldiv@sign^0,c
  7477  00269C                     l3992:
  7478  00269C  C039  F03F         	movff	___fldiv@new_exp,___fldiv@bexp
  7479  0026A0  A03F               	btfss	___fldiv@bexp^0,0,c
  7480  0026A2  EF55  F013         	goto	u4411
  7481  0026A6  EF57  F013         	goto	u4410
  7482  0026AA                     u4411:
  7483  0026AA  EF5A  F013         	goto	l3998
  7484  0026AE                     u4410:
  7485  0026AE  8E2A               	bsf	(___fldiv@b+2)^0,7,c
  7486  0026B0  EF5B  F013         	goto	l4000
  7487  0026B4                     l3998:
  7488  0026B4  9E2A               	bcf	(___fldiv@b+2)^0,7,c
  7489  0026B6                     l4000:
  7490  0026B6  90D8               	bcf	status,0,c
  7491  0026B8  303F               	rrcf	___fldiv@bexp^0,w,c
  7492  0026BA  6E2B               	movwf	(___fldiv@b+3)^0,c
  7493  0026BC  EF11  F012         	goto	l3914
  7494  0026C0                     l880:
  7495  0026C0  0012               	return		;funcret
  7496  0026C2                     __end_of___fldiv:
  7497                           	callstack 0
  7498                           
  7499 ;; *************** function _Lcd_Out *****************
  7500 ;; Defined at:
  7501 ;;		line 96 in file "flexlcd.h"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  y               1    wreg     unsigned char 
  7504 ;;  x               1    3[COMRAM] unsigned char 
  7505 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  7506 ;;		 -> str(4), 
  7507 ;; Auto vars:     Size  Location     Type
  7508 ;;  y               1    6[COMRAM] unsigned char 
  7509 ;;  data            1    7[COMRAM] unsigned char 
  7510 ;; Return value:  Size  Location     Type
  7511 ;;                  1    wreg      void 
  7512 ;; Registers used:
  7513 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7514 ;; Tracked objects:
  7515 ;;		On entry : 0/0
  7516 ;;		On exit  : 0/0
  7517 ;;		Unchanged: 0/0
  7518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7519 ;;      Params:         3       0       0       0       0       0       0       0       0
  7520 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7522 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7523 ;;Total ram usage:        5 bytes
  7524 ;; Hardware stack levels used:    1
  7525 ;; Hardware stack levels required when called:    1
  7526 ;; This function calls:
  7527 ;;		_Lcd_Chr_CP
  7528 ;;		_Lcd_Cmd
  7529 ;; This function is called by:
  7530 ;;		_main
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text25
  7535  003726                     __ptext25:
  7536                           	callstack 0
  7537  003726                     _Lcd_Out:
  7538                           	callstack 29
  7539                           
  7540                           ;incstack = 0
  7541                           ;Lcd_Out@y stored from wreg
  7542  003726  6E07               	movwf	Lcd_Out@y^0,c
  7543  003728                     
  7544                           ;flexlcd.h: 98: unsigned char data;;flexlcd.h: 99: switch (y)
  7545  003728  EFAA  F01B         	goto	l3508
  7546  00372C                     l3498:
  7547  00372C  5004               	movf	Lcd_Out@x^0,w,c
  7548  00372E  0F80               	addlw	128
  7549  003730  6E08               	movwf	Lcd_Out@data^0,c
  7550  003732  EFBD  F01B         	goto	l3510
  7551  003736                     l3500:
  7552  003736  5004               	movf	Lcd_Out@x^0,w,c
  7553  003738  0FC0               	addlw	192
  7554  00373A  6E08               	movwf	Lcd_Out@data^0,c
  7555  00373C  EFBD  F01B         	goto	l3510
  7556  003740                     l3502:
  7557  003740  5004               	movf	Lcd_Out@x^0,w,c
  7558  003742  0F94               	addlw	148
  7559  003744  6E08               	movwf	Lcd_Out@data^0,c
  7560  003746  EFBD  F01B         	goto	l3510
  7561  00374A                     l3504:
  7562  00374A  5004               	movf	Lcd_Out@x^0,w,c
  7563  00374C  0FD4               	addlw	212
  7564  00374E  6E08               	movwf	Lcd_Out@data^0,c
  7565  003750  EFBD  F01B         	goto	l3510
  7566  003754                     l3508:
  7567  003754  5007               	movf	Lcd_Out@y^0,w,c
  7568                           
  7569                           ; Switch size 1, requested type "simple"
  7570                           ; Number of cases is 4, Range of values is 1 to 4
  7571                           ; switch strategies available:
  7572                           ; Name         Instructions Cycles
  7573                           ; simple_byte           13     7 (average)
  7574                           ;	Chosen strategy is simple_byte
  7575  003756  0A01               	xorlw	1	; case 1
  7576  003758  B4D8               	btfsc	status,2,c
  7577  00375A  EF96  F01B         	goto	l3498
  7578  00375E  0A03               	xorlw	3	; case 2
  7579  003760  B4D8               	btfsc	status,2,c
  7580  003762  EF9B  F01B         	goto	l3500
  7581  003766  0A01               	xorlw	1	; case 3
  7582  003768  B4D8               	btfsc	status,2,c
  7583  00376A  EFA0  F01B         	goto	l3502
  7584  00376E  0A07               	xorlw	7	; case 4
  7585  003770  B4D8               	btfsc	status,2,c
  7586  003772  EFA5  F01B         	goto	l3504
  7587  003776  EFBD  F01B         	goto	l3510
  7588  00377A                     l3510:
  7589                           
  7590                           ;flexlcd.h: 107: Lcd_Cmd(data);
  7591  00377A  5008               	movf	Lcd_Out@data^0,w,c
  7592  00377C  EC0F  F018         	call	_Lcd_Cmd
  7593                           
  7594                           ;flexlcd.h: 108: while(*buffer)
  7595  003780  EFCB  F01B         	goto	l3516
  7596  003784                     l3512:
  7597                           
  7598                           ;flexlcd.h: 109: {;flexlcd.h: 110: Lcd_Chr_CP(*buffer);
  7599  003784  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  7600  003788  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  7601  00378C  50DF               	movf	indf2,w,c
  7602  00378E  ECDD  F016         	call	_Lcd_Chr_CP
  7603  003792                     
  7604                           ;flexlcd.h: 111: buffer++;
  7605  003792  4A05               	infsnz	Lcd_Out@buffer^0,f,c
  7606  003794  2A06               	incf	(Lcd_Out@buffer+1)^0,f,c
  7607  003796                     l3516:
  7608  003796  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  7609  00379A  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  7610  00379E  50DF               	movf	indf2,w,c
  7611  0037A0  A4D8               	btfss	status,2,c
  7612  0037A2  EFD5  F01B         	goto	u3621
  7613  0037A6  EFD7  F01B         	goto	u3620
  7614  0037AA                     u3621:
  7615  0037AA  EFC2  F01B         	goto	l3512
  7616  0037AE                     u3620:
  7617  0037AE  0012               	return		;funcret
  7618  0037B0                     __end_of_Lcd_Out:
  7619                           	callstack 0
  7620                           
  7621 ;; *************** function _Lcd_Chr_CP *****************
  7622 ;; Defined at:
  7623 ;;		line 138 in file "flexlcd.h"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  data            1    wreg     unsigned char 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  data            1    2[COMRAM] unsigned char 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7637 ;;      Params:         0       0       0       0       0       0       0       0       0
  7638 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7639 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7640 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7641 ;;Total ram usage:        3 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		_Lcd_Out
  7647 ;;		_Lcd_Out2
  7648 ;; This function uses a non-reentrant model
  7649 ;;
  7650                           
  7651                           	psect	text26
  7652  002DBA                     __ptext26:
  7653                           	callstack 0
  7654  002DBA                     _Lcd_Chr_CP:
  7655                           	callstack 29
  7656                           
  7657                           ;incstack = 0
  7658                           ;Lcd_Chr_CP@data stored from wreg
  7659  002DBA  6E03               	movwf	Lcd_Chr_CP@data^0,c
  7660  002DBC                     
  7661                           ;flexlcd.h: 139: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
  7662  002DBC  9284               	bcf	132,1,c	;volatile
  7663  002DBE  8484               	bsf	132,2,c	;volatile
  7664  002DC0                     
  7665                           ;flexlcd.h: 140: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  7666  002DC0  6A01               	clrf	??_Lcd_Chr_CP^0,c
  7667  002DC2  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
  7668  002DC4  D001               	bra	u3015
  7669  002DC6  2A01               	incf	??_Lcd_Chr_CP^0,f,c
  7670  002DC8                     u3015:
  7671  002DC8  0E01               	movlw	1
  7672  002DCA  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7673  002DCC  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7674  002DCE  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7675  002DD0  5083               	movf	131,w,c	;volatile
  7676  002DD2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7677  002DD4  0B7F               	andlw	-129
  7678  002DD6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7679  002DD8  6E83               	movwf	131,c	;volatile
  7680  002DDA  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7681  002DDE  0E06               	movlw	6
  7682  002DE0  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7683  002DE2                     u3025:
  7684  002DE2  90D8               	bcf	status,0,c
  7685  002DE4  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7686  002DE6  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7687  002DE8  EFF1  F016         	goto	u3025
  7688  002DEC  0E01               	movlw	1
  7689  002DEE  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7690  002DF0  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7691  002DF2  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7692  002DF4  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7693  002DF6  5083               	movf	131,w,c	;volatile
  7694  002DF8  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7695  002DFA  0BBF               	andlw	-65
  7696  002DFC  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7697  002DFE  6E83               	movwf	131,c	;volatile
  7698                           
  7699                           ;flexlcd.h: 141: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  7700  002E00  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7701  002E04  0E05               	movlw	5
  7702  002E06  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  7703  002E08                     u3035:
  7704  002E08  90D8               	bcf	status,0,c
  7705  002E0A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7706  002E0C  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  7707  002E0E  EF04  F017         	goto	u3035
  7708  002E12  0E01               	movlw	1
  7709  002E14  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7710  002E16  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7711  002E18  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7712  002E1A  5083               	movf	131,w,c	;volatile
  7713  002E1C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7714  002E1E  0BDF               	andlw	-33
  7715  002E20  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7716  002E22  6E83               	movwf	131,c	;volatile
  7717  002E24  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7718  002E28  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7719  002E2A  0E0F               	movlw	15
  7720  002E2C  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7721  002E2E  0E01               	movlw	1
  7722  002E30  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7723  002E32  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7724  002E34  5083               	movf	131,w,c	;volatile
  7725  002E36  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7726  002E38  0BEF               	andlw	-17
  7727  002E3A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7728  002E3C  6E83               	movwf	131,c	;volatile
  7729  002E3E                     
  7730                           ;flexlcd.h: 142: _delay(10);
  7731  002E3E  0E03               	movlw	3
  7732  002E40                     u4437:
  7733  002E40  2EE8               	decfsz	wreg,f,c
  7734  002E42  D7FE               	bra	u4437
  7735  002E44  F000               	nop	
  7736  002E46                     
  7737                           ;flexlcd.h: 143: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  7738  002E46  8284               	bsf	132,1,c	;volatile
  7739  002E48  0E03               	movlw	3
  7740  002E4A                     u4447:
  7741  002E4A  2EE8               	decfsz	wreg,f,c
  7742  002E4C  D7FE               	bra	u4447
  7743  002E4E  F000               	nop	
  7744  002E50  9284               	bcf	132,1,c	;volatile
  7745                           
  7746                           ;flexlcd.h: 144: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  7747  002E52  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7748  002E56  90D8               	bcf	status,0,c
  7749  002E58  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7750  002E5A  90D8               	bcf	status,0,c
  7751  002E5C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7752  002E5E  90D8               	bcf	status,0,c
  7753  002E60  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7754  002E62  0E01               	movlw	1
  7755  002E64  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7756  002E66  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7757  002E68  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7758  002E6A  5083               	movf	131,w,c	;volatile
  7759  002E6C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7760  002E6E  0B7F               	andlw	-129
  7761  002E70  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7762  002E72  6E83               	movwf	131,c	;volatile
  7763  002E74  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7764  002E78  90D8               	bcf	status,0,c
  7765  002E7A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7766  002E7C  90D8               	bcf	status,0,c
  7767  002E7E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7768  002E80  0E01               	movlw	1
  7769  002E82  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7770  002E84  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7771  002E86  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7772  002E88  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7773  002E8A  5083               	movf	131,w,c	;volatile
  7774  002E8C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7775  002E8E  0BBF               	andlw	-65
  7776  002E90  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7777  002E92  6E83               	movwf	131,c	;volatile
  7778                           
  7779                           ;flexlcd.h: 145: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  7780  002E94  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7781  002E98  90D8               	bcf	status,0,c
  7782  002E9A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  7783  002E9C  0E01               	movlw	1
  7784  002E9E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7785  002EA0  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7786  002EA2  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  7787  002EA4  5083               	movf	131,w,c	;volatile
  7788  002EA6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7789  002EA8  0BDF               	andlw	-33
  7790  002EAA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7791  002EAC  6E83               	movwf	131,c	;volatile
  7792  002EAE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  7793  002EB2  0E01               	movlw	1
  7794  002EB4  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  7795  002EB6  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  7796  002EB8  5083               	movf	131,w,c	;volatile
  7797  002EBA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7798  002EBC  0BEF               	andlw	-17
  7799  002EBE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  7800  002EC0  6E83               	movwf	131,c	;volatile
  7801  002EC2                     
  7802                           ;flexlcd.h: 146: _delay(10);
  7803  002EC2  0E03               	movlw	3
  7804  002EC4                     u4457:
  7805  002EC4  2EE8               	decfsz	wreg,f,c
  7806  002EC6  D7FE               	bra	u4457
  7807  002EC8  F000               	nop	
  7808  002ECA                     
  7809                           ;flexlcd.h: 147: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  7810  002ECA  8284               	bsf	132,1,c	;volatile
  7811  002ECC  0E03               	movlw	3
  7812  002ECE                     u4467:
  7813  002ECE  2EE8               	decfsz	wreg,f,c
  7814  002ED0  D7FE               	bra	u4467
  7815  002ED2  F000               	nop	
  7816  002ED4  9284               	bcf	132,1,c	;volatile
  7817  002ED6                     
  7818                           ;flexlcd.h: 148: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  7819  002ED6  0E03               	movlw	3
  7820  002ED8                     u4477:
  7821  002ED8  2EE8               	decfsz	wreg,f,c
  7822  002EDA  D7FE               	bra	u4477
  7823  002EDC  F000               	nop	
  7824  002EDE  0E0F               	movlw	15
  7825  002EE0  6E01               	movwf	??_Lcd_Chr_CP^0,c
  7826  002EE2  0E48               	movlw	72
  7827  002EE4                     u4487:
  7828  002EE4  2EE8               	decfsz	wreg,f,c
  7829  002EE6  D7FE               	bra	u4487
  7830  002EE8  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  7831  002EEA  D7FC               	bra	u4487
  7832  002EEC  0012               	return		;funcret
  7833  002EEE                     __end_of_Lcd_Chr_CP:
  7834                           	callstack 0
  7835                           
  7836 ;; *************** function _Lcd_Init *****************
  7837 ;; Defined at:
  7838 ;;		line 54 in file "flexlcd.h"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;		None
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;  data            1    4[COMRAM] unsigned char 
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      void 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2, status,0, cstack
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7852 ;;      Params:         0       0       0       0       0       0       0       0       0
  7853 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7854 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7855 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7856 ;;Total ram usage:        2 bytes
  7857 ;; Hardware stack levels used:    1
  7858 ;; Hardware stack levels required when called:    1
  7859 ;; This function calls:
  7860 ;;		_Lcd_Cmd
  7861 ;; This function is called by:
  7862 ;;		_main
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text27
  7867  00314A                     __ptext27:
  7868                           	callstack 0
  7869  00314A                     _Lcd_Init:
  7870                           	callstack 29
  7871  00314A                     
  7872                           ;flexlcd.h: 55: unsigned char data;;flexlcd.h: 56: TRISDbits.TRISD7 = 0;
  7873  00314A  9E95               	bcf	149,7,c	;volatile
  7874                           
  7875                           ;flexlcd.h: 57: TRISDbits.TRISD6 = 0;
  7876  00314C  9C95               	bcf	149,6,c	;volatile
  7877                           
  7878                           ;flexlcd.h: 58: TRISDbits.TRISD5 = 0;
  7879  00314E  9A95               	bcf	149,5,c	;volatile
  7880                           
  7881                           ;flexlcd.h: 59: TRISDbits.TRISD4 = 0;
  7882  003150  9895               	bcf	149,4,c	;volatile
  7883                           
  7884                           ;flexlcd.h: 60: TRISEbits.TRISE2 = 0;
  7885  003152  9496               	bcf	150,2,c	;volatile
  7886                           
  7887                           ;flexlcd.h: 61: TRISEbits.TRISE1 = 0;
  7888  003154  9296               	bcf	150,1,c	;volatile
  7889                           
  7890                           ;flexlcd.h: 62: PORTDbits.RD7 = 0;
  7891  003156  9E83               	bcf	131,7,c	;volatile
  7892                           
  7893                           ;flexlcd.h: 63: PORTDbits.RD6 = 0;
  7894  003158  9C83               	bcf	131,6,c	;volatile
  7895                           
  7896                           ;flexlcd.h: 64: PORTDbits.RD5 = 0;
  7897  00315A  9A83               	bcf	131,5,c	;volatile
  7898                           
  7899                           ;flexlcd.h: 65: PORTDbits.RD4 = 0;
  7900  00315C  9883               	bcf	131,4,c	;volatile
  7901                           
  7902                           ;flexlcd.h: 66: PORTEbits.RE1 = 0;
  7903  00315E  9284               	bcf	132,1,c	;volatile
  7904                           
  7905                           ;flexlcd.h: 67: PORTEbits.RE2 = 0;
  7906  003160  9484               	bcf	132,2,c	;volatile
  7907  003162                     
  7908                           ;flexlcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7909  003162  0E0F               	movlw	15
  7910  003164  6E04               	movwf	??_Lcd_Init^0,c
  7911  003166  0E48               	movlw	72
  7912  003168                     u4497:
  7913  003168  2EE8               	decfsz	wreg,f,c
  7914  00316A  D7FE               	bra	u4497
  7915  00316C  2E04               	decfsz	??_Lcd_Init^0,f,c
  7916  00316E  D7FC               	bra	u4497
  7917                           
  7918                           ;flexlcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7919  003170  0E0F               	movlw	15
  7920  003172  6E04               	movwf	??_Lcd_Init^0,c
  7921  003174  0E48               	movlw	72
  7922  003176                     u4507:
  7923  003176  2EE8               	decfsz	wreg,f,c
  7924  003178  D7FE               	bra	u4507
  7925  00317A  2E04               	decfsz	??_Lcd_Init^0,f,c
  7926  00317C  D7FC               	bra	u4507
  7927                           
  7928                           ;flexlcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7929  00317E  0E0F               	movlw	15
  7930  003180  6E04               	movwf	??_Lcd_Init^0,c
  7931  003182  0E48               	movlw	72
  7932  003184                     u4517:
  7933  003184  2EE8               	decfsz	wreg,f,c
  7934  003186  D7FE               	bra	u4517
  7935  003188  2E04               	decfsz	??_Lcd_Init^0,f,c
  7936  00318A  D7FC               	bra	u4517
  7937                           
  7938                           ;flexlcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7939  00318C  0E0F               	movlw	15
  7940  00318E  6E04               	movwf	??_Lcd_Init^0,c
  7941  003190  0E48               	movlw	72
  7942  003192                     u4527:
  7943  003192  2EE8               	decfsz	wreg,f,c
  7944  003194  D7FE               	bra	u4527
  7945  003196  2E04               	decfsz	??_Lcd_Init^0,f,c
  7946  003198  D7FC               	bra	u4527
  7947                           
  7948                           ;flexlcd.h: 72: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7949  00319A  0E0F               	movlw	15
  7950  00319C  6E04               	movwf	??_Lcd_Init^0,c
  7951  00319E  0E48               	movlw	72
  7952  0031A0                     u4537:
  7953  0031A0  2EE8               	decfsz	wreg,f,c
  7954  0031A2  D7FE               	bra	u4537
  7955  0031A4  2E04               	decfsz	??_Lcd_Init^0,f,c
  7956  0031A6  D7FC               	bra	u4537
  7957                           
  7958                           ;flexlcd.h: 73: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  7959  0031A8  0E0F               	movlw	15
  7960  0031AA  6E04               	movwf	??_Lcd_Init^0,c
  7961  0031AC  0E48               	movlw	72
  7962  0031AE                     u4547:
  7963  0031AE  2EE8               	decfsz	wreg,f,c
  7964  0031B0  D7FE               	bra	u4547
  7965  0031B2  2E04               	decfsz	??_Lcd_Init^0,f,c
  7966  0031B4  D7FC               	bra	u4547
  7967  0031B6                     
  7968                           ;flexlcd.h: 74: for(data = 1; data < 4; data ++)
  7969  0031B6  0E01               	movlw	1
  7970  0031B8  6E05               	movwf	Lcd_Init@data^0,c
  7971  0031BA                     l53:
  7972                           
  7973                           ;flexlcd.h: 75: {;flexlcd.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  7974  0031BA  9E83               	bcf	131,7,c	;volatile
  7975  0031BC  9C83               	bcf	131,6,c	;volatile
  7976  0031BE  8A83               	bsf	131,5,c	;volatile
  7977  0031C0  8883               	bsf	131,4,c	;volatile
  7978  0031C2  9284               	bcf	132,1,c	;volatile
  7979                           
  7980                           ;flexlcd.h: 77: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
  7981  0031C4  9484               	bcf	132,2,c	;volatile
  7982  0031C6  9E83               	bcf	131,7,c	;volatile
  7983  0031C8  9C83               	bcf	131,6,c	;volatile
  7984  0031CA  8A83               	bsf	131,5,c	;volatile
  7985  0031CC  8883               	bsf	131,4,c	;volatile
  7986                           
  7987                           ;flexlcd.h: 78: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  7988  0031CE  8284               	bsf	132,1,c	;volatile
  7989  0031D0  9484               	bcf	132,2,c	;volatile
  7990  0031D2                     
  7991                           ;flexlcd.h: 79: _delay((unsigned long)((5)*(8000000/4000000.0)));
  7992  0031D2  0E03               	movlw	3
  7993  0031D4                     u4557:
  7994  0031D4  2EE8               	decfsz	wreg,f,c
  7995  0031D6  D7FE               	bra	u4557
  7996  0031D8  F000               	nop	
  7997  0031DA                     
  7998                           ;flexlcd.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           1; PORTEbits.RE1 = 0;
  7999  0031DA  9E83               	bcf	131,7,c	;volatile
  8000  0031DC  9C83               	bcf	131,6,c	;volatile
  8001  0031DE  8A83               	bsf	131,5,c	;volatile
  8002  0031E0  8883               	bsf	131,4,c	;volatile
  8003  0031E2  9284               	bcf	132,1,c	;volatile
  8004  0031E4                     
  8005                           ;flexlcd.h: 81: PORTEbits.RE2 = 0;
  8006  0031E4  9484               	bcf	132,2,c	;volatile
  8007                           
  8008                           ;flexlcd.h: 82: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  8009  0031E6  0E0F               	movlw	15
  8010  0031E8  6E04               	movwf	??_Lcd_Init^0,c
  8011  0031EA  0E48               	movlw	72
  8012  0031EC                     u4567:
  8013  0031EC  2EE8               	decfsz	wreg,f,c
  8014  0031EE  D7FE               	bra	u4567
  8015  0031F0  2E04               	decfsz	??_Lcd_Init^0,f,c
  8016  0031F2  D7FC               	bra	u4567
  8017  0031F4  2A05               	incf	Lcd_Init@data^0,f,c
  8018  0031F6  0E03               	movlw	3
  8019  0031F8  6405               	cpfsgt	Lcd_Init@data^0,c
  8020  0031FA  EF01  F019         	goto	u3611
  8021  0031FE  EF03  F019         	goto	u3610
  8022  003202                     u3611:
  8023  003202  EFDD  F018         	goto	l53
  8024  003206                     u3610:
  8025  003206                     
  8026                           ;flexlcd.h: 83: };flexlcd.h: 84: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  8027  003206  9E83               	bcf	131,7,c	;volatile
  8028  003208  9C83               	bcf	131,6,c	;volatile
  8029  00320A  8A83               	bsf	131,5,c	;volatile
  8030  00320C  9883               	bcf	131,4,c	;volatile
  8031  00320E  9284               	bcf	132,1,c	;volatile
  8032  003210  9484               	bcf	132,2,c	;volatile
  8033                           
  8034                           ;flexlcd.h: 85: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  8035  003212  9E83               	bcf	131,7,c	;volatile
  8036  003214  9C83               	bcf	131,6,c	;volatile
  8037  003216  8A83               	bsf	131,5,c	;volatile
  8038  003218  9883               	bcf	131,4,c	;volatile
  8039  00321A  8284               	bsf	132,1,c	;volatile
  8040  00321C  9484               	bcf	132,2,c	;volatile
  8041  00321E                     
  8042                           ;flexlcd.h: 86: _delay((unsigned long)((5)*(8000000/4000000.0)));
  8043  00321E  0E03               	movlw	3
  8044  003220                     u4577:
  8045  003220  2EE8               	decfsz	wreg,f,c
  8046  003222  D7FE               	bra	u4577
  8047  003224  F000               	nop	
  8048  003226                     
  8049                           ;flexlcd.h: 87: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  8050  003226  9E83               	bcf	131,7,c	;volatile
  8051  003228  9C83               	bcf	131,6,c	;volatile
  8052  00322A  8A83               	bsf	131,5,c	;volatile
  8053  00322C  9883               	bcf	131,4,c	;volatile
  8054  00322E  9284               	bcf	132,1,c	;volatile
  8055  003230  9484               	bcf	132,2,c	;volatile
  8056                           
  8057                           ;flexlcd.h: 88: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  8058  003232  0E0F               	movlw	15
  8059  003234  6E04               	movwf	??_Lcd_Init^0,c
  8060  003236  0E48               	movlw	72
  8061  003238                     u4587:
  8062  003238  2EE8               	decfsz	wreg,f,c
  8063  00323A  D7FE               	bra	u4587
  8064  00323C  2E04               	decfsz	??_Lcd_Init^0,f,c
  8065  00323E  D7FC               	bra	u4587
  8066  003240  0E28               	movlw	40
  8067  003242  EC0F  F018         	call	_Lcd_Cmd
  8068  003246  0E10               	movlw	16
  8069  003248  EC0F  F018         	call	_Lcd_Cmd
  8070  00324C  0E01               	movlw	1
  8071  00324E  EC0F  F018         	call	_Lcd_Cmd
  8072  003252  0E0F               	movlw	15
  8073  003254  EC0F  F018         	call	_Lcd_Cmd
  8074  003258  0012               	return		;funcret
  8075  00325A                     __end_of_Lcd_Init:
  8076                           	callstack 0
  8077                           
  8078 ;; *************** function _Lcd_Cmd *****************
  8079 ;; Defined at:
  8080 ;;		line 152 in file "flexlcd.h"
  8081 ;; Parameters:    Size  Location     Type
  8082 ;;  data            1    wreg     unsigned char 
  8083 ;; Auto vars:     Size  Location     Type
  8084 ;;  data            1    2[COMRAM] unsigned char 
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      void 
  8087 ;; Registers used:
  8088 ;;		wreg, status,2, status,0
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8094 ;;      Params:         0       0       0       0       0       0       0       0       0
  8095 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8096 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8097 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8098 ;;Total ram usage:        3 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; This function calls:
  8101 ;;		Nothing
  8102 ;; This function is called by:
  8103 ;;		_Lcd_Init
  8104 ;;		_Lcd_Out
  8105 ;;		_main
  8106 ;;		_Lcd_Out2
  8107 ;; This function uses a non-reentrant model
  8108 ;;
  8109                           
  8110                           	psect	text28
  8111  00301E                     __ptext28:
  8112                           	callstack 0
  8113  00301E                     _Lcd_Cmd:
  8114                           	callstack 29
  8115                           
  8116                           ;incstack = 0
  8117                           ;Lcd_Cmd@data stored from wreg
  8118  00301E  6E03               	movwf	Lcd_Cmd@data^0,c
  8119  003020                     
  8120                           ;flexlcd.h: 153: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  8121  003020  9284               	bcf	132,1,c	;volatile
  8122  003022  9484               	bcf	132,2,c	;volatile
  8123  003024                     
  8124                           ;flexlcd.h: 154: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  8125  003024  6A01               	clrf	??_Lcd_Cmd^0,c
  8126  003026  AE03               	btfss	Lcd_Cmd@data^0,7,c
  8127  003028  D001               	bra	u2985
  8128  00302A  2A01               	incf	??_Lcd_Cmd^0,f,c
  8129  00302C                     u2985:
  8130  00302C  0E01               	movlw	1
  8131  00302E  1601               	andwf	??_Lcd_Cmd^0,f,c
  8132  003030  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8133  003032  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8134  003034  5083               	movf	131,w,c	;volatile
  8135  003036  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8136  003038  0B7F               	andlw	-129
  8137  00303A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8138  00303C  6E83               	movwf	131,c	;volatile
  8139  00303E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8140  003042  0E06               	movlw	6
  8141  003044  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  8142  003046                     u2995:
  8143  003046  90D8               	bcf	status,0,c
  8144  003048  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8145  00304A  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  8146  00304C  EF23  F018         	goto	u2995
  8147  003050  0E01               	movlw	1
  8148  003052  1601               	andwf	??_Lcd_Cmd^0,f,c
  8149  003054  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8150  003056  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8151  003058  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8152  00305A  5083               	movf	131,w,c	;volatile
  8153  00305C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8154  00305E  0BBF               	andlw	-65
  8155  003060  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8156  003062  6E83               	movwf	131,c	;volatile
  8157                           
  8158                           ;flexlcd.h: 155: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  8159  003064  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8160  003068  0E05               	movlw	5
  8161  00306A  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  8162  00306C                     u3005:
  8163  00306C  90D8               	bcf	status,0,c
  8164  00306E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8165  003070  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  8166  003072  EF36  F018         	goto	u3005
  8167  003076  0E01               	movlw	1
  8168  003078  1601               	andwf	??_Lcd_Cmd^0,f,c
  8169  00307A  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8170  00307C  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8171  00307E  5083               	movf	131,w,c	;volatile
  8172  003080  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8173  003082  0BDF               	andlw	-33
  8174  003084  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8175  003086  6E83               	movwf	131,c	;volatile
  8176  003088  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8177  00308C  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8178  00308E  0E0F               	movlw	15
  8179  003090  1601               	andwf	??_Lcd_Cmd^0,f,c
  8180  003092  0E01               	movlw	1
  8181  003094  1601               	andwf	??_Lcd_Cmd^0,f,c
  8182  003096  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8183  003098  5083               	movf	131,w,c	;volatile
  8184  00309A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8185  00309C  0BEF               	andlw	-17
  8186  00309E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8187  0030A0  6E83               	movwf	131,c	;volatile
  8188  0030A2                     
  8189                           ;flexlcd.h: 156: _delay(10);
  8190  0030A2  0E03               	movlw	3
  8191  0030A4                     u4597:
  8192  0030A4  2EE8               	decfsz	wreg,f,c
  8193  0030A6  D7FE               	bra	u4597
  8194  0030A8  F000               	nop	
  8195  0030AA                     
  8196                           ;flexlcd.h: 157: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  8197  0030AA  8284               	bsf	132,1,c	;volatile
  8198  0030AC  0E03               	movlw	3
  8199  0030AE                     u4607:
  8200  0030AE  2EE8               	decfsz	wreg,f,c
  8201  0030B0  D7FE               	bra	u4607
  8202  0030B2  F000               	nop	
  8203  0030B4  9284               	bcf	132,1,c	;volatile
  8204                           
  8205                           ;flexlcd.h: 158: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  8206  0030B6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8207  0030BA  90D8               	bcf	status,0,c
  8208  0030BC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8209  0030BE  90D8               	bcf	status,0,c
  8210  0030C0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8211  0030C2  90D8               	bcf	status,0,c
  8212  0030C4  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8213  0030C6  0E01               	movlw	1
  8214  0030C8  1601               	andwf	??_Lcd_Cmd^0,f,c
  8215  0030CA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8216  0030CC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8217  0030CE  5083               	movf	131,w,c	;volatile
  8218  0030D0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8219  0030D2  0B7F               	andlw	-129
  8220  0030D4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8221  0030D6  6E83               	movwf	131,c	;volatile
  8222  0030D8  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8223  0030DC  90D8               	bcf	status,0,c
  8224  0030DE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8225  0030E0  90D8               	bcf	status,0,c
  8226  0030E2  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8227  0030E4  0E01               	movlw	1
  8228  0030E6  1601               	andwf	??_Lcd_Cmd^0,f,c
  8229  0030E8  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8230  0030EA  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8231  0030EC  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8232  0030EE  5083               	movf	131,w,c	;volatile
  8233  0030F0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8234  0030F2  0BBF               	andlw	-65
  8235  0030F4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8236  0030F6  6E83               	movwf	131,c	;volatile
  8237                           
  8238                           ;flexlcd.h: 159: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  8239  0030F8  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8240  0030FC  90D8               	bcf	status,0,c
  8241  0030FE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  8242  003100  0E01               	movlw	1
  8243  003102  1601               	andwf	??_Lcd_Cmd^0,f,c
  8244  003104  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8245  003106  4601               	rlncf	??_Lcd_Cmd^0,f,c
  8246  003108  5083               	movf	131,w,c	;volatile
  8247  00310A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8248  00310C  0BDF               	andlw	-33
  8249  00310E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8250  003110  6E83               	movwf	131,c	;volatile
  8251  003112  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  8252  003116  0E01               	movlw	1
  8253  003118  1601               	andwf	??_Lcd_Cmd^0,f,c
  8254  00311A  3A01               	swapf	??_Lcd_Cmd^0,f,c
  8255  00311C  5083               	movf	131,w,c	;volatile
  8256  00311E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8257  003120  0BEF               	andlw	-17
  8258  003122  1801               	xorwf	??_Lcd_Cmd^0,w,c
  8259  003124  6E83               	movwf	131,c	;volatile
  8260  003126                     
  8261                           ;flexlcd.h: 160: _delay(10);
  8262  003126  0E03               	movlw	3
  8263  003128                     u4617:
  8264  003128  2EE8               	decfsz	wreg,f,c
  8265  00312A  D7FE               	bra	u4617
  8266  00312C  F000               	nop	
  8267  00312E                     
  8268                           ;flexlcd.h: 161: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  8269  00312E  8284               	bsf	132,1,c	;volatile
  8270  003130  0E03               	movlw	3
  8271  003132                     u4627:
  8272  003132  2EE8               	decfsz	wreg,f,c
  8273  003134  D7FE               	bra	u4627
  8274  003136  F000               	nop	
  8275  003138  9284               	bcf	132,1,c	;volatile
  8276  00313A                     
  8277                           ;flexlcd.h: 162: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  8278  00313A  0E0F               	movlw	15
  8279  00313C  6E01               	movwf	??_Lcd_Cmd^0,c
  8280  00313E  0E48               	movlw	72
  8281  003140                     u4637:
  8282  003140  2EE8               	decfsz	wreg,f,c
  8283  003142  D7FE               	bra	u4637
  8284  003144  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  8285  003146  D7FC               	bra	u4637
  8286  003148  0012               	return		;funcret
  8287  00314A                     __end_of_Lcd_Cmd:
  8288                           	callstack 0
  8289                           
  8290                           	psect	rparam
  8291  0000                     
  8292                           	psect	idloc
  8293                           
  8294                           ;Config register IDLOC0 @ 0x200000
  8295                           ;	unspecified, using default values
  8296  200000                     	org	2097152
  8297  200000  FF                 	db	255
  8298                           
  8299                           ;Config register IDLOC1 @ 0x200001
  8300                           ;	unspecified, using default values
  8301  200001                     	org	2097153
  8302  200001  FF                 	db	255
  8303                           
  8304                           ;Config register IDLOC2 @ 0x200002
  8305                           ;	unspecified, using default values
  8306  200002                     	org	2097154
  8307  200002  FF                 	db	255
  8308                           
  8309                           ;Config register IDLOC3 @ 0x200003
  8310                           ;	unspecified, using default values
  8311  200003                     	org	2097155
  8312  200003  FF                 	db	255
  8313                           
  8314                           ;Config register IDLOC4 @ 0x200004
  8315                           ;	unspecified, using default values
  8316  200004                     	org	2097156
  8317  200004  FF                 	db	255
  8318                           
  8319                           ;Config register IDLOC5 @ 0x200005
  8320                           ;	unspecified, using default values
  8321  200005                     	org	2097157
  8322  200005  FF                 	db	255
  8323                           
  8324                           ;Config register IDLOC6 @ 0x200006
  8325                           ;	unspecified, using default values
  8326  200006                     	org	2097158
  8327  200006  FF                 	db	255
  8328                           
  8329                           ;Config register IDLOC7 @ 0x200007
  8330                           ;	unspecified, using default values
  8331  200007                     	org	2097159
  8332  200007  FF                 	db	255
  8333                           
  8334                           	psect	config
  8335                           
  8336                           ;Config register CONFIG1L @ 0x300000
  8337                           ;	PLL Prescaler Selection bits
  8338                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8339                           ;	System Clock Postscaler Selection bits
  8340                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8341                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8342                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8343  300000                     	org	3145728
  8344  300000  00                 	db	0
  8345                           
  8346                           ;Config register CONFIG1H @ 0x300001
  8347                           ;	Oscillator Selection bits
  8348                           ;	FOSC = HS, HS oscillator (HS)
  8349                           ;	Fail-Safe Clock Monitor Enable bit
  8350                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8351                           ;	Internal/External Oscillator Switchover bit
  8352                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8353  300001                     	org	3145729
  8354  300001  0C                 	db	12
  8355                           
  8356                           ;Config register CONFIG2L @ 0x300002
  8357                           ;	Power-up Timer Enable bit
  8358                           ;	PWRT = OFF, PWRT disabled
  8359                           ;	Brown-out Reset Enable bits
  8360                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8361                           ;	Brown-out Reset Voltage bits
  8362                           ;	BORV = 3, Minimum setting 2.05V
  8363                           ;	USB Voltage Regulator Enable bit
  8364                           ;	VREGEN = OFF, USB voltage regulator disabled
  8365  300002                     	org	3145730
  8366  300002  1F                 	db	31
  8367                           
  8368                           ;Config register CONFIG2H @ 0x300003
  8369                           ;	Watchdog Timer Enable bit
  8370                           ;	WDT = ON, WDT enabled
  8371                           ;	Watchdog Timer Postscale Select bits
  8372                           ;	WDTPS = 32768, 1:32768
  8373  300003                     	org	3145731
  8374  300003  1F                 	db	31
  8375                           
  8376                           ; Padding undefined space
  8377  300004                     	org	3145732
  8378  300004  FF                 	db	255
  8379                           
  8380                           ;Config register CONFIG3H @ 0x300005
  8381                           ;	CCP2 MUX bit
  8382                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8383                           ;	PORTB A/D Enable bit
  8384                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8385                           ;	Low-Power Timer 1 Oscillator Enable bit
  8386                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8387                           ;	MCLR Pin Enable bit
  8388                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8389  300005                     	org	3145733
  8390  300005  81                 	db	129
  8391                           
  8392                           ;Config register CONFIG4L @ 0x300006
  8393                           ;	Stack Full/Underflow Reset Enable bit
  8394                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8395                           ;	Single-Supply ICSP Enable bit
  8396                           ;	LVP = ON, Single-Supply ICSP enabled
  8397                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8398                           ;	ICPRT = OFF, ICPORT disabled
  8399                           ;	Extended Instruction Set Enable bit
  8400                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8401                           ;	Background Debugger Enable bit
  8402                           ;	DEBUG = 0x1, unprogrammed default
  8403  300006                     	org	3145734
  8404  300006  85                 	db	133
  8405                           
  8406                           ; Padding undefined space
  8407  300007                     	org	3145735
  8408  300007  FF                 	db	255
  8409                           
  8410                           ;Config register CONFIG5L @ 0x300008
  8411                           ;	Code Protection bit
  8412                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8413                           ;	Code Protection bit
  8414                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8415                           ;	Code Protection bit
  8416                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8417                           ;	Code Protection bit
  8418                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8419  300008                     	org	3145736
  8420  300008  0F                 	db	15
  8421                           
  8422                           ;Config register CONFIG5H @ 0x300009
  8423                           ;	Boot Block Code Protection bit
  8424                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8425                           ;	Data EEPROM Code Protection bit
  8426                           ;	CPD = OFF, Data EEPROM is not code-protected
  8427  300009                     	org	3145737
  8428  300009  C0                 	db	192
  8429                           
  8430                           ;Config register CONFIG6L @ 0x30000A
  8431                           ;	Write Protection bit
  8432                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8433                           ;	Write Protection bit
  8434                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8435                           ;	Write Protection bit
  8436                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8437                           ;	Write Protection bit
  8438                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8439  30000A                     	org	3145738
  8440  30000A  0F                 	db	15
  8441                           
  8442                           ;Config register CONFIG6H @ 0x30000B
  8443                           ;	Configuration Register Write Protection bit
  8444                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8445                           ;	Boot Block Write Protection bit
  8446                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8447                           ;	Data EEPROM Write Protection bit
  8448                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8449  30000B                     	org	3145739
  8450  30000B  E0                 	db	224
  8451                           
  8452                           ;Config register CONFIG7L @ 0x30000C
  8453                           ;	Table Read Protection bit
  8454                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8455                           ;	Table Read Protection bit
  8456                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8457                           ;	Table Read Protection bit
  8458                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8459                           ;	Table Read Protection bit
  8460                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8461  30000C                     	org	3145740
  8462  30000C  0F                 	db	15
  8463                           
  8464                           ;Config register CONFIG7H @ 0x30000D
  8465                           ;	Boot Block Table Read Protection bit
  8466                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8467  30000D                     	org	3145741
  8468  30000D  40                 	db	64
  8469                           tosu	equ	0xFFF
  8470                           tosh	equ	0xFFE
  8471                           tosl	equ	0xFFD
  8472                           stkptr	equ	0xFFC
  8473                           pclatu	equ	0xFFB
  8474                           pclath	equ	0xFFA
  8475                           pcl	equ	0xFF9
  8476                           tblptru	equ	0xFF8
  8477                           tblptrh	equ	0xFF7
  8478                           tblptrl	equ	0xFF6
  8479                           tablat	equ	0xFF5
  8480                           prodh	equ	0xFF4
  8481                           prodl	equ	0xFF3
  8482                           indf0	equ	0xFEF
  8483                           postinc0	equ	0xFEE
  8484                           postdec0	equ	0xFED
  8485                           preinc0	equ	0xFEC
  8486                           plusw0	equ	0xFEB
  8487                           fsr0h	equ	0xFEA
  8488                           fsr0l	equ	0xFE9
  8489                           wreg	equ	0xFE8
  8490                           indf1	equ	0xFE7
  8491                           postinc1	equ	0xFE6
  8492                           postdec1	equ	0xFE5
  8493                           preinc1	equ	0xFE4
  8494                           plusw1	equ	0xFE3
  8495                           fsr1h	equ	0xFE2
  8496                           fsr1l	equ	0xFE1
  8497                           bsr	equ	0xFE0
  8498                           indf2	equ	0xFDF
  8499                           postinc2	equ	0xFDE
  8500                           postdec2	equ	0xFDD
  8501                           preinc2	equ	0xFDC
  8502                           plusw2	equ	0xFDB
  8503                           fsr2h	equ	0xFDA
  8504                           fsr2l	equ	0xFD9
  8505                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    144
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     88      92
    BANK0           160     27      35
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_2(CODE[18]), STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 4
		 -> str(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 4
		 -> str(BANK0[4]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->___awdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   39474
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                            ___fldiv
                            ___flmul
                           ___xxtofl
                        _adc_amostra
                           _adc_init
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   32380
                                             76 COMRAM    12     4      8
                                              0 BANK0     27    27      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    6887
                                             39 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1208
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1364
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    6534
                                             39 COMRAM    13     9      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4    1207
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4    1210
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3872
                                             14 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                              0 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     615
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     457
                                             48 COMRAM    10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2737
                                             68 COMRAM     8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             16     8      8    2414
                                             52 COMRAM    16     8      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     638
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_amostra                                          7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             39 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     837
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _adc_amostra
   _adc_init
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      23       5       21.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     58      5C       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7F      20        0.0%
DATA                 0      0      7F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Nov 20 14:43:04 2020

           ___fldiv@aexp 0040             ___fldiv@bexp 003F             ___fldiv@sign 0038  
                     l53 31BA                       l54 3206                       l55 3258  
                     l84 2EEC                       l68 37AE                       l87 3148  
           ___awdiv@sign 000C      ___wmul@multiplicand 0003     __size_of_adc_amostra 007C  
                    l104 2F38                      l130 3876                      l122 3A8C  
                    l133 38B2                      l310 3724                      l127 3874  
                    l303 3714                      l163 2326                      l156 2962  
                    l236 1102                      l520 35D6                      l273 1630  
                    l530 2DB8                      l507 3526                      l276 3A60  
                    l641 2BB2                      l554 341C                      l642 2BE4  
                    l555 3462                      l539 2DA8                      l548 3680  
                    l725 3836                      l582 335E                      l718 3826  
                    l806 398A                      l559 3A08                      l639 2C6C  
                    l648 2C5C                      l912 1BB6                      l921 1E24  
                    l826 1820                      l922 1E12                      l843 193A  
                    l835 1AF0                      l827 180E                      l852 1A0A  
                    l828 17D4                      l916 1F1A                      l853 19F8  
                    l919 1DAC                      l880 26C0                      l960 2A52  
                    l953 29BA                      l929 1EDC                      l882 2520  
                    l891 2566                      l868 39D0                      l956 2B16  
                    l796 3926                      l893 25DE                      l885 24E4  
                    l789 391E                      l894 25CC                      l974 3A3A  
                    l967 2AAE                      l799 3982                      _key 005B  
                    _str 007F             ___awmod@sign 0006                      wreg 000FE8  
           ___flmul@aexp 0020             ___flmul@bexp 0021             ___flmul@sign 001B  
           ___flmul@temp 0026             ___flmul@prod 0022             ___fltol@exp1 003A  
                   l3000 3908                     l3002 3910                     l3010 393A  
                   l3004 3912                     l3020 3976                     l3012 3942  
                   l3100 2068                     l3030 30AA                     l3006 3918  
                   l3022 397C                     l3014 394A                     l3110 2140  
                   l3040 3130                     l3032 30AC                     l3024 3020  
                   l4000 26B6                     l3200 2C98                     l3016 3958  
                   l3008 3928                     l3104 2100                     l3042 3138  
                   l3034 30B4                     l3026 3024                     l3050 2E3E  
                   l3210 2CC4                     l3018 396E                     l3130 3A20  
                   l3122 22FE                     l3044 313A                     l3036 3126  
                   l3028 30A2                     l3060 2ECA                     l3052 2E46  
                   l3300 367E                     l3220 2CF4                     l3212 2CD6  
                   l3140 2B3C                     l3132 3A30                     l3116 2252  
                   l3108 212C                     l3038 312E                     l3062 2ECC  
                   l3054 2E48                     l3046 2DBC                     l3310 33CC  
                   l3230 2D38                     l3222 2CFE                     l3214 2CE6  
                   l3206 2CB2                     l3150 2B78                     l3070 26C4  
                   l3134 3A34                     l3126 3A0C                     l3118 2266  
                   l4030 2EEE                     l3064 2ED4                     l3056 2E50  
                   l3048 2DC0                     l3320 345A                     l3312 33DC  
                   l3304 3360                     l2600 16B8                     l3400 29CA  
                   l3240 2D64                     l3232 2D3E                     l3224 2D1C  
                   l3216 2CEA                     l3208 2CB4                     l3160 2BA8  
                   l3152 2B7A                     l3144 2B50                     l3080 283E  
                   l3072 26D4                     l3128 3A10                     l4040 2F3A  
                   l4032 2EF2                     l3066 2ED6                     l3058 2EC2  
                   l3322 3460                     l3314 33EA                     l3306 338E  
                   l3330 39F8                     l2610 16F8                     l2602 16C6  
                   l3410 2A08                     l3402 29E0                     l3250 2D8C  
                   l3242 2D6E                     l3234 2D4C                     l3226 2D2C  
                   l3218 2CF0                     l3170 2BEC                     l3162 2BAE  
                   l3154 2B88                     l3138 2B18                     l3090 1F2C  
                   l4050 3004                     l4042 2F48                     l4034 2F2A  
                   l3068 2EDE                     l3500 3736                     l3316 33FC  
                   l3308 339E                     l2700 18D4                     l2620 1732  
                   l2612 16FA                     l2604 16C8                     l3340 3284  
                   l3260 3682                     l3420 2A90                     l3412 2A3A  
                   l3252 2D98                     l3244 2D78                     l3228 2D2E  
                   l3180 2C18                     l3172 2BF2                     l3164 2BBC  
                   l3156 2B94                     l3084 2916                     l3092 1F42  
                   l4044 2FB2                     l4036 2F2E                     l3502 3740  
                   l3510 377A                     l3318 340A                     l3326 39D2  
                   l2710 1950                     l2702 1908                     l2630 1746  
                   l2622 1736                     l2606 16D8                     l2614 1702  
                   l3350 32D2                     l3342 32AE                     l3334 325A  
                   l3270 36CA                     l3262 3692                     l3254 3A3C  
                   l3430 2AE6                     l3422 2A9E                     l3414 2A3C  
                   l3406 29F4                     l3190 2C40                     l3182 2C22  
                   l3174 2C00                     l3166 2BD6                     l3158 2BA4  
                   l3078 282E                     l4046 2FCE                     l4038 2F32  
                   l3440 314A                     l3512 3784                     l3504 374A  
                   l3520 383A                     l3328 39E8                     l2720 198C  
                   l2712 1960                     l2704 190A                     l2640 175A  
                   l2632 174A                     l2624 173A                     l2616 1712  
                   l2608 16E8                     l3360 32FE                     l3344 32B0  
                   l3336 3270                     l3280 370E                     l3272 36D4  
                   l3264 36A8                     l3256 3A58                     l3432 2AF6  
                   l3424 2ABC                     l3416 2A48                     l3408 29FC  
                   l3192 2C4C                     l3184 2C2C                     l3168 2BE2  
                   l2800 1B70                     l3088 1F1E                     l3600 0AE8  
                   l4048 2FE0                     l3450 31D2                     l3442 3162  
                   l3514 3792                     l3522 383E                     l3530 3856  
                   l3290 3606                     l2730 19B8                     l2722 198E  
                   l2706 191A                     l2650 176E                     l2642 175E  
                   l2634 174E                     l2626 173E                     l2618 1724  
                   l3282 398C                     l3370 332E                     l3346 32C0  
                   l3274 36F2                     l3266 36B0                     l3434 2B04  
                   l3426 2ABE                     l3418 2A84                     l3194 2C6E  
                   l2810 1BC6                     l2802 1B80                     l3098 2054  
                   l3610 0B5C                     l3602 0B0C                     l3460 31E2  
                   l3452 31DA                     l3444 31B6                     l3516 3796  
                   l3508 3754                     l3532 3884                     l3524 3846  
                   l3292 3616                     l2740 19F0                     l2724 199C  
                   l2716 1974                     l2732 19BA                     l2708 192A  
                   l2660 17CC                     l2644 1762                     l2636 1752  
                   l2628 1742                     l2652 1772                     l2580 164E  
                   l3284 399C                     l3372 333E                     l3356 32EA  
                   l3348 32C4                     l3276 3702                     l3268 36BC  
                   l3380 37C6                     l3436 2B06                     l3428 2AC2  
                   l3196 2C84                     l2900 1F06                     l2820 1C00  
                   l2812 1BD6                     l2804 1B90                     l3700 0FA2  
                   l3620 0BB0                     l3612 0B62                     l3604 0B12  
                   l3540 08D0                     l3470 3228                     l3462 31E4  
                   l3454 31DC                     l3526 384E                     l3518 3A80  
                   l3294 3644                     l2750 1A6E                     l2726 19A4  
                   l2718 197E                     l2734 19C8                     l2670 1802  
                   l2662 17E2                     l2654 1776                     l2646 1766  
                   l2638 1756                     l2582 165E                     l2590 1688  
                   l2574 1632                     l3374 334E                     l3366 3312  
                   l3358 32F4                     l3278 3704                     l3390 3816  
                   l3382 37CE                     l2902 1F0A                     l2830 1C52  
                   l2822 1C16                     l2806 1BA0                     l2910 3476  
                   l3710 0FF0                     l3702 0FAE                     l3630 0C6C  
                   l3622 0BC8                     l3614 0B7E                     l3606 0B1A  
                   l3550 08FE                     l3542 08DC                     l3480 3240  
                   l3472 322A                     l3464 31F4                     l3456 31DE  
                   l3296 3654                     l3288 35D8                     l2760 1AB4  
                   l2744 1A1A                     l2752 1A70                     l2736 19CC  
                   l2728 19A8                     l2680 1852                     l2672 180C  
                   l2664 17EE                     l2656 17A0                     l2648 176A  
                   l2592 1698                     l2584 166E                     l2576 163E  
                   l3368 331E                     l3392 3820                     l3384 37DA  
                   l2840 1C98                     l2832 1C60                     l2824 1C22  
                   l2816 1BEA                     l2808 1BA6                     l2920 349C  
                   l2912 347E                     l3800 139A                     l3712 0FFC  
                   l3704 0FB2                     l3640 0D1A                     l3624 0BFC  
                   l3616 0B9A                     l3608 0B4C                     l3632 0C72  
                   l3560 0984                     l3552 0916                     l3544 08E4  
                   l3536 08B0                     l3490 324C                     l3482 3240  
                   l3474 322C                     l3466 321E                     l3458 31E0  
                   l3298 3678                     l2770 1ADE                     l2762 1AC2  
                   l2754 1A80                     l2746 1A26                     l2738 19DA  
                   l2690 188E                     l2682 1862                     l2674 182E  
                   l2666 17F2                     l2658 17BC                     l2594 169E  
                   l2586 167E                     l2578 164C                     l3386 37E8  
                   l3378 37B0                     l3394 2966                     l2850 1D06  
                   l2842 1CB2                     l2834 1C6C                     l2826 1C3A  
                   l2818 1BF6                     l2930 34D4                     l2922 34A4  
                   l2914 3482                     l2906 3464                     l3810 13FC  
                   l3802 13A2                     l3730 10C4                     l3714 1004  
                   l3722 1098                     l3706 0FB8                     l3650 0DAC  
                   l3642 0D44                     l3634 0C90                     l3626 0C2E  
                   l3618 0BAA                     l3570 09D6                     l3562 0988  
                   l3554 0934                     l3546 08F8                     l3538 08BE  
                   l3492 3252                     l3484 3246                     l3476 322E  
                   l3468 3226                     l3900 23CA                     l2772 1AE0  
                   l2764 1AC8                     l2756 1A90                     l2748 1A34  
                   l2692 189C                     l2684 1870                     l2676 183E  
                   l2668 1800                     l2596 16B0                     l2588 1680  
                   l3388 3806                     l3396 2976                     l2860 1D9C  
                   l2852 1D30                     l2844 1CC2                     l2836 1C7C  
                   l2828 1C46                     l2780 1B0C                     l2940 3500  
                   l2932 34DA                     l2924 34B6                     l2916 3490  
                   l2908 3468                     l3820 1442                     l3812 1402  
                   l3804 13C6                     l3740 111E                     l3732 10DE  
                   l3724 10AE                     l3716 1050                     l3708 0FD2  
                   l3660 0E7A                     l3652 0DC2                     l3644 0D62  
                   l3636 0CCA                     l3628 0C3A                     l3580 0A4C  
                   l3572 09F2                     l3556 093E                     l3564 09A6  
                   l3494 3252                     l3486 3246                     l3478 3230  
                   l3910 240A                     l3902 23DA                     l2766 1ACA  
                   l2758 1AB0                     l2694 189E                     l2686 187E  
                   l2598 16B2                     l3398 2984                     l2870 1DDC  
                   l2862 1DAA                     l2854 1D66                     l2846 1CDE  
                   l2838 1C88                     l2790 1B44                     l2782 1B0E  
                   l2934 34F0                     l2926 34BE                     l2942 3506  
                   l2918 3498                     l2950 3528                     l3830 14A6  
                   l3822 1466                     l3814 1410                     l3806 13CC  
                   l3750 11DC                     l3742 112A                     l3734 10FA  
                   l3726 10BA                     l3718 1084                     l3662 0E84  
                   l3646 0D94                     l3638 0CE8                     l3590 0AA4  
                   l3582 0A52                     l3574 0A1C                     l3566 09C2  
                   l3558 095A                     l3488 324C                     l3496 3728  
                   l3912 241A                     l3920 243A                     l3904 23DC  
                   l2768 1AD0                     l2696 18A8                     l2688 188A  
                   l2880 1E4E                     l2872 1E0A                     l2864 1DBC  
                   l2856 1D74                     l2848 1CEA                     l2792 1B54  
                   l2784 1B1E                     l2776 1AF2                     l2944 3516  
                   l2936 34F8                     l2928 34C6                     l2960 3554  
                   l2952 352C                     l3840 14D8                     l3832 14B2  
                   l3824 1472                     l3816 142E                     l3808 13DE  
                   l3760 1288                     l3752 1210                     l3744 112E  
                   l3736 1106                     l3728 10BE                     l3680 0F0A  
                   l3672 0EC2                     l3656 0DF6                     l3648 0DA2  
                   l3592 0AB2                     l3576 0A20                     l3568 09CA  
                   l3498 372C                     l3930 2478                     l3922 244A  
                   l3914 2422                     l3906 23E4                     l2698 18AE  
                   l2890 1EC4                     l2882 1E78                     l2866 1DCA  
                   l2858 1D92                     l2794 1B5A                     l2786 1B2E  
                   l2778 1AFE                     l2946 351E                     l2938 34FA  
                   l2970 358C                     l2962 355C                     l2954 353A  
                   l3850 152E                     l3834 14B6                     l3842 14F4  
                   l3826 147A                     l3818 143A                     l3770 12CE  
                   l3762 1294                     l3754 1220                     l3746 1144  
                   l3738 110E                     l3690 0F66                     l3682 0F28  
                   l3674 0EC4                     l3658 0E0C                     l3594 0ABA  
                   l3586 0A58                     l3578 0A42                     l3940 24C0  
                   l3932 2488                     l3924 244A                     l3916 2426  
                   l3908 23F4                     l2892 1EE0                     l2876 1E34  
                   l2884 1E7C                     l2868 1DCE                     l2796 1B60  
                   l2788 1B3E                     l2980 35C6                     l2972 35A2  
                   l2964 356E                     l2956 3542                     l3852 154C  
                   l3844 1506                     l3836 14C8                     l3828 1488  
                   l3780 130A                     l3772 12D6                     l3764 1298  
                   l3756 1224                     l3748 1190                     l3692 0F6E  
                   l3684 0F2E                     l3676 0ED6                     l3668 0E88  
                   l3596 0AD2                     l3588 0A92                     l3950 250E  
                   l3942 24D4                     l3934 2498                     l3870 2328  
                   l2894 1EF0                     l2886 1E96                     l2878 1E40  
                   l2798 1B6E                     l2990 38CE                     l2982 35CE  
                   l2974 35AA                     l2966 3576                     l2958 3546  
                   l3854 1558                     l3846 1512                     l3838 14D4  
                   l3862 15E8                     l3790 1328                     l3782 1320  
                   l3774 12E4                     l3766 129E                     l3758 1270  
                   l3694 0F7A                     l3686 0F3C                     l3678 0F04  
                   l3598 0ADA                     l3960 2556                     l3952 251E  
                   l3944 24E2                     l3936 24A8                     l3928 245E  
                   l3880 2364                     l3872 2334                     l2896 1EFE  
                   l2888 1EAA                     l2992 38D6                     l2976 35B0  
                   l2968 357E                     l3856 1560                     l3848 1516  
                   l3784 1324                     l3776 12E8                     l3696 0F7E  
                   l3688 0F5A                     l3768 12B4                     l3864 1602  
                   l3970 2596                     l3962 2564                     l3954 2530  
                   l3946 24EE                     l3938 24B0                     l3890 2394  
                   l3882 2374                     l3874 2342                     l2898 1F00  
                   l2994 38DE                     l2986 38B4                     l2978 35B6  
                   l3858 15D8                     l3794 1362                     l3778 12F8  
                   l3698 0F84                     l3866 1624                     l3980 2608  
                   l3972 25C4                     l3956 2546                     l3964 2576  
                   l3948 250C                     l3892 239A                     l3884 2376  
                   l3876 2344                     l2996 38EC                     l2988 38BC  
                   l3796 1364                     l3990 2680                     l3982 2632  
                   l3966 2584                     l3958 254C                     l3894 23A8  
                   l3878 2354                     l3886 237E                     l2998 38F2  
                   l3798 1376                     l3992 269C                     l3976 25EE  
                   l3984 2636                     l3968 2588                     l3896 23AA  
                   l3888 238E                     l3994 26A0                     l3986 2650  
                   l3978 25FA                     l3898 23BA                     l3996 26AE  
                   l3988 2666                     l3998 26B4                     STR_1 08A3  
                   STR_2 0891                     u2300 1732                     u2220 164C  
                   u3100 2266                     u3005 306C                     u2301 172E  
                   u2221 1648                     u3101 2262                     _LATA 000F89  
                   u2310 17A0                     u2230 165E                     u3110 3A20  
                   _LATB 000F8A                     u3015 2DC8                     u2311 179C  
                   u2231 165A                     u3111 3A1C                     _LATC 000F8B  
                   u2400 187E                     u2320 17B8                     u2240 166E  
                   u3200 2C3C                     u3040 26D4                     u3120 3A30  
                   u4000 1320                     _LATD 000F8C                     u3025 2DE2  
                   u2401 187A                     u2321 17B2                     u2241 166A  
                   u3201 2C38                     u3041 26D0                     u3121 3A2C  
                   u4001 131C                     _LATE 000F8D                     u2410 189C  
                   u2330 17BA                     u2250 16B0                     u3210 2C5C  
                   u3050 283E                     u4010 135E                     u3035 2E08  
                   u2411 1898                     u2251 16AC                     u3211 2C58  
                   u3131 2B28                     u3051 283A                     u4011 135A  
                   u2500 19DA                     u2420 18D4                     u2340 17E2  
                   u2260 16C6                     u3300 36CA                     u3220 2C84  
                   u3140 2B3C                     u3060 1F2C                     u4100 1488  
                   u4020 1376                     u2501 19D6                     u2421 18D0  
                   u2341 17DE                     u2261 16C2                     u3301 36C6  
                   u3221 2C80                     u3141 2B38                     u3061 1F28  
                   u4101 1484                     u4021 1372                     u2510 19F0  
                   u2430 191A                     u2350 1800                     u2270 16D8  
                   u3310 36F2                     u3230 2CAE                     u3070 1F42  
                   u4110 14A6                     u4030 139A                     u2511 19EC  
                   u2431 1916                     u2351 17FC                     u2271 16D4  
                   u3311 36EE                     u3231 2CAA                     u3151 2B60  
                   u3071 1F3E                     u4111 14A2                     u4031 1396  
                   u4200 2354                     u3320 3606                     u3400 39E8  
                   u2600 1ADE                     u2520 1A06                     u2440 1950  
                   u2360 1820                     u2280 16E8                     u3240 2D1C  
                   u3160 2B74                     u3080 2068                     u4120 14C8  
                   u4040 13C6                     u4201 2350                     u3321 3602  
                   u3401 39E4                     u2601 1ADA                     u2521 1A02  
                   u2441 194C                     u2361 181C                     u2281 16E4  
                   u3241 2D18                     u3161 2B70                     u3081 2064  
                   u4121 14C4                     u4041 13C2                     u4210 2364  
                   u3330 3644                     u2530 1A1A                     u2450 1960  
                   u2370 182E                     u2290 1724                     u3410 3270  
                   u3250 2D4C                     u3170 2BD6                     u2610 1B0C  
                   u3090 2140                     u4130 14F0                     u4050 13DE  
                   u4211 2360                     u3331 3640                     u2531 1A16  
                   u2451 195C                     u2371 182A                     u2291 1720  
                   u3411 326C                     u3251 2D48                     u3171 2BD2  
                   u2611 1B08                     u3091 213C                     u4131 14EC  
                   u4051 13DA                     u4300 2530                     u4220 23A8  
                   u3340 3678                     u2540 1A34                     u2460 198C  
                   u2380 183E                     u3420 32A4                     u3500 3806  
                   u3260 2D60                     u3180 2C00                     u2700 1DAA  
                   u2620 1B1E                     u4140 1506                     u4060 13FC  
                   u4301 252C                     u4221 23A4                     u3341 3674  
                   u2541 1A30                     u2461 1988                     u2381 183A  
                   u3501 3802                     u3261 2D5C                     u3181 2BFC  
                   u2701 1DA6                     u2621 1B1A                     u4141 1502  
                   u4061 13F8                     u4310 2546                     u4230 23BA  
                   u3350 338E                     u2550 1A6E                     u2470 199C  
                   u2390 1870                     u3430 32D2                     u3510 2976  
                   u3270 2D88                     u3190 2C14                     u2710 1DCA  
                   u2630 1B2E                     u4150 152E                     u4070 1410  
                   u4311 2542                     u4231 23B6                     u3351 338A  
                   u2551 1A6A                     u2471 1998                     u2391 186C  
                   u3431 32CE                     u3511 2972                     u3271 2D84  
                   u3191 2C10                     u2711 1DC6                     u2631 1B2A  
                   u4151 152A                     u4071 140C                     u4400 2680  
                   u4320 2564                     u4240 23CA                     u3360 33CC  
                   u2560 1A80                     u2480 19B8                     u3440 32E6  
                   u3600 2B04                     u3520 2984                     u3280 2DA8  
                   u2720 1DDC                     u2640 1B6E                     u2800 3476  
                   u4160 154C                     u4080 142E                     u4401 267C  
                   u4321 2560                     u4241 23C6                     u3361 33C8  
                   u2561 1A7C                     u2481 19B4                     u3441 32E2  
                   u3425 329A                     u3601 2B00                     u3521 2980  
                   u3281 2DA4                     u2721 1DD8                     u2641 1B6A  
                   u2801 3472                     u4161 1548                     u4081 142A  
                   u3610 3206                     u4410 26AE                     u4330 2584  
                   u4250 240A                     u3370 33EA                     u2570 1A90  
                   u2490 19C8                     u3450 330E                     u3290 36A8  
                   u3530 29E0                     u2730 1E0A                     u2650 1B80  
                   u2810 3490                     u4170 1602                     u4090 1466  
                   u3611 3202                     u4411 26AA                     u4331 2580  
                   u4251 2406                     u3371 33E6                     u2571 1A8C  
                   u2491 19C4                     u3451 330A                     u3291 36A4  
                   u3531 29DC                     u2731 1E06                     u2651 1B7C  
                   u2811 348C                     u4171 15FE                     u4091 1462  
                   u3620 37AE                     u4340 2596                     u4260 244A  
                   u3380 340A                     u2580 1AB0                     u3460 332E  
                   u3540 2A36                     u2740 1E20                     u2660 1B90  
                   u2820 34B6                     u2900 35A2                     u4180 1624  
                   u3700 0AA4                     u3621 37AA                     u4341 2592  
                   u4261 2446                     u3381 3406                     u2581 1AAC  
                   u3461 332A                     u3541 2A32                     u2741 1E1C  
                   u2661 1B8C                     u2821 34B2                     u2901 359E  
                   u4181 1620                     u3701 0AA0                     u4350 25C4  
                   u4270 24C0                     u4190 2342                     u3630 3884  
                   u3390 345A                     u2590 1AC2                     u3470 333E  
                   u3550 2A80                     u2750 1E34                     u2670 1BC6  
                   u2830 34D4                     u2910 35C6                     u3710 0AB2  
                   u4351 25C0                     u4271 24BC                     u4191 233E  
                   u3631 3880                     u3391 3456                     u2591 1ABE  
                   u3471 333A                     u3551 2A7C                     u2751 1E30  
                   u2671 1BC2                     u2831 34D0                     u2911 35C2  
                   u3711 0AAE                     u4360 25DA                     u4280 24E2  
                   u3480 37C6                     u3560 2A9E                     u2760 1E4E  
                   u2680 1BD6                     u2920 38CE                     u2840 34F0  
                   u3800 0D44                     u3720 0AE8                     u4361 25D6  
                   u4281 24DE                     u3481 37C2                     u3561 2A9A  
                   u2761 1E4A                     u2681 1BD2                     u2921 38CA  
                   u2841 34EC                     u3801 0D40                     u3721 0AE4  
                   u4370 25EE                     u4290 250C                     u3490 37E8  
                   u3570 2AAE                     u2770 1E96                     u2690 1D50  
                   u2930 38EC                     u2850 3516                     u3810 0D62  
                   u3730 0B4C                     u3650 08D0                     u4507 3176  
                   u4371 25EA                     u4291 2508                     u3491 37E4  
                   u3571 2AAA                     u2771 1E92                     u2931 38E8  
                   u2851 3512                     u3811 0D5E                     u3731 0B48  
                   u3651 08CC                     u4380 2608                     u3580 2ABC  
                   u2780 1EC4                     u2940 3908                     u2860 353A  
                   u3900 0FD2                     u3820 0D94                     u3740 0BAA  
                   u3660 0934                     u4517 3184                     u4437 2E40  
                   u4381 2604                     u3645 388C                     u3581 2AB8  
                   u2781 1EC0                     u2941 3904                     u2861 3536  
                   u3901 0FCE                     u3821 0D90                     u3741 0BA6  
                   u3661 0930                     u4390 2650                     u3590 2AF6  
                   u2790 1EFE                     u2950 393A                     u2870 3554  
                   u3910 0FF0                     u3830 0EBE                     u3750 0C2E  
                   u3670 09A6                     u4607 30AE                     u4527 3192  
                   u4447 2E4A                     u4391 264C                     u3591 2AF2  
                   u2791 1EFA                     u2695 1D46                     u2951 3936  
                   u2871 3550                     u3911 0FEC                     u3831 0EBA  
                   u3751 0C2A                     u3671 09A2                     u2960 3958  
                   u2880 356E                     u3920 10AA                     u3840 0ED6  
                   u3760 0C6C                     u3680 09C2                     u4617 3128  
                   u4537 31A0                     u4457 2EC4                     u2961 3954  
                   u2881 356A                     u3921 10A6                     u3841 0ED2  
                   u3761 0C68                     u3681 09BE                     u2970 396E  
                   u2890 358C                     u3930 10DE                     u3850 0F04  
                   u3770 0C90                     u3690 0A3E                     u4627 3132  
                   u4547 31AE                     u4467 2ECE                     u2971 396A  
                   u2891 3588                     u3931 10DA                     u3851 0F00  
                   u3771 0C8C                     u3691 0A3A                     u3940 10FA  
                   u3860 0F28                     u3780 0CE8                     u4637 3140  
                   u4557 31D4                     u4477 2ED8                     u3941 10F6  
                   u3861 0F24                     u3781 0CE4                     u3950 111E  
                   u3870 0F3C                     u3790 0D1A                     u4567 31EC  
                   u4487 2EE4                     u3951 111A                     u3871 0F38  
                   u3791 0D16                     u3960 1284                     u3880 0F5A  
                   u2985 302C                     u4577 3220                     u4497 3168  
                   u3961 1280                     u3881 0F56                     u3970 12B0  
                   u3890 0F9E                     u2995 3046                     u4587 3238  
                   u3971 12AC                     u3891 0F9A                     u3980 12E4  
                   u4597 30A4                     u3981 12E0                     u3990 130A  
                   u3991 1306                     _main 2EEE                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     _volt 007B  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        ___fldiv@new_exp 0039             _sprintf$1118 0060          __end_of_Lcd_Cmd 314A  
        __end_of_Lcd_Out 37B0             ___param_bank 000000               _Lcd_Chr_CP 2DBA  
          ___fltol@sign1 0039          __end_of___fladd 1AF2                    ?_main 0001  
        __end_of___fldiv 26C2          __end_of___awdiv 3528          __end_of___flneg 3A0A  
        __end_of___awmod 35D8          __end_of___flmul 1F1C          __end_of___flsub 39D2  
        __end_of___fltol 3360          __end_of___lldiv 3726          ___awdiv@divisor 0009  
        __end_of___llmod 3838          __end_of___lwdiv 3928          __end_of___lwmod 398C  
        ___awdiv@counter 000B                    _PORTA 000F80                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96          __end_of_dpowers 0891  
                  _scale 1F1C          __end_of_isdigit 3A3C                    _tecla 005C  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 1632  
       __end_of_Lcd_Init 325A          __initialization 3A62             __end_of_main 301E  
                 ??_main 0059            __activetblptr 000002     __size_of__tdiv_to_l_ 0156  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
       ___llmod@dividend 000E                   ?_scale 0028                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0007         __end_of_adc_init 3A8E  
              ??_Lcd_Cmd 0001                ??_Lcd_Out 0007         __end_of___xxtofl 2B18  
       __end_of__powers_ 0835                   ___flge 3360                   ___fleq 35D8  
            ?_Lcd_Chr_CP 0001                ??___fladd 003D                   ___wmul 3A3C  
              ??___fldiv 0030                ??___awdiv 000B                ??___flneg 0005  
              ??___awmod 0005                ??___flmul 0017                ??___flsub 004D  
              ??___fltol 0035                ??___lldiv 0009                ??___llmod 0016  
              ??___lwdiv 000A                ??___lwmod 0005                   _fround 26C2  
                 clear_0 3A68         ___awdiv@quotient 000D          ___awmod@divisor 0003  
        ___awmod@counter 0005                ??_isdigit 0001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
              ??_sprintf 0055               ___flge@ff1 0001               ___flge@ff2 0005  
           ___xxtofl@arg 000B             ___xxtofl@exp 000A             ___xxtofl@val 0001  
             ___fleq@ff1 0001               ___fleq@ff2 0005               __accesstop 0060  
__end_of__initialization 3A76               ___flneg@f1 0001            ___rparam_used 000001  
             ___fltol@f1 0031           __pcstackCOMRAM 0001            __end_of_scale 2328  
             __div_to_l_ 2C6E                ?_Lcd_Init 0001          __div_to_l_@exp1 000E  
        __div_to_l_@cntr 000D                  ??_scale 002C          __div_to_l_@quot 0009  
           sprintf@width 0072      __size_of_Lcd_Chr_CP 0134               __pbssBANK0 007B  
          __div_to_l_@f1 0001            __div_to_l_@f2 0005                  ?___flge 0001  
                ?___fleq 0001                  ?___wmul 0001            ??_adc_amostra 0003  
                ?_fround 0028                ?_adc_init 0001                ?___xxtofl 0001  
             ??_Lcd_Init 0004                  _Lcd_Cmd 301E                  _Lcd_Out 3726  
      __end_of__npowers_ 0869                  __Hparam 0000               _scale$1117 002C  
                __Lparam 0000          __size_of___flge 0104          __size_of___fleq 00AA  
                ___fladd 1632                  ___fldiv 2328                  ___awdiv 3464  
                ___flneg 39D2                  ___awmod 3528                  ___flmul 1AF2  
                ___flsub 398C                  ___fltol 325A                  ___lldiv 3682  
        __size_of___wmul 0026                  ___llmod 37B0                  ___lwdiv 38B4  
                ___lwmod 3928             __psmallconst 0800                  __pcinit 3A62  
        __size_of_fround 02A2                  __ramtop 0800               ??_adc_init 0001  
                __ptext0 2EEE                  __ptext1 08B0                  __ptext2 1F1C  
                __ptext3 3528                  __ptext4 3464                  __ptext5 3A0A  
                __ptext6 26C2                  __ptext7 3928                  __ptext8 38B4  
                __ptext9 1AF2              ?__div_to_l_ 0001                  _dpowers 0869  
    __end_of_adc_amostra 38B4                  _isdigit 3A0A               ??___xxtofl 0005  
       ___awmod@dividend 0001                  _sprintf 08B0     end_of_initialization 3A76  
          __Lmediumconst 0000          ___lldiv@divisor 0005          ___lldiv@counter 000D  
           ??_Lcd_Chr_CP 0001                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE           __tdiv_to_l_@f1 0001           __tdiv_to_l_@f2 0005  
          ??__tdiv_to_l_ 0009                _PORTDbits 000F83                _PORTEbits 000F84  
            ___fladd@grs 0044            ___xxtofl@sign 0009                _TRISDbits 000F95  
              _TRISEbits 000F96              ___fldiv@grs 003B              ___fldiv@rem 0034  
     __end_of_Lcd_Chr_CP 2EEE              ___flmul@grs 001C      __size_of__div_to_l_ 014C  
         __end_of___flge 3464           __end_of___fleq 3682              _adc_amostra 3838  
         __end_of___wmul 3A62           __end_of_fround 2964      start_initialization 3A62  
    __end_of__tdiv_to_l_ 2C6E            Lcd_Out@buffer 0005        __size_of_Lcd_Init 0110  
        ___llmod@divisor 0012          ___llmod@counter 0016                 ??___flge 0009  
               ??___fleq 0009                 ??___wmul 0005                 ??_fround 002C  
          sprintf@tmpval 0066                ___fladd@a 0039                ___fladd@b 0035  
             fround@prec 0034                ___fldiv@a 002C                ___fldiv@b 0028  
      __size_of_adc_init 000E                ___flmul@a 0013                ___flmul@b 000F  
            __pbssCOMRAM 0059                ___flsub@a 0049                ___flsub@b 0045  
              _adcResult 0059            __pcstackBANK0 0060        __size_of___xxtofl 01B4  
               ?_Lcd_Cmd 0001              sprintf@flag 0070                 ?_Lcd_Out 0004  
            sprintf@eexp 006E              sprintf@fval 0074              sprintf@prec 0078  
       ___lwdiv@dividend 0006                 ?___fladd 0035                 ?___fldiv 0028  
               ?___awdiv 0007                 ?___flneg 0001                 ?___awmod 0001  
               ?___flmul 000F                 ?___flsub 0045                 ?___fltol 0031  
               ?___lldiv 0001                 ?___llmod 000E                __npowers_ 0835  
               ?___lwdiv 0006                 ?___lwmod 0001              __tdiv_to_l_ 2B18  
           ??__div_to_l_ 0009              __smallconst 0800                 ?_isdigit 0001  
       ___lwdiv@quotient 000A                 ?_sprintf 004D           __size_of_scale 040C  
         ___wmul@product 0005       __end_of__div_to_l_ 2DBA                 Lcd_Out@x 0004  
               Lcd_Out@y 0007             Lcd_Init@data 0005               _ADCON0bits 000FC2  
      ___wmul@multiplier 0001                 _Lcd_Init 314A              _INTCON2bits 000FF1  
       __size_of_Lcd_Cmd 012C         __size_of_Lcd_Out 008A                 __Hrparam 0000  
               __Lrparam 0000             ?_adc_amostra 0001         __size_of___fladd 04C0  
       __size_of___fldiv 039A         __size_of___awdiv 00C4         __size_of___flneg 0038  
       __size_of___awmod 00B0         __size_of___flmul 042A         __size_of___flsub 0046  
       __size_of___fltol 0106         __size_of___lldiv 00A4         __size_of___llmod 0088  
       __size_of___lwdiv 0074         __size_of___lwmod 0064              _fround$1115 0030  
            _fround$1116 002C                 _adc_init 3A80              _isdigit$929 0002  
             sprintf@val 006A                 ___xxtofl 2964         __size_of_isdigit 0032  
         Lcd_Chr_CP@data 0003          ___lwdiv@divisor 0008          ___lwdiv@counter 000C  
               __ptext10 2B18                 __ptext11 2C6E                 __ptext20 3360  
               __ptext12 2964                 __ptext21 35D8                 __ptext13 3A3C  
               __ptext22 3A80                 __ptext14 37B0                 __ptext23 3838  
               __ptext15 3682                 __ptext24 2328                 __ptext16 325A  
               __ptext25 3726                 __ptext17 398C                 __ptext26 2DBA  
               __ptext18 1632                 __ptext27 314A                 __ptext19 39D2  
               __ptext28 301E                 __powers_ 0801         __size_of_sprintf 0D82  
            Lcd_Cmd@data 0003            __size_of_main 0130              Lcd_Out@data 0008  
               isdigit@c 0003                 scale@scl 0030                sprintf@ap 0064  
       __tdiv_to_l_@exp1 0011                sprintf@sp 004D         __tdiv_to_l_@cntr 0010  
       __tdiv_to_l_@quot 000C         ___lwmod@dividend 0001         ___lldiv@dividend 0001  
           ?__tdiv_to_l_ 0001                 sprintf@c 007A                 sprintf@f 004F  
       ___lldiv@quotient 0009          ___lwmod@divisor 0003          ___lwmod@counter 0005  
       adc_amostra@canal 0007            ___fladd@signs 0041             ___fladd@aexp 0042  
           ___fladd@bexp 0043  
