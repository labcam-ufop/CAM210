

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Nov 23 15:21:41 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44  0000                     
    45                           ; Version 2.20
    46                           ; Generated 12/02/2020 GMT
    47                           ; 
    48                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F4520 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79  0000                     
    80                           	psect	idataCOMRAM
    81  001A06                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _duty
    85  001A06  007F               	dw	127
    86                           
    87                           	psect	smallconst
    88  000600                     __psmallconst:
    89                           	callstack 0
    90  000600  00                 	db	0
    91  000601                     _dpowers:
    92                           	callstack 0
    93  000601  0001               	dw	1
    94  000603  000A               	dw	10
    95  000605  0064               	dw	100
    96  000607  03E8               	dw	1000
    97  000609  2710               	dw	10000
    98  00060B                     __end_of_dpowers:
    99                           	callstack 0
   100  0000                     _TMR0	set	4054
   101  0000                     _RCREG	set	4014
   102  0000                     _TXREG	set	4013
   103  0000                     _RCSTAbits	set	4011
   104  0000                     _TXSTAbits	set	4012
   105  0000                     _SPBRG	set	4015
   106  0000                     _BAUDCONbits	set	4024
   107  0000                     _LATDbits	set	3980
   108  0000                     _INTCON	set	4082
   109  0000                     _T0CON	set	4053
   110  0000                     _INTCONbits	set	4082
   111  0000                     _LATE	set	3981
   112  0000                     _PORTE	set	3972
   113  0000                     _LATD	set	3980
   114  0000                     _PORTD	set	3971
   115  0000                     _LATC	set	3979
   116  0000                     _PORTC	set	3970
   117  0000                     _LATB	set	3978
   118  0000                     _PORTB	set	3969
   119  0000                     _LATA	set	3977
   120  0000                     _PORTA	set	3968
   121  0000                     _TRISE	set	3990
   122  0000                     _TRISD	set	3989
   123  0000                     _TRISC	set	3988
   124  0000                     _TRISB	set	3987
   125  0000                     _TRISA	set	3986
   126  0000                     _TMR1H	set	4047
   127  0000                     _TMR1L	set	4046
   128  0000                     _T1CON	set	4045
   129  0000                     _INTCON2bits	set	4081
   130  0000                     _PORTEbits	set	3972
   131  0000                     _TRISEbits	set	3990
   132  0000                     _PIR1bits	set	3998
   133  0000                     _PR2	set	4043
   134  0000                     _T2CONbits	set	4042
   135  0000                     _CCPR1L	set	4030
   136  0000                     _PORTDbits	set	3971
   137  0000                     _PORTCbits	set	3970
   138  0000                     _TRISDbits	set	3989
   139  0000                     _TRISCbits	set	3988
   140  0000                     _CCP1CON	set	4029
   141  0000                     _ADRESL	set	4035
   142  0000                     _ADRESH	set	4036
   143  0000                     _ADCON0bits	set	4034
   144  0000                     _ADCON2	set	4032
   145  0000                     _ADCON1	set	4033
   146  0000                     _ADCON0	set	4034
   147  00060B                     STR_2:
   148  00060B  2F                 	db	47
   149  00060C  2A                 	db	42
   150  00060D  25                 	db	37
   151  00060E  30                 	db	48	;'0'
   152  00060F  34                 	db	52	;'4'
   153  000610  64                 	db	100	;'d'
   154  000611  2F                 	db	47
   155  000612  0A                 	db	10
   156  000613  00                 	db	0
   157  000614                     STR_1:
   158  000614  25                 	db	37
   159  000615  30                 	db	48	;'0'
   160  000616  35                 	db	53	;'5'
   161  000617  75                 	db	117	;'u'
   162  000618  00                 	db	0
   163  000619  00                 	db	0	; dummy byte at the end
   164  0000                     
   165                           ; #config settings
   166                           
   167                           	psect	cinit
   168  001916                     __pcinit:
   169                           	callstack 0
   170  001916                     start_initialization:
   171                           	callstack 0
   172  001916                     __initialization:
   173                           	callstack 0
   174                           
   175                           ; Initialize objects allocated to COMRAM (2 bytes)
   176                           ; load TBLPTR registers with __pidataCOMRAM
   177  001916  0E06               	movlw	low __pidataCOMRAM
   178  001918  6EF6               	movwf	tblptrl,c
   179  00191A  0E1A               	movlw	high __pidataCOMRAM
   180  00191C  6EF7               	movwf	tblptrh,c
   181  00191E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   182  001920  6EF8               	movwf	tblptru,c
   183  001922  0009               	tblrd		*+	;fetch initializer
   184  001924  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   185  001928  0009               	tblrd		*+	;fetch initializer
   186  00192A  CFF5 F05F          	movff	tablat,__pdataCOMRAM+1
   187                           
   188                           ; Clear objects allocated to COMRAM (53 bytes)
   189  00192E  EE00  F001         	lfsr	0,__pbssCOMRAM
   190  001932  0E35               	movlw	53
   191  001934                     clear_0:
   192  001934  6AEE               	clrf	postinc0,c
   193  001936  06E8               	decf	wreg,f,c
   194  001938  E1FD               	bnz	clear_0
   195  00193A                     end_of_initialization:
   196                           	callstack 0
   197  00193A                     __end_of__initialization:
   198                           	callstack 0
   199  00193A  9060               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   200  00193C  9260               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   201  00193E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   202  001940  6EF8               	movwf	tblptru,c
   203  001942  0100               	movlb	0
   204  001944  EF06  F00A         	goto	_main	;jump to C main() function
   205                           
   206                           	psect	bssCOMRAM
   207  000001                     __pbssCOMRAM:
   208                           	callstack 0
   209  000001                     _result:
   210                           	callstack 0
   211  000001                     	ds	2
   212  000003                     _count:
   213                           	callstack 0
   214  000003                     	ds	2
   215  000005                     _infrav:
   216                           	callstack 0
   217  000005                     	ds	2
   218  000007                     _segundos:
   219                           	callstack 0
   220  000007                     	ds	2
   221  000009                     _buffer_rx:
   222                           	callstack 0
   223  000009                     	ds	20
   224  00001D                     _buffer_tx:
   225                           	callstack 0
   226  00001D                     	ds	20
   227  000031                     _str:
   228                           	callstack 0
   229  000031                     	ds	5
   230                           
   231                           	psect	dataCOMRAM
   232  00005E                     __pdataCOMRAM:
   233                           	callstack 0
   234  00005E                     _duty:
   235                           	callstack 0
   236  00005E                     	ds	2
   237                           
   238                           	psect	cstackBANK0
   239  000080                     __pcstackBANK0:
   240                           	callstack 0
   241  000080                     ??_Lcd_Cmd:
   242  000080                     ??_Lcd_Chr_CP:
   243  000080                     ?___aldiv:
   244                           	callstack 0
   245  000080                     serial_rx_str_until@buff:
   246                           	callstack 0
   247  000080                     ___aldiv@dividend:
   248                           	callstack 0
   249                           
   250                           ; 4 bytes @ 0x0
   251  000080                     	ds	2
   252  000082                     Lcd_Chr_CP@data:
   253                           	callstack 0
   254  000082                     Lcd_Cmd@data:
   255                           	callstack 0
   256  000082                     serial_rx_str_until@size:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x2
   260  000082                     	ds	1
   261  000083                     ??_Lcd_Init:
   262  000083                     Lcd_Out@x:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x3
   266  000083                     	ds	1
   267  000084                     Lcd_Init@data:
   268                           	callstack 0
   269  000084                     serial_rx_str_until@term:
   270                           	callstack 0
   271  000084                     Lcd_Out@buffer:
   272                           	callstack 0
   273  000084                     ___aldiv@divisor:
   274                           	callstack 0
   275                           
   276                           ; 4 bytes @ 0x4
   277  000084                     	ds	1
   278  000085                     ??_serial_rx_str_until:
   279                           
   280                           ; 1 bytes @ 0x5
   281  000085                     	ds	1
   282  000086                     Lcd_Out@y:
   283                           	callstack 0
   284                           
   285                           ; 1 bytes @ 0x6
   286  000086                     	ds	1
   287  000087                     Lcd_Out@data:
   288                           	callstack 0
   289                           
   290                           ; 1 bytes @ 0x7
   291  000087                     	ds	1
   292  000088                     ___aldiv@counter:
   293                           	callstack 0
   294  000088                     serial_rx_str_until@i:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x8
   298  000088                     	ds	1
   299  000089                     ___aldiv@sign:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x9
   303  000089                     	ds	1
   304  00008A                     ___aldiv@quotient:
   305                           	callstack 0
   306                           
   307                           ; 4 bytes @ 0xA
   308  00008A                     	ds	4
   309  00008E                     PWM1_Init@f:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0xE
   313  00008E                     	ds	2
   314  000090                     ??_PWM1_Init:
   315                           
   316                           ; 1 bytes @ 0x10
   317  000090                     	ds	4
   318  000094                     PWM1_Init@temp:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x14
   322  000094                     	ds	2
   323  000096                     
   324                           ; 1 bytes @ 0x16
   325                           
   326                           	psect	cstackCOMRAM
   327  000036                     __pcstackCOMRAM:
   328                           	callstack 0
   329  000036                     ??_isdigit:
   330  000036                     ??i2_Lcd_Chr_CP:
   331  000036                     ??i2_Lcd_Cmd:
   332  000036                     ?_adc_amostra:
   333                           	callstack 0
   334  000036                     ?___wmul:
   335                           	callstack 0
   336  000036                     ?___lwdiv:
   337                           	callstack 0
   338  000036                     ?___lmul:
   339                           	callstack 0
   340  000036                     serial_tx@val:
   341                           	callstack 0
   342  000036                     ___wmul@multiplier:
   343                           	callstack 0
   344  000036                     ___lwdiv@dividend:
   345                           	callstack 0
   346  000036                     ___lmul@multiplier:
   347                           	callstack 0
   348                           
   349                           ; 4 bytes @ 0x0
   350  000036                     	ds	1
   351  000037                     _isdigit$1631:
   352                           	callstack 0
   353  000037                     serial_tx_str@val:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x1
   357  000037                     	ds	1
   358  000038                     ??_adc_amostra:
   359  000038                     isdigit@c:
   360                           	callstack 0
   361  000038                     i2Lcd_Chr_CP@data:
   362                           	callstack 0
   363  000038                     i2Lcd_Cmd@data:
   364                           	callstack 0
   365  000038                     ___wmul@multiplicand:
   366                           	callstack 0
   367  000038                     ___lwdiv@divisor:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x2
   371  000038                     	ds	1
   372  000039                     serial_tx_str@i:
   373                           	callstack 0
   374  000039                     i2Lcd_Out@x:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x3
   378  000039                     	ds	1
   379  00003A                     ___wmul@product:
   380                           	callstack 0
   381  00003A                     ___lwdiv@quotient:
   382                           	callstack 0
   383  00003A                     i2Lcd_Out@buffer:
   384                           	callstack 0
   385  00003A                     ___lmul@multiplicand:
   386                           	callstack 0
   387                           
   388                           ; 4 bytes @ 0x4
   389  00003A                     	ds	2
   390  00003C                     adc_amostra@canal:
   391                           	callstack 0
   392  00003C                     ___lwdiv@counter:
   393                           	callstack 0
   394  00003C                     i2Lcd_Out@y:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x6
   398  00003C                     	ds	1
   399  00003D                     ?___lwmod:
   400                           	callstack 0
   401  00003D                     i2Lcd_Out@data:
   402                           	callstack 0
   403  00003D                     ___lwmod@dividend:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x7
   407  00003D                     	ds	1
   408  00003E                     ___lmul@product:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x8
   412  00003E                     	ds	1
   413  00003F                     ___lwmod@divisor:
   414                           	callstack 0
   415                           
   416                           ; 2 bytes @ 0x9
   417  00003F                     	ds	2
   418  000041                     ___lwmod@counter:
   419                           	callstack 0
   420                           
   421                           ; 1 bytes @ 0xB
   422  000041                     	ds	1
   423  000042                     ?_sprintf:
   424                           	callstack 0
   425  000042                     ?___lldiv:
   426                           	callstack 0
   427  000042                     sprintf@sp:
   428                           	callstack 0
   429  000042                     ___lldiv@dividend:
   430                           	callstack 0
   431                           
   432                           ; 4 bytes @ 0xC
   433  000042                     	ds	2
   434  000044                     sprintf@f:
   435                           	callstack 0
   436                           
   437                           ; 2 bytes @ 0xE
   438  000044                     	ds	2
   439  000046                     ___lldiv@divisor:
   440                           	callstack 0
   441                           
   442                           ; 4 bytes @ 0x10
   443  000046                     	ds	2
   444  000048                     ??_sprintf:
   445                           
   446                           ; 1 bytes @ 0x12
   447  000048                     	ds	2
   448  00004A                     ___lldiv@quotient:
   449                           	callstack 0
   450                           
   451                           ; 4 bytes @ 0x14
   452  00004A                     	ds	2
   453  00004C                     sprintf@prec:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0x16
   457  00004C                     	ds	1
   458  00004D                     sprintf@ap:
   459                           	callstack 0
   460                           
   461                           ; 2 bytes @ 0x17
   462  00004D                     	ds	1
   463  00004E                     ___lldiv@counter:
   464                           	callstack 0
   465                           
   466                           ; 1 bytes @ 0x18
   467  00004E                     	ds	1
   468  00004F                     ??_PWM1_Set_Duty:
   469  00004F                     sprintf@val:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x19
   473  00004F                     	ds	2
   474  000051                     PWM1_Set_Duty@d:
   475                           	callstack 0
   476  000051                     sprintf@flag:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x1B
   480  000051                     	ds	1
   481  000052                     PWM1_Set_Duty@temp:
   482                           	callstack 0
   483  000052                     sprintf@width:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x1C
   487  000052                     	ds	2
   488  000054                     sprintf@c:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x1E
   492  000054                     	ds	1
   493  000055                     ??_isr:
   494                           
   495                           ; 1 bytes @ 0x1F
   496  000055                     	ds	9
   497                           
   498 ;;
   499 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   500 ;;
   501 ;; *************** function _main *****************
   502 ;; Defined at:
   503 ;;		line 36 in file "mainUART.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;                  1    wreg      void 
   510 ;; Registers used:
   511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   517 ;;      Params:         0       0       0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0       0       0
   520 ;;      Totals:         0       0       0       0       0       0       0
   521 ;;Total ram usage:        0 bytes
   522 ;; Hardware stack levels required when called:    5
   523 ;; This function calls:
   524 ;;		_Lcd_Cmd
   525 ;;		_Lcd_Init
   526 ;;		_Lcd_Out
   527 ;;		_PWM1_Init
   528 ;;		_PWM1_Start
   529 ;;		_adc_init
   530 ;;		_serial_init
   531 ;;		_serial_rx_str_until
   532 ;; This function is called by:
   533 ;;		Startup code after reset
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           	psect	text0
   538  00140C                     __ptext0:
   539                           	callstack 0
   540  00140C                     _main:
   541                           	callstack 26
   542  00140C                     
   543                           ;mainUART.c: 38: ADCON0 = 0b00000000;
   544  00140C  0E00               	movlw	0
   545  00140E  6EC2               	movwf	194,c	;volatile
   546                           
   547                           ;mainUART.c: 39: ADCON1 = 0x00;
   548  001410  0E00               	movlw	0
   549  001412  6EC1               	movwf	193,c	;volatile
   550  001414                     
   551                           ;mainUART.c: 42: INTCON2bits.RBPU = 1;
   552  001414  8EF1               	bsf	241,7,c	;volatile
   553                           
   554                           ;mainUART.c: 43: T1CON = 0b10000011;
   555  001416  0E83               	movlw	131
   556  001418  6ECD               	movwf	205,c	;volatile
   557                           
   558                           ;mainUART.c: 46: TMR1L = 0;
   559  00141A  0E00               	movlw	0
   560  00141C  6ECE               	movwf	206,c	;volatile
   561                           
   562                           ;mainUART.c: 47: TMR1H = 0;
   563  00141E  0E00               	movlw	0
   564  001420  6ECF               	movwf	207,c	;volatile
   565  001422                     
   566                           ;mainUART.c: 50: TRISA = 0xFF;
   567  001422  6892               	setf	146,c	;volatile
   568                           
   569                           ;mainUART.c: 51: TRISB = 0b00000000;
   570  001424  0E00               	movlw	0
   571  001426  6E93               	movwf	147,c	;volatile
   572                           
   573                           ;mainUART.c: 52: TRISC = 0b10000001;
   574  001428  0E81               	movlw	129
   575  00142A  6E94               	movwf	148,c	;volatile
   576                           
   577                           ;mainUART.c: 53: TRISD = 0b00000000;
   578  00142C  0E00               	movlw	0
   579  00142E  6E95               	movwf	149,c	;volatile
   580                           
   581                           ;mainUART.c: 54: TRISE = 0b00000001;
   582  001430  0E01               	movlw	1
   583  001432  6E96               	movwf	150,c	;volatile
   584                           
   585                           ;mainUART.c: 56: PORTA = 0;
   586  001434  0E00               	movlw	0
   587  001436  6E80               	movwf	128,c	;volatile
   588                           
   589                           ;mainUART.c: 57: LATA = 0;
   590  001438  0E00               	movlw	0
   591  00143A  6E89               	movwf	137,c	;volatile
   592                           
   593                           ;mainUART.c: 58: PORTB = 0;
   594  00143C  0E00               	movlw	0
   595  00143E  6E81               	movwf	129,c	;volatile
   596                           
   597                           ;mainUART.c: 59: LATB = 0;
   598  001440  0E00               	movlw	0
   599  001442  6E8A               	movwf	138,c	;volatile
   600                           
   601                           ;mainUART.c: 60: PORTC = 0;
   602  001444  0E00               	movlw	0
   603  001446  6E82               	movwf	130,c	;volatile
   604                           
   605                           ;mainUART.c: 61: LATC = 0;
   606  001448  0E00               	movlw	0
   607  00144A  6E8B               	movwf	139,c	;volatile
   608                           
   609                           ;mainUART.c: 62: PORTD = 0;
   610  00144C  0E00               	movlw	0
   611  00144E  6E83               	movwf	131,c	;volatile
   612                           
   613                           ;mainUART.c: 63: LATD = 0;
   614  001450  0E00               	movlw	0
   615  001452  6E8C               	movwf	140,c	;volatile
   616                           
   617                           ;mainUART.c: 64: PORTE = 0;
   618  001454  0E00               	movlw	0
   619  001456  6E84               	movwf	132,c	;volatile
   620                           
   621                           ;mainUART.c: 65: LATE = 0;
   622  001458  0E00               	movlw	0
   623  00145A  6E8D               	movwf	141,c	;volatile
   624  00145C                     
   625                           ;mainUART.c: 67: PWM1_Init(1000);
   626  00145C  0E03               	movlw	3
   627  00145E  0100               	movlb	0	; () banked
   628  001460  6F8F               	movwf	(PWM1_Init@f+1)& (0+255),b
   629  001462  0EE8               	movlw	232
   630  001464  6F8E               	movwf	PWM1_Init@f& (0+255),b
   631  001466  EC8B  F009         	call	_PWM1_Init	;wreg free
   632  00146A                     
   633                           ;mainUART.c: 68: PWM1_Start();
   634  00146A  ECBD  F00C         	call	_PWM1_Start	;wreg free
   635  00146E                     
   636                           ;mainUART.c: 70: serial_init();
   637  00146E  ECE6  F00C         	call	_serial_init	;wreg free
   638  001472                     
   639                           ;mainUART.c: 71: adc_init();
   640  001472  ECFC  F00C         	call	_adc_init	;wreg free
   641  001476                     
   642                           ;mainUART.c: 72: Lcd_Init();
   643  001476  ECB4  F006         	call	_Lcd_Init	;wreg free
   644  00147A                     
   645                           ;mainUART.c: 73: Lcd_Cmd(12);
   646  00147A  0E0C               	movlw	12
   647  00147C  EC7E  F005         	call	_Lcd_Cmd
   648  001480                     
   649                           ;mainUART.c: 76: INTCONbits.TMR0IF = 0;
   650  001480  94F2               	bcf	242,2,c	;volatile
   651  001482                     
   652                           ;mainUART.c: 77: INTCONbits.TMR0IE = 1;
   653  001482  8AF2               	bsf	242,5,c	;volatile
   654  001484                     
   655                           ;mainUART.c: 78: T0CON = 0b11000101;
   656  001484  0EC5               	movlw	197
   657  001486  6ED5               	movwf	213,c	;volatile
   658  001488                     
   659                           ;mainUART.c: 79: TMR0 = 131;
   660  001488  0E00               	movlw	0
   661  00148A  6ED7               	movwf	215,c	;volatile
   662  00148C  0E83               	movlw	131
   663  00148E  6ED6               	movwf	214,c	;volatile
   664  001490                     
   665                           ;mainUART.c: 80: INTCON = 0b11100000;
   666  001490  0EE0               	movlw	224
   667  001492  6EF2               	movwf	242,c	;volatile
   668  001494                     
   669                           ;mainUART.c: 82: PORTCbits.RC5 = 1;
   670  001494  8A82               	bsf	130,5,c	;volatile
   671  001496                     l210:
   672  001496  0004               	clrwdt		;# 
   673  001498                     
   674                           ;mainUART.c: 86: serial_rx_str_until(buffer_rx,20,'\n');
   675  001498  0E09               	movlw	low _buffer_rx
   676  00149A  0100               	movlb	0	; () banked
   677  00149C  6F80               	movwf	serial_rx_str_until@buff& (0+255),b
   678  00149E  0E00               	movlw	high _buffer_rx
   679  0014A0  6F81               	movwf	(serial_rx_str_until@buff+1)& (0+255),b
   680  0014A2  0E00               	movlw	0
   681  0014A4  6F83               	movwf	(serial_rx_str_until@size+1)& (0+255),b
   682  0014A6  0E14               	movlw	20
   683  0014A8  6F82               	movwf	serial_rx_str_until@size& (0+255),b
   684  0014AA  0E0A               	movlw	10
   685  0014AC  6F84               	movwf	serial_rx_str_until@term& (0+255),b
   686  0014AE  EC05  F009         	call	_serial_rx_str_until	;wreg free
   687  0014B2                     
   688                           ;mainUART.c: 87: Lcd_Out(2, 0, buffer_rx);
   689  0014B2  0E00               	movlw	0
   690  0014B4  0100               	movlb	0	; () banked
   691  0014B6  6F83               	movwf	Lcd_Out@x& (0+255),b
   692  0014B8  0E09               	movlw	low _buffer_rx
   693  0014BA  6F84               	movwf	Lcd_Out@buffer& (0+255),b
   694  0014BC  0E00               	movlw	high _buffer_rx
   695  0014BE  6F85               	movwf	(Lcd_Out@buffer+1)& (0+255),b
   696  0014C0  0E02               	movlw	2
   697  0014C2  EC02  F00B         	call	_Lcd_Out
   698  0014C6  EF4B  F00A         	goto	l210
   699  0014CA  EF07  F000         	goto	start
   700  0014CE                     __end_of_main:
   701                           	callstack 0
   702                           
   703 ;; *************** function _serial_rx_str_until *****************
   704 ;; Defined at:
   705 ;;		line 121 in file "serial.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;  buff            2    0[BANK0 ] PTR unsigned char 
   708 ;;		 -> buffer_rx(20), 
   709 ;;  size            2    2[BANK0 ] unsigned int 
   710 ;;  term            1    4[BANK0 ] unsigned char 
   711 ;; Auto vars:     Size  Location     Type
   712 ;;  i               2    8[BANK0 ] unsigned int 
   713 ;; Return value:  Size  Location     Type
   714 ;;                  2    0[BANK0 ] PTR unsigned char 
   715 ;; Registers used:
   716 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   717 ;; Tracked objects:
   718 ;;		On entry : 0/0
   719 ;;		On exit  : 0/0
   720 ;;		Unchanged: 0/0
   721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   722 ;;      Params:         0       5       0       0       0       0       0
   723 ;;      Locals:         0       2       0       0       0       0       0
   724 ;;      Temps:          0       3       0       0       0       0       0
   725 ;;      Totals:         0      10       0       0       0       0       0
   726 ;;Total ram usage:       10 bytes
   727 ;; Hardware stack levels used:    1
   728 ;; Hardware stack levels required when called:    3
   729 ;; This function calls:
   730 ;;		Nothing
   731 ;; This function is called by:
   732 ;;		_main
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text1
   737  00120A                     __ptext1:
   738                           	callstack 0
   739  00120A                     _serial_rx_str_until:
   740                           	callstack 27
   741  00120A                     
   742                           ;serial.c: 124: unsigned int i;;serial.c: 125: if(RCSTAbits.FERR || RCSTAbits.OERR)
   743  00120A  B4AB               	btfsc	171,2,c	;volatile
   744  00120C  EF0A  F009         	goto	u1771
   745  001210  EF0C  F009         	goto	u1770
   746  001214                     u1771:
   747  001214  EF13  F009         	goto	l294
   748  001218                     u1770:
   749  001218  A2AB               	btfss	171,1,c	;volatile
   750  00121A  EF11  F009         	goto	u1781
   751  00121E  EF13  F009         	goto	u1780
   752  001222                     u1781:
   753  001222  EF15  F009         	goto	l2553
   754  001226                     u1780:
   755  001226                     l294:
   756                           
   757                           ;serial.c: 126: {;serial.c: 127: RCSTAbits.CREN=0;
   758  001226  98AB               	bcf	171,4,c	;volatile
   759                           
   760                           ;serial.c: 128: RCSTAbits.CREN=1;
   761  001228  88AB               	bsf	171,4,c	;volatile
   762  00122A                     l2553:
   763                           
   764                           ;serial.c: 129: };serial.c: 131: size--;
   765  00122A  0100               	movlb	0	; () banked
   766  00122C  0782               	decf	serial_rx_str_until@size& (0+255),f,b
   767  00122E  A0D8               	btfss	status,0,c
   768  001230  0783               	decf	(serial_rx_str_until@size+1)& (0+255),f,b
   769  001232                     
   770                           ; BSR set to: 0
   771                           ;serial.c: 132: i=0;
   772  001232  0E00               	movlw	0
   773  001234  6F89               	movwf	(serial_rx_str_until@i+1)& (0+255),b
   774  001236  0E00               	movlw	0
   775  001238  6F88               	movwf	serial_rx_str_until@i& (0+255),b
   776  00123A  EF29  F009         	goto	l2559
   777  00123E                     l2557:
   778                           
   779                           ;serial.c: 136: {;serial.c: 137: _delaywdt((unsigned long)((1)*(8000000/4000.0)));
   780  00123E  0E02               	movlw	2
   781  001240  0100               	movlb	0	; () banked
   782  001242  6F85               	movwf	??_serial_rx_str_until& (0+255),b
   783  001244  0EF2               	movlw	242
   784  001246                     u1867:
   785  001246  0004               	clrwdt	
   786  001248  2EE8               	decfsz	wreg,f,c
   787  00124A  D7FD               	bra	u1867
   788  00124C  2F85               	decfsz	??_serial_rx_str_until& (0+255),f,b
   789  00124E  D7FB               	bra	u1867
   790  001250  0004               	clrwdt	
   791  001252                     l2559:
   792  001252  AA9E               	btfss	158,5,c	;volatile
   793  001254  EF2E  F009         	goto	u1791
   794  001258  EF30  F009         	goto	u1790
   795  00125C                     u1791:
   796  00125C  EF1F  F009         	goto	l2557
   797  001260                     u1790:
   798  001260                     l2561:
   799                           
   800                           ;serial.c: 140: {;serial.c: 141: buff[i]= RCREG;
   801  001260  0100               	movlb	0	; () banked
   802  001262  5188               	movf	serial_rx_str_until@i& (0+255),w,b
   803  001264  2580               	addwf	serial_rx_str_until@buff& (0+255),w,b
   804  001266  6ED9               	movwf	fsr2l,c
   805  001268  5189               	movf	(serial_rx_str_until@i+1)& (0+255),w,b
   806  00126A  2181               	addwfc	(serial_rx_str_until@buff+1)& (0+255),w,b
   807  00126C  6EDA               	movwf	fsr2h,c
   808  00126E  CFAE FFDF          	movff	4014,indf2	;volatile
   809  001272                     
   810                           ; BSR set to: 0
   811                           ;serial.c: 142: i++;
   812  001272  4B88               	infsnz	serial_rx_str_until@i& (0+255),f,b
   813  001274  2B89               	incf	(serial_rx_str_until@i+1)& (0+255),f,b
   814  001276                     
   815                           ; BSR set to: 0
   816                           ;serial.c: 143: }while((PIR1bits.RCIF)&&(i < size)&&(buff[i-1]!=term));
   817  001276  AA9E               	btfss	158,5,c	;volatile
   818  001278  EF40  F009         	goto	u1801
   819  00127C  EF42  F009         	goto	u1800
   820  001280                     u1801:
   821  001280  EF62  F009         	goto	l2571
   822  001284                     u1800:
   823  001284                     
   824                           ; BSR set to: 0
   825  001284  5182               	movf	serial_rx_str_until@size& (0+255),w,b
   826  001286  5D88               	subwf	serial_rx_str_until@i& (0+255),w,b
   827  001288  5183               	movf	(serial_rx_str_until@size+1)& (0+255),w,b
   828  00128A  5989               	subwfb	(serial_rx_str_until@i+1)& (0+255),w,b
   829  00128C  B0D8               	btfsc	status,0,c
   830  00128E  EF4B  F009         	goto	u1811
   831  001292  EF4D  F009         	goto	u1810
   832  001296                     u1811:
   833  001296  EF62  F009         	goto	l2571
   834  00129A                     u1810:
   835  00129A                     
   836                           ; BSR set to: 0
   837  00129A  5188               	movf	serial_rx_str_until@i& (0+255),w,b
   838  00129C  2580               	addwf	serial_rx_str_until@buff& (0+255),w,b
   839  00129E  6F85               	movwf	??_serial_rx_str_until& (0+255),b
   840  0012A0  5189               	movf	(serial_rx_str_until@i+1)& (0+255),w,b
   841  0012A2  2181               	addwfc	(serial_rx_str_until@buff+1)& (0+255),w,b
   842  0012A4  6F86               	movwf	(??_serial_rx_str_until+1)& (0+255),b
   843  0012A6  0EFF               	movlw	255
   844  0012A8  2585               	addwf	??_serial_rx_str_until& (0+255),w,b
   845  0012AA  6ED9               	movwf	fsr2l,c
   846  0012AC  0EFF               	movlw	255
   847  0012AE  2186               	addwfc	(??_serial_rx_str_until+1)& (0+255),w,b
   848  0012B0  6EDA               	movwf	fsr2h,c
   849  0012B2  5184               	movf	serial_rx_str_until@term& (0+255),w,b
   850  0012B4  18DE               	xorwf	postinc2,w,c
   851  0012B6  A4D8               	btfss	status,2,c
   852  0012B8  EF60  F009         	goto	u1821
   853  0012BC  EF62  F009         	goto	u1820
   854  0012C0                     u1821:
   855  0012C0  EF30  F009         	goto	l2561
   856  0012C4                     u1820:
   857  0012C4                     l2571:
   858                           
   859                           ; BSR set to: 0
   860                           ;serial.c: 145: }while((i < size)&&(buff[i-1]!=term));
   861  0012C4  5182               	movf	serial_rx_str_until@size& (0+255),w,b
   862  0012C6  5D88               	subwf	serial_rx_str_until@i& (0+255),w,b
   863  0012C8  5183               	movf	(serial_rx_str_until@size+1)& (0+255),w,b
   864  0012CA  5989               	subwfb	(serial_rx_str_until@i+1)& (0+255),w,b
   865  0012CC  B0D8               	btfsc	status,0,c
   866  0012CE  EF6B  F009         	goto	u1831
   867  0012D2  EF6D  F009         	goto	u1830
   868  0012D6                     u1831:
   869  0012D6  EF82  F009         	goto	l2575
   870  0012DA                     u1830:
   871  0012DA                     
   872                           ; BSR set to: 0
   873  0012DA  5188               	movf	serial_rx_str_until@i& (0+255),w,b
   874  0012DC  2580               	addwf	serial_rx_str_until@buff& (0+255),w,b
   875  0012DE  6F85               	movwf	??_serial_rx_str_until& (0+255),b
   876  0012E0  5189               	movf	(serial_rx_str_until@i+1)& (0+255),w,b
   877  0012E2  2181               	addwfc	(serial_rx_str_until@buff+1)& (0+255),w,b
   878  0012E4  6F86               	movwf	(??_serial_rx_str_until+1)& (0+255),b
   879  0012E6  0EFF               	movlw	255
   880  0012E8  2585               	addwf	??_serial_rx_str_until& (0+255),w,b
   881  0012EA  6ED9               	movwf	fsr2l,c
   882  0012EC  0EFF               	movlw	255
   883  0012EE  2186               	addwfc	(??_serial_rx_str_until+1)& (0+255),w,b
   884  0012F0  6EDA               	movwf	fsr2h,c
   885  0012F2  5184               	movf	serial_rx_str_until@term& (0+255),w,b
   886  0012F4  18DE               	xorwf	postinc2,w,c
   887  0012F6  A4D8               	btfss	status,2,c
   888  0012F8  EF80  F009         	goto	u1841
   889  0012FC  EF82  F009         	goto	u1840
   890  001300                     u1841:
   891  001300  EF29  F009         	goto	l2559
   892  001304                     u1840:
   893  001304                     l2575:
   894                           
   895                           ; BSR set to: 0
   896                           ;serial.c: 148: buff[i]= 0;
   897  001304  5188               	movf	serial_rx_str_until@i& (0+255),w,b
   898  001306  2580               	addwf	serial_rx_str_until@buff& (0+255),w,b
   899  001308  6ED9               	movwf	fsr2l,c
   900  00130A  5189               	movf	(serial_rx_str_until@i+1)& (0+255),w,b
   901  00130C  2181               	addwfc	(serial_rx_str_until@buff+1)& (0+255),w,b
   902  00130E  6EDA               	movwf	fsr2h,c
   903  001310  0E00               	movlw	0
   904  001312  6EDF               	movwf	indf2,c
   905  001314                     
   906                           ; BSR set to: 0
   907  001314  0012               	return		;funcret
   908  001316                     __end_of_serial_rx_str_until:
   909                           	callstack 0
   910                           
   911 ;; *************** function _serial_init *****************
   912 ;; Defined at:
   913 ;;		line 30 in file "serial.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;		None
   916 ;; Auto vars:     Size  Location     Type
   917 ;;		None
   918 ;; Return value:  Size  Location     Type
   919 ;;                  1    wreg      void 
   920 ;; Registers used:
   921 ;;		wreg, status,2
   922 ;; Tracked objects:
   923 ;;		On entry : 0/0
   924 ;;		On exit  : 0/0
   925 ;;		Unchanged: 0/0
   926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   927 ;;      Params:         0       0       0       0       0       0       0
   928 ;;      Locals:         0       0       0       0       0       0       0
   929 ;;      Temps:          0       0       0       0       0       0       0
   930 ;;      Totals:         0       0       0       0       0       0       0
   931 ;;Total ram usage:        0 bytes
   932 ;; Hardware stack levels used:    1
   933 ;; Hardware stack levels required when called:    3
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text2
   942  0019CC                     __ptext2:
   943                           	callstack 0
   944  0019CC                     _serial_init:
   945                           	callstack 27
   946  0019CC                     
   947                           ;serial.c: 32: BAUDCONbits.BRG16 = 0;
   948  0019CC  96B8               	bcf	184,3,c	;volatile
   949  0019CE                     
   950                           ;serial.c: 33: SPBRG = 51;
   951  0019CE  0E33               	movlw	51
   952  0019D0  6EAF               	movwf	175,c	;volatile
   953  0019D2                     
   954                           ;serial.c: 36: TXSTAbits.TX9=0;
   955  0019D2  9CAC               	bcf	172,6,c	;volatile
   956  0019D4                     
   957                           ;serial.c: 37: TXSTAbits.TXEN=1;
   958  0019D4  8AAC               	bsf	172,5,c	;volatile
   959  0019D6                     
   960                           ;serial.c: 38: TXSTAbits.SYNC=0;
   961  0019D6  98AC               	bcf	172,4,c	;volatile
   962  0019D8                     
   963                           ;serial.c: 39: TXSTAbits.BRGH=1;
   964  0019D8  84AC               	bsf	172,2,c	;volatile
   965  0019DA                     
   966                           ;serial.c: 40: RCSTAbits.SPEN=1;
   967  0019DA  8EAB               	bsf	171,7,c	;volatile
   968  0019DC                     
   969                           ;serial.c: 41: RCSTAbits.RX9=0;
   970  0019DC  9CAB               	bcf	171,6,c	;volatile
   971  0019DE                     
   972                           ;serial.c: 42: RCSTAbits.CREN=1;
   973  0019DE  88AB               	bsf	171,4,c	;volatile
   974  0019E0  0012               	return		;funcret
   975  0019E2                     __end_of_serial_init:
   976                           	callstack 0
   977                           
   978 ;; *************** function _adc_init *****************
   979 ;; Defined at:
   980 ;;		line 30 in file "adc.c"
   981 ;; Parameters:    Size  Location     Type
   982 ;;		None
   983 ;; Auto vars:     Size  Location     Type
   984 ;;		None
   985 ;; Return value:  Size  Location     Type
   986 ;;                  1    wreg      void 
   987 ;; Registers used:
   988 ;;		wreg, status,2
   989 ;; Tracked objects:
   990 ;;		On entry : 0/0
   991 ;;		On exit  : 0/0
   992 ;;		Unchanged: 0/0
   993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   994 ;;      Params:         0       0       0       0       0       0       0
   995 ;;      Locals:         0       0       0       0       0       0       0
   996 ;;      Temps:          0       0       0       0       0       0       0
   997 ;;      Totals:         0       0       0       0       0       0       0
   998 ;;Total ram usage:        0 bytes
   999 ;; Hardware stack levels used:    1
  1000 ;; Hardware stack levels required when called:    3
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text3
  1009  0019F8                     __ptext3:
  1010                           	callstack 0
  1011  0019F8                     _adc_init:
  1012                           	callstack 27
  1013  0019F8                     
  1014                           ;adc.c: 36: ADCON0=0x01;
  1015  0019F8  0E01               	movlw	1
  1016  0019FA  6EC2               	movwf	194,c	;volatile
  1017                           
  1018                           ;adc.c: 37: ADCON1=0x0B;
  1019  0019FC  0E0B               	movlw	11
  1020  0019FE  6EC1               	movwf	193,c	;volatile
  1021                           
  1022                           ;adc.c: 38: ADCON2=0x01;
  1023  001A00  0E01               	movlw	1
  1024  001A02  6EC0               	movwf	192,c	;volatile
  1025  001A04  0012               	return		;funcret
  1026  001A06                     __end_of_adc_init:
  1027                           	callstack 0
  1028                           
  1029 ;; *************** function _PWM1_Start *****************
  1030 ;; Defined at:
  1031 ;;		line 71 in file "pwm.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;		None
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;		None
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  1    wreg      void 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1045 ;;      Params:         0       0       0       0       0       0       0
  1046 ;;      Locals:         0       0       0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0
  1048 ;;      Totals:         0       0       0       0       0       0       0
  1049 ;;Total ram usage:        0 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    3
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_main
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text4
  1060  00197A                     __ptext4:
  1061                           	callstack 0
  1062  00197A                     _PWM1_Start:
  1063                           	callstack 27
  1064  00197A                     
  1065                           ;pwm.c: 74: TRISCbits.TRISC2=0;
  1066  00197A  9494               	bcf	148,2,c	;volatile
  1067                           
  1068                           ;pwm.c: 75: TRISDbits.TRISD5=0;
  1069  00197C  9A95               	bcf	149,5,c	;volatile
  1070  00197E                     
  1071                           ;pwm.c: 77: CCP1CON=0x0F;
  1072  00197E  0E0F               	movlw	15
  1073  001980  6EBD               	movwf	189,c	;volatile
  1074  001982                     
  1075                           ;pwm.c: 79: T2CONbits.TMR2ON=1;
  1076  001982  84CA               	bsf	202,2,c	;volatile
  1077  001984                     
  1078                           ;pwm.c: 87: PIR1bits.TMR2IF=0;
  1079  001984  929E               	bcf	158,1,c	;volatile
  1080  001986                     l57:
  1081  001986  A29E               	btfss	158,1,c	;volatile
  1082  001988  EFC8  F00C         	goto	u1731
  1083  00198C  EFCA  F00C         	goto	u1730
  1084  001990                     u1731:
  1085  001990  EFC3  F00C         	goto	l57
  1086  001994                     u1730:
  1087  001994                     
  1088                           ;pwm.c: 89: PIR1bits.TMR2IF=0;
  1089  001994  929E               	bcf	158,1,c	;volatile
  1090  001996                     l60:
  1091  001996  A29E               	btfss	158,1,c	;volatile
  1092  001998  EFD0  F00C         	goto	u1741
  1093  00199C  EFD2  F00C         	goto	u1740
  1094  0019A0                     u1741:
  1095  0019A0  EFCB  F00C         	goto	l60
  1096  0019A4                     u1740:
  1097  0019A4  0012               	return		;funcret
  1098  0019A6                     __end_of_PWM1_Start:
  1099                           	callstack 0
  1100                           
  1101 ;; *************** function _PWM1_Init *****************
  1102 ;; Defined at:
  1103 ;;		line 30 in file "pwm.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;  f               2   14[BANK0 ] unsigned int 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  temp            2   20[BANK0 ] unsigned int 
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1117 ;;      Params:         0       2       0       0       0       0       0
  1118 ;;      Locals:         0       2       0       0       0       0       0
  1119 ;;      Temps:          0       4       0       0       0       0       0
  1120 ;;      Totals:         0       8       0       0       0       0       0
  1121 ;;Total ram usage:        8 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; Hardware stack levels required when called:    4
  1124 ;; This function calls:
  1125 ;;		___aldiv
  1126 ;; This function is called by:
  1127 ;;		_main
  1128 ;; This function uses a non-reentrant model
  1129 ;;
  1130                           
  1131                           	psect	text5
  1132  001316                     __ptext5:
  1133                           	callstack 0
  1134  001316                     _PWM1_Init:
  1135                           	callstack 26
  1136  001316                     
  1137                           ;pwm.c: 32: unsigned int temp;;pwm.c: 37: CCP1CON=0x00;
  1138  001316  0E00               	movlw	0
  1139  001318  6EBD               	movwf	189,c	;volatile
  1140  00131A                     
  1141                           ;pwm.c: 38: TRISCbits.TRISC2=1;
  1142  00131A  8494               	bsf	148,2,c	;volatile
  1143  00131C                     
  1144                           ;pwm.c: 39: TRISDbits.TRISD5=1;
  1145  00131C  8A95               	bsf	149,5,c	;volatile
  1146  00131E                     
  1147                           ;pwm.c: 41: PORTCbits.RC2=0;
  1148  00131E  9482               	bcf	130,2,c	;volatile
  1149  001320                     
  1150                           ;pwm.c: 42: PORTDbits.RD5=0;
  1151  001320  9A83               	bcf	131,5,c	;volatile
  1152                           
  1153                           ;pwm.c: 44: CCPR1L=0;
  1154  001322  0E00               	movlw	0
  1155  001324  6EBE               	movwf	190,c	;volatile
  1156  001326                     
  1157                           ;pwm.c: 48: T2CONbits.TMR2ON=0;
  1158  001326  94CA               	bcf	202,2,c	;volatile
  1159  001328                     
  1160                           ;pwm.c: 50: temp=8000000/(f*4l);
  1161  001328  0E00               	movlw	0
  1162  00132A  0100               	movlb	0	; () banked
  1163  00132C  6F80               	movwf	___aldiv@dividend& (0+255),b
  1164  00132E  0E12               	movlw	18
  1165  001330  6F81               	movwf	(___aldiv@dividend+1)& (0+255),b
  1166  001332  0E7A               	movlw	122
  1167  001334  6F82               	movwf	(___aldiv@dividend+2)& (0+255),b
  1168  001336  0E00               	movlw	0
  1169  001338  6F83               	movwf	(___aldiv@dividend+3)& (0+255),b
  1170  00133A  518E               	movf	PWM1_Init@f& (0+255),w,b
  1171  00133C  6F90               	movwf	??_PWM1_Init& (0+255),b
  1172  00133E  518F               	movf	(PWM1_Init@f+1)& (0+255),w,b
  1173  001340  6F91               	movwf	(??_PWM1_Init+1)& (0+255),b
  1174  001342  6B92               	clrf	(??_PWM1_Init+2)& (0+255),b
  1175  001344  6B93               	clrf	(??_PWM1_Init+3)& (0+255),b
  1176  001346  0E02               	movlw	2
  1177  001348                     u1695:
  1178  001348  90D8               	bcf	status,0,c
  1179  00134A  3790               	rlcf	??_PWM1_Init& (0+255),f,b
  1180  00134C  3791               	rlcf	(??_PWM1_Init+1)& (0+255),f,b
  1181  00134E  3792               	rlcf	(??_PWM1_Init+2)& (0+255),f,b
  1182  001350  3793               	rlcf	(??_PWM1_Init+3)& (0+255),f,b
  1183  001352  2EE8               	decfsz	wreg,f,c
  1184  001354  EFA4  F009         	goto	u1695
  1185  001358  C090  F084         	movff	??_PWM1_Init,___aldiv@divisor
  1186  00135C  C091  F085         	movff	??_PWM1_Init+1,___aldiv@divisor+1
  1187  001360  C092  F086         	movff	??_PWM1_Init+2,___aldiv@divisor+2
  1188  001364  C093  F087         	movff	??_PWM1_Init+3,___aldiv@divisor+3
  1189  001368  EC7E  F008         	call	___aldiv	;wreg free
  1190  00136C  C080  F094         	movff	?___aldiv,PWM1_Init@temp
  1191  001370  C081  F095         	movff	?___aldiv+1,PWM1_Init@temp+1
  1192  001374                     
  1193                           ;pwm.c: 52: if (temp < 256)
  1194  001374  0100               	movlb	0	; () banked
  1195  001376  0595               	decf	(PWM1_Init@temp+1)& (0+255),w,b
  1196  001378  B0D8               	btfsc	status,0,c
  1197  00137A  EFC1  F009         	goto	u1701
  1198  00137E  EFC3  F009         	goto	u1700
  1199  001382                     u1701:
  1200  001382  EFC9  F009         	goto	l2433
  1201  001386                     u1700:
  1202  001386                     
  1203                           ; BSR set to: 0
  1204                           ;pwm.c: 53: {;pwm.c: 54: T2CONbits.T2CKPS=0;
  1205  001386  0EFC               	movlw	-4
  1206  001388  16CA               	andwf	202,f,c	;volatile
  1207  00138A                     
  1208                           ; BSR set to: 0
  1209                           ;pwm.c: 55: PR2=temp;
  1210  00138A  C094  FFCB         	movff	PWM1_Init@temp,4043	;volatile
  1211                           
  1212                           ;pwm.c: 56: }
  1213  00138E  EF03  F00A         	goto	l2443
  1214  001392                     l2433:
  1215                           
  1216                           ; BSR set to: 0
  1217                           ;pwm.c: 57: else if(temp/4 < 256 )
  1218  001392  C094  F090         	movff	PWM1_Init@temp,??_PWM1_Init
  1219  001396  C095  F091         	movff	PWM1_Init@temp+1,??_PWM1_Init+1
  1220  00139A  90D8               	bcf	status,0,c
  1221  00139C  3391               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
  1222  00139E  3390               	rrcf	??_PWM1_Init& (0+255),f,b
  1223  0013A0  90D8               	bcf	status,0,c
  1224  0013A2  3391               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
  1225  0013A4  3390               	rrcf	??_PWM1_Init& (0+255),f,b
  1226  0013A6  0591               	decf	(??_PWM1_Init+1)& (0+255),w,b
  1227  0013A8  B0D8               	btfsc	status,0,c
  1228  0013AA  EFD9  F009         	goto	u1711
  1229  0013AE  EFDB  F009         	goto	u1710
  1230  0013B2                     u1711:
  1231  0013B2  EFEF  F009         	goto	l2439
  1232  0013B6                     u1710:
  1233  0013B6                     
  1234                           ; BSR set to: 0
  1235                           ;pwm.c: 58: {;pwm.c: 59: T2CONbits.T2CKPS=1;
  1236  0013B6  50CA               	movf	202,w,c	;volatile
  1237  0013B8  0BFC               	andlw	-4
  1238  0013BA  0901               	iorlw	1
  1239  0013BC  6ECA               	movwf	202,c	;volatile
  1240  0013BE                     
  1241                           ; BSR set to: 0
  1242                           ;pwm.c: 60: PR2=(temp+2)/4;
  1243  0013BE  0E02               	movlw	2
  1244  0013C0  2594               	addwf	PWM1_Init@temp& (0+255),w,b
  1245  0013C2  6F90               	movwf	??_PWM1_Init& (0+255),b
  1246  0013C4  0E00               	movlw	0
  1247  0013C6  2195               	addwfc	(PWM1_Init@temp+1)& (0+255),w,b
  1248  0013C8  6F91               	movwf	(??_PWM1_Init+1)& (0+255),b
  1249  0013CA  90D8               	bcf	status,0,c
  1250  0013CC  3391               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
  1251  0013CE  3390               	rrcf	??_PWM1_Init& (0+255),f,b
  1252  0013D0  90D8               	bcf	status,0,c
  1253  0013D2  3391               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
  1254  0013D4  3390               	rrcf	??_PWM1_Init& (0+255),f,b
  1255  0013D6  5190               	movf	??_PWM1_Init& (0+255),w,b
  1256  0013D8  6ECB               	movwf	203,c	;volatile
  1257                           
  1258                           ;pwm.c: 61: }
  1259  0013DA  EF03  F00A         	goto	l2443
  1260  0013DE                     l2439:
  1261                           
  1262                           ; BSR set to: 0
  1263                           ;pwm.c: 62: else;pwm.c: 63: {;pwm.c: 64: PR2=(temp+8)/16;
  1264  0013DE  0E08               	movlw	8
  1265  0013E0  2594               	addwf	PWM1_Init@temp& (0+255),w,b
  1266  0013E2  6F90               	movwf	??_PWM1_Init& (0+255),b
  1267  0013E4  0E00               	movlw	0
  1268  0013E6  2195               	addwfc	(PWM1_Init@temp+1)& (0+255),w,b
  1269  0013E8  6F91               	movwf	(??_PWM1_Init+1)& (0+255),b
  1270  0013EA  0E04               	movlw	4
  1271  0013EC  6F92               	movwf	(??_PWM1_Init+2)& (0+255),b
  1272  0013EE                     u1725:
  1273  0013EE  90D8               	bcf	status,0,c
  1274  0013F0  3391               	rrcf	(??_PWM1_Init+1)& (0+255),f,b
  1275  0013F2  3390               	rrcf	??_PWM1_Init& (0+255),f,b
  1276  0013F4  2F92               	decfsz	(??_PWM1_Init+2)& (0+255),f,b
  1277  0013F6  EFF7  F009         	goto	u1725
  1278  0013FA  5190               	movf	??_PWM1_Init& (0+255),w,b
  1279  0013FC  6ECB               	movwf	203,c	;volatile
  1280  0013FE                     
  1281                           ; BSR set to: 0
  1282                           ;pwm.c: 65: T2CONbits.T2CKPS=2;
  1283  0013FE  50CA               	movf	202,w,c	;volatile
  1284  001400  0BFC               	andlw	-4
  1285  001402  0902               	iorlw	2
  1286  001404  6ECA               	movwf	202,c	;volatile
  1287  001406                     l2443:
  1288                           
  1289                           ; BSR set to: 0
  1290                           ;pwm.c: 66: };pwm.c: 68: T2CONbits.T2OUTPS=0;
  1291  001406  0E87               	movlw	-121
  1292  001408  16CA               	andwf	202,f,c	;volatile
  1293  00140A                     
  1294                           ; BSR set to: 0
  1295  00140A  0012               	return		;funcret
  1296  00140C                     __end_of_PWM1_Init:
  1297                           	callstack 0
  1298                           
  1299 ;; *************** function ___aldiv *****************
  1300 ;; Defined at:
  1301 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\aldiv.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  dividend        4    0[BANK0 ] long 
  1304 ;;  divisor         4    4[BANK0 ] long 
  1305 ;; Auto vars:     Size  Location     Type
  1306 ;;  quotient        4   10[BANK0 ] long 
  1307 ;;  sign            1    9[BANK0 ] unsigned char 
  1308 ;;  counter         1    8[BANK0 ] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  4    0[BANK0 ] long 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2, status,0
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1318 ;;      Params:         0       8       0       0       0       0       0
  1319 ;;      Locals:         0       6       0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0       0       0
  1321 ;;      Totals:         0      14       0       0       0       0       0
  1322 ;;Total ram usage:       14 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    3
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_PWM1_Init
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           	psect	text6
  1333  0010FC                     __ptext6:
  1334                           	callstack 0
  1335  0010FC                     ___aldiv:
  1336                           	callstack 26
  1337  0010FC  0E00               	movlw	0
  1338  0010FE  0100               	movlb	0	; () banked
  1339  001100  6F89               	movwf	___aldiv@sign& (0+255),b
  1340  001102                     
  1341                           ; BSR set to: 0
  1342  001102  BF87               	btfsc	(___aldiv@divisor+3)& (0+255),7,b
  1343  001104  EF88  F008         	goto	u1630
  1344  001108  EF86  F008         	goto	u1631
  1345  00110C                     u1631:
  1346  00110C  EF92  F008         	goto	l2375
  1347  001110                     u1630:
  1348  001110                     
  1349                           ; BSR set to: 0
  1350  001110  1F87               	comf	(___aldiv@divisor+3)& (0+255),f,b
  1351  001112  1F86               	comf	(___aldiv@divisor+2)& (0+255),f,b
  1352  001114  1F85               	comf	(___aldiv@divisor+1)& (0+255),f,b
  1353  001116  6D84               	negf	___aldiv@divisor& (0+255),b
  1354  001118  0E00               	movlw	0
  1355  00111A  2385               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
  1356  00111C  2386               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
  1357  00111E  2387               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
  1358  001120                     
  1359                           ; BSR set to: 0
  1360  001120  0E01               	movlw	1
  1361  001122  6F89               	movwf	___aldiv@sign& (0+255),b
  1362  001124                     l2375:
  1363                           
  1364                           ; BSR set to: 0
  1365  001124  BF83               	btfsc	(___aldiv@dividend+3)& (0+255),7,b
  1366  001126  EF99  F008         	goto	u1640
  1367  00112A  EF97  F008         	goto	u1641
  1368  00112E                     u1641:
  1369  00112E  EFA3  F008         	goto	l2381
  1370  001132                     u1640:
  1371  001132                     
  1372                           ; BSR set to: 0
  1373  001132  1F83               	comf	(___aldiv@dividend+3)& (0+255),f,b
  1374  001134  1F82               	comf	(___aldiv@dividend+2)& (0+255),f,b
  1375  001136  1F81               	comf	(___aldiv@dividend+1)& (0+255),f,b
  1376  001138  6D80               	negf	___aldiv@dividend& (0+255),b
  1377  00113A  0E00               	movlw	0
  1378  00113C  2381               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
  1379  00113E  2382               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
  1380  001140  2383               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
  1381  001142                     
  1382                           ; BSR set to: 0
  1383  001142  0E01               	movlw	1
  1384  001144  1B89               	xorwf	___aldiv@sign& (0+255),f,b
  1385  001146                     l2381:
  1386                           
  1387                           ; BSR set to: 0
  1388  001146  0E00               	movlw	0
  1389  001148  6F8A               	movwf	___aldiv@quotient& (0+255),b
  1390  00114A  0E00               	movlw	0
  1391  00114C  6F8B               	movwf	(___aldiv@quotient+1)& (0+255),b
  1392  00114E  0E00               	movlw	0
  1393  001150  6F8C               	movwf	(___aldiv@quotient+2)& (0+255),b
  1394  001152  0E00               	movlw	0
  1395  001154  6F8D               	movwf	(___aldiv@quotient+3)& (0+255),b
  1396  001156                     
  1397                           ; BSR set to: 0
  1398  001156  5184               	movf	___aldiv@divisor& (0+255),w,b
  1399  001158  1185               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
  1400  00115A  1186               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
  1401  00115C  1187               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
  1402  00115E  B4D8               	btfsc	status,2,c
  1403  001160  EFB4  F008         	goto	u1651
  1404  001164  EFB6  F008         	goto	u1650
  1405  001168                     u1651:
  1406  001168  EFEC  F008         	goto	l2403
  1407  00116C                     u1650:
  1408  00116C                     
  1409                           ; BSR set to: 0
  1410  00116C  0E01               	movlw	1
  1411  00116E  6F88               	movwf	___aldiv@counter& (0+255),b
  1412  001170  EFC0  F008         	goto	l2389
  1413  001174                     l2387:
  1414                           
  1415                           ; BSR set to: 0
  1416  001174  90D8               	bcf	status,0,c
  1417  001176  3784               	rlcf	___aldiv@divisor& (0+255),f,b
  1418  001178  3785               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
  1419  00117A  3786               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
  1420  00117C  3787               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
  1421  00117E  2B88               	incf	___aldiv@counter& (0+255),f,b
  1422  001180                     l2389:
  1423                           
  1424                           ; BSR set to: 0
  1425  001180  AF87               	btfss	(___aldiv@divisor+3)& (0+255),7,b
  1426  001182  EFC5  F008         	goto	u1661
  1427  001186  EFC7  F008         	goto	u1660
  1428  00118A                     u1661:
  1429  00118A  EFBA  F008         	goto	l2387
  1430  00118E                     u1660:
  1431  00118E                     l2391:
  1432                           
  1433                           ; BSR set to: 0
  1434  00118E  90D8               	bcf	status,0,c
  1435  001190  378A               	rlcf	___aldiv@quotient& (0+255),f,b
  1436  001192  378B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
  1437  001194  378C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
  1438  001196  378D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
  1439  001198                     
  1440                           ; BSR set to: 0
  1441  001198  5184               	movf	___aldiv@divisor& (0+255),w,b
  1442  00119A  5D80               	subwf	___aldiv@dividend& (0+255),w,b
  1443  00119C  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1444  00119E  5981               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
  1445  0011A0  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1446  0011A2  5982               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
  1447  0011A4  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1448  0011A6  5983               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
  1449  0011A8  A0D8               	btfss	status,0,c
  1450  0011AA  EFD9  F008         	goto	u1671
  1451  0011AE  EFDB  F008         	goto	u1670
  1452  0011B2                     u1671:
  1453  0011B2  EFE4  F008         	goto	l2399
  1454  0011B6                     u1670:
  1455  0011B6                     
  1456                           ; BSR set to: 0
  1457  0011B6  5184               	movf	___aldiv@divisor& (0+255),w,b
  1458  0011B8  5F80               	subwf	___aldiv@dividend& (0+255),f,b
  1459  0011BA  5185               	movf	(___aldiv@divisor+1)& (0+255),w,b
  1460  0011BC  5B81               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
  1461  0011BE  5186               	movf	(___aldiv@divisor+2)& (0+255),w,b
  1462  0011C0  5B82               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
  1463  0011C2  5187               	movf	(___aldiv@divisor+3)& (0+255),w,b
  1464  0011C4  5B83               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
  1465  0011C6                     
  1466                           ; BSR set to: 0
  1467  0011C6  818A               	bsf	___aldiv@quotient& (0+255),0,b
  1468  0011C8                     l2399:
  1469                           
  1470                           ; BSR set to: 0
  1471  0011C8  90D8               	bcf	status,0,c
  1472  0011CA  3387               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
  1473  0011CC  3386               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
  1474  0011CE  3385               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
  1475  0011D0  3384               	rrcf	___aldiv@divisor& (0+255),f,b
  1476  0011D2                     
  1477                           ; BSR set to: 0
  1478  0011D2  2F88               	decfsz	___aldiv@counter& (0+255),f,b
  1479  0011D4  EFC7  F008         	goto	l2391
  1480  0011D8                     l2403:
  1481                           
  1482                           ; BSR set to: 0
  1483  0011D8  5189               	movf	___aldiv@sign& (0+255),w,b
  1484  0011DA  B4D8               	btfsc	status,2,c
  1485  0011DC  EFF2  F008         	goto	u1681
  1486  0011E0  EFF4  F008         	goto	u1680
  1487  0011E4                     u1681:
  1488  0011E4  EFFC  F008         	goto	l2407
  1489  0011E8                     u1680:
  1490  0011E8                     
  1491                           ; BSR set to: 0
  1492  0011E8  1F8D               	comf	(___aldiv@quotient+3)& (0+255),f,b
  1493  0011EA  1F8C               	comf	(___aldiv@quotient+2)& (0+255),f,b
  1494  0011EC  1F8B               	comf	(___aldiv@quotient+1)& (0+255),f,b
  1495  0011EE  6D8A               	negf	___aldiv@quotient& (0+255),b
  1496  0011F0  0E00               	movlw	0
  1497  0011F2  238B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
  1498  0011F4  238C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
  1499  0011F6  238D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
  1500  0011F8                     l2407:
  1501                           
  1502                           ; BSR set to: 0
  1503  0011F8  C08A  F080         	movff	___aldiv@quotient,?___aldiv
  1504  0011FC  C08B  F081         	movff	___aldiv@quotient+1,?___aldiv+1
  1505  001200  C08C  F082         	movff	___aldiv@quotient+2,?___aldiv+2
  1506  001204  C08D  F083         	movff	___aldiv@quotient+3,?___aldiv+3
  1507  001208                     
  1508                           ; BSR set to: 0
  1509  001208  0012               	return		;funcret
  1510  00120A                     __end_of___aldiv:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function _Lcd_Out *****************
  1514 ;; Defined at:
  1515 ;;		line 96 in file "flexlcd.h"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  y               1    wreg     unsigned char 
  1518 ;;  x               1    3[BANK0 ] unsigned char 
  1519 ;;  buffer          2    4[BANK0 ] PTR const unsigned char 
  1520 ;;		 -> str(5), buffer_rx(20), 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  y               1    6[BANK0 ] unsigned char 
  1523 ;;  data            1    7[BANK0 ] unsigned char 
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1533 ;;      Params:         0       3       0       0       0       0       0
  1534 ;;      Locals:         0       2       0       0       0       0       0
  1535 ;;      Temps:          0       0       0       0       0       0       0
  1536 ;;      Totals:         0       5       0       0       0       0       0
  1537 ;;Total ram usage:        5 bytes
  1538 ;; Hardware stack levels used:    1
  1539 ;; Hardware stack levels required when called:    4
  1540 ;; This function calls:
  1541 ;;		_Lcd_Chr_CP
  1542 ;;		_Lcd_Cmd
  1543 ;; This function is called by:
  1544 ;;		_main
  1545 ;; This function uses a non-reentrant model
  1546 ;;
  1547                           
  1548                           	psect	text7
  1549  001604                     __ptext7:
  1550                           	callstack 0
  1551  001604                     _Lcd_Out:
  1552                           	callstack 26
  1553                           
  1554                           ; BSR set to: 0
  1555                           ;incstack = 0
  1556                           ;Lcd_Out@y stored from wreg
  1557  001604  0100               	movlb	0	; () banked
  1558  001606  6F86               	movwf	Lcd_Out@y& (0+255),b
  1559  001608                     
  1560                           ;flexlcd.h: 98: unsigned char data;;flexlcd.h: 99: switch (y)
  1561  001608  EF1A  F00B         	goto	l2521
  1562  00160C                     l2511:
  1563                           
  1564                           ; BSR set to: 0
  1565  00160C  5183               	movf	Lcd_Out@x& (0+255),w,b
  1566  00160E  0F80               	addlw	128
  1567  001610  6F87               	movwf	Lcd_Out@data& (0+255),b
  1568  001612  EF2E  F00B         	goto	l2523
  1569  001616                     l2513:
  1570                           
  1571                           ; BSR set to: 0
  1572  001616  5183               	movf	Lcd_Out@x& (0+255),w,b
  1573  001618  0FC0               	addlw	192
  1574  00161A  6F87               	movwf	Lcd_Out@data& (0+255),b
  1575  00161C  EF2E  F00B         	goto	l2523
  1576  001620                     l2515:
  1577                           
  1578                           ; BSR set to: 0
  1579  001620  5183               	movf	Lcd_Out@x& (0+255),w,b
  1580  001622  0F94               	addlw	148
  1581  001624  6F87               	movwf	Lcd_Out@data& (0+255),b
  1582  001626  EF2E  F00B         	goto	l2523
  1583  00162A                     l2517:
  1584                           
  1585                           ; BSR set to: 0
  1586  00162A  5183               	movf	Lcd_Out@x& (0+255),w,b
  1587  00162C  0FD4               	addlw	212
  1588  00162E  6F87               	movwf	Lcd_Out@data& (0+255),b
  1589  001630  EF2E  F00B         	goto	l2523
  1590  001634                     l2521:
  1591  001634  0100               	movlb	0	; () banked
  1592  001636  5186               	movf	Lcd_Out@y& (0+255),w,b
  1593                           
  1594                           ; Switch size 1, requested type "simple"
  1595                           ; Number of cases is 4, Range of values is 1 to 4
  1596                           ; switch strategies available:
  1597                           ; Name         Instructions Cycles
  1598                           ; simple_byte           13     7 (average)
  1599                           ;	Chosen strategy is simple_byte
  1600  001638  0A01               	xorlw	1	; case 1
  1601  00163A  B4D8               	btfsc	status,2,c
  1602  00163C  EF06  F00B         	goto	l2511
  1603  001640  0A03               	xorlw	3	; case 2
  1604  001642  B4D8               	btfsc	status,2,c
  1605  001644  EF0B  F00B         	goto	l2513
  1606  001648  0A01               	xorlw	1	; case 3
  1607  00164A  B4D8               	btfsc	status,2,c
  1608  00164C  EF10  F00B         	goto	l2515
  1609  001650  0A07               	xorlw	7	; case 4
  1610  001652  B4D8               	btfsc	status,2,c
  1611  001654  EF15  F00B         	goto	l2517
  1612  001658  EF2E  F00B         	goto	l2523
  1613  00165C                     l2523:
  1614                           
  1615                           ; BSR set to: 0
  1616                           ;flexlcd.h: 107: Lcd_Cmd(data);
  1617  00165C  5187               	movf	Lcd_Out@data& (0+255),w,b
  1618  00165E  EC7E  F005         	call	_Lcd_Cmd
  1619                           
  1620                           ;flexlcd.h: 108: while(*buffer)
  1621  001662  EF3D  F00B         	goto	l2529
  1622  001666                     l2525:
  1623                           
  1624                           ;flexlcd.h: 109: {;flexlcd.h: 110: Lcd_Chr_CP(*buffer);
  1625  001666  C084  FFD9         	movff	Lcd_Out@buffer,fsr2l
  1626  00166A  C085  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  1627  00166E  50DF               	movf	indf2,w,c
  1628  001670  ECDF  F004         	call	_Lcd_Chr_CP
  1629  001674                     
  1630                           ;flexlcd.h: 111: buffer++;
  1631  001674  0100               	movlb	0	; () banked
  1632  001676  4B84               	infsnz	Lcd_Out@buffer& (0+255),f,b
  1633  001678  2B85               	incf	(Lcd_Out@buffer+1)& (0+255),f,b
  1634  00167A                     l2529:
  1635  00167A  C084  FFD9         	movff	Lcd_Out@buffer,fsr2l
  1636  00167E  C085  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  1637  001682  50DF               	movf	indf2,w,c
  1638  001684  A4D8               	btfss	status,2,c
  1639  001686  EF47  F00B         	goto	u1761
  1640  00168A  EF49  F00B         	goto	u1760
  1641  00168E                     u1761:
  1642  00168E  EF33  F00B         	goto	l2525
  1643  001692                     u1760:
  1644  001692  0012               	return		;funcret
  1645  001694                     __end_of_Lcd_Out:
  1646                           	callstack 0
  1647                           
  1648 ;; *************** function _Lcd_Chr_CP *****************
  1649 ;; Defined at:
  1650 ;;		line 138 in file "flexlcd.h"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;  data            1    wreg     unsigned char 
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;  data            1    2[BANK0 ] unsigned char 
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1664 ;;      Params:         0       0       0       0       0       0       0
  1665 ;;      Locals:         0       1       0       0       0       0       0
  1666 ;;      Temps:          0       2       0       0       0       0       0
  1667 ;;      Totals:         0       3       0       0       0       0       0
  1668 ;;Total ram usage:        3 bytes
  1669 ;; Hardware stack levels used:    1
  1670 ;; Hardware stack levels required when called:    3
  1671 ;; This function calls:
  1672 ;;		Nothing
  1673 ;; This function is called by:
  1674 ;;		_Lcd_Out
  1675 ;;		_Lcd_Out2
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text8
  1680  0009BE                     __ptext8:
  1681                           	callstack 0
  1682  0009BE                     _Lcd_Chr_CP:
  1683                           	callstack 26
  1684                           
  1685                           ;incstack = 0
  1686                           ;Lcd_Chr_CP@data stored from wreg
  1687  0009BE  0100               	movlb	0	; () banked
  1688  0009C0  6F82               	movwf	Lcd_Chr_CP@data& (0+255),b
  1689  0009C2                     
  1690                           ;flexlcd.h: 139: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
  1691  0009C2  9284               	bcf	132,1,c	;volatile
  1692  0009C4  8484               	bsf	132,2,c	;volatile
  1693  0009C6                     
  1694                           ;flexlcd.h: 140: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1695  0009C6  0100               	movlb	0	; () banked
  1696  0009C8  6B80               	clrf	??_Lcd_Chr_CP& (0+255),b
  1697  0009CA  AF82               	btfss	Lcd_Chr_CP@data& (0+255),7,b
  1698  0009CC  D001               	bra	u1605
  1699  0009CE  2B80               	incf	??_Lcd_Chr_CP& (0+255),f,b
  1700  0009D0                     u1605:
  1701  0009D0  0E01               	movlw	1
  1702  0009D2  1780               	andwf	??_Lcd_Chr_CP& (0+255),f,b
  1703  0009D4  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1704  0009D6  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1705  0009D8  5083               	movf	131,w,c	;volatile
  1706  0009DA  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1707  0009DC  0B7F               	andlw	-129
  1708  0009DE  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1709  0009E0  6E83               	movwf	131,c	;volatile
  1710  0009E2  C082  F080         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1711  0009E6  0E06               	movlw	6
  1712  0009E8  6F81               	movwf	(??_Lcd_Chr_CP+1)& (0+255),b
  1713  0009EA                     u1615:
  1714  0009EA  90D8               	bcf	status,0,c
  1715  0009EC  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1716  0009EE  2F81               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,b
  1717  0009F0  EFF5  F004         	goto	u1615
  1718  0009F4  0E01               	movlw	1
  1719  0009F6  1780               	andwf	??_Lcd_Chr_CP& (0+255),f,b
  1720  0009F8  3B80               	swapf	??_Lcd_Chr_CP& (0+255),f,b
  1721  0009FA  4780               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
  1722  0009FC  4780               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
  1723  0009FE  5083               	movf	131,w,c	;volatile
  1724  000A00  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1725  000A02  0BBF               	andlw	-65
  1726  000A04  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1727  000A06  6E83               	movwf	131,c	;volatile
  1728                           
  1729                           ;flexlcd.h: 141: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1730  000A08  C082  F080         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1731  000A0C  0E05               	movlw	5
  1732  000A0E  6F81               	movwf	(??_Lcd_Chr_CP+1)& (0+255),b
  1733  000A10                     u1625:
  1734  000A10  90D8               	bcf	status,0,c
  1735  000A12  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1736  000A14  2F81               	decfsz	(??_Lcd_Chr_CP+1)& (0+255),f,b
  1737  000A16  EF08  F005         	goto	u1625
  1738  000A1A  0E01               	movlw	1
  1739  000A1C  1780               	andwf	??_Lcd_Chr_CP& (0+255),f,b
  1740  000A1E  3B80               	swapf	??_Lcd_Chr_CP& (0+255),f,b
  1741  000A20  4780               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
  1742  000A22  5083               	movf	131,w,c	;volatile
  1743  000A24  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1744  000A26  0BDF               	andlw	-33
  1745  000A28  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1746  000A2A  6E83               	movwf	131,c	;volatile
  1747  000A2C  C082  F080         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1748  000A30  3B80               	swapf	??_Lcd_Chr_CP& (0+255),f,b
  1749  000A32  0E0F               	movlw	15
  1750  000A34  1780               	andwf	??_Lcd_Chr_CP& (0+255),f,b
  1751  000A36  0E01               	movlw	1
  1752  000A38  1780               	andwf	??_Lcd_Chr_CP& (0+255),f,b
  1753  000A3A  3B80               	swapf	??_Lcd_Chr_CP& (0+255),f,b
  1754  000A3C  5083               	movf	131,w,c	;volatile
  1755  000A3E  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1756  000A40  0BEF               	andlw	-17
  1757  000A42  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1758  000A44  6E83               	movwf	131,c	;volatile
  1759  000A46                     
  1760                           ; BSR set to: 0
  1761                           ;flexlcd.h: 142: _delay(10);
  1762  000A46  0E03               	movlw	3
  1763  000A48                     u1877:
  1764  000A48  2EE8               	decfsz	wreg,f,c
  1765  000A4A  D7FE               	bra	u1877
  1766  000A4C  F000               	nop	
  1767  000A4E                     
  1768                           ;flexlcd.h: 143: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1769  000A4E  8284               	bsf	132,1,c	;volatile
  1770  000A50  0E03               	movlw	3
  1771  000A52                     u1887:
  1772  000A52  2EE8               	decfsz	wreg,f,c
  1773  000A54  D7FE               	bra	u1887
  1774  000A56  F000               	nop	
  1775  000A58  9284               	bcf	132,1,c	;volatile
  1776                           
  1777                           ;flexlcd.h: 144: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1778  000A5A  C082  F080         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1779  000A5E  0100               	movlb	0	; () banked
  1780  000A60  90D8               	bcf	status,0,c
  1781  000A62  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1782  000A64  90D8               	bcf	status,0,c
  1783  000A66  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1784  000A68  90D8               	bcf	status,0,c
  1785  000A6A  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1786  000A6C  0E01               	movlw	1
  1787  000A6E  1780               	andwf	??_Lcd_Chr_CP& (0+255),f,b
  1788  000A70  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1789  000A72  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1790  000A74  5083               	movf	131,w,c	;volatile
  1791  000A76  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1792  000A78  0B7F               	andlw	-129
  1793  000A7A  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1794  000A7C  6E83               	movwf	131,c	;volatile
  1795  000A7E  C082  F080         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1796  000A82  90D8               	bcf	status,0,c
  1797  000A84  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1798  000A86  90D8               	bcf	status,0,c
  1799  000A88  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1800  000A8A  0E01               	movlw	1
  1801  000A8C  1780               	andwf	??_Lcd_Chr_CP& (0+255),f,b
  1802  000A8E  3B80               	swapf	??_Lcd_Chr_CP& (0+255),f,b
  1803  000A90  4780               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
  1804  000A92  4780               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
  1805  000A94  5083               	movf	131,w,c	;volatile
  1806  000A96  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1807  000A98  0BBF               	andlw	-65
  1808  000A9A  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1809  000A9C  6E83               	movwf	131,c	;volatile
  1810                           
  1811                           ;flexlcd.h: 145: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1812  000A9E  C082  F080         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1813  000AA2  90D8               	bcf	status,0,c
  1814  000AA4  3380               	rrcf	??_Lcd_Chr_CP& (0+255),f,b
  1815  000AA6  0E01               	movlw	1
  1816  000AA8  1780               	andwf	??_Lcd_Chr_CP& (0+255),f,b
  1817  000AAA  3B80               	swapf	??_Lcd_Chr_CP& (0+255),f,b
  1818  000AAC  4780               	rlncf	??_Lcd_Chr_CP& (0+255),f,b
  1819  000AAE  5083               	movf	131,w,c	;volatile
  1820  000AB0  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1821  000AB2  0BDF               	andlw	-33
  1822  000AB4  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1823  000AB6  6E83               	movwf	131,c	;volatile
  1824  000AB8  C082  F080         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1825  000ABC  0E01               	movlw	1
  1826  000ABE  1780               	andwf	??_Lcd_Chr_CP& (0+255),f,b
  1827  000AC0  3B80               	swapf	??_Lcd_Chr_CP& (0+255),f,b
  1828  000AC2  5083               	movf	131,w,c	;volatile
  1829  000AC4  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1830  000AC6  0BEF               	andlw	-17
  1831  000AC8  1980               	xorwf	??_Lcd_Chr_CP& (0+255),w,b
  1832  000ACA  6E83               	movwf	131,c	;volatile
  1833  000ACC                     
  1834                           ; BSR set to: 0
  1835                           ;flexlcd.h: 146: _delay(10);
  1836  000ACC  0E03               	movlw	3
  1837  000ACE                     u1897:
  1838  000ACE  2EE8               	decfsz	wreg,f,c
  1839  000AD0  D7FE               	bra	u1897
  1840  000AD2  F000               	nop	
  1841  000AD4                     
  1842                           ;flexlcd.h: 147: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1843  000AD4  8284               	bsf	132,1,c	;volatile
  1844  000AD6  0E03               	movlw	3
  1845  000AD8                     u1907:
  1846  000AD8  2EE8               	decfsz	wreg,f,c
  1847  000ADA  D7FE               	bra	u1907
  1848  000ADC  F000               	nop	
  1849  000ADE  9284               	bcf	132,1,c	;volatile
  1850  000AE0                     
  1851                           ;flexlcd.h: 148: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  1852  000AE0  0E03               	movlw	3
  1853  000AE2                     u1917:
  1854  000AE2  2EE8               	decfsz	wreg,f,c
  1855  000AE4  D7FE               	bra	u1917
  1856  000AE6  F000               	nop	
  1857  000AE8  0E0F               	movlw	15
  1858  000AEA  0100               	movlb	0	; () banked
  1859  000AEC  6F80               	movwf	??_Lcd_Chr_CP& (0+255),b
  1860  000AEE  0E47               	movlw	71
  1861  000AF0                     u1927:
  1862  000AF0  2EE8               	decfsz	wreg,f,c
  1863  000AF2  D7FE               	bra	u1927
  1864  000AF4  2F80               	decfsz	??_Lcd_Chr_CP& (0+255),f,b
  1865  000AF6  D7FC               	bra	u1927
  1866  000AF8  D000               	nop2	
  1867  000AFA  0012               	return		;funcret
  1868  000AFC                     __end_of_Lcd_Chr_CP:
  1869                           	callstack 0
  1870                           
  1871 ;; *************** function _Lcd_Init *****************
  1872 ;; Defined at:
  1873 ;;		line 54 in file "flexlcd.h"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;  data            1    4[BANK0 ] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1887 ;;      Params:         0       0       0       0       0       0       0
  1888 ;;      Locals:         0       1       0       0       0       0       0
  1889 ;;      Temps:          0       1       0       0       0       0       0
  1890 ;;      Totals:         0       2       0       0       0       0       0
  1891 ;;Total ram usage:        2 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    4
  1894 ;; This function calls:
  1895 ;;		_Lcd_Cmd
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text9
  1902  000D68                     __ptext9:
  1903                           	callstack 0
  1904  000D68                     _Lcd_Init:
  1905                           	callstack 26
  1906  000D68                     
  1907                           ;flexlcd.h: 55: unsigned char data;;flexlcd.h: 56: TRISDbits.TRISD7 = 0;
  1908  000D68  9E95               	bcf	149,7,c	;volatile
  1909                           
  1910                           ;flexlcd.h: 57: TRISDbits.TRISD6 = 0;
  1911  000D6A  9C95               	bcf	149,6,c	;volatile
  1912                           
  1913                           ;flexlcd.h: 58: TRISDbits.TRISD5 = 0;
  1914  000D6C  9A95               	bcf	149,5,c	;volatile
  1915                           
  1916                           ;flexlcd.h: 59: TRISDbits.TRISD4 = 0;
  1917  000D6E  9895               	bcf	149,4,c	;volatile
  1918                           
  1919                           ;flexlcd.h: 60: TRISEbits.TRISE2 = 0;
  1920  000D70  9496               	bcf	150,2,c	;volatile
  1921                           
  1922                           ;flexlcd.h: 61: TRISEbits.TRISE1 = 0;
  1923  000D72  9296               	bcf	150,1,c	;volatile
  1924                           
  1925                           ;flexlcd.h: 62: PORTDbits.RD7 = 0;
  1926  000D74  9E83               	bcf	131,7,c	;volatile
  1927                           
  1928                           ;flexlcd.h: 63: PORTDbits.RD6 = 0;
  1929  000D76  9C83               	bcf	131,6,c	;volatile
  1930                           
  1931                           ;flexlcd.h: 64: PORTDbits.RD5 = 0;
  1932  000D78  9A83               	bcf	131,5,c	;volatile
  1933                           
  1934                           ;flexlcd.h: 65: PORTDbits.RD4 = 0;
  1935  000D7A  9883               	bcf	131,4,c	;volatile
  1936                           
  1937                           ;flexlcd.h: 66: PORTEbits.RE1 = 0;
  1938  000D7C  9284               	bcf	132,1,c	;volatile
  1939                           
  1940                           ;flexlcd.h: 67: PORTEbits.RE2 = 0;
  1941  000D7E  9484               	bcf	132,2,c	;volatile
  1942  000D80                     
  1943                           ;flexlcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1944  000D80  0E0F               	movlw	15
  1945  000D82  0100               	movlb	0	; () banked
  1946  000D84  6F83               	movwf	??_Lcd_Init& (0+255),b
  1947  000D86  0E47               	movlw	71
  1948  000D88                     u1937:
  1949  000D88  2EE8               	decfsz	wreg,f,c
  1950  000D8A  D7FE               	bra	u1937
  1951  000D8C  2F83               	decfsz	??_Lcd_Init& (0+255),f,b
  1952  000D8E  D7FC               	bra	u1937
  1953  000D90  D000               	nop2	
  1954                           
  1955                           ;flexlcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1956  000D92  0E0F               	movlw	15
  1957  000D94  0100               	movlb	0	; () banked
  1958  000D96  6F83               	movwf	??_Lcd_Init& (0+255),b
  1959  000D98  0E47               	movlw	71
  1960  000D9A                     u1947:
  1961  000D9A  2EE8               	decfsz	wreg,f,c
  1962  000D9C  D7FE               	bra	u1947
  1963  000D9E  2F83               	decfsz	??_Lcd_Init& (0+255),f,b
  1964  000DA0  D7FC               	bra	u1947
  1965  000DA2  D000               	nop2	
  1966                           
  1967                           ;flexlcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1968  000DA4  0E0F               	movlw	15
  1969  000DA6  0100               	movlb	0	; () banked
  1970  000DA8  6F83               	movwf	??_Lcd_Init& (0+255),b
  1971  000DAA  0E47               	movlw	71
  1972  000DAC                     u1957:
  1973  000DAC  2EE8               	decfsz	wreg,f,c
  1974  000DAE  D7FE               	bra	u1957
  1975  000DB0  2F83               	decfsz	??_Lcd_Init& (0+255),f,b
  1976  000DB2  D7FC               	bra	u1957
  1977  000DB4  D000               	nop2	
  1978                           
  1979                           ;flexlcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1980  000DB6  0E0F               	movlw	15
  1981  000DB8  0100               	movlb	0	; () banked
  1982  000DBA  6F83               	movwf	??_Lcd_Init& (0+255),b
  1983  000DBC  0E47               	movlw	71
  1984  000DBE                     u1967:
  1985  000DBE  2EE8               	decfsz	wreg,f,c
  1986  000DC0  D7FE               	bra	u1967
  1987  000DC2  2F83               	decfsz	??_Lcd_Init& (0+255),f,b
  1988  000DC4  D7FC               	bra	u1967
  1989  000DC6  D000               	nop2	
  1990                           
  1991                           ;flexlcd.h: 72: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1992  000DC8  0E0F               	movlw	15
  1993  000DCA  0100               	movlb	0	; () banked
  1994  000DCC  6F83               	movwf	??_Lcd_Init& (0+255),b
  1995  000DCE  0E47               	movlw	71
  1996  000DD0                     u1977:
  1997  000DD0  2EE8               	decfsz	wreg,f,c
  1998  000DD2  D7FE               	bra	u1977
  1999  000DD4  2F83               	decfsz	??_Lcd_Init& (0+255),f,b
  2000  000DD6  D7FC               	bra	u1977
  2001  000DD8  D000               	nop2	
  2002                           
  2003                           ;flexlcd.h: 73: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2004  000DDA  0E0F               	movlw	15
  2005  000DDC  0100               	movlb	0	; () banked
  2006  000DDE  6F83               	movwf	??_Lcd_Init& (0+255),b
  2007  000DE0  0E47               	movlw	71
  2008  000DE2                     u1987:
  2009  000DE2  2EE8               	decfsz	wreg,f,c
  2010  000DE4  D7FE               	bra	u1987
  2011  000DE6  2F83               	decfsz	??_Lcd_Init& (0+255),f,b
  2012  000DE8  D7FC               	bra	u1987
  2013  000DEA  D000               	nop2	
  2014  000DEC                     
  2015                           ;flexlcd.h: 74: for(data = 1; data < 4; data ++)
  2016  000DEC  0E01               	movlw	1
  2017  000DEE  0100               	movlb	0	; () banked
  2018  000DF0  6F84               	movwf	Lcd_Init@data& (0+255),b
  2019  000DF2                     l155:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;flexlcd.h: 75: {;flexlcd.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  2023  000DF2  9E83               	bcf	131,7,c	;volatile
  2024  000DF4  9C83               	bcf	131,6,c	;volatile
  2025  000DF6  8A83               	bsf	131,5,c	;volatile
  2026  000DF8  8883               	bsf	131,4,c	;volatile
  2027  000DFA  9284               	bcf	132,1,c	;volatile
  2028                           
  2029                           ;flexlcd.h: 77: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
  2030  000DFC  9484               	bcf	132,2,c	;volatile
  2031  000DFE  9E83               	bcf	131,7,c	;volatile
  2032  000E00  9C83               	bcf	131,6,c	;volatile
  2033  000E02  8A83               	bsf	131,5,c	;volatile
  2034  000E04  8883               	bsf	131,4,c	;volatile
  2035                           
  2036                           ;flexlcd.h: 78: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  2037  000E06  8284               	bsf	132,1,c	;volatile
  2038  000E08  9484               	bcf	132,2,c	;volatile
  2039  000E0A                     
  2040                           ; BSR set to: 0
  2041                           ;flexlcd.h: 79: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2042  000E0A  0E03               	movlw	3
  2043  000E0C                     u1997:
  2044  000E0C  2EE8               	decfsz	wreg,f,c
  2045  000E0E  D7FE               	bra	u1997
  2046  000E10  F000               	nop	
  2047  000E12                     
  2048                           ;flexlcd.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           1; PORTEbits.RE1 = 0;
  2049  000E12  9E83               	bcf	131,7,c	;volatile
  2050  000E14  9C83               	bcf	131,6,c	;volatile
  2051  000E16  8A83               	bsf	131,5,c	;volatile
  2052  000E18  8883               	bsf	131,4,c	;volatile
  2053  000E1A  9284               	bcf	132,1,c	;volatile
  2054  000E1C                     
  2055                           ;flexlcd.h: 81: PORTEbits.RE2 = 0;
  2056  000E1C  9484               	bcf	132,2,c	;volatile
  2057                           
  2058                           ;flexlcd.h: 82: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2059  000E1E  0E0F               	movlw	15
  2060  000E20  0100               	movlb	0	; () banked
  2061  000E22  6F83               	movwf	??_Lcd_Init& (0+255),b
  2062  000E24  0E47               	movlw	71
  2063  000E26                     u2007:
  2064  000E26  2EE8               	decfsz	wreg,f,c
  2065  000E28  D7FE               	bra	u2007
  2066  000E2A  2F83               	decfsz	??_Lcd_Init& (0+255),f,b
  2067  000E2C  D7FC               	bra	u2007
  2068  000E2E  D000               	nop2	
  2069  000E30  0100               	movlb	0	; () banked
  2070  000E32  2B84               	incf	Lcd_Init@data& (0+255),f,b
  2071  000E34  0E03               	movlw	3
  2072  000E36  6584               	cpfsgt	Lcd_Init@data& (0+255),b
  2073  000E38  EF20  F007         	goto	u1751
  2074  000E3C  EF22  F007         	goto	u1750
  2075  000E40                     u1751:
  2076  000E40  EFF9  F006         	goto	l155
  2077  000E44                     u1750:
  2078  000E44                     
  2079                           ; BSR set to: 0
  2080                           ;flexlcd.h: 83: };flexlcd.h: 84: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  2081  000E44  9E83               	bcf	131,7,c	;volatile
  2082  000E46  9C83               	bcf	131,6,c	;volatile
  2083  000E48  8A83               	bsf	131,5,c	;volatile
  2084  000E4A  9883               	bcf	131,4,c	;volatile
  2085  000E4C  9284               	bcf	132,1,c	;volatile
  2086  000E4E  9484               	bcf	132,2,c	;volatile
  2087                           
  2088                           ;flexlcd.h: 85: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  2089  000E50  9E83               	bcf	131,7,c	;volatile
  2090  000E52  9C83               	bcf	131,6,c	;volatile
  2091  000E54  8A83               	bsf	131,5,c	;volatile
  2092  000E56  9883               	bcf	131,4,c	;volatile
  2093  000E58  8284               	bsf	132,1,c	;volatile
  2094  000E5A  9484               	bcf	132,2,c	;volatile
  2095  000E5C                     
  2096                           ; BSR set to: 0
  2097                           ;flexlcd.h: 86: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2098  000E5C  0E03               	movlw	3
  2099  000E5E                     u2017:
  2100  000E5E  2EE8               	decfsz	wreg,f,c
  2101  000E60  D7FE               	bra	u2017
  2102  000E62  F000               	nop	
  2103  000E64                     
  2104                           ;flexlcd.h: 87: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  2105  000E64  9E83               	bcf	131,7,c	;volatile
  2106  000E66  9C83               	bcf	131,6,c	;volatile
  2107  000E68  8A83               	bsf	131,5,c	;volatile
  2108  000E6A  9883               	bcf	131,4,c	;volatile
  2109  000E6C  9284               	bcf	132,1,c	;volatile
  2110  000E6E  9484               	bcf	132,2,c	;volatile
  2111                           
  2112                           ;flexlcd.h: 88: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2113  000E70  0E0F               	movlw	15
  2114  000E72  0100               	movlb	0	; () banked
  2115  000E74  6F83               	movwf	??_Lcd_Init& (0+255),b
  2116  000E76  0E47               	movlw	71
  2117  000E78                     u2027:
  2118  000E78  2EE8               	decfsz	wreg,f,c
  2119  000E7A  D7FE               	bra	u2027
  2120  000E7C  2F83               	decfsz	??_Lcd_Init& (0+255),f,b
  2121  000E7E  D7FC               	bra	u2027
  2122  000E80  D000               	nop2	
  2123  000E82  0E28               	movlw	40
  2124  000E84  EC7E  F005         	call	_Lcd_Cmd
  2125  000E88  0E10               	movlw	16
  2126  000E8A  EC7E  F005         	call	_Lcd_Cmd
  2127  000E8E  0E01               	movlw	1
  2128  000E90  EC7E  F005         	call	_Lcd_Cmd
  2129  000E94  0E0F               	movlw	15
  2130  000E96  EC7E  F005         	call	_Lcd_Cmd
  2131  000E9A  0012               	return		;funcret
  2132  000E9C                     __end_of_Lcd_Init:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function _Lcd_Cmd *****************
  2136 ;; Defined at:
  2137 ;;		line 152 in file "flexlcd.h"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  data            1    wreg     unsigned char 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  data            1    2[BANK0 ] unsigned char 
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		wreg, status,2, status,0
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2151 ;;      Params:         0       0       0       0       0       0       0
  2152 ;;      Locals:         0       1       0       0       0       0       0
  2153 ;;      Temps:          0       2       0       0       0       0       0
  2154 ;;      Totals:         0       3       0       0       0       0       0
  2155 ;;Total ram usage:        3 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    3
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_Lcd_Init
  2162 ;;		_Lcd_Out
  2163 ;;		_main
  2164 ;;		_Lcd_Out2
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text10
  2169  000AFC                     __ptext10:
  2170                           	callstack 0
  2171  000AFC                     _Lcd_Cmd:
  2172                           	callstack 26
  2173                           
  2174                           ;incstack = 0
  2175                           ;Lcd_Cmd@data stored from wreg
  2176  000AFC  0100               	movlb	0	; () banked
  2177  000AFE  6F82               	movwf	Lcd_Cmd@data& (0+255),b
  2178  000B00                     
  2179                           ;flexlcd.h: 153: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  2180  000B00  9284               	bcf	132,1,c	;volatile
  2181  000B02  9484               	bcf	132,2,c	;volatile
  2182  000B04                     
  2183                           ;flexlcd.h: 154: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  2184  000B04  0100               	movlb	0	; () banked
  2185  000B06  6B80               	clrf	??_Lcd_Cmd& (0+255),b
  2186  000B08  AF82               	btfss	Lcd_Cmd@data& (0+255),7,b
  2187  000B0A  D001               	bra	u1575
  2188  000B0C  2B80               	incf	??_Lcd_Cmd& (0+255),f,b
  2189  000B0E                     u1575:
  2190  000B0E  0E01               	movlw	1
  2191  000B10  1780               	andwf	??_Lcd_Cmd& (0+255),f,b
  2192  000B12  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2193  000B14  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2194  000B16  5083               	movf	131,w,c	;volatile
  2195  000B18  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2196  000B1A  0B7F               	andlw	-129
  2197  000B1C  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2198  000B1E  6E83               	movwf	131,c	;volatile
  2199  000B20  C082  F080         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2200  000B24  0E06               	movlw	6
  2201  000B26  6F81               	movwf	(??_Lcd_Cmd+1)& (0+255),b
  2202  000B28                     u1585:
  2203  000B28  90D8               	bcf	status,0,c
  2204  000B2A  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2205  000B2C  2F81               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,b
  2206  000B2E  EF94  F005         	goto	u1585
  2207  000B32  0E01               	movlw	1
  2208  000B34  1780               	andwf	??_Lcd_Cmd& (0+255),f,b
  2209  000B36  3B80               	swapf	??_Lcd_Cmd& (0+255),f,b
  2210  000B38  4780               	rlncf	??_Lcd_Cmd& (0+255),f,b
  2211  000B3A  4780               	rlncf	??_Lcd_Cmd& (0+255),f,b
  2212  000B3C  5083               	movf	131,w,c	;volatile
  2213  000B3E  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2214  000B40  0BBF               	andlw	-65
  2215  000B42  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2216  000B44  6E83               	movwf	131,c	;volatile
  2217                           
  2218                           ;flexlcd.h: 155: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  2219  000B46  C082  F080         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2220  000B4A  0E05               	movlw	5
  2221  000B4C  6F81               	movwf	(??_Lcd_Cmd+1)& (0+255),b
  2222  000B4E                     u1595:
  2223  000B4E  90D8               	bcf	status,0,c
  2224  000B50  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2225  000B52  2F81               	decfsz	(??_Lcd_Cmd+1)& (0+255),f,b
  2226  000B54  EFA7  F005         	goto	u1595
  2227  000B58  0E01               	movlw	1
  2228  000B5A  1780               	andwf	??_Lcd_Cmd& (0+255),f,b
  2229  000B5C  3B80               	swapf	??_Lcd_Cmd& (0+255),f,b
  2230  000B5E  4780               	rlncf	??_Lcd_Cmd& (0+255),f,b
  2231  000B60  5083               	movf	131,w,c	;volatile
  2232  000B62  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2233  000B64  0BDF               	andlw	-33
  2234  000B66  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2235  000B68  6E83               	movwf	131,c	;volatile
  2236  000B6A  C082  F080         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2237  000B6E  3B80               	swapf	??_Lcd_Cmd& (0+255),f,b
  2238  000B70  0E0F               	movlw	15
  2239  000B72  1780               	andwf	??_Lcd_Cmd& (0+255),f,b
  2240  000B74  0E01               	movlw	1
  2241  000B76  1780               	andwf	??_Lcd_Cmd& (0+255),f,b
  2242  000B78  3B80               	swapf	??_Lcd_Cmd& (0+255),f,b
  2243  000B7A  5083               	movf	131,w,c	;volatile
  2244  000B7C  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2245  000B7E  0BEF               	andlw	-17
  2246  000B80  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2247  000B82  6E83               	movwf	131,c	;volatile
  2248  000B84                     
  2249                           ; BSR set to: 0
  2250                           ;flexlcd.h: 156: _delay(10);
  2251  000B84  0E03               	movlw	3
  2252  000B86                     u2037:
  2253  000B86  2EE8               	decfsz	wreg,f,c
  2254  000B88  D7FE               	bra	u2037
  2255  000B8A  F000               	nop	
  2256  000B8C                     
  2257                           ;flexlcd.h: 157: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  2258  000B8C  8284               	bsf	132,1,c	;volatile
  2259  000B8E  0E03               	movlw	3
  2260  000B90                     u2047:
  2261  000B90  2EE8               	decfsz	wreg,f,c
  2262  000B92  D7FE               	bra	u2047
  2263  000B94  F000               	nop	
  2264  000B96  9284               	bcf	132,1,c	;volatile
  2265                           
  2266                           ;flexlcd.h: 158: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  2267  000B98  C082  F080         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2268  000B9C  0100               	movlb	0	; () banked
  2269  000B9E  90D8               	bcf	status,0,c
  2270  000BA0  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2271  000BA2  90D8               	bcf	status,0,c
  2272  000BA4  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2273  000BA6  90D8               	bcf	status,0,c
  2274  000BA8  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2275  000BAA  0E01               	movlw	1
  2276  000BAC  1780               	andwf	??_Lcd_Cmd& (0+255),f,b
  2277  000BAE  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2278  000BB0  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2279  000BB2  5083               	movf	131,w,c	;volatile
  2280  000BB4  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2281  000BB6  0B7F               	andlw	-129
  2282  000BB8  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2283  000BBA  6E83               	movwf	131,c	;volatile
  2284  000BBC  C082  F080         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2285  000BC0  90D8               	bcf	status,0,c
  2286  000BC2  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2287  000BC4  90D8               	bcf	status,0,c
  2288  000BC6  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2289  000BC8  0E01               	movlw	1
  2290  000BCA  1780               	andwf	??_Lcd_Cmd& (0+255),f,b
  2291  000BCC  3B80               	swapf	??_Lcd_Cmd& (0+255),f,b
  2292  000BCE  4780               	rlncf	??_Lcd_Cmd& (0+255),f,b
  2293  000BD0  4780               	rlncf	??_Lcd_Cmd& (0+255),f,b
  2294  000BD2  5083               	movf	131,w,c	;volatile
  2295  000BD4  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2296  000BD6  0BBF               	andlw	-65
  2297  000BD8  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2298  000BDA  6E83               	movwf	131,c	;volatile
  2299                           
  2300                           ;flexlcd.h: 159: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  2301  000BDC  C082  F080         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2302  000BE0  90D8               	bcf	status,0,c
  2303  000BE2  3380               	rrcf	??_Lcd_Cmd& (0+255),f,b
  2304  000BE4  0E01               	movlw	1
  2305  000BE6  1780               	andwf	??_Lcd_Cmd& (0+255),f,b
  2306  000BE8  3B80               	swapf	??_Lcd_Cmd& (0+255),f,b
  2307  000BEA  4780               	rlncf	??_Lcd_Cmd& (0+255),f,b
  2308  000BEC  5083               	movf	131,w,c	;volatile
  2309  000BEE  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2310  000BF0  0BDF               	andlw	-33
  2311  000BF2  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2312  000BF4  6E83               	movwf	131,c	;volatile
  2313  000BF6  C082  F080         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2314  000BFA  0E01               	movlw	1
  2315  000BFC  1780               	andwf	??_Lcd_Cmd& (0+255),f,b
  2316  000BFE  3B80               	swapf	??_Lcd_Cmd& (0+255),f,b
  2317  000C00  5083               	movf	131,w,c	;volatile
  2318  000C02  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2319  000C04  0BEF               	andlw	-17
  2320  000C06  1980               	xorwf	??_Lcd_Cmd& (0+255),w,b
  2321  000C08  6E83               	movwf	131,c	;volatile
  2322  000C0A                     
  2323                           ; BSR set to: 0
  2324                           ;flexlcd.h: 160: _delay(10);
  2325  000C0A  0E03               	movlw	3
  2326  000C0C                     u2057:
  2327  000C0C  2EE8               	decfsz	wreg,f,c
  2328  000C0E  D7FE               	bra	u2057
  2329  000C10  F000               	nop	
  2330  000C12                     
  2331                           ;flexlcd.h: 161: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  2332  000C12  8284               	bsf	132,1,c	;volatile
  2333  000C14  0E03               	movlw	3
  2334  000C16                     u2067:
  2335  000C16  2EE8               	decfsz	wreg,f,c
  2336  000C18  D7FE               	bra	u2067
  2337  000C1A  F000               	nop	
  2338  000C1C  9284               	bcf	132,1,c	;volatile
  2339  000C1E                     
  2340                           ;flexlcd.h: 162: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2341  000C1E  0E0F               	movlw	15
  2342  000C20  0100               	movlb	0	; () banked
  2343  000C22  6F80               	movwf	??_Lcd_Cmd& (0+255),b
  2344  000C24  0E47               	movlw	71
  2345  000C26                     u2077:
  2346  000C26  2EE8               	decfsz	wreg,f,c
  2347  000C28  D7FE               	bra	u2077
  2348  000C2A  2F80               	decfsz	??_Lcd_Cmd& (0+255),f,b
  2349  000C2C  D7FC               	bra	u2077
  2350  000C2E  D000               	nop2	
  2351  000C30  0012               	return		;funcret
  2352  000C32                     __end_of_Lcd_Cmd:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _isr *****************
  2356 ;; Defined at:
  2357 ;;		line 91 in file "mainUART.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2371 ;;      Params:         0       0       0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0       0       0
  2373 ;;      Temps:          9       0       0       0       0       0       0
  2374 ;;      Totals:         9       0       0       0       0       0       0
  2375 ;;Total ram usage:        9 bytes
  2376 ;; Hardware stack levels used:    1
  2377 ;; Hardware stack levels required when called:    2
  2378 ;; This function calls:
  2379 ;;		_PWM1_Set_Duty
  2380 ;;		_adc_amostra
  2381 ;;		_serial_tx_str
  2382 ;;		_sprintf
  2383 ;;		i2_Lcd_Out
  2384 ;; This function is called by:
  2385 ;;		Interrupt level 2
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	intcode
  2390  000008                     __pintcode:
  2391                           	callstack 0
  2392  000008                     _isr:
  2393                           	callstack 26
  2394                           
  2395                           ;incstack = 0
  2396  000008  8260               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2397  00000A  ED19  F006         	call	int_func,f	;refresh shadow registers
  2398                           
  2399                           	psect	intcode_body
  2400  000C32                     __pintcode_body:
  2401                           	callstack 26
  2402  000C32                     int_func:
  2403                           	callstack 26
  2404  000C32  0006               	pop		; remove dummy address from shadow register refresh
  2405  000C34  CFD9 F056          	movff	fsr2l,??_isr+1
  2406  000C38  CFDA F057          	movff	fsr2h,??_isr+2
  2407  000C3C  CFF3 F058          	movff	prodl,??_isr+3
  2408  000C40  CFF4 F059          	movff	prodh,??_isr+4
  2409  000C44  CFF6 F05A          	movff	tblptrl,??_isr+5
  2410  000C48  CFF7 F05B          	movff	tblptrh,??_isr+6
  2411  000C4C  CFF8 F05C          	movff	tblptru,??_isr+7
  2412  000C50  CFF5 F05D          	movff	tablat,??_isr+8
  2413  000C54                     
  2414                           ;mainUART.c: 93: if (INTCONbits.TMR0IF == 1)
  2415  000C54  A4F2               	btfss	242,2,c	;volatile
  2416  000C56  EF2F  F006         	goto	i2u153_41
  2417  000C5A  EF31  F006         	goto	i2u153_40
  2418  000C5E                     i2u153_41:
  2419  000C5E  EFA2  F006         	goto	i2l221
  2420  000C62                     i2u153_40:
  2421  000C62                     
  2422                           ;mainUART.c: 94: {;mainUART.c: 95: INTCONbits.TMR0IF = 0;
  2423  000C62  94F2               	bcf	242,2,c	;volatile
  2424  000C64                     
  2425                           ;mainUART.c: 96: TMR0 = 131;
  2426  000C64  0E00               	movlw	0
  2427  000C66  6ED7               	movwf	215,c	;volatile
  2428  000C68  0E83               	movlw	131
  2429  000C6A  6ED6               	movwf	214,c	;volatile
  2430  000C6C                     
  2431                           ;mainUART.c: 97: count ++;
  2432  000C6C  4A03               	infsnz	_count^0,f,c
  2433  000C6E  2A04               	incf	(_count+1)^0,f,c
  2434  000C70                     
  2435                           ;mainUART.c: 98: if (count == 250)
  2436  000C70  0EFA               	movlw	250
  2437  000C72  1803               	xorwf	_count^0,w,c
  2438  000C74  1004               	iorwf	(_count+1)^0,w,c
  2439  000C76  A4D8               	btfss	status,2,c
  2440  000C78  EF40  F006         	goto	i2u154_41
  2441  000C7C  EF42  F006         	goto	i2u154_40
  2442  000C80                     i2u154_41:
  2443  000C80  EFA2  F006         	goto	i2l221
  2444  000C84                     i2u154_40:
  2445  000C84                     
  2446                           ;mainUART.c: 99: {;mainUART.c: 100: count = 0;
  2447  000C84  0E00               	movlw	0
  2448  000C86  6E04               	movwf	(_count+1)^0,c
  2449  000C88  0E00               	movlw	0
  2450  000C8A  6E03               	movwf	_count^0,c
  2451  000C8C                     
  2452                           ;mainUART.c: 101: segundos++;
  2453  000C8C  4A07               	infsnz	_segundos^0,f,c
  2454  000C8E  2A08               	incf	(_segundos+1)^0,f,c
  2455  000C90                     
  2456                           ;mainUART.c: 102: LATDbits.LATD1 = ~LATDbits.LATD1;
  2457  000C90  B28C               	btfsc	140,1,c	;volatile
  2458  000C92  EF4D  F006         	goto	i2u155_41
  2459  000C96  EF50  F006         	goto	i2u155_40
  2460  000C9A                     i2u155_41:
  2461  000C9A  0E01               	movlw	1
  2462  000C9C  EF51  F006         	goto	i2u155_46
  2463  000CA0                     i2u155_40:
  2464  000CA0  0E00               	movlw	0
  2465  000CA2                     i2u155_46:
  2466  000CA2  0AFF               	xorlw	255
  2467  000CA4  6E55               	movwf	??_isr^0,c
  2468  000CA6  4655               	rlncf	??_isr^0,f,c
  2469  000CA8  508C               	movf	140,w,c	;volatile
  2470  000CAA  1855               	xorwf	??_isr^0,w,c
  2471  000CAC  0BFD               	andlw	-3
  2472  000CAE  1855               	xorwf	??_isr^0,w,c
  2473  000CB0  6E8C               	movwf	140,c	;volatile
  2474  000CB2                     
  2475                           ;mainUART.c: 103: PWM1_Set_Duty(duty);
  2476  000CB2  505E               	movf	_duty^0,w,c
  2477  000CB4  ECB9  F00A         	call	_PWM1_Set_Duty
  2478  000CB8                     
  2479                           ;mainUART.c: 104: infrav = TMR1L;
  2480  000CB8  CFCE F005          	movff	4046,_infrav	;volatile
  2481  000CBC  6A06               	clrf	(_infrav+1)^0,c
  2482  000CBE                     
  2483                           ;mainUART.c: 105: infrav += TMR1H<<8;
  2484  000CBE  50CF               	movf	207,w,c	;volatile
  2485  000CC0  2606               	addwf	(_infrav+1)^0,f,c
  2486  000CC2                     
  2487                           ;mainUART.c: 106: sprintf(str, "%05u", infrav);
  2488  000CC2  0E31               	movlw	low _str
  2489  000CC4  6E42               	movwf	sprintf@sp^0,c
  2490  000CC6  0E00               	movlw	high _str
  2491  000CC8  6E43               	movwf	(sprintf@sp+1)^0,c
  2492  000CCA  0E14               	movlw	low STR_1
  2493  000CCC  6E44               	movwf	sprintf@f^0,c
  2494  000CCE  0E06               	movlw	high STR_1
  2495  000CD0  6E45               	movwf	(sprintf@f+1)^0,c
  2496  000CD2  C005  F046         	movff	_infrav,?_sprintf+4
  2497  000CD6  C006  F047         	movff	_infrav+1,?_sprintf+5
  2498  000CDA  EC0D  F003         	call	_sprintf	;wreg free
  2499  000CDE                     
  2500                           ;mainUART.c: 107: Lcd_Out(1, 0, str);
  2501  000CDE  0E00               	movlw	0
  2502  000CE0  6E39               	movwf	i2Lcd_Out@x^0,c
  2503  000CE2  0E31               	movlw	low _str
  2504  000CE4  6E3A               	movwf	i2Lcd_Out@buffer^0,c
  2505  000CE6  0E00               	movlw	high _str
  2506  000CE8  6E3B               	movwf	(i2Lcd_Out@buffer+1)^0,c
  2507  000CEA  0E01               	movlw	1
  2508  000CEC  EC4A  F00B         	call	i2_Lcd_Out
  2509  000CF0                     
  2510                           ;mainUART.c: 108: result = adc_amostra(1);
  2511  000CF0  0E01               	movlw	1
  2512  000CF2  EC8F  F00B         	call	_adc_amostra
  2513  000CF6  C036  F001         	movff	?_adc_amostra,_result
  2514  000CFA  C037  F002         	movff	?_adc_amostra+1,_result+1
  2515  000CFE                     
  2516                           ;mainUART.c: 109: sprintf(buffer_tx, "/*%04d/\n", result);
  2517  000CFE  0E1D               	movlw	low _buffer_tx
  2518  000D00  6E42               	movwf	sprintf@sp^0,c
  2519  000D02  0E00               	movlw	high _buffer_tx
  2520  000D04  6E43               	movwf	(sprintf@sp+1)^0,c
  2521  000D06  0E0B               	movlw	low STR_2
  2522  000D08  6E44               	movwf	sprintf@f^0,c
  2523  000D0A  0E06               	movlw	high STR_2
  2524  000D0C  6E45               	movwf	(sprintf@f+1)^0,c
  2525  000D0E  C001  F046         	movff	_result,?_sprintf+4
  2526  000D12  C002  F047         	movff	_result+1,?_sprintf+5
  2527  000D16  EC0D  F003         	call	_sprintf	;wreg free
  2528  000D1A                     
  2529                           ;mainUART.c: 110: serial_tx_str(buffer_tx);
  2530  000D1A  0E1D               	movlw	low _buffer_tx
  2531  000D1C  6E37               	movwf	serial_tx_str@val^0,c
  2532  000D1E  0E00               	movlw	high _buffer_tx
  2533  000D20  6E38               	movwf	(serial_tx_str@val+1)^0,c
  2534  000D22  EC6E  F00C         	call	_serial_tx_str	;wreg free
  2535  000D26                     
  2536                           ;mainUART.c: 111: if (segundos>120)
  2537  000D26  5008               	movf	(_segundos+1)^0,w,c
  2538  000D28  E109               	bnz	i2u156_40
  2539  000D2A  0E79               	movlw	121
  2540  000D2C  5C07               	subwf	_segundos^0,w,c
  2541  000D2E  A0D8               	btfss	status,0,c
  2542  000D30  EF9C  F006         	goto	i2u156_41
  2543  000D34  EF9E  F006         	goto	i2u156_40
  2544  000D38                     i2u156_41:
  2545  000D38  EFA2  F006         	goto	i2l221
  2546  000D3C                     i2u156_40:
  2547  000D3C                     
  2548                           ;mainUART.c: 112: {;mainUART.c: 113: duty = 178;
  2549  000D3C  0E00               	movlw	0
  2550  000D3E  6E5F               	movwf	(_duty+1)^0,c
  2551  000D40  0EB2               	movlw	178
  2552  000D42  6E5E               	movwf	_duty^0,c
  2553  000D44                     i2l221:
  2554  000D44  C05D  FFF5         	movff	??_isr+8,tablat
  2555  000D48  C05C  FFF8         	movff	??_isr+7,tblptru
  2556  000D4C  C05B  FFF7         	movff	??_isr+6,tblptrh
  2557  000D50  C05A  FFF6         	movff	??_isr+5,tblptrl
  2558  000D54  C059  FFF4         	movff	??_isr+4,prodh
  2559  000D58  C058  FFF3         	movff	??_isr+3,prodl
  2560  000D5C  C057  FFDA         	movff	??_isr+2,fsr2h
  2561  000D60  C056  FFD9         	movff	??_isr+1,fsr2l
  2562  000D64  9260               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2563  000D66  0011               	retfie		f
  2564  000D68                     __end_of_isr:
  2565                           	callstack 0
  2566                           
  2567 ;; *************** function i2_Lcd_Out *****************
  2568 ;; Defined at:
  2569 ;;		line 96 in file "flexlcd.h"
  2570 ;; Parameters:    Size  Location     Type
  2571 ;;  y               1    wreg     unsigned char 
  2572 ;;  x               1    3[COMRAM] unsigned char 
  2573 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  2574 ;;		 -> str(5), buffer_rx(20), 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  y               1    6[COMRAM] unsigned char 
  2577 ;;  data            1    7[COMRAM] unsigned char 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2587 ;;      Params:         3       0       0       0       0       0       0
  2588 ;;      Locals:         2       0       0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0
  2590 ;;      Totals:         5       0       0       0       0       0       0
  2591 ;;Total ram usage:        5 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    1
  2594 ;; This function calls:
  2595 ;;		i2_Lcd_Chr_CP
  2596 ;;		i2_Lcd_Cmd
  2597 ;; This function is called by:
  2598 ;;		_isr
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text12
  2603  001694                     __ptext12:
  2604                           	callstack 0
  2605  001694                     i2_Lcd_Out:
  2606                           	callstack 26
  2607                           
  2608                           ;incstack = 0
  2609                           ;i2Lcd_Out@y stored from wreg
  2610  001694  6E3C               	movwf	i2Lcd_Out@y^0,c
  2611  001696                     
  2612                           ;flexlcd.h: 98: unsigned char data;;flexlcd.h: 99: switch (y)
  2613  001696  EF61  F00B         	goto	i2l2241
  2614  00169A                     i2l2231:
  2615  00169A  5039               	movf	i2Lcd_Out@x^0,w,c
  2616  00169C  0F80               	addlw	128
  2617  00169E  6E3D               	movwf	i2Lcd_Out@data^0,c
  2618  0016A0  EF74  F00B         	goto	i2l2243
  2619  0016A4                     i2l2233:
  2620  0016A4  5039               	movf	i2Lcd_Out@x^0,w,c
  2621  0016A6  0FC0               	addlw	192
  2622  0016A8  6E3D               	movwf	i2Lcd_Out@data^0,c
  2623  0016AA  EF74  F00B         	goto	i2l2243
  2624  0016AE                     i2l2235:
  2625  0016AE  5039               	movf	i2Lcd_Out@x^0,w,c
  2626  0016B0  0F94               	addlw	148
  2627  0016B2  6E3D               	movwf	i2Lcd_Out@data^0,c
  2628  0016B4  EF74  F00B         	goto	i2l2243
  2629  0016B8                     i2l2237:
  2630  0016B8  5039               	movf	i2Lcd_Out@x^0,w,c
  2631  0016BA  0FD4               	addlw	212
  2632  0016BC  6E3D               	movwf	i2Lcd_Out@data^0,c
  2633  0016BE  EF74  F00B         	goto	i2l2243
  2634  0016C2                     i2l2241:
  2635  0016C2  503C               	movf	i2Lcd_Out@y^0,w,c
  2636                           
  2637                           ; Switch size 1, requested type "simple"
  2638                           ; Number of cases is 4, Range of values is 1 to 4
  2639                           ; switch strategies available:
  2640                           ; Name         Instructions Cycles
  2641                           ; simple_byte           13     7 (average)
  2642                           ;	Chosen strategy is simple_byte
  2643  0016C4  0A01               	xorlw	1	; case 1
  2644  0016C6  B4D8               	btfsc	status,2,c
  2645  0016C8  EF4D  F00B         	goto	i2l2231
  2646  0016CC  0A03               	xorlw	3	; case 2
  2647  0016CE  B4D8               	btfsc	status,2,c
  2648  0016D0  EF52  F00B         	goto	i2l2233
  2649  0016D4  0A01               	xorlw	1	; case 3
  2650  0016D6  B4D8               	btfsc	status,2,c
  2651  0016D8  EF57  F00B         	goto	i2l2235
  2652  0016DC  0A07               	xorlw	7	; case 4
  2653  0016DE  B4D8               	btfsc	status,2,c
  2654  0016E0  EF5C  F00B         	goto	i2l2237
  2655  0016E4  EF74  F00B         	goto	i2l2243
  2656  0016E8                     i2l2243:
  2657                           
  2658                           ;flexlcd.h: 107: Lcd_Cmd(data);
  2659  0016E8  503D               	movf	i2Lcd_Out@data^0,w,c
  2660  0016EA  ECE8  F007         	call	i2_Lcd_Cmd
  2661                           
  2662                           ;flexlcd.h: 108: while(*buffer)
  2663  0016EE  EF82  F00B         	goto	i2l2249
  2664  0016F2                     i2l2245:
  2665                           
  2666                           ;flexlcd.h: 109: {;flexlcd.h: 110: Lcd_Chr_CP(*buffer);
  2667  0016F2  C03A  FFD9         	movff	i2Lcd_Out@buffer,fsr2l
  2668  0016F6  C03B  FFDA         	movff	i2Lcd_Out@buffer+1,fsr2h
  2669  0016FA  50DF               	movf	indf2,w,c
  2670  0016FC  EC4E  F007         	call	i2_Lcd_Chr_CP
  2671  001700                     
  2672                           ;flexlcd.h: 111: buffer++;
  2673  001700  4A3A               	infsnz	i2Lcd_Out@buffer^0,f,c
  2674  001702  2A3B               	incf	(i2Lcd_Out@buffer+1)^0,f,c
  2675  001704                     i2l2249:
  2676  001704  C03A  FFD9         	movff	i2Lcd_Out@buffer,fsr2l
  2677  001708  C03B  FFDA         	movff	i2Lcd_Out@buffer+1,fsr2h
  2678  00170C  50DF               	movf	indf2,w,c
  2679  00170E  A4D8               	btfss	status,2,c
  2680  001710  EF8C  F00B         	goto	i2u152_41
  2681  001714  EF8E  F00B         	goto	i2u152_40
  2682  001718                     i2u152_41:
  2683  001718  EF79  F00B         	goto	i2l2245
  2684  00171C                     i2u152_40:
  2685  00171C  0012               	return		;funcret
  2686  00171E                     __end_ofi2_Lcd_Out:
  2687                           	callstack 0
  2688                           
  2689 ;; *************** function i2_Lcd_Cmd *****************
  2690 ;; Defined at:
  2691 ;;		line 152 in file "flexlcd.h"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  data            1    wreg     unsigned char 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  data            1    2[COMRAM] unsigned char 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2705 ;;      Params:         0       0       0       0       0       0       0
  2706 ;;      Locals:         1       0       0       0       0       0       0
  2707 ;;      Temps:          2       0       0       0       0       0       0
  2708 ;;      Totals:         3       0       0       0       0       0       0
  2709 ;;Total ram usage:        3 bytes
  2710 ;; Hardware stack levels used:    1
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		i2_Lcd_Out
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text13
  2719  000FD0                     __ptext13:
  2720                           	callstack 0
  2721  000FD0                     i2_Lcd_Cmd:
  2722                           	callstack 26
  2723                           
  2724                           ;incstack = 0
  2725                           ;i2Lcd_Cmd@data stored from wreg
  2726  000FD0  6E38               	movwf	i2Lcd_Cmd@data^0,c
  2727  000FD2                     
  2728                           ;flexlcd.h: 153: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  2729  000FD2  9284               	bcf	132,1,c	;volatile
  2730  000FD4  9484               	bcf	132,2,c	;volatile
  2731  000FD6                     
  2732                           ;flexlcd.h: 154: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  2733  000FD6  6A36               	clrf	??i2_Lcd_Cmd^0,c
  2734  000FD8  AE38               	btfss	i2Lcd_Cmd@data^0,7,c
  2735  000FDA  D001               	bra	i2u114_45
  2736  000FDC  2A36               	incf	??i2_Lcd_Cmd^0,f,c
  2737  000FDE                     i2u114_45:
  2738  000FDE  0E01               	movlw	1
  2739  000FE0  1636               	andwf	??i2_Lcd_Cmd^0,f,c
  2740  000FE2  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2741  000FE4  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2742  000FE6  5083               	movf	131,w,c	;volatile
  2743  000FE8  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2744  000FEA  0B7F               	andlw	-129
  2745  000FEC  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2746  000FEE  6E83               	movwf	131,c	;volatile
  2747  000FF0  C038  F036         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  2748  000FF4  0E06               	movlw	6
  2749  000FF6  6E37               	movwf	(??i2_Lcd_Cmd+1)^0,c
  2750  000FF8                     i2u115_45:
  2751  000FF8  90D8               	bcf	status,0,c
  2752  000FFA  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2753  000FFC  2E37               	decfsz	(??i2_Lcd_Cmd+1)^0,f,c
  2754  000FFE  EFFC  F007         	goto	i2u115_45
  2755  001002  0E01               	movlw	1
  2756  001004  1636               	andwf	??i2_Lcd_Cmd^0,f,c
  2757  001006  3A36               	swapf	??i2_Lcd_Cmd^0,f,c
  2758  001008  4636               	rlncf	??i2_Lcd_Cmd^0,f,c
  2759  00100A  4636               	rlncf	??i2_Lcd_Cmd^0,f,c
  2760  00100C  5083               	movf	131,w,c	;volatile
  2761  00100E  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2762  001010  0BBF               	andlw	-65
  2763  001012  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2764  001014  6E83               	movwf	131,c	;volatile
  2765                           
  2766                           ;flexlcd.h: 155: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  2767  001016  C038  F036         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  2768  00101A  0E05               	movlw	5
  2769  00101C  6E37               	movwf	(??i2_Lcd_Cmd+1)^0,c
  2770  00101E                     i2u116_45:
  2771  00101E  90D8               	bcf	status,0,c
  2772  001020  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2773  001022  2E37               	decfsz	(??i2_Lcd_Cmd+1)^0,f,c
  2774  001024  EF0F  F008         	goto	i2u116_45
  2775  001028  0E01               	movlw	1
  2776  00102A  1636               	andwf	??i2_Lcd_Cmd^0,f,c
  2777  00102C  3A36               	swapf	??i2_Lcd_Cmd^0,f,c
  2778  00102E  4636               	rlncf	??i2_Lcd_Cmd^0,f,c
  2779  001030  5083               	movf	131,w,c	;volatile
  2780  001032  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2781  001034  0BDF               	andlw	-33
  2782  001036  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2783  001038  6E83               	movwf	131,c	;volatile
  2784  00103A  C038  F036         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  2785  00103E  3A36               	swapf	??i2_Lcd_Cmd^0,f,c
  2786  001040  0E0F               	movlw	15
  2787  001042  1636               	andwf	??i2_Lcd_Cmd^0,f,c
  2788  001044  0E01               	movlw	1
  2789  001046  1636               	andwf	??i2_Lcd_Cmd^0,f,c
  2790  001048  3A36               	swapf	??i2_Lcd_Cmd^0,f,c
  2791  00104A  5083               	movf	131,w,c	;volatile
  2792  00104C  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2793  00104E  0BEF               	andlw	-17
  2794  001050  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2795  001052  6E83               	movwf	131,c	;volatile
  2796  001054                     
  2797                           ;flexlcd.h: 156: _delay(10);
  2798  001054  0E03               	movlw	3
  2799  001056                     i2u208_47:
  2800  001056  2EE8               	decfsz	wreg,f,c
  2801  001058  D7FE               	bra	i2u208_47
  2802  00105A  F000               	nop	
  2803  00105C                     
  2804                           ;flexlcd.h: 157: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  2805  00105C  8284               	bsf	132,1,c	;volatile
  2806  00105E  0E03               	movlw	3
  2807  001060                     i2u209_47:
  2808  001060  2EE8               	decfsz	wreg,f,c
  2809  001062  D7FE               	bra	i2u209_47
  2810  001064  F000               	nop	
  2811  001066  9284               	bcf	132,1,c	;volatile
  2812                           
  2813                           ;flexlcd.h: 158: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  2814  001068  C038  F036         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  2815  00106C  90D8               	bcf	status,0,c
  2816  00106E  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2817  001070  90D8               	bcf	status,0,c
  2818  001072  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2819  001074  90D8               	bcf	status,0,c
  2820  001076  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2821  001078  0E01               	movlw	1
  2822  00107A  1636               	andwf	??i2_Lcd_Cmd^0,f,c
  2823  00107C  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2824  00107E  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2825  001080  5083               	movf	131,w,c	;volatile
  2826  001082  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2827  001084  0B7F               	andlw	-129
  2828  001086  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2829  001088  6E83               	movwf	131,c	;volatile
  2830  00108A  C038  F036         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  2831  00108E  90D8               	bcf	status,0,c
  2832  001090  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2833  001092  90D8               	bcf	status,0,c
  2834  001094  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2835  001096  0E01               	movlw	1
  2836  001098  1636               	andwf	??i2_Lcd_Cmd^0,f,c
  2837  00109A  3A36               	swapf	??i2_Lcd_Cmd^0,f,c
  2838  00109C  4636               	rlncf	??i2_Lcd_Cmd^0,f,c
  2839  00109E  4636               	rlncf	??i2_Lcd_Cmd^0,f,c
  2840  0010A0  5083               	movf	131,w,c	;volatile
  2841  0010A2  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2842  0010A4  0BBF               	andlw	-65
  2843  0010A6  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2844  0010A8  6E83               	movwf	131,c	;volatile
  2845                           
  2846                           ;flexlcd.h: 159: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  2847  0010AA  C038  F036         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  2848  0010AE  90D8               	bcf	status,0,c
  2849  0010B0  3236               	rrcf	??i2_Lcd_Cmd^0,f,c
  2850  0010B2  0E01               	movlw	1
  2851  0010B4  1636               	andwf	??i2_Lcd_Cmd^0,f,c
  2852  0010B6  3A36               	swapf	??i2_Lcd_Cmd^0,f,c
  2853  0010B8  4636               	rlncf	??i2_Lcd_Cmd^0,f,c
  2854  0010BA  5083               	movf	131,w,c	;volatile
  2855  0010BC  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2856  0010BE  0BDF               	andlw	-33
  2857  0010C0  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2858  0010C2  6E83               	movwf	131,c	;volatile
  2859  0010C4  C038  F036         	movff	i2Lcd_Cmd@data,??i2_Lcd_Cmd
  2860  0010C8  0E01               	movlw	1
  2861  0010CA  1636               	andwf	??i2_Lcd_Cmd^0,f,c
  2862  0010CC  3A36               	swapf	??i2_Lcd_Cmd^0,f,c
  2863  0010CE  5083               	movf	131,w,c	;volatile
  2864  0010D0  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2865  0010D2  0BEF               	andlw	-17
  2866  0010D4  1836               	xorwf	??i2_Lcd_Cmd^0,w,c
  2867  0010D6  6E83               	movwf	131,c	;volatile
  2868  0010D8                     
  2869                           ;flexlcd.h: 160: _delay(10);
  2870  0010D8  0E03               	movlw	3
  2871  0010DA                     i2u210_47:
  2872  0010DA  2EE8               	decfsz	wreg,f,c
  2873  0010DC  D7FE               	bra	i2u210_47
  2874  0010DE  F000               	nop	
  2875  0010E0                     
  2876                           ;flexlcd.h: 161: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  2877  0010E0  8284               	bsf	132,1,c	;volatile
  2878  0010E2  0E03               	movlw	3
  2879  0010E4                     i2u211_47:
  2880  0010E4  2EE8               	decfsz	wreg,f,c
  2881  0010E6  D7FE               	bra	i2u211_47
  2882  0010E8  F000               	nop	
  2883  0010EA  9284               	bcf	132,1,c	;volatile
  2884  0010EC                     
  2885                           ;flexlcd.h: 162: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2886  0010EC  0E0F               	movlw	15
  2887  0010EE  6E36               	movwf	??i2_Lcd_Cmd^0,c
  2888  0010F0  0E48               	movlw	72
  2889  0010F2                     i2u212_47:
  2890  0010F2  2EE8               	decfsz	wreg,f,c
  2891  0010F4  D7FE               	bra	i2u212_47
  2892  0010F6  2E36               	decfsz	??i2_Lcd_Cmd^0,f,c
  2893  0010F8  D7FC               	bra	i2u212_47
  2894  0010FA  0012               	return		;funcret
  2895  0010FC                     __end_ofi2_Lcd_Cmd:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function i2_Lcd_Chr_CP *****************
  2899 ;; Defined at:
  2900 ;;		line 138 in file "flexlcd.h"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  data            1    wreg     unsigned char 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  data            1    2[COMRAM] unsigned char 
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, status,2, status,0
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2914 ;;      Params:         0       0       0       0       0       0       0
  2915 ;;      Locals:         1       0       0       0       0       0       0
  2916 ;;      Temps:          2       0       0       0       0       0       0
  2917 ;;      Totals:         3       0       0       0       0       0       0
  2918 ;;Total ram usage:        3 bytes
  2919 ;; Hardware stack levels used:    1
  2920 ;; This function calls:
  2921 ;;		Nothing
  2922 ;; This function is called by:
  2923 ;;		i2_Lcd_Out
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text14
  2928  000E9C                     __ptext14:
  2929                           	callstack 0
  2930  000E9C                     i2_Lcd_Chr_CP:
  2931                           	callstack 26
  2932                           
  2933                           ;incstack = 0
  2934                           ;i2Lcd_Chr_CP@data stored from wreg
  2935  000E9C  6E38               	movwf	i2Lcd_Chr_CP@data^0,c
  2936  000E9E                     
  2937                           ;flexlcd.h: 139: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
  2938  000E9E  9284               	bcf	132,1,c	;volatile
  2939  000EA0  8484               	bsf	132,2,c	;volatile
  2940  000EA2                     
  2941                           ;flexlcd.h: 140: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  2942  000EA2  6A36               	clrf	??i2_Lcd_Chr_CP^0,c
  2943  000EA4  AE38               	btfss	i2Lcd_Chr_CP@data^0,7,c
  2944  000EA6  D001               	bra	i2u111_45
  2945  000EA8  2A36               	incf	??i2_Lcd_Chr_CP^0,f,c
  2946  000EAA                     i2u111_45:
  2947  000EAA  0E01               	movlw	1
  2948  000EAC  1636               	andwf	??i2_Lcd_Chr_CP^0,f,c
  2949  000EAE  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  2950  000EB0  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  2951  000EB2  5083               	movf	131,w,c	;volatile
  2952  000EB4  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2953  000EB6  0B7F               	andlw	-129
  2954  000EB8  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2955  000EBA  6E83               	movwf	131,c	;volatile
  2956  000EBC  C038  F036         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  2957  000EC0  0E06               	movlw	6
  2958  000EC2  6E37               	movwf	(??i2_Lcd_Chr_CP+1)^0,c
  2959  000EC4                     i2u112_45:
  2960  000EC4  90D8               	bcf	status,0,c
  2961  000EC6  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  2962  000EC8  2E37               	decfsz	(??i2_Lcd_Chr_CP+1)^0,f,c
  2963  000ECA  EF62  F007         	goto	i2u112_45
  2964  000ECE  0E01               	movlw	1
  2965  000ED0  1636               	andwf	??i2_Lcd_Chr_CP^0,f,c
  2966  000ED2  3A36               	swapf	??i2_Lcd_Chr_CP^0,f,c
  2967  000ED4  4636               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  2968  000ED6  4636               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  2969  000ED8  5083               	movf	131,w,c	;volatile
  2970  000EDA  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2971  000EDC  0BBF               	andlw	-65
  2972  000EDE  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2973  000EE0  6E83               	movwf	131,c	;volatile
  2974                           
  2975                           ;flexlcd.h: 141: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  2976  000EE2  C038  F036         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  2977  000EE6  0E05               	movlw	5
  2978  000EE8  6E37               	movwf	(??i2_Lcd_Chr_CP+1)^0,c
  2979  000EEA                     i2u113_45:
  2980  000EEA  90D8               	bcf	status,0,c
  2981  000EEC  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  2982  000EEE  2E37               	decfsz	(??i2_Lcd_Chr_CP+1)^0,f,c
  2983  000EF0  EF75  F007         	goto	i2u113_45
  2984  000EF4  0E01               	movlw	1
  2985  000EF6  1636               	andwf	??i2_Lcd_Chr_CP^0,f,c
  2986  000EF8  3A36               	swapf	??i2_Lcd_Chr_CP^0,f,c
  2987  000EFA  4636               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  2988  000EFC  5083               	movf	131,w,c	;volatile
  2989  000EFE  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2990  000F00  0BDF               	andlw	-33
  2991  000F02  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  2992  000F04  6E83               	movwf	131,c	;volatile
  2993  000F06  C038  F036         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  2994  000F0A  3A36               	swapf	??i2_Lcd_Chr_CP^0,f,c
  2995  000F0C  0E0F               	movlw	15
  2996  000F0E  1636               	andwf	??i2_Lcd_Chr_CP^0,f,c
  2997  000F10  0E01               	movlw	1
  2998  000F12  1636               	andwf	??i2_Lcd_Chr_CP^0,f,c
  2999  000F14  3A36               	swapf	??i2_Lcd_Chr_CP^0,f,c
  3000  000F16  5083               	movf	131,w,c	;volatile
  3001  000F18  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  3002  000F1A  0BEF               	andlw	-17
  3003  000F1C  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  3004  000F1E  6E83               	movwf	131,c	;volatile
  3005  000F20                     
  3006                           ;flexlcd.h: 142: _delay(10);
  3007  000F20  0E03               	movlw	3
  3008  000F22                     i2u213_47:
  3009  000F22  2EE8               	decfsz	wreg,f,c
  3010  000F24  D7FE               	bra	i2u213_47
  3011  000F26  F000               	nop	
  3012  000F28                     
  3013                           ;flexlcd.h: 143: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  3014  000F28  8284               	bsf	132,1,c	;volatile
  3015  000F2A  0E03               	movlw	3
  3016  000F2C                     i2u214_47:
  3017  000F2C  2EE8               	decfsz	wreg,f,c
  3018  000F2E  D7FE               	bra	i2u214_47
  3019  000F30  F000               	nop	
  3020  000F32  9284               	bcf	132,1,c	;volatile
  3021                           
  3022                           ;flexlcd.h: 144: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  3023  000F34  C038  F036         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  3024  000F38  90D8               	bcf	status,0,c
  3025  000F3A  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  3026  000F3C  90D8               	bcf	status,0,c
  3027  000F3E  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  3028  000F40  90D8               	bcf	status,0,c
  3029  000F42  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  3030  000F44  0E01               	movlw	1
  3031  000F46  1636               	andwf	??i2_Lcd_Chr_CP^0,f,c
  3032  000F48  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  3033  000F4A  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  3034  000F4C  5083               	movf	131,w,c	;volatile
  3035  000F4E  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  3036  000F50  0B7F               	andlw	-129
  3037  000F52  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  3038  000F54  6E83               	movwf	131,c	;volatile
  3039  000F56  C038  F036         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  3040  000F5A  90D8               	bcf	status,0,c
  3041  000F5C  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  3042  000F5E  90D8               	bcf	status,0,c
  3043  000F60  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  3044  000F62  0E01               	movlw	1
  3045  000F64  1636               	andwf	??i2_Lcd_Chr_CP^0,f,c
  3046  000F66  3A36               	swapf	??i2_Lcd_Chr_CP^0,f,c
  3047  000F68  4636               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  3048  000F6A  4636               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  3049  000F6C  5083               	movf	131,w,c	;volatile
  3050  000F6E  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  3051  000F70  0BBF               	andlw	-65
  3052  000F72  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  3053  000F74  6E83               	movwf	131,c	;volatile
  3054                           
  3055                           ;flexlcd.h: 145: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  3056  000F76  C038  F036         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  3057  000F7A  90D8               	bcf	status,0,c
  3058  000F7C  3236               	rrcf	??i2_Lcd_Chr_CP^0,f,c
  3059  000F7E  0E01               	movlw	1
  3060  000F80  1636               	andwf	??i2_Lcd_Chr_CP^0,f,c
  3061  000F82  3A36               	swapf	??i2_Lcd_Chr_CP^0,f,c
  3062  000F84  4636               	rlncf	??i2_Lcd_Chr_CP^0,f,c
  3063  000F86  5083               	movf	131,w,c	;volatile
  3064  000F88  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  3065  000F8A  0BDF               	andlw	-33
  3066  000F8C  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  3067  000F8E  6E83               	movwf	131,c	;volatile
  3068  000F90  C038  F036         	movff	i2Lcd_Chr_CP@data,??i2_Lcd_Chr_CP
  3069  000F94  0E01               	movlw	1
  3070  000F96  1636               	andwf	??i2_Lcd_Chr_CP^0,f,c
  3071  000F98  3A36               	swapf	??i2_Lcd_Chr_CP^0,f,c
  3072  000F9A  5083               	movf	131,w,c	;volatile
  3073  000F9C  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  3074  000F9E  0BEF               	andlw	-17
  3075  000FA0  1836               	xorwf	??i2_Lcd_Chr_CP^0,w,c
  3076  000FA2  6E83               	movwf	131,c	;volatile
  3077  000FA4                     
  3078                           ;flexlcd.h: 146: _delay(10);
  3079  000FA4  0E03               	movlw	3
  3080  000FA6                     i2u215_47:
  3081  000FA6  2EE8               	decfsz	wreg,f,c
  3082  000FA8  D7FE               	bra	i2u215_47
  3083  000FAA  F000               	nop	
  3084  000FAC                     
  3085                           ;flexlcd.h: 147: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  3086  000FAC  8284               	bsf	132,1,c	;volatile
  3087  000FAE  0E03               	movlw	3
  3088  000FB0                     i2u216_47:
  3089  000FB0  2EE8               	decfsz	wreg,f,c
  3090  000FB2  D7FE               	bra	i2u216_47
  3091  000FB4  F000               	nop	
  3092  000FB6  9284               	bcf	132,1,c	;volatile
  3093  000FB8                     
  3094                           ;flexlcd.h: 148: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  3095  000FB8  0E03               	movlw	3
  3096  000FBA                     i2u217_47:
  3097  000FBA  2EE8               	decfsz	wreg,f,c
  3098  000FBC  D7FE               	bra	i2u217_47
  3099  000FBE  F000               	nop	
  3100  000FC0  0E0F               	movlw	15
  3101  000FC2  6E36               	movwf	??i2_Lcd_Chr_CP^0,c
  3102  000FC4  0E48               	movlw	72
  3103  000FC6                     i2u218_47:
  3104  000FC6  2EE8               	decfsz	wreg,f,c
  3105  000FC8  D7FE               	bra	i2u218_47
  3106  000FCA  2E36               	decfsz	??i2_Lcd_Chr_CP^0,f,c
  3107  000FCC  D7FC               	bra	i2u218_47
  3108  000FCE  0012               	return		;funcret
  3109  000FD0                     __end_ofi2_Lcd_Chr_CP:
  3110                           	callstack 0
  3111                           
  3112 ;; *************** function _sprintf *****************
  3113 ;; Defined at:
  3114 ;;		line 505 in file "D:\MPLABX\XC8\pic\sources\c90\common\doprnt.c"
  3115 ;; Parameters:    Size  Location     Type
  3116 ;;  sp              2   12[COMRAM] PTR unsigned char 
  3117 ;;		 -> buffer_tx(20), str(5), 
  3118 ;;  f               2   14[COMRAM] PTR const unsigned char 
  3119 ;;		 -> STR_2(9), STR_1(5), 
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  tmpval          4    0        struct .
  3122 ;;  cp              3    0        PTR const unsigned char 
  3123 ;;  width           2   28[COMRAM] int 
  3124 ;;  val             2   25[COMRAM] unsigned int 
  3125 ;;  ap              2   23[COMRAM] PTR void [1]
  3126 ;;		 -> ?_sprintf(2), 
  3127 ;;  len             2    0        unsigned int 
  3128 ;;  c               1   30[COMRAM] unsigned char 
  3129 ;;  flag            1   27[COMRAM] unsigned char 
  3130 ;;  prec            1   22[COMRAM] char 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  2   12[COMRAM] int 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3140 ;;      Params:         6       0       0       0       0       0       0
  3141 ;;      Locals:         9       0       0       0       0       0       0
  3142 ;;      Temps:          4       0       0       0       0       0       0
  3143 ;;      Totals:        19       0       0       0       0       0       0
  3144 ;;Total ram usage:       19 bytes
  3145 ;; Hardware stack levels used:    1
  3146 ;; Hardware stack levels required when called:    1
  3147 ;; This function calls:
  3148 ;;		___lwdiv
  3149 ;;		___lwmod
  3150 ;;		___wmul
  3151 ;;		_isdigit
  3152 ;; This function is called by:
  3153 ;;		_isr
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text15
  3158  00061A                     __ptext15:
  3159                           	callstack 0
  3160  00061A                     _sprintf:
  3161                           	callstack 26
  3162  00061A                     
  3163                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  3164  00061A  0E46               	movlw	low (?_sprintf+4)
  3165  00061C  6E4D               	movwf	sprintf@ap^0,c
  3166  00061E  0E00               	movlw	high (?_sprintf+4)
  3167  000620  6E4E               	movwf	(sprintf@ap+1)^0,c
  3168                           
  3169                           ;doprnt.c: 553: while((c = *f++)) {
  3170  000622  EFC7  F004         	goto	i2l2215
  3171  000626                     i2l2103:
  3172                           
  3173                           ;doprnt.c: 555: if(c != '%')
  3174  000626  0E25               	movlw	37
  3175  000628  1854               	xorwf	sprintf@c^0,w,c
  3176  00062A  B4D8               	btfsc	status,2,c
  3177  00062C  EF1A  F003         	goto	i2u132_41
  3178  000630  EF1C  F003         	goto	i2u132_40
  3179  000634                     i2u132_41:
  3180  000634  EF26  F003         	goto	i2l2109
  3181  000638                     i2u132_40:
  3182  000638                     
  3183                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  3184  000638  C042  FFD9         	movff	sprintf@sp,fsr2l
  3185  00063C  C043  FFDA         	movff	sprintf@sp+1,fsr2h
  3186  000640  C054  FFDF         	movff	sprintf@c,indf2
  3187  000644  4A42               	infsnz	sprintf@sp^0,f,c
  3188  000646  2A43               	incf	(sprintf@sp+1)^0,f,c
  3189                           
  3190                           ;doprnt.c: 559: continue;
  3191  000648  EFC7  F004         	goto	i2l2215
  3192  00064C                     i2l2109:
  3193                           
  3194                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  3195  00064C  0E00               	movlw	0
  3196  00064E  6E53               	movwf	(sprintf@width+1)^0,c
  3197  000650  0E00               	movlw	0
  3198  000652  6E52               	movwf	sprintf@width^0,c
  3199                           
  3200                           ;doprnt.c: 565: flag = 0;
  3201  000654  0E00               	movlw	0
  3202  000656  6E51               	movwf	sprintf@flag^0,c
  3203  000658  EF31  F003         	goto	i2l2115
  3204  00065C                     i2l2111:
  3205                           
  3206                           ;doprnt.c: 597: flag |= 0x04;
  3207  00065C  8451               	bsf	sprintf@flag^0,2,c
  3208                           
  3209                           ;doprnt.c: 598: f++;
  3210  00065E  4A44               	infsnz	sprintf@f^0,f,c
  3211  000660  2A45               	incf	(sprintf@f+1)^0,f,c
  3212  000662                     i2l2115:
  3213  000662  C044  FFF6         	movff	sprintf@f,tblptrl
  3214  000666  C045  FFF7         	movff	sprintf@f+1,tblptrh
  3215  00066A                     	if	0	;tblptru may be non-zero
  3216  00066A                     	endif
  3217  00066A                     	if	0	;tblptru may be non-zero
  3218  00066A                     	endif
  3219  00066A  0008               	tblrd		*
  3220  00066C  50F5               	movf	tablat,w,c
  3221                           
  3222                           ; Switch size 1, requested type "simple"
  3223                           ; Number of cases is 1, Range of values is 48 to 48
  3224                           ; switch strategies available:
  3225                           ; Name         Instructions Cycles
  3226                           ; simple_byte            4     3 (average)
  3227                           ;	Chosen strategy is simple_byte
  3228  00066E  0A30               	xorlw	48	; case 48
  3229  000670  B4D8               	btfsc	status,2,c
  3230  000672  EF2E  F003         	goto	i2l2111
  3231  000676  EF3D  F003         	goto	i2l2117
  3232  00067A                     i2l2117:
  3233                           
  3234                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  3235  00067A  C044  FFF6         	movff	sprintf@f,tblptrl
  3236  00067E  C045  FFF7         	movff	sprintf@f+1,tblptrh
  3237  000682                     	if	0	;tblptru may be non-zero
  3238  000682                     	endif
  3239  000682                     	if	0	;tblptru may be non-zero
  3240  000682                     	endif
  3241  000682  0008               	tblrd		*
  3242  000684  50F5               	movf	tablat,w,c
  3243  000686  ECA4  F00C         	call	_isdigit
  3244  00068A  A0D8               	btfss	status,0,c
  3245  00068C  EF4A  F003         	goto	i2u133_41
  3246  000690  EF4C  F003         	goto	i2u133_40
  3247  000694                     i2u133_41:
  3248  000694  EF88  F003         	goto	i2l2133
  3249  000698                     i2u133_40:
  3250  000698                     
  3251                           ;doprnt.c: 615: width = 0;
  3252  000698  0E00               	movlw	0
  3253  00069A  6E53               	movwf	(sprintf@width+1)^0,c
  3254  00069C  0E00               	movlw	0
  3255  00069E  6E52               	movwf	sprintf@width^0,c
  3256  0006A0                     i2l2121:
  3257                           
  3258                           ;doprnt.c: 617: width *= 10;
  3259  0006A0  C052  F036         	movff	sprintf@width,___wmul@multiplier
  3260  0006A4  C053  F037         	movff	sprintf@width+1,___wmul@multiplier+1
  3261  0006A8  0E00               	movlw	0
  3262  0006AA  6E39               	movwf	(___wmul@multiplicand+1)^0,c
  3263  0006AC  0E0A               	movlw	10
  3264  0006AE  6E38               	movwf	___wmul@multiplicand^0,c
  3265  0006B0  ECD3  F00C         	call	___wmul	;wreg free
  3266  0006B4  C036  F052         	movff	?___wmul,sprintf@width
  3267  0006B8  C037  F053         	movff	?___wmul+1,sprintf@width+1
  3268  0006BC                     
  3269                           ;doprnt.c: 618: width += *f++ - '0';
  3270  0006BC  0ED0               	movlw	208
  3271  0006BE  6E48               	movwf	??_sprintf^0,c
  3272  0006C0  0EFF               	movlw	255
  3273  0006C2  6E49               	movwf	(??_sprintf+1)^0,c
  3274  0006C4  C044  FFF6         	movff	sprintf@f,tblptrl
  3275  0006C8  C045  FFF7         	movff	sprintf@f+1,tblptrh
  3276  0006CC                     	if	0	;tblptru may be non-zero
  3277  0006CC                     	endif
  3278  0006CC                     	if	0	;tblptru may be non-zero
  3279  0006CC                     	endif
  3280  0006CC  0008               	tblrd		*
  3281  0006CE  50F5               	movf	tablat,w,c
  3282  0006D0  6E4A               	movwf	(??_sprintf+2)^0,c
  3283  0006D2  6A4B               	clrf	(??_sprintf+3)^0,c
  3284  0006D4  5048               	movf	??_sprintf^0,w,c
  3285  0006D6  264A               	addwf	(??_sprintf+2)^0,f,c
  3286  0006D8  5049               	movf	(??_sprintf+1)^0,w,c
  3287  0006DA  224B               	addwfc	(??_sprintf+3)^0,f,c
  3288  0006DC  504A               	movf	(??_sprintf+2)^0,w,c
  3289  0006DE  2652               	addwf	sprintf@width^0,f,c
  3290  0006E0  504B               	movf	(??_sprintf+3)^0,w,c
  3291  0006E2  2253               	addwfc	(sprintf@width+1)^0,f,c
  3292  0006E4  4A44               	infsnz	sprintf@f^0,f,c
  3293  0006E6  2A45               	incf	(sprintf@f+1)^0,f,c
  3294  0006E8                     
  3295                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  3296  0006E8  C044  FFF6         	movff	sprintf@f,tblptrl
  3297  0006EC  C045  FFF7         	movff	sprintf@f+1,tblptrh
  3298  0006F0                     	if	0	;tblptru may be non-zero
  3299  0006F0                     	endif
  3300  0006F0                     	if	0	;tblptru may be non-zero
  3301  0006F0                     	endif
  3302  0006F0  0008               	tblrd		*
  3303  0006F2  50F5               	movf	tablat,w,c
  3304  0006F4  ECA4  F00C         	call	_isdigit
  3305  0006F8  B0D8               	btfsc	status,0,c
  3306  0006FA  EF81  F003         	goto	i2u134_41
  3307  0006FE  EF83  F003         	goto	i2u134_40
  3308  000702                     i2u134_41:
  3309  000702  EF50  F003         	goto	i2l2121
  3310  000706                     i2u134_40:
  3311  000706  EF88  F003         	goto	i2l2133
  3312  00070A                     i2l2129:
  3313                           
  3314                           ;doprnt.c: 844: flag |= 0x40;
  3315  00070A  8C51               	bsf	sprintf@flag^0,6,c
  3316                           
  3317                           ;doprnt.c: 845: break;
  3318  00070C  EFA4  F003         	goto	i2l334
  3319  000710                     i2l2133:
  3320  000710  C044  FFF6         	movff	sprintf@f,tblptrl
  3321  000714  C045  FFF7         	movff	sprintf@f+1,tblptrh
  3322  000718  4A44               	infsnz	sprintf@f^0,f,c
  3323  00071A  2A45               	incf	(sprintf@f+1)^0,f,c
  3324  00071C                     	if	0	;tblptru may be non-zero
  3325  00071C                     	endif
  3326  00071C                     	if	0	;tblptru may be non-zero
  3327  00071C                     	endif
  3328  00071C  0008               	tblrd		*
  3329  00071E  CFF5 F054          	movff	tablat,sprintf@c
  3330  000722  5054               	movf	sprintf@c^0,w,c
  3331                           
  3332                           ; Switch size 1, requested type "simple"
  3333                           ; Number of cases is 4, Range of values is 0 to 117
  3334                           ; switch strategies available:
  3335                           ; Name         Instructions Cycles
  3336                           ; simple_byte           13     7 (average)
  3337                           ;	Chosen strategy is simple_byte
  3338  000724  0A00               	xorlw	0	; case 0
  3339  000726  B4D8               	btfsc	status,2,c
  3340  000728  EFD8  F004         	goto	i2l2217
  3341  00072C  0A64               	xorlw	100	; case 100
  3342  00072E  B4D8               	btfsc	status,2,c
  3343  000730  EFA4  F003         	goto	i2l334
  3344  000734  0A0D               	xorlw	13	; case 105
  3345  000736  B4D8               	btfsc	status,2,c
  3346  000738  EFA4  F003         	goto	i2l334
  3347  00073C  0A1C               	xorlw	28	; case 117
  3348  00073E  B4D8               	btfsc	status,2,c
  3349  000740  EF85  F003         	goto	i2l2129
  3350  000744  EFC7  F004         	goto	i2l2215
  3351  000748                     i2l334:
  3352                           
  3353                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  3354  000748  BC51               	btfsc	sprintf@flag^0,6,c
  3355  00074A  EFA9  F003         	goto	i2u135_41
  3356  00074E  EFAB  F003         	goto	i2u135_40
  3357  000752                     i2u135_41:
  3358  000752  EFC6  F003         	goto	i2l2145
  3359  000756                     i2u135_40:
  3360  000756                     
  3361                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  3362  000756  C04D  FFD9         	movff	sprintf@ap,fsr2l
  3363  00075A  C04E  FFDA         	movff	sprintf@ap+1,fsr2h
  3364  00075E  CFDE F04F          	movff	postinc2,sprintf@val
  3365  000762  CFDD F050          	movff	postdec2,sprintf@val+1
  3366  000766  0E02               	movlw	2
  3367  000768  264D               	addwf	sprintf@ap^0,f,c
  3368  00076A  0E00               	movlw	0
  3369  00076C  224E               	addwfc	(sprintf@ap+1)^0,f,c
  3370  00076E                     
  3371                           ;doprnt.c: 1287: if((int)val < 0) {
  3372  00076E  BE50               	btfsc	(sprintf@val+1)^0,7,c
  3373  000770  EFBE  F003         	goto	i2u136_40
  3374  000774  EFBC  F003         	goto	i2u136_41
  3375  000778                     i2u136_41:
  3376  000778  EFD2  F003         	goto	i2l2149
  3377  00077C                     i2u136_40:
  3378  00077C                     
  3379                           ;doprnt.c: 1288: flag |= 0x03;
  3380  00077C  0E03               	movlw	3
  3381  00077E  1251               	iorwf	sprintf@flag^0,f,c
  3382  000780                     
  3383                           ;doprnt.c: 1289: val = -val;
  3384  000780  6C4F               	negf	sprintf@val^0,c
  3385  000782  1E50               	comf	(sprintf@val+1)^0,f,c
  3386  000784  B0D8               	btfsc	status,0,c
  3387  000786  2A50               	incf	(sprintf@val+1)^0,f,c
  3388  000788  EFD2  F003         	goto	i2l2149
  3389  00078C                     i2l2145:
  3390                           
  3391                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  3392  00078C  C04D  FFD9         	movff	sprintf@ap,fsr2l
  3393  000790  C04E  FFDA         	movff	sprintf@ap+1,fsr2h
  3394  000794  CFDE F04F          	movff	postinc2,sprintf@val
  3395  000798  CFDD F050          	movff	postdec2,sprintf@val+1
  3396  00079C  0E02               	movlw	2
  3397  00079E  264D               	addwf	sprintf@ap^0,f,c
  3398  0007A0  0E00               	movlw	0
  3399  0007A2  224E               	addwfc	(sprintf@ap+1)^0,f,c
  3400  0007A4                     i2l2149:
  3401                           
  3402                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  3403  0007A4  0E01               	movlw	1
  3404  0007A6  6E54               	movwf	sprintf@c^0,c
  3405  0007A8                     i2l2155:
  3406                           
  3407                           ;doprnt.c: 1332: if(val < dpowers[c])
  3408  0007A8  5054               	movf	sprintf@c^0,w,c
  3409  0007AA  0D02               	mullw	2
  3410  0007AC  0E01               	movlw	low _dpowers
  3411  0007AE  24F3               	addwf	243,w,c
  3412  0007B0  6EF6               	movwf	tblptrl,c
  3413  0007B2  0E06               	movlw	high _dpowers
  3414  0007B4  20F4               	addwfc	244,w,c
  3415  0007B6  6EF7               	movwf	tblptrh,c
  3416  0007B8                     	if	0	;There are less than 3 active tblptr bytes
  3417  0007B8                     	endif
  3418  0007B8  0009               	tblrd		*+
  3419  0007BA  50F5               	movf	tablat,w,c
  3420  0007BC  5C4F               	subwf	sprintf@val^0,w,c
  3421  0007BE  0009               	tblrd		*+
  3422  0007C0  50F5               	movf	tablat,w,c
  3423  0007C2  5850               	subwfb	(sprintf@val+1)^0,w,c
  3424  0007C4  B0D8               	btfsc	status,0,c
  3425  0007C6  EFE7  F003         	goto	i2u137_41
  3426  0007CA  EFE9  F003         	goto	i2u137_40
  3427  0007CE                     i2u137_41:
  3428  0007CE  EFEB  F003         	goto	i2l2159
  3429  0007D2                     i2u137_40:
  3430  0007D2  EFF5  F003         	goto	i2l2163
  3431  0007D6                     i2l2159:
  3432  0007D6  2A54               	incf	sprintf@c^0,f,c
  3433  0007D8  0E05               	movlw	5
  3434  0007DA  1854               	xorwf	sprintf@c^0,w,c
  3435  0007DC  A4D8               	btfss	status,2,c
  3436  0007DE  EFF3  F003         	goto	i2u138_41
  3437  0007E2  EFF5  F003         	goto	i2u138_40
  3438  0007E6                     i2u138_41:
  3439  0007E6  EFD4  F003         	goto	i2l2155
  3440  0007EA                     i2u138_40:
  3441  0007EA                     i2l2163:
  3442                           
  3443                           ;doprnt.c: 1371: if(width && flag & 0x03)
  3444  0007EA  5052               	movf	sprintf@width^0,w,c
  3445  0007EC  1053               	iorwf	(sprintf@width+1)^0,w,c
  3446  0007EE  B4D8               	btfsc	status,2,c
  3447  0007F0  EFFC  F003         	goto	i2u139_41
  3448  0007F4  EFFE  F003         	goto	i2u139_40
  3449  0007F8                     i2u139_41:
  3450  0007F8  EF0C  F004         	goto	i2l2169
  3451  0007FC                     i2u139_40:
  3452  0007FC  C051  F048         	movff	sprintf@flag,??_sprintf
  3453  000800  0E03               	movlw	3
  3454  000802  1648               	andwf	??_sprintf^0,f,c
  3455  000804  B4D8               	btfsc	status,2,c
  3456  000806  EF07  F004         	goto	i2u140_41
  3457  00080A  EF09  F004         	goto	i2u140_40
  3458  00080E                     i2u140_41:
  3459  00080E  EF0C  F004         	goto	i2l2169
  3460  000812                     i2u140_40:
  3461  000812                     
  3462                           ;doprnt.c: 1372: width--;
  3463  000812  0652               	decf	sprintf@width^0,f,c
  3464  000814  A0D8               	btfss	status,0,c
  3465  000816  0653               	decf	(sprintf@width+1)^0,f,c
  3466  000818                     i2l2169:
  3467                           
  3468                           ;doprnt.c: 1407: if(width > c)
  3469  000818  5054               	movf	sprintf@c^0,w,c
  3470  00081A  6E48               	movwf	??_sprintf^0,c
  3471  00081C  6A49               	clrf	(??_sprintf+1)^0,c
  3472  00081E  5052               	movf	sprintf@width^0,w,c
  3473  000820  5C48               	subwf	??_sprintf^0,w,c
  3474  000822  5049               	movf	(??_sprintf+1)^0,w,c
  3475  000824  0A80               	xorlw	128
  3476  000826  6E4A               	movwf	(??_sprintf+2)^0,c
  3477  000828  5053               	movf	(sprintf@width+1)^0,w,c
  3478  00082A  0A80               	xorlw	128
  3479  00082C  584A               	subwfb	(??_sprintf+2)^0,w,c
  3480  00082E  B0D8               	btfsc	status,0,c
  3481  000830  EF1C  F004         	goto	i2u141_41
  3482  000834  EF1E  F004         	goto	i2u141_40
  3483  000838                     i2u141_41:
  3484  000838  EF24  F004         	goto	i2l2173
  3485  00083C                     i2u141_40:
  3486  00083C                     
  3487                           ;doprnt.c: 1408: width -= c;
  3488  00083C  5054               	movf	sprintf@c^0,w,c
  3489  00083E  5E52               	subwf	sprintf@width^0,f,c
  3490  000840  0E00               	movlw	0
  3491  000842  5A53               	subwfb	(sprintf@width+1)^0,f,c
  3492  000844  EF28  F004         	goto	i2l2175
  3493  000848                     i2l2173:
  3494                           
  3495                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  3496  000848  0E00               	movlw	0
  3497  00084A  6E53               	movwf	(sprintf@width+1)^0,c
  3498  00084C  0E00               	movlw	0
  3499  00084E  6E52               	movwf	sprintf@width^0,c
  3500  000850                     i2l2175:
  3501                           
  3502                           ;doprnt.c: 1413: if(flag & 0x04) {
  3503  000850  A451               	btfss	sprintf@flag^0,2,c
  3504  000852  EF2D  F004         	goto	i2u142_41
  3505  000856  EF2F  F004         	goto	i2u142_40
  3506  00085A                     i2u142_41:
  3507  00085A  EF61  F004         	goto	i2l2191
  3508  00085E                     i2u142_40:
  3509  00085E                     
  3510                           ;doprnt.c: 1418: if(flag & 0x03)
  3511  00085E  C051  F048         	movff	sprintf@flag,??_sprintf
  3512  000862  0E03               	movlw	3
  3513  000864  1648               	andwf	??_sprintf^0,f,c
  3514  000866  B4D8               	btfsc	status,2,c
  3515  000868  EF38  F004         	goto	i2u143_41
  3516  00086C  EF3A  F004         	goto	i2u143_40
  3517  000870                     i2u143_41:
  3518  000870  EF42  F004         	goto	i2l2183
  3519  000874                     i2u143_40:
  3520  000874                     
  3521                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  3522  000874  C042  FFD9         	movff	sprintf@sp,fsr2l
  3523  000878  C043  FFDA         	movff	sprintf@sp+1,fsr2h
  3524  00087C  0E2D               	movlw	45
  3525  00087E  6EDF               	movwf	indf2,c
  3526  000880  4A42               	infsnz	sprintf@sp^0,f,c
  3527  000882  2A43               	incf	(sprintf@sp+1)^0,f,c
  3528  000884                     i2l2183:
  3529                           
  3530                           ;doprnt.c: 1441: if(width)
  3531  000884  5052               	movf	sprintf@width^0,w,c
  3532  000886  1053               	iorwf	(sprintf@width+1)^0,w,c
  3533  000888  B4D8               	btfsc	status,2,c
  3534  00088A  EF49  F004         	goto	i2u144_41
  3535  00088E  EF4B  F004         	goto	i2u144_40
  3536  000892                     i2u144_41:
  3537  000892  EF91  F004         	goto	i2l2205
  3538  000896                     i2u144_40:
  3539  000896                     i2l2185:
  3540                           
  3541                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  3542  000896  C042  FFD9         	movff	sprintf@sp,fsr2l
  3543  00089A  C043  FFDA         	movff	sprintf@sp+1,fsr2h
  3544  00089E  0E30               	movlw	48
  3545  0008A0  6EDF               	movwf	indf2,c
  3546  0008A2  4A42               	infsnz	sprintf@sp^0,f,c
  3547  0008A4  2A43               	incf	(sprintf@sp+1)^0,f,c
  3548  0008A6                     
  3549                           ;doprnt.c: 1444: while(--width);
  3550  0008A6  0652               	decf	sprintf@width^0,f,c
  3551  0008A8  A0D8               	btfss	status,0,c
  3552  0008AA  0653               	decf	(sprintf@width+1)^0,f,c
  3553  0008AC  5052               	movf	sprintf@width^0,w,c
  3554  0008AE  1053               	iorwf	(sprintf@width+1)^0,w,c
  3555  0008B0  A4D8               	btfss	status,2,c
  3556  0008B2  EF5D  F004         	goto	i2u145_41
  3557  0008B6  EF5F  F004         	goto	i2u145_40
  3558  0008BA                     i2u145_41:
  3559  0008BA  EF4B  F004         	goto	i2l2185
  3560  0008BE                     i2u145_40:
  3561  0008BE  EF91  F004         	goto	i2l2205
  3562  0008C2                     i2l2191:
  3563                           
  3564                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  3565  0008C2  5052               	movf	sprintf@width^0,w,c
  3566  0008C4  1053               	iorwf	(sprintf@width+1)^0,w,c
  3567  0008C6  B4D8               	btfsc	status,2,c
  3568  0008C8  EF68  F004         	goto	i2u146_41
  3569  0008CC  EF6A  F004         	goto	i2u146_40
  3570  0008D0                     i2u146_41:
  3571  0008D0  EF7E  F004         	goto	i2l2199
  3572  0008D4                     i2u146_40:
  3573  0008D4                     i2l2193:
  3574                           
  3575                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  3576  0008D4  C042  FFD9         	movff	sprintf@sp,fsr2l
  3577  0008D8  C043  FFDA         	movff	sprintf@sp+1,fsr2h
  3578  0008DC  0E20               	movlw	32
  3579  0008DE  6EDF               	movwf	indf2,c
  3580  0008E0  4A42               	infsnz	sprintf@sp^0,f,c
  3581  0008E2  2A43               	incf	(sprintf@sp+1)^0,f,c
  3582  0008E4                     
  3583                           ;doprnt.c: 1457: while(--width);
  3584  0008E4  0652               	decf	sprintf@width^0,f,c
  3585  0008E6  A0D8               	btfss	status,0,c
  3586  0008E8  0653               	decf	(sprintf@width+1)^0,f,c
  3587  0008EA  5052               	movf	sprintf@width^0,w,c
  3588  0008EC  1053               	iorwf	(sprintf@width+1)^0,w,c
  3589  0008EE  A4D8               	btfss	status,2,c
  3590  0008F0  EF7C  F004         	goto	i2u147_41
  3591  0008F4  EF7E  F004         	goto	i2u147_40
  3592  0008F8                     i2u147_41:
  3593  0008F8  EF6A  F004         	goto	i2l2193
  3594  0008FC                     i2u147_40:
  3595  0008FC                     i2l2199:
  3596                           
  3597                           ;doprnt.c: 1464: if(flag & 0x03)
  3598  0008FC  C051  F048         	movff	sprintf@flag,??_sprintf
  3599  000900  0E03               	movlw	3
  3600  000902  1648               	andwf	??_sprintf^0,f,c
  3601  000904  B4D8               	btfsc	status,2,c
  3602  000906  EF87  F004         	goto	i2u148_41
  3603  00090A  EF89  F004         	goto	i2u148_40
  3604  00090E                     i2u148_41:
  3605  00090E  EF91  F004         	goto	i2l2205
  3606  000912                     i2u148_40:
  3607  000912                     
  3608                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  3609  000912  C042  FFD9         	movff	sprintf@sp,fsr2l
  3610  000916  C043  FFDA         	movff	sprintf@sp+1,fsr2h
  3611  00091A  0E2D               	movlw	45
  3612  00091C  6EDF               	movwf	indf2,c
  3613  00091E  4A42               	infsnz	sprintf@sp^0,f,c
  3614  000920  2A43               	incf	(sprintf@sp+1)^0,f,c
  3615  000922                     i2l2205:
  3616                           
  3617                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  3618  000922  C054  F04C         	movff	sprintf@c,sprintf@prec
  3619                           
  3620                           ;doprnt.c: 1500: while(prec--) {
  3621  000926  EFBE  F004         	goto	i2l2213
  3622  00092A                     i2l2207:
  3623                           
  3624                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  3625  00092A  504C               	movf	sprintf@prec^0,w,c
  3626  00092C  0D02               	mullw	2
  3627  00092E  0E01               	movlw	low _dpowers
  3628  000930  24F3               	addwf	243,w,c
  3629  000932  6EF6               	movwf	tblptrl,c
  3630  000934  0E06               	movlw	high _dpowers
  3631  000936  20F4               	addwfc	244,w,c
  3632  000938  6EF7               	movwf	tblptrh,c
  3633  00093A                     	if	0	;There are less than 3 active tblptr bytes
  3634  00093A                     	endif
  3635  00093A  0009               	tblrd		*+
  3636  00093C  CFF5 F038          	movff	tablat,___lwdiv@divisor
  3637  000940  000A               	tblrd		*-
  3638  000942  CFF5 F039          	movff	tablat,___lwdiv@divisor+1
  3639  000946  C04F  F036         	movff	sprintf@val,___lwdiv@dividend
  3640  00094A  C050  F037         	movff	sprintf@val+1,___lwdiv@dividend+1
  3641  00094E  ECCD  F00B         	call	___lwdiv	;wreg free
  3642  000952  C036  F03D         	movff	?___lwdiv,___lwmod@dividend
  3643  000956  C037  F03E         	movff	?___lwdiv+1,___lwmod@dividend+1
  3644  00095A  0E00               	movlw	0
  3645  00095C  6E40               	movwf	(___lwmod@divisor+1)^0,c
  3646  00095E  0E0A               	movlw	10
  3647  000960  6E3F               	movwf	___lwmod@divisor^0,c
  3648  000962  EC3C  F00C         	call	___lwmod	;wreg free
  3649  000966  503D               	movf	?___lwmod^0,w,c
  3650  000968  0F30               	addlw	48
  3651  00096A  6E54               	movwf	sprintf@c^0,c
  3652  00096C                     
  3653                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  3654  00096C  C042  FFD9         	movff	sprintf@sp,fsr2l
  3655  000970  C043  FFDA         	movff	sprintf@sp+1,fsr2h
  3656  000974  C054  FFDF         	movff	sprintf@c,indf2
  3657  000978  4A42               	infsnz	sprintf@sp^0,f,c
  3658  00097A  2A43               	incf	(sprintf@sp+1)^0,f,c
  3659  00097C                     i2l2213:
  3660  00097C  064C               	decf	sprintf@prec^0,f,c
  3661  00097E  284C               	incf	sprintf@prec^0,w,c
  3662  000980  A4D8               	btfss	status,2,c
  3663  000982  EFC5  F004         	goto	i2u149_41
  3664  000986  EFC7  F004         	goto	i2u149_40
  3665  00098A                     i2u149_41:
  3666  00098A  EF95  F004         	goto	i2l2207
  3667  00098E                     i2u149_40:
  3668  00098E                     i2l2215:
  3669  00098E  C044  FFF6         	movff	sprintf@f,tblptrl
  3670  000992  C045  FFF7         	movff	sprintf@f+1,tblptrh
  3671  000996  4A44               	infsnz	sprintf@f^0,f,c
  3672  000998  2A45               	incf	(sprintf@f+1)^0,f,c
  3673  00099A                     	if	0	;tblptru may be non-zero
  3674  00099A                     	endif
  3675  00099A                     	if	0	;tblptru may be non-zero
  3676  00099A                     	endif
  3677  00099A  0008               	tblrd		*
  3678  00099C  CFF5 F054          	movff	tablat,sprintf@c
  3679  0009A0  5054               	movf	sprintf@c^0,w,c
  3680  0009A2  A4D8               	btfss	status,2,c
  3681  0009A4  EFD6  F004         	goto	i2u150_41
  3682  0009A8  EFD8  F004         	goto	i2u150_40
  3683  0009AC                     i2u150_41:
  3684  0009AC  EF13  F003         	goto	i2l2103
  3685  0009B0                     i2u150_40:
  3686  0009B0                     i2l2217:
  3687                           
  3688                           ;doprnt.c: 1564: *sp = 0;
  3689  0009B0  C042  FFD9         	movff	sprintf@sp,fsr2l
  3690  0009B4  C043  FFDA         	movff	sprintf@sp+1,fsr2h
  3691  0009B8  0E00               	movlw	0
  3692  0009BA  6EDF               	movwf	indf2,c
  3693  0009BC  0012               	return		;funcret
  3694  0009BE                     __end_of_sprintf:
  3695                           	callstack 0
  3696                           
  3697 ;; *************** function _isdigit *****************
  3698 ;; Defined at:
  3699 ;;		line 8 in file "D:\MPLABX\XC8\pic\sources\c90\common\isdigit.c"
  3700 ;; Parameters:    Size  Location     Type
  3701 ;;  c               1    wreg     unsigned char 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;  c               1    2[COMRAM] unsigned char 
  3704 ;; Return value:  Size  Location     Type
  3705 ;;		None               void
  3706 ;; Registers used:
  3707 ;;		wreg, status,2, status,0
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3713 ;;      Params:         0       0       0       0       0       0       0
  3714 ;;      Locals:         2       0       0       0       0       0       0
  3715 ;;      Temps:          1       0       0       0       0       0       0
  3716 ;;      Totals:         3       0       0       0       0       0       0
  3717 ;;Total ram usage:        3 bytes
  3718 ;; Hardware stack levels used:    1
  3719 ;; This function calls:
  3720 ;;		Nothing
  3721 ;; This function is called by:
  3722 ;;		_sprintf
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726                           	psect	text16
  3727  001948                     __ptext16:
  3728                           	callstack 0
  3729  001948                     _isdigit:
  3730                           	callstack 26
  3731                           
  3732                           ;incstack = 0
  3733                           ;isdigit@c stored from wreg
  3734  001948  6E38               	movwf	isdigit@c^0,c
  3735  00194A  0E00               	movlw	0
  3736  00194C  6E37               	movwf	_isdigit$1631^0,c
  3737  00194E  0E3A               	movlw	58
  3738  001950  6038               	cpfslt	isdigit@c^0,c
  3739  001952  EFAD  F00C         	goto	i2u92_41
  3740  001956  EFAF  F00C         	goto	i2u92_40
  3741  00195A                     i2u92_41:
  3742  00195A  EFB9  F00C         	goto	i2l1825
  3743  00195E                     i2u92_40:
  3744  00195E  0E2F               	movlw	47
  3745  001960  6438               	cpfsgt	isdigit@c^0,c
  3746  001962  EFB5  F00C         	goto	i2u93_41
  3747  001966  EFB7  F00C         	goto	i2u93_40
  3748  00196A                     i2u93_41:
  3749  00196A  EFB9  F00C         	goto	i2l1825
  3750  00196E                     i2u93_40:
  3751  00196E  0E01               	movlw	1
  3752  001970  6E37               	movwf	_isdigit$1631^0,c
  3753  001972                     i2l1825:
  3754  001972  C037  F036         	movff	_isdigit$1631,??_isdigit
  3755  001976  3036               	rrcf	??_isdigit^0,w,c
  3756  001978  0012               	return		;funcret
  3757  00197A                     __end_of_isdigit:
  3758                           	callstack 0
  3759                           
  3760 ;; *************** function ___wmul *****************
  3761 ;; Defined at:
  3762 ;;		line 15 in file "D:\MPLABX\XC8\pic\sources\c90\common\Umul16.c"
  3763 ;; Parameters:    Size  Location     Type
  3764 ;;  multiplier      2    0[COMRAM] unsigned int 
  3765 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3766 ;; Auto vars:     Size  Location     Type
  3767 ;;  product         2    4[COMRAM] unsigned int 
  3768 ;; Return value:  Size  Location     Type
  3769 ;;                  2    0[COMRAM] unsigned int 
  3770 ;; Registers used:
  3771 ;;		wreg, status,2, status,0, prodl, prodh
  3772 ;; Tracked objects:
  3773 ;;		On entry : 0/0
  3774 ;;		On exit  : 0/0
  3775 ;;		Unchanged: 0/0
  3776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3777 ;;      Params:         4       0       0       0       0       0       0
  3778 ;;      Locals:         2       0       0       0       0       0       0
  3779 ;;      Temps:          0       0       0       0       0       0       0
  3780 ;;      Totals:         6       0       0       0       0       0       0
  3781 ;;Total ram usage:        6 bytes
  3782 ;; Hardware stack levels used:    1
  3783 ;; This function calls:
  3784 ;;		Nothing
  3785 ;; This function is called by:
  3786 ;;		_sprintf
  3787 ;; This function uses a non-reentrant model
  3788 ;;
  3789                           
  3790                           	psect	text17
  3791  0019A6                     __ptext17:
  3792                           	callstack 0
  3793  0019A6                     ___wmul:
  3794                           	callstack 26
  3795  0019A6  5036               	movf	___wmul@multiplier^0,w,c
  3796  0019A8  0238               	mulwf	___wmul@multiplicand^0,c
  3797  0019AA  CFF3 F03A          	movff	prodl,___wmul@product
  3798  0019AE  CFF4 F03B          	movff	prodh,___wmul@product+1
  3799  0019B2  5036               	movf	___wmul@multiplier^0,w,c
  3800  0019B4  0239               	mulwf	(___wmul@multiplicand+1)^0,c
  3801  0019B6  50F3               	movf	243,w,c
  3802  0019B8  263B               	addwf	(___wmul@product+1)^0,f,c
  3803  0019BA  5037               	movf	(___wmul@multiplier+1)^0,w,c
  3804  0019BC  0238               	mulwf	___wmul@multiplicand^0,c
  3805  0019BE  50F3               	movf	243,w,c
  3806  0019C0  263B               	addwf	(___wmul@product+1)^0,f,c
  3807  0019C2  C03A  F036         	movff	___wmul@product,?___wmul
  3808  0019C6  C03B  F037         	movff	___wmul@product+1,?___wmul+1
  3809  0019CA  0012               	return		;funcret
  3810  0019CC                     __end_of___wmul:
  3811                           	callstack 0
  3812                           
  3813 ;; *************** function ___lwmod *****************
  3814 ;; Defined at:
  3815 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\lwmod.c"
  3816 ;; Parameters:    Size  Location     Type
  3817 ;;  dividend        2    7[COMRAM] unsigned int 
  3818 ;;  divisor         2    9[COMRAM] unsigned int 
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;  counter         1   11[COMRAM] unsigned char 
  3821 ;; Return value:  Size  Location     Type
  3822 ;;                  2    7[COMRAM] unsigned int 
  3823 ;; Registers used:
  3824 ;;		wreg, status,2, status,0
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3830 ;;      Params:         4       0       0       0       0       0       0
  3831 ;;      Locals:         1       0       0       0       0       0       0
  3832 ;;      Temps:          0       0       0       0       0       0       0
  3833 ;;      Totals:         5       0       0       0       0       0       0
  3834 ;;Total ram usage:        5 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; This function calls:
  3837 ;;		Nothing
  3838 ;; This function is called by:
  3839 ;;		_sprintf
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text18
  3844  001878                     __ptext18:
  3845                           	callstack 0
  3846  001878                     ___lwmod:
  3847                           	callstack 26
  3848  001878  503F               	movf	___lwmod@divisor^0,w,c
  3849  00187A  1040               	iorwf	(___lwmod@divisor+1)^0,w,c
  3850  00187C  B4D8               	btfsc	status,2,c
  3851  00187E  EF43  F00C         	goto	i2u108_41
  3852  001882  EF45  F00C         	goto	i2u108_40
  3853  001886                     i2u108_41:
  3854  001886  EF69  F00C         	goto	i2l852
  3855  00188A                     i2u108_40:
  3856  00188A  0E01               	movlw	1
  3857  00188C  6E41               	movwf	___lwmod@counter^0,c
  3858  00188E  EF4D  F00C         	goto	i2l1939
  3859  001892                     i2l1937:
  3860  001892  90D8               	bcf	status,0,c
  3861  001894  363F               	rlcf	___lwmod@divisor^0,f,c
  3862  001896  3640               	rlcf	(___lwmod@divisor+1)^0,f,c
  3863  001898  2A41               	incf	___lwmod@counter^0,f,c
  3864  00189A                     i2l1939:
  3865  00189A  AE40               	btfss	(___lwmod@divisor+1)^0,7,c
  3866  00189C  EF52  F00C         	goto	i2u109_41
  3867  0018A0  EF54  F00C         	goto	i2u109_40
  3868  0018A4                     i2u109_41:
  3869  0018A4  EF49  F00C         	goto	i2l1937
  3870  0018A8                     i2u109_40:
  3871  0018A8                     i2l1941:
  3872  0018A8  503F               	movf	___lwmod@divisor^0,w,c
  3873  0018AA  5C3D               	subwf	___lwmod@dividend^0,w,c
  3874  0018AC  5040               	movf	(___lwmod@divisor+1)^0,w,c
  3875  0018AE  583E               	subwfb	(___lwmod@dividend+1)^0,w,c
  3876  0018B0  A0D8               	btfss	status,0,c
  3877  0018B2  EF5D  F00C         	goto	i2u110_41
  3878  0018B6  EF5F  F00C         	goto	i2u110_40
  3879  0018BA                     i2u110_41:
  3880  0018BA  EF63  F00C         	goto	i2l1945
  3881  0018BE                     i2u110_40:
  3882  0018BE  503F               	movf	___lwmod@divisor^0,w,c
  3883  0018C0  5E3D               	subwf	___lwmod@dividend^0,f,c
  3884  0018C2  5040               	movf	(___lwmod@divisor+1)^0,w,c
  3885  0018C4  5A3E               	subwfb	(___lwmod@dividend+1)^0,f,c
  3886  0018C6                     i2l1945:
  3887  0018C6  90D8               	bcf	status,0,c
  3888  0018C8  3240               	rrcf	(___lwmod@divisor+1)^0,f,c
  3889  0018CA  323F               	rrcf	___lwmod@divisor^0,f,c
  3890  0018CC  2E41               	decfsz	___lwmod@counter^0,f,c
  3891  0018CE  EF54  F00C         	goto	i2l1941
  3892  0018D2                     i2l852:
  3893  0018D2  C03D  F03D         	movff	___lwmod@dividend,?___lwmod
  3894  0018D6  C03E  F03E         	movff	___lwmod@dividend+1,?___lwmod+1
  3895  0018DA  0012               	return		;funcret
  3896  0018DC                     __end_of___lwmod:
  3897                           	callstack 0
  3898                           
  3899 ;; *************** function ___lwdiv *****************
  3900 ;; Defined at:
  3901 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\lwdiv.c"
  3902 ;; Parameters:    Size  Location     Type
  3903 ;;  dividend        2    0[COMRAM] unsigned int 
  3904 ;;  divisor         2    2[COMRAM] unsigned int 
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;  quotient        2    4[COMRAM] unsigned int 
  3907 ;;  counter         1    6[COMRAM] unsigned char 
  3908 ;; Return value:  Size  Location     Type
  3909 ;;                  2    0[COMRAM] unsigned int 
  3910 ;; Registers used:
  3911 ;;		wreg, status,2, status,0
  3912 ;; Tracked objects:
  3913 ;;		On entry : 0/0
  3914 ;;		On exit  : 0/0
  3915 ;;		Unchanged: 0/0
  3916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3917 ;;      Params:         4       0       0       0       0       0       0
  3918 ;;      Locals:         3       0       0       0       0       0       0
  3919 ;;      Temps:          0       0       0       0       0       0       0
  3920 ;;      Totals:         7       0       0       0       0       0       0
  3921 ;;Total ram usage:        7 bytes
  3922 ;; Hardware stack levels used:    1
  3923 ;; This function calls:
  3924 ;;		Nothing
  3925 ;; This function is called by:
  3926 ;;		_sprintf
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text19
  3931  00179A                     __ptext19:
  3932                           	callstack 0
  3933  00179A                     ___lwdiv:
  3934                           	callstack 26
  3935  00179A  0E00               	movlw	0
  3936  00179C  6E3B               	movwf	(___lwdiv@quotient+1)^0,c
  3937  00179E  0E00               	movlw	0
  3938  0017A0  6E3A               	movwf	___lwdiv@quotient^0,c
  3939  0017A2  5038               	movf	___lwdiv@divisor^0,w,c
  3940  0017A4  1039               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3941  0017A6  B4D8               	btfsc	status,2,c
  3942  0017A8  EFD8  F00B         	goto	i2u105_41
  3943  0017AC  EFDA  F00B         	goto	i2u105_40
  3944  0017B0                     i2u105_41:
  3945  0017B0  EF02  F00C         	goto	i2l842
  3946  0017B4                     i2u105_40:
  3947  0017B4  0E01               	movlw	1
  3948  0017B6  6E3C               	movwf	___lwdiv@counter^0,c
  3949  0017B8  EFE2  F00B         	goto	i2l1919
  3950  0017BC                     i2l1917:
  3951  0017BC  90D8               	bcf	status,0,c
  3952  0017BE  3638               	rlcf	___lwdiv@divisor^0,f,c
  3953  0017C0  3639               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3954  0017C2  2A3C               	incf	___lwdiv@counter^0,f,c
  3955  0017C4                     i2l1919:
  3956  0017C4  AE39               	btfss	(___lwdiv@divisor+1)^0,7,c
  3957  0017C6  EFE7  F00B         	goto	i2u106_41
  3958  0017CA  EFE9  F00B         	goto	i2u106_40
  3959  0017CE                     i2u106_41:
  3960  0017CE  EFDE  F00B         	goto	i2l1917
  3961  0017D2                     i2u106_40:
  3962  0017D2                     i2l1921:
  3963  0017D2  90D8               	bcf	status,0,c
  3964  0017D4  363A               	rlcf	___lwdiv@quotient^0,f,c
  3965  0017D6  363B               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3966  0017D8  5038               	movf	___lwdiv@divisor^0,w,c
  3967  0017DA  5C36               	subwf	___lwdiv@dividend^0,w,c
  3968  0017DC  5039               	movf	(___lwdiv@divisor+1)^0,w,c
  3969  0017DE  5837               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3970  0017E0  A0D8               	btfss	status,0,c
  3971  0017E2  EFF5  F00B         	goto	i2u107_41
  3972  0017E6  EFF7  F00B         	goto	i2u107_40
  3973  0017EA                     i2u107_41:
  3974  0017EA  EFFC  F00B         	goto	i2l1929
  3975  0017EE                     i2u107_40:
  3976  0017EE  5038               	movf	___lwdiv@divisor^0,w,c
  3977  0017F0  5E36               	subwf	___lwdiv@dividend^0,f,c
  3978  0017F2  5039               	movf	(___lwdiv@divisor+1)^0,w,c
  3979  0017F4  5A37               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3980  0017F6  803A               	bsf	___lwdiv@quotient^0,0,c
  3981  0017F8                     i2l1929:
  3982  0017F8  90D8               	bcf	status,0,c
  3983  0017FA  3239               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3984  0017FC  3238               	rrcf	___lwdiv@divisor^0,f,c
  3985  0017FE  2E3C               	decfsz	___lwdiv@counter^0,f,c
  3986  001800  EFE9  F00B         	goto	i2l1921
  3987  001804                     i2l842:
  3988  001804  C03A  F036         	movff	___lwdiv@quotient,?___lwdiv
  3989  001808  C03B  F037         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3990  00180C  0012               	return		;funcret
  3991  00180E                     __end_of___lwdiv:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _serial_tx_str *****************
  3995 ;; Defined at:
  3996 ;;		line 53 in file "serial.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;  val             2    1[COMRAM] PTR const unsigned char 
  3999 ;;		 -> buffer_tx(20), 
  4000 ;; Auto vars:     Size  Location     Type
  4001 ;;  i               1    3[COMRAM] unsigned char 
  4002 ;; Return value:  Size  Location     Type
  4003 ;;                  1    wreg      void 
  4004 ;; Registers used:
  4005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4006 ;; Tracked objects:
  4007 ;;		On entry : 0/0
  4008 ;;		On exit  : 0/0
  4009 ;;		Unchanged: 0/0
  4010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4011 ;;      Params:         2       0       0       0       0       0       0
  4012 ;;      Locals:         1       0       0       0       0       0       0
  4013 ;;      Temps:          0       0       0       0       0       0       0
  4014 ;;      Totals:         3       0       0       0       0       0       0
  4015 ;;Total ram usage:        3 bytes
  4016 ;; Hardware stack levels used:    1
  4017 ;; Hardware stack levels required when called:    1
  4018 ;; This function calls:
  4019 ;;		_serial_tx
  4020 ;; This function is called by:
  4021 ;;		_isr
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text20
  4026  0018DC                     __ptext20:
  4027                           	callstack 0
  4028  0018DC                     _serial_tx_str:
  4029                           	callstack 26
  4030  0018DC                     
  4031                           ;serial.c: 55: unsigned char i=0;
  4032  0018DC  0E00               	movlw	0
  4033  0018DE  6E39               	movwf	serial_tx_str@i^0,c
  4034                           
  4035                           ;serial.c: 57: while(val[i])
  4036  0018E0  EF7C  F00C         	goto	i2l2227
  4037  0018E4                     i2l2223:
  4038                           
  4039                           ;serial.c: 58: {;serial.c: 59: serial_tx(val[i]);
  4040  0018E4  5039               	movf	serial_tx_str@i^0,w,c
  4041  0018E6  2437               	addwf	serial_tx_str@val^0,w,c
  4042  0018E8  6ED9               	movwf	fsr2l,c
  4043  0018EA  0E00               	movlw	0
  4044  0018EC  2038               	addwfc	(serial_tx_str@val+1)^0,w,c
  4045  0018EE  6EDA               	movwf	fsr2h,c
  4046  0018F0  50DF               	movf	indf2,w,c
  4047  0018F2  ECF1  F00C         	call	_serial_tx
  4048  0018F6                     
  4049                           ;serial.c: 60: i++;
  4050  0018F6  2A39               	incf	serial_tx_str@i^0,f,c
  4051  0018F8                     i2l2227:
  4052  0018F8  5039               	movf	serial_tx_str@i^0,w,c
  4053  0018FA  2437               	addwf	serial_tx_str@val^0,w,c
  4054  0018FC  6ED9               	movwf	fsr2l,c
  4055  0018FE  0E00               	movlw	0
  4056  001900  2038               	addwfc	(serial_tx_str@val+1)^0,w,c
  4057  001902  6EDA               	movwf	fsr2h,c
  4058  001904  50DF               	movf	indf2,w,c
  4059  001906  A4D8               	btfss	status,2,c
  4060  001908  EF88  F00C         	goto	i2u151_41
  4061  00190C  EF8A  F00C         	goto	i2u151_40
  4062  001910                     i2u151_41:
  4063  001910  EF72  F00C         	goto	i2l2223
  4064  001914                     i2u151_40:
  4065  001914  0012               	return		;funcret
  4066  001916                     __end_of_serial_tx_str:
  4067                           	callstack 0
  4068                           
  4069 ;; *************** function _serial_tx *****************
  4070 ;; Defined at:
  4071 ;;		line 47 in file "serial.c"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;  val             1    wreg     unsigned char 
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;  val             1    0[COMRAM] unsigned char 
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4085 ;;      Params:         0       0       0       0       0       0       0
  4086 ;;      Locals:         1       0       0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0
  4088 ;;      Totals:         1       0       0       0       0       0       0
  4089 ;;Total ram usage:        1 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; This function calls:
  4092 ;;		Nothing
  4093 ;; This function is called by:
  4094 ;;		_serial_tx_str
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text21
  4099  0019E2                     __ptext21:
  4100                           	callstack 0
  4101  0019E2                     _serial_tx:
  4102                           	callstack 26
  4103                           
  4104                           ;incstack = 0
  4105                           ;serial_tx@val stored from wreg
  4106  0019E2  6E36               	movwf	serial_tx@val^0,c
  4107  0019E4                     
  4108                           ;serial.c: 49: TXREG=val;
  4109  0019E4  C036  FFAD         	movff	serial_tx@val,4013	;volatile
  4110  0019E8                     i2l243:
  4111  0019E8  A2AC               	btfss	172,1,c	;volatile
  4112  0019EA  EFF9  F00C         	goto	i2u7_41
  4113  0019EE  EFFB  F00C         	goto	i2u7_40
  4114  0019F2                     i2u7_41:
  4115  0019F2  EFF4  F00C         	goto	i2l243
  4116  0019F6                     i2u7_40:
  4117  0019F6  0012               	return		;funcret
  4118  0019F8                     __end_of_serial_tx:
  4119                           	callstack 0
  4120                           
  4121 ;; *************** function _adc_amostra *****************
  4122 ;; Defined at:
  4123 ;;		line 44 in file "adc.c"
  4124 ;; Parameters:    Size  Location     Type
  4125 ;;  canal           1    wreg     unsigned char 
  4126 ;; Auto vars:     Size  Location     Type
  4127 ;;  canal           1    6[COMRAM] unsigned char 
  4128 ;; Return value:  Size  Location     Type
  4129 ;;                  2    0[COMRAM] unsigned int 
  4130 ;; Registers used:
  4131 ;;		wreg, status,2, status,0
  4132 ;; Tracked objects:
  4133 ;;		On entry : 0/0
  4134 ;;		On exit  : 0/0
  4135 ;;		Unchanged: 0/0
  4136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4137 ;;      Params:         2       0       0       0       0       0       0
  4138 ;;      Locals:         1       0       0       0       0       0       0
  4139 ;;      Temps:          4       0       0       0       0       0       0
  4140 ;;      Totals:         7       0       0       0       0       0       0
  4141 ;;Total ram usage:        7 bytes
  4142 ;; Hardware stack levels used:    1
  4143 ;; This function calls:
  4144 ;;		Nothing
  4145 ;; This function is called by:
  4146 ;;		_isr
  4147 ;; This function uses a non-reentrant model
  4148 ;;
  4149                           
  4150                           	psect	text22
  4151  00171E                     __ptext22:
  4152                           	callstack 0
  4153  00171E                     _adc_amostra:
  4154                           	callstack 27
  4155                           
  4156                           ;incstack = 0
  4157                           ;adc_amostra@canal stored from wreg
  4158  00171E  6E3C               	movwf	adc_amostra@canal^0,c
  4159  001720                     
  4160                           ;adc.c: 62: switch(canal)
  4161  001720  EF9E  F00B         	goto	i2l2005
  4162  001724                     i2l1997:
  4163                           
  4164                           ;adc.c: 65: ADCON0=0x01;
  4165  001724  0E01               	movlw	1
  4166  001726  6EC2               	movwf	194,c	;volatile
  4167                           
  4168                           ;adc.c: 66: break;
  4169  001728  EFAD  F00B         	goto	i2l20
  4170  00172C                     i2l1999:
  4171                           
  4172                           ;adc.c: 68: ADCON0=0x09;
  4173  00172C  0E09               	movlw	9
  4174  00172E  6EC2               	movwf	194,c	;volatile
  4175                           
  4176                           ;adc.c: 69: break;
  4177  001730  EFAD  F00B         	goto	i2l20
  4178  001734                     i2l2001:
  4179                           
  4180                           ;adc.c: 71: ADCON0=0x11;
  4181  001734  0E11               	movlw	17
  4182  001736  6EC2               	movwf	194,c	;volatile
  4183                           
  4184                           ;adc.c: 72: break;
  4185  001738  EFAD  F00B         	goto	i2l20
  4186  00173C                     i2l2005:
  4187  00173C  503C               	movf	adc_amostra@canal^0,w,c
  4188                           
  4189                           ; Switch size 1, requested type "simple"
  4190                           ; Number of cases is 3, Range of values is 0 to 2
  4191                           ; switch strategies available:
  4192                           ; Name         Instructions Cycles
  4193                           ; simple_byte           10     6 (average)
  4194                           ;	Chosen strategy is simple_byte
  4195  00173E  0A00               	xorlw	0	; case 0
  4196  001740  B4D8               	btfsc	status,2,c
  4197  001742  EF92  F00B         	goto	i2l1997
  4198  001746  0A01               	xorlw	1	; case 1
  4199  001748  B4D8               	btfsc	status,2,c
  4200  00174A  EF96  F00B         	goto	i2l1999
  4201  00174E  0A03               	xorlw	3	; case 2
  4202  001750  B4D8               	btfsc	status,2,c
  4203  001752  EF9A  F00B         	goto	i2l2001
  4204  001756  EFAD  F00B         	goto	i2l20
  4205  00175A                     i2l20:
  4206                           
  4207                           ;adc.c: 77: ADCON0bits.GO=1;
  4208  00175A  82C2               	bsf	194,1,c	;volatile
  4209  00175C                     i2l23:
  4210  00175C  B2C2               	btfsc	194,1,c	;volatile
  4211  00175E  EFB3  F00B         	goto	i2u117_41
  4212  001762  EFB5  F00B         	goto	i2u117_40
  4213  001766                     i2u117_41:
  4214  001766  EFAE  F00B         	goto	i2l23
  4215  00176A                     i2u117_40:
  4216  00176A                     
  4217                           ;adc.c: 80: return ((((unsigned int)ADRESH)<<2)|(ADRESL>>6));
  4218  00176A  CFC3 F038          	movff	4035,??_adc_amostra	;volatile
  4219  00176E  0E06               	movlw	6
  4220  001770  6E39               	movwf	(??_adc_amostra+1)^0,c
  4221  001772                     i2u118_45:
  4222  001772  90D8               	bcf	status,0,c
  4223  001774  3238               	rrcf	??_adc_amostra^0,f,c
  4224  001776  2E39               	decfsz	(??_adc_amostra+1)^0,f,c
  4225  001778  EFB9  F00B         	goto	i2u118_45
  4226  00177C  5038               	movf	??_adc_amostra^0,w,c
  4227  00177E  CFC4 F03A          	movff	4036,??_adc_amostra+2	;volatile
  4228  001782  6A3B               	clrf	(??_adc_amostra+3)^0,c
  4229  001784  90D8               	bcf	status,0,c
  4230  001786  363A               	rlcf	(??_adc_amostra+2)^0,f,c
  4231  001788  363B               	rlcf	(??_adc_amostra+3)^0,f,c
  4232  00178A  90D8               	bcf	status,0,c
  4233  00178C  363A               	rlcf	(??_adc_amostra+2)^0,f,c
  4234  00178E  363B               	rlcf	(??_adc_amostra+3)^0,f,c
  4235  001790  103A               	iorwf	(??_adc_amostra+2)^0,w,c
  4236  001792  6E36               	movwf	?_adc_amostra^0,c
  4237  001794  503B               	movf	(??_adc_amostra+3)^0,w,c
  4238  001796  6E37               	movwf	(?_adc_amostra+1)^0,c
  4239  001798  0012               	return		;funcret
  4240  00179A                     __end_of_adc_amostra:
  4241                           	callstack 0
  4242                           
  4243 ;; *************** function _PWM1_Set_Duty *****************
  4244 ;; Defined at:
  4245 ;;		line 93 in file "pwm.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  d               1    wreg     unsigned char 
  4248 ;; Auto vars:     Size  Location     Type
  4249 ;;  d               1   27[COMRAM] unsigned char 
  4250 ;;  temp            2   28[COMRAM] unsigned int 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4260 ;;      Params:         0       0       0       0       0       0       0
  4261 ;;      Locals:         3       0       0       0       0       0       0
  4262 ;;      Temps:          2       0       0       0       0       0       0
  4263 ;;      Totals:         5       0       0       0       0       0       0
  4264 ;;Total ram usage:        5 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    1
  4267 ;; This function calls:
  4268 ;;		___lldiv
  4269 ;;		___lmul
  4270 ;; This function is called by:
  4271 ;;		_isr
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275                           	psect	text23
  4276  001572                     __ptext23:
  4277                           	callstack 0
  4278  001572                     _PWM1_Set_Duty:
  4279                           	callstack 26
  4280                           
  4281                           ;incstack = 0
  4282                           ;PWM1_Set_Duty@d stored from wreg
  4283  001572  6E51               	movwf	PWM1_Set_Duty@d^0,c
  4284  001574                     
  4285                           ;pwm.c: 95: unsigned int temp;;pwm.c: 97: temp=(((unsigned long)(d))*((PR2<<2)|0x03))/25
      +                          5;
  4286  001574  5051               	movf	PWM1_Set_Duty@d^0,w,c
  4287  001576  6E36               	movwf	___lmul@multiplier^0,c
  4288  001578  6A37               	clrf	(___lmul@multiplier+1)^0,c
  4289  00157A  6A38               	clrf	(___lmul@multiplier+2)^0,c
  4290  00157C  6A39               	clrf	(___lmul@multiplier+3)^0,c
  4291  00157E  50CB               	movf	203,w,c	;volatile
  4292  001580  6E4F               	movwf	??_PWM1_Set_Duty^0,c
  4293  001582  6A50               	clrf	(??_PWM1_Set_Duty+1)^0,c
  4294  001584  90D8               	bcf	status,0,c
  4295  001586  364F               	rlcf	??_PWM1_Set_Duty^0,f,c
  4296  001588  3650               	rlcf	(??_PWM1_Set_Duty+1)^0,f,c
  4297  00158A  90D8               	bcf	status,0,c
  4298  00158C  364F               	rlcf	??_PWM1_Set_Duty^0,f,c
  4299  00158E  3650               	rlcf	(??_PWM1_Set_Duty+1)^0,f,c
  4300  001590  0E03               	movlw	3
  4301  001592  124F               	iorwf	??_PWM1_Set_Duty^0,f,c
  4302  001594  0E00               	movlw	0
  4303  001596  1250               	iorwf	(??_PWM1_Set_Duty+1)^0,f,c
  4304  001598  C04F  F03A         	movff	??_PWM1_Set_Duty,___lmul@multiplicand
  4305  00159C  C050  F03B         	movff	??_PWM1_Set_Duty+1,___lmul@multiplicand+1
  4306  0015A0  0E00               	movlw	0
  4307  0015A2  BE3B               	btfsc	(___lmul@multiplicand+1)^0,7,c
  4308  0015A4  0EFF               	movlw	-1
  4309  0015A6  6E3C               	movwf	(___lmul@multiplicand+2)^0,c
  4310  0015A8  6E3D               	movwf	(___lmul@multiplicand+3)^0,c
  4311  0015AA  EC07  F00C         	call	___lmul	;wreg free
  4312  0015AE  C036  F042         	movff	?___lmul,___lldiv@dividend
  4313  0015B2  C037  F043         	movff	?___lmul+1,___lldiv@dividend+1
  4314  0015B6  C038  F044         	movff	?___lmul+2,___lldiv@dividend+2
  4315  0015BA  C039  F045         	movff	?___lmul+3,___lldiv@dividend+3
  4316  0015BE  0EFF               	movlw	255
  4317  0015C0  6E46               	movwf	___lldiv@divisor^0,c
  4318  0015C2  0E00               	movlw	0
  4319  0015C4  6E47               	movwf	(___lldiv@divisor+1)^0,c
  4320  0015C6  0E00               	movlw	0
  4321  0015C8  6E48               	movwf	(___lldiv@divisor+2)^0,c
  4322  0015CA  0E00               	movlw	0
  4323  0015CC  6E49               	movwf	(___lldiv@divisor+3)^0,c
  4324  0015CE  EC67  F00A         	call	___lldiv	;wreg free
  4325  0015D2  C042  F052         	movff	?___lldiv,PWM1_Set_Duty@temp
  4326  0015D6  C043  F053         	movff	?___lldiv+1,PWM1_Set_Duty@temp+1
  4327  0015DA                     
  4328                           ;pwm.c: 99: CCPR1L= (0x03FC&temp)>>2;
  4329  0015DA  C052  F04F         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
  4330  0015DE  C053  F050         	movff	PWM1_Set_Duty@temp+1,??_PWM1_Set_Duty+1
  4331  0015E2  90D8               	bcf	status,0,c
  4332  0015E4  3250               	rrcf	(??_PWM1_Set_Duty+1)^0,f,c
  4333  0015E6  324F               	rrcf	??_PWM1_Set_Duty^0,f,c
  4334  0015E8  90D8               	bcf	status,0,c
  4335  0015EA  3250               	rrcf	(??_PWM1_Set_Duty+1)^0,f,c
  4336  0015EC  324F               	rrcf	??_PWM1_Set_Duty^0,f,c
  4337  0015EE  504F               	movf	??_PWM1_Set_Duty^0,w,c
  4338  0015F0  6EBE               	movwf	190,c	;volatile
  4339  0015F2                     
  4340                           ;pwm.c: 100: CCP1CON=((0x0003&temp)<<4)|0x0F;
  4341  0015F2  C052  F04F         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
  4342  0015F6  0E03               	movlw	3
  4343  0015F8  164F               	andwf	??_PWM1_Set_Duty^0,f,c
  4344  0015FA  384F               	swapf	??_PWM1_Set_Duty^0,w,c
  4345  0015FC  0BF0               	andlw	240
  4346  0015FE  090F               	iorlw	15
  4347  001600  6EBD               	movwf	189,c	;volatile
  4348  001602  0012               	return		;funcret
  4349  001604                     __end_of_PWM1_Set_Duty:
  4350                           	callstack 0
  4351                           
  4352 ;; *************** function ___lmul *****************
  4353 ;; Defined at:
  4354 ;;		line 15 in file "D:\MPLABX\XC8\pic\sources\c90\common\Umul32.c"
  4355 ;; Parameters:    Size  Location     Type
  4356 ;;  multiplier      4    0[COMRAM] unsigned long 
  4357 ;;  multiplicand    4    4[COMRAM] unsigned long 
  4358 ;; Auto vars:     Size  Location     Type
  4359 ;;  product         4    8[COMRAM] unsigned long 
  4360 ;; Return value:  Size  Location     Type
  4361 ;;                  4    0[COMRAM] unsigned long 
  4362 ;; Registers used:
  4363 ;;		wreg, status,2, status,0
  4364 ;; Tracked objects:
  4365 ;;		On entry : 0/0
  4366 ;;		On exit  : 0/0
  4367 ;;		Unchanged: 0/0
  4368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4369 ;;      Params:         8       0       0       0       0       0       0
  4370 ;;      Locals:         4       0       0       0       0       0       0
  4371 ;;      Temps:          0       0       0       0       0       0       0
  4372 ;;      Totals:        12       0       0       0       0       0       0
  4373 ;;Total ram usage:       12 bytes
  4374 ;; Hardware stack levels used:    1
  4375 ;; This function calls:
  4376 ;;		Nothing
  4377 ;; This function is called by:
  4378 ;;		_PWM1_Set_Duty
  4379 ;; This function uses a non-reentrant model
  4380 ;;
  4381                           
  4382                           	psect	text24
  4383  00180E                     __ptext24:
  4384                           	callstack 0
  4385  00180E                     ___lmul:
  4386                           	callstack 26
  4387  00180E  0E00               	movlw	0
  4388  001810  6E3E               	movwf	___lmul@product^0,c
  4389  001812  0E00               	movlw	0
  4390  001814  6E3F               	movwf	(___lmul@product+1)^0,c
  4391  001816  0E00               	movlw	0
  4392  001818  6E40               	movwf	(___lmul@product+2)^0,c
  4393  00181A  0E00               	movlw	0
  4394  00181C  6E41               	movwf	(___lmul@product+3)^0,c
  4395  00181E                     i2l1837:
  4396  00181E  A036               	btfss	___lmul@multiplier^0,0,c
  4397  001820  EF14  F00C         	goto	i2u94_41
  4398  001824  EF16  F00C         	goto	i2u94_40
  4399  001828                     i2u94_41:
  4400  001828  EF1E  F00C         	goto	i2l1841
  4401  00182C                     i2u94_40:
  4402  00182C  503A               	movf	___lmul@multiplicand^0,w,c
  4403  00182E  263E               	addwf	___lmul@product^0,f,c
  4404  001830  503B               	movf	(___lmul@multiplicand+1)^0,w,c
  4405  001832  223F               	addwfc	(___lmul@product+1)^0,f,c
  4406  001834  503C               	movf	(___lmul@multiplicand+2)^0,w,c
  4407  001836  2240               	addwfc	(___lmul@product+2)^0,f,c
  4408  001838  503D               	movf	(___lmul@multiplicand+3)^0,w,c
  4409  00183A  2241               	addwfc	(___lmul@product+3)^0,f,c
  4410  00183C                     i2l1841:
  4411  00183C  90D8               	bcf	status,0,c
  4412  00183E  363A               	rlcf	___lmul@multiplicand^0,f,c
  4413  001840  363B               	rlcf	(___lmul@multiplicand+1)^0,f,c
  4414  001842  363C               	rlcf	(___lmul@multiplicand+2)^0,f,c
  4415  001844  363D               	rlcf	(___lmul@multiplicand+3)^0,f,c
  4416  001846  90D8               	bcf	status,0,c
  4417  001848  3239               	rrcf	(___lmul@multiplier+3)^0,f,c
  4418  00184A  3238               	rrcf	(___lmul@multiplier+2)^0,f,c
  4419  00184C  3237               	rrcf	(___lmul@multiplier+1)^0,f,c
  4420  00184E  3236               	rrcf	___lmul@multiplier^0,f,c
  4421  001850  5036               	movf	___lmul@multiplier^0,w,c
  4422  001852  1037               	iorwf	(___lmul@multiplier+1)^0,w,c
  4423  001854  1038               	iorwf	(___lmul@multiplier+2)^0,w,c
  4424  001856  1039               	iorwf	(___lmul@multiplier+3)^0,w,c
  4425  001858  A4D8               	btfss	status,2,c
  4426  00185A  EF31  F00C         	goto	i2u95_41
  4427  00185E  EF33  F00C         	goto	i2u95_40
  4428  001862                     i2u95_41:
  4429  001862  EF0F  F00C         	goto	i2l1837
  4430  001866                     i2u95_40:
  4431  001866  C03E  F036         	movff	___lmul@product,?___lmul
  4432  00186A  C03F  F037         	movff	___lmul@product+1,?___lmul+1
  4433  00186E  C040  F038         	movff	___lmul@product+2,?___lmul+2
  4434  001872  C041  F039         	movff	___lmul@product+3,?___lmul+3
  4435  001876  0012               	return		;funcret
  4436  001878                     __end_of___lmul:
  4437                           	callstack 0
  4438                           
  4439 ;; *************** function ___lldiv *****************
  4440 ;; Defined at:
  4441 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\__lldiv.c"
  4442 ;; Parameters:    Size  Location     Type
  4443 ;;  dividend        4   12[COMRAM] unsigned long 
  4444 ;;  divisor         4   16[COMRAM] unsigned long 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  quotient        4   20[COMRAM] unsigned long 
  4447 ;;  counter         1   24[COMRAM] unsigned char 
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  4   12[COMRAM] unsigned long 
  4450 ;; Registers used:
  4451 ;;		wreg, status,2, status,0
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4457 ;;      Params:         8       0       0       0       0       0       0
  4458 ;;      Locals:         5       0       0       0       0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0
  4460 ;;      Totals:        13       0       0       0       0       0       0
  4461 ;;Total ram usage:       13 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; This function calls:
  4464 ;;		Nothing
  4465 ;; This function is called by:
  4466 ;;		_PWM1_Set_Duty
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470                           	psect	text25
  4471  0014CE                     __ptext25:
  4472                           	callstack 0
  4473  0014CE                     ___lldiv:
  4474                           	callstack 26
  4475  0014CE  0E00               	movlw	0
  4476  0014D0  6E4A               	movwf	___lldiv@quotient^0,c
  4477  0014D2  0E00               	movlw	0
  4478  0014D4  6E4B               	movwf	(___lldiv@quotient+1)^0,c
  4479  0014D6  0E00               	movlw	0
  4480  0014D8  6E4C               	movwf	(___lldiv@quotient+2)^0,c
  4481  0014DA  0E00               	movlw	0
  4482  0014DC  6E4D               	movwf	(___lldiv@quotient+3)^0,c
  4483  0014DE  5046               	movf	___lldiv@divisor^0,w,c
  4484  0014E0  1047               	iorwf	(___lldiv@divisor+1)^0,w,c
  4485  0014E2  1048               	iorwf	(___lldiv@divisor+2)^0,w,c
  4486  0014E4  1049               	iorwf	(___lldiv@divisor+3)^0,w,c
  4487  0014E6  B4D8               	btfsc	status,2,c
  4488  0014E8  EF78  F00A         	goto	i2u96_41
  4489  0014EC  EF7A  F00A         	goto	i2u96_40
  4490  0014F0                     i2u96_41:
  4491  0014F0  EFB0  F00A         	goto	i2l390
  4492  0014F4                     i2u96_40:
  4493  0014F4  0E01               	movlw	1
  4494  0014F6  6E4E               	movwf	___lldiv@counter^0,c
  4495  0014F8  EF84  F00A         	goto	i2l1853
  4496  0014FC                     i2l1851:
  4497  0014FC  90D8               	bcf	status,0,c
  4498  0014FE  3646               	rlcf	___lldiv@divisor^0,f,c
  4499  001500  3647               	rlcf	(___lldiv@divisor+1)^0,f,c
  4500  001502  3648               	rlcf	(___lldiv@divisor+2)^0,f,c
  4501  001504  3649               	rlcf	(___lldiv@divisor+3)^0,f,c
  4502  001506  2A4E               	incf	___lldiv@counter^0,f,c
  4503  001508                     i2l1853:
  4504  001508  AE49               	btfss	(___lldiv@divisor+3)^0,7,c
  4505  00150A  EF89  F00A         	goto	i2u97_41
  4506  00150E  EF8B  F00A         	goto	i2u97_40
  4507  001512                     i2u97_41:
  4508  001512  EF7E  F00A         	goto	i2l1851
  4509  001516                     i2u97_40:
  4510  001516                     i2l1855:
  4511  001516  90D8               	bcf	status,0,c
  4512  001518  364A               	rlcf	___lldiv@quotient^0,f,c
  4513  00151A  364B               	rlcf	(___lldiv@quotient+1)^0,f,c
  4514  00151C  364C               	rlcf	(___lldiv@quotient+2)^0,f,c
  4515  00151E  364D               	rlcf	(___lldiv@quotient+3)^0,f,c
  4516  001520  5046               	movf	___lldiv@divisor^0,w,c
  4517  001522  5C42               	subwf	___lldiv@dividend^0,w,c
  4518  001524  5047               	movf	(___lldiv@divisor+1)^0,w,c
  4519  001526  5843               	subwfb	(___lldiv@dividend+1)^0,w,c
  4520  001528  5048               	movf	(___lldiv@divisor+2)^0,w,c
  4521  00152A  5844               	subwfb	(___lldiv@dividend+2)^0,w,c
  4522  00152C  5049               	movf	(___lldiv@divisor+3)^0,w,c
  4523  00152E  5845               	subwfb	(___lldiv@dividend+3)^0,w,c
  4524  001530  A0D8               	btfss	status,0,c
  4525  001532  EF9D  F00A         	goto	i2u98_41
  4526  001536  EF9F  F00A         	goto	i2u98_40
  4527  00153A                     i2u98_41:
  4528  00153A  EFA8  F00A         	goto	i2l1863
  4529  00153E                     i2u98_40:
  4530  00153E  5046               	movf	___lldiv@divisor^0,w,c
  4531  001540  5E42               	subwf	___lldiv@dividend^0,f,c
  4532  001542  5047               	movf	(___lldiv@divisor+1)^0,w,c
  4533  001544  5A43               	subwfb	(___lldiv@dividend+1)^0,f,c
  4534  001546  5048               	movf	(___lldiv@divisor+2)^0,w,c
  4535  001548  5A44               	subwfb	(___lldiv@dividend+2)^0,f,c
  4536  00154A  5049               	movf	(___lldiv@divisor+3)^0,w,c
  4537  00154C  5A45               	subwfb	(___lldiv@dividend+3)^0,f,c
  4538  00154E  804A               	bsf	___lldiv@quotient^0,0,c
  4539  001550                     i2l1863:
  4540  001550  90D8               	bcf	status,0,c
  4541  001552  3249               	rrcf	(___lldiv@divisor+3)^0,f,c
  4542  001554  3248               	rrcf	(___lldiv@divisor+2)^0,f,c
  4543  001556  3247               	rrcf	(___lldiv@divisor+1)^0,f,c
  4544  001558  3246               	rrcf	___lldiv@divisor^0,f,c
  4545  00155A  2E4E               	decfsz	___lldiv@counter^0,f,c
  4546  00155C  EF8B  F00A         	goto	i2l1855
  4547  001560                     i2l390:
  4548  001560  C04A  F042         	movff	___lldiv@quotient,?___lldiv
  4549  001564  C04B  F043         	movff	___lldiv@quotient+1,?___lldiv+1
  4550  001568  C04C  F044         	movff	___lldiv@quotient+2,?___lldiv+2
  4551  00156C  C04D  F045         	movff	___lldiv@quotient+3,?___lldiv+3
  4552  001570  0012               	return		;funcret
  4553  001572                     __end_of___lldiv:
  4554                           	callstack 0
  4555                           
  4556                           	psect	rparam
  4557  0000                     
  4558                           	psect	temp
  4559  000060                     btemp:
  4560                           	callstack 0
  4561  000060                     	ds	1
  4562  0000                     int$flags	set	btemp
  4563  0000                     wtemp8	set	btemp+1
  4564  0000                     ttemp5	set	btemp+1
  4565  0000                     ttemp6	set	btemp+4
  4566  0000                     ttemp7	set	btemp+8
  4567                           
  4568                           	psect	idloc
  4569                           
  4570                           ;Config register IDLOC0 @ 0x200000
  4571                           ;	unspecified, using default values
  4572  200000                     	org	2097152
  4573  200000  FF                 	db	255
  4574                           
  4575                           ;Config register IDLOC1 @ 0x200001
  4576                           ;	unspecified, using default values
  4577  200001                     	org	2097153
  4578  200001  FF                 	db	255
  4579                           
  4580                           ;Config register IDLOC2 @ 0x200002
  4581                           ;	unspecified, using default values
  4582  200002                     	org	2097154
  4583  200002  FF                 	db	255
  4584                           
  4585                           ;Config register IDLOC3 @ 0x200003
  4586                           ;	unspecified, using default values
  4587  200003                     	org	2097155
  4588  200003  FF                 	db	255
  4589                           
  4590                           ;Config register IDLOC4 @ 0x200004
  4591                           ;	unspecified, using default values
  4592  200004                     	org	2097156
  4593  200004  FF                 	db	255
  4594                           
  4595                           ;Config register IDLOC5 @ 0x200005
  4596                           ;	unspecified, using default values
  4597  200005                     	org	2097157
  4598  200005  FF                 	db	255
  4599                           
  4600                           ;Config register IDLOC6 @ 0x200006
  4601                           ;	unspecified, using default values
  4602  200006                     	org	2097158
  4603  200006  FF                 	db	255
  4604                           
  4605                           ;Config register IDLOC7 @ 0x200007
  4606                           ;	unspecified, using default values
  4607  200007                     	org	2097159
  4608  200007  FF                 	db	255
  4609                           
  4610                           	psect	config
  4611                           
  4612                           ; Padding undefined space
  4613  300000                     	org	3145728
  4614  300000  FF                 	db	255
  4615                           
  4616                           ;Config register CONFIG1H @ 0x300001
  4617                           ;	Oscillator Selection bits
  4618                           ;	OSC = HS, HS oscillator
  4619                           ;	Fail-Safe Clock Monitor Enable bit
  4620                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4621                           ;	Internal/External Oscillator Switchover bit
  4622                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4623  300001                     	org	3145729
  4624  300001  02                 	db	2
  4625                           
  4626                           ;Config register CONFIG2L @ 0x300002
  4627                           ;	Power-up Timer Enable bit
  4628                           ;	PWRT = OFF, PWRT disabled
  4629                           ;	Brown-out Reset Enable bits
  4630                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4631                           ;	Brown Out Reset Voltage bits
  4632                           ;	BORV = 3, Minimum setting
  4633  300002                     	org	3145730
  4634  300002  1F                 	db	31
  4635                           
  4636                           ;Config register CONFIG2H @ 0x300003
  4637                           ;	Watchdog Timer Enable bit
  4638                           ;	WDT = ON, WDT enabled
  4639                           ;	Watchdog Timer Postscale Select bits
  4640                           ;	WDTPS = 32768, 1:32768
  4641  300003                     	org	3145731
  4642  300003  1F                 	db	31
  4643                           
  4644                           ; Padding undefined space
  4645  300004                     	org	3145732
  4646  300004  FF                 	db	255
  4647                           
  4648                           ;Config register CONFIG3H @ 0x300005
  4649                           ;	CCP2 MUX bit
  4650                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  4651                           ;	PORTB A/D Enable bit
  4652                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4653                           ;	Low-Power Timer1 Oscillator Enable bit
  4654                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4655                           ;	MCLR Pin Enable bit
  4656                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  4657  300005                     	org	3145733
  4658  300005  81                 	db	129
  4659                           
  4660                           ;Config register CONFIG4L @ 0x300006
  4661                           ;	Stack Full/Underflow Reset Enable bit
  4662                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4663                           ;	Single-Supply ICSP Enable bit
  4664                           ;	LVP = ON, Single-Supply ICSP enabled
  4665                           ;	Extended Instruction Set Enable bit
  4666                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4667                           ;	Background Debugger Enable bit
  4668                           ;	DEBUG = 0x1, unprogrammed default
  4669  300006                     	org	3145734
  4670  300006  85                 	db	133
  4671                           
  4672                           ; Padding undefined space
  4673  300007                     	org	3145735
  4674  300007  FF                 	db	255
  4675                           
  4676                           ;Config register CONFIG5L @ 0x300008
  4677                           ;	Code Protection bit
  4678                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  4679                           ;	Code Protection bit
  4680                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  4681                           ;	Code Protection bit
  4682                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  4683                           ;	Code Protection bit
  4684                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  4685  300008                     	org	3145736
  4686  300008  0F                 	db	15
  4687                           
  4688                           ;Config register CONFIG5H @ 0x300009
  4689                           ;	Boot Block Code Protection bit
  4690                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  4691                           ;	Data EEPROM Code Protection bit
  4692                           ;	CPD = OFF, Data EEPROM not code-protected
  4693  300009                     	org	3145737
  4694  300009  C0                 	db	192
  4695                           
  4696                           ;Config register CONFIG6L @ 0x30000A
  4697                           ;	Write Protection bit
  4698                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  4699                           ;	Write Protection bit
  4700                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  4701                           ;	Write Protection bit
  4702                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  4703                           ;	Write Protection bit
  4704                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  4705  30000A                     	org	3145738
  4706  30000A  0F                 	db	15
  4707                           
  4708                           ;Config register CONFIG6H @ 0x30000B
  4709                           ;	Configuration Register Write Protection bit
  4710                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  4711                           ;	Boot Block Write Protection bit
  4712                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  4713                           ;	Data EEPROM Write Protection bit
  4714                           ;	WRTD = OFF, Data EEPROM not write-protected
  4715  30000B                     	org	3145739
  4716  30000B  E0                 	db	224
  4717                           
  4718                           ;Config register CONFIG7L @ 0x30000C
  4719                           ;	Table Read Protection bit
  4720                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  4721                           ;	Table Read Protection bit
  4722                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  4723                           ;	Table Read Protection bit
  4724                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  4725                           ;	Table Read Protection bit
  4726                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4727  30000C                     	org	3145740
  4728  30000C  0F                 	db	15
  4729                           
  4730                           ;Config register CONFIG7H @ 0x30000D
  4731                           ;	Boot Block Table Read Protection bit
  4732                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4733  30000D                     	org	3145741
  4734  30000D  40                 	db	64
  4735                           tosu	equ	0xFFF
  4736                           tosh	equ	0xFFE
  4737                           tosl	equ	0xFFD
  4738                           stkptr	equ	0xFFC
  4739                           pclatu	equ	0xFFB
  4740                           pclath	equ	0xFFA
  4741                           pcl	equ	0xFF9
  4742                           tblptru	equ	0xFF8
  4743                           tblptrh	equ	0xFF7
  4744                           tblptrl	equ	0xFF6
  4745                           tablat	equ	0xFF5
  4746                           prodh	equ	0xFF4
  4747                           prodl	equ	0xFF3
  4748                           indf0	equ	0xFEF
  4749                           postinc0	equ	0xFEE
  4750                           postdec0	equ	0xFED
  4751                           preinc0	equ	0xFEC
  4752                           plusw0	equ	0xFEB
  4753                           fsr0h	equ	0xFEA
  4754                           fsr0l	equ	0xFE9
  4755                           wreg	equ	0xFE8
  4756                           indf1	equ	0xFE7
  4757                           postinc1	equ	0xFE6
  4758                           postdec1	equ	0xFE5
  4759                           preinc1	equ	0xFE4
  4760                           plusw1	equ	0xFE3
  4761                           fsr1h	equ	0xFE2
  4762                           fsr1l	equ	0xFE1
  4763                           bsr	equ	0xFE0
  4764                           indf2	equ	0xFDF
  4765                           postinc2	equ	0xFDE
  4766                           postdec2	equ	0xFDD
  4767                           preinc2	equ	0xFDC
  4768                           plusw2	equ	0xFDB
  4769                           fsr2h	equ	0xFDA
  4770                           fsr2l	equ	0xFD9
  4771                           status	equ	0xFD8

Data Sizes:
    Strings     14
    Constant    10
    Data        2
    BSS         53
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     40      95
    BANK0           128     22      22
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_2(CODE[9]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer_tx(COMRAM[20]), str(COMRAM[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    serial_rx_str_until@buff	PTR unsigned char  size(2) Largest target is 20
		 -> buffer_rx(COMRAM[20]), 

    sp__serial_rx_str	PTR unsigned char  size(2) Largest target is 0

    serial_tx_str@val	PTR const unsigned char  size(2) Largest target is 20
		 -> buffer_tx(COMRAM[20]), 

    sp__serial_rx_str_until	PTR unsigned char  size(2) Largest target is 20
		 -> buffer_rx(COMRAM[20]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 20
		 -> str(COMRAM[5]), buffer_rx(COMRAM[20]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_sprintf
    i2_Lcd_Out->i2_Lcd_Chr_CP
    i2_Lcd_Out->i2_Lcd_Cmd
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _serial_tx_str->_serial_tx
    _PWM1_Set_Duty->___lldiv
    ___lldiv->___lmul

Critical Paths under _main in BANK0

    _main->_PWM1_Init
    _PWM1_Init->___aldiv
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3019
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                          _PWM1_Init
                         _PWM1_Start
                           _adc_init
                        _serial_init
                _serial_rx_str_until
 ---------------------------------------------------------------------------------
 (1) _serial_rx_str_until                                 10     5      5     720
                                              0 BANK0     10     5      5
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     6      2     904
                                             14 BANK0      8     6      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     625
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     905
                                              3 BANK0      5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              3 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  9     9      0    4986
                                             31 COMRAM     9     9      0
                      _PWM1_Set_Duty
                        _adc_amostra
                      _serial_tx_str
                            _sprintf
                          i2_Lcd_Out
 ---------------------------------------------------------------------------------
 (4) i2_Lcd_Out                                            5     2      3     585
                                              3 COMRAM     5     2      3
                       i2_Lcd_Chr_CP
                          i2_Lcd_Cmd
 ---------------------------------------------------------------------------------
 (5) i2_Lcd_Cmd                                            3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) i2_Lcd_Chr_CP                                         3     3      0     176
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             28    22      6    3447
                                             12 COMRAM    19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     903
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     906
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _serial_tx_str                                        3     1      2     181
                                              1 COMRAM     3     1      2
                          _serial_tx
 ---------------------------------------------------------------------------------
 (5) _serial_tx                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _adc_amostra                                          7     5      2      22
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _PWM1_Set_Duty                                        5     5      0     751
                                             25 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     314
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PWM1_Init
     ___aldiv
   _PWM1_Start
   _adc_init
   _serial_init
   _serial_rx_str_until

 _isr (ROOT)
   _PWM1_Set_Duty
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _adc_amostra
   _serial_tx_str
     _serial_tx
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   i2_Lcd_Out
     i2_Lcd_Chr_CP
     i2_Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     16      16       5       17.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     28      5F       1       75.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      75      15        0.0%
DATA                 0      0      75       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Nov 23 15:21:41 2020

       ??_serial_rx_str_until 0085                            l15 1A04                            l60 1996  
                          l54 140A                            l63 19A4                            l57 1986  
                          l59 1994             PWM1_Set_Duty@temp 0052           ___wmul@multiplicand 0038  
        __size_of_adc_amostra 007C                           l210 1496                           l240 19E0  
                         l170 1692                           l306 1314                           l155 0DF2  
                         l156 0E44                           l157 0E9A                           l186 0AFA  
                         l442 1208                           l189 0C30                           l294 1226  
                         _PR2 000FCB                           _isr 0008                           _str 0031  
                         wreg 000FE8                          l2321 0B00                          l2401 11D2  
                        l2331 0B96                          l2323 0B04                          l2403 11D8  
                        l2411 19F8                          l2341 0C1E                          l2333 0C0A  
                        l2325 0B84                          l2501 0E8E                          l2405 11E8  
                        l2421 1320                          l2413 1316                          l2335 0C12  
                        l2327 0B8C                          l2503 0E8E                          l2351 0A50  
                        l2343 09C2                          l2511 160C                          l2407 11F8  
                        l2431 138A                          l2423 1326                          l2415 131A  
                        l2337 0C14                          l2329 0B8E                          l2505 0E94  
                        l2361 0ADE                          l2353 0A58                          l2345 09C6  
                        l2513 1616                          l2521 1634                          l2441 13FE  
                        l2433 1392                          l2425 1328                          l2417 131C  
                        l2601 140C                          l2339 0C1C                          l2507 0E94  
                        l2363 0AE0                          l2355 0ACC                          l2347 0A46  
                        l2515 1620                          l2523 165C                          l2371 1110  
                        l2435 13B6                          l2443 1406                          l2427 1374  
                        l2419 131E                          l2451 1984                          l2531 19CC  
                        l2611 146E                          l2603 1414                          l2453 0D68  
                        l2365 0AE8                          l2357 0AD4                          l2349 0A4E  
                        l2525 1666                          l2517 162A                          l2509 1608  
                        l2381 1146                          l2373 1120                          l2437 13BE  
                        l2429 1386                          l2445 197A                          l2541 19D8  
                        l2533 19CE                          l2621 1482                          l2613 1472  
                        l2605 1422                          l2471 0E18                          l2463 0E0A  
                        l2455 0D80                          l2359 0AD6                          l2527 1674  
                        l2391 118E                          l2383 1156                          l2375 1124  
                        l2367 10FC                          l2439 13DE                          l2447 197E  
                        l2543 19DA                          l2535 19D2                          l2551 1218  
                        l2631 1498                          l2623 1484                          l2615 1476  
                        l2607 145C                          l2481 0E64                          l2473 0E1A  
                        l2465 0E12                          l2457 0DEC                          l2529 167A  
                        l2393 1198                          l2385 116C                          l2377 1132  
                        l2369 1102                          l2449 1982                          l2545 19DC  
                        l2537 19D4                          l2561 1260                          l2553 122A  
                        l2633 14B2                          l2625 1488                          l2617 147A  
                        l2609 146A                          l2491 0E6E                          l2483 0E66  
                        l2475 0E1C                          l2467 0E14                          l2395 11B6  
                        l2387 1174                          l2379 1142                          l2547 19DE  
                        l2539 19D6                          l2571 12C4                          l2563 1272  
                        l2555 1232                          l2627 1490                          l2619 1480  
                        l2493 0E82                          l2485 0E68                          l2477 0E30  
                        l2469 0E16                          l2397 11C6                          l2389 1180  
                        l2573 12DA                          l2565 1276                          l2557 123E  
                        l2549 120A                          l2629 1494                          l2495 0E82  
                        l2487 0E6A                          l2479 0E5C                          l2399 11C8  
                        l2575 1304                          l2567 1284                          l2559 1252  
                        l2497 0E88                          l2489 0E6C                          l2569 129A  
                        l2499 0E88                          ?_isr 0036                          STR_1 0614  
                        STR_2 060B                          u2007 0E26                          u2017 0E5E  
                        u2027 0E78                          u2037 0B86                          _LATA 000F89  
                        _LATB 000F8A                          u2047 0B90                          _LATC 000F8B  
                        _LATD 000F8C                          u2057 0C0C                          _LATE 000F8D  
                        u2067 0C16                          u1700 1386                          u2077 0C26  
                        u1605 09D0                          u1701 1382                          u1630 1110  
                        u1710 13B6                          u1615 09EA                          u1631 110C  
                        u1711 13B2                          u1640 1132                          u1800 1284  
                        u1625 0A10                          u1641 112E                          u1801 1280  
                        u1650 116C                          u1730 1994                          u1810 129A  
                        u1651 1168                          u1731 1990                          u1811 1296  
                        u1660 118E                          u1740 19A4                          u1820 12C4  
                        u1661 118A                          u1725 13EE                          u1741 19A0  
                        u1821 12C0                          u1750 0E44                          u1670 11B6  
                        u1830 12DA                          u1575 0B0E                          u1751 0E40  
                        u1671 11B2                          u1831 12D6                          u1760 1692  
                        u1680 11E8                          u1840 1304                          u1585 0B28  
                        u1761 168E                          u1681 11E4                          u1841 1300  
                        u1770 1218                          u1595 0B4E                          u1907 0AD8  
                        u1771 1214                          u1780 1226                          u1917 0AE2  
                        u1781 1222                          u1790 1260                          u1927 0AF0  
                        u1695 1348                          u1791 125C                          u1937 0D88  
                        u1947 0D9A                          u1867 1246                          u1957 0DAC  
                        u1877 0A48                          u1967 0DBE                          u1887 0A52  
                        u1977 0DD0                          u1897 0ACE                          u1987 0DE2  
                        i2l20 175A                          u1997 0E0C                          i2l23 175C  
                        i2l26 1798                          i2l66 1602                          _TMR0 000FD6  
                        _main 140C                          _duty 005E                          fsr2h 000FDA  
                        indf2 000FDF                          fsr2l 000FD9                          btemp 0060  
                        prodh 000FF4                          prodl 000FF3                          start 000E  
             __end_of_Lcd_Cmd 0C32               __end_of_Lcd_Out 1694                  ___param_bank 000000  
                  _Lcd_Chr_CP 09BE                         ??_isr 0055               __end_of___aldiv 120A  
                       ?_main 0036               __end_of___lldiv 1572                         _T0CON 000FD5  
                       _T1CON 000FCD               __end_of___lwdiv 180E               __end_of___lwmod 18DC  
                       i2l221 0D44                         i2l170 171C                         i2l243 19E8  
                       i2l252 1914                         i2l246 19F6                         i2l334 0748  
                       i2l360 09BC                         i2l186 0FCE                         i2l363 19CA  
                       i2l189 10FA                         i2l390 1560                         i2l374 1866  
                       i2l375 1876                         i2l397 1570                         i2l842 1804  
                       i2l852 18D2                         i2l849 180C                         i2l859 18DA  
                       _RCREG 000FAE                         _TMR1H 000FCF                         _TMR1L 000FCE  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                         _PORTD 000F83                         _PORTE 000F84  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                         _TRISE 000F96                         _TXREG 000FAD  
         ___lmul@multiplicand 003A            __size_of_PWM1_Init 00F6                   ?_PWM1_Start 0036  
          __size_ofi2_Lcd_Cmd 012C            __size_ofi2_Lcd_Out 008A               __end_of_dpowers 060B  
                       _count 0003               __end_of_isdigit 197A                         tablat 000FF5  
                       ttemp5 0061                         ttemp6 0064                         ttemp7 0068  
                       status 000FD8                         wtemp8 0061               __end_of_sprintf 09BE  
            __end_of_Lcd_Init 0E9C               __initialization 1916                  __end_of_main 14CE  
            serial_tx_str@val 0037                        ??_main 0096                 __activetblptr 000002  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
                      _ADRESH 000FC4                        _ADRESL 000FC3                        _CCPR1L 000FBE  
            __end_of_adc_init 1A06                        i2l2001 1734                        i2l1027 1978  
                      i2l2005 173C                        i2l2101 061A                        i2l2007 176A  
                      i2l2111 065C                        i2l2103 0626                        i2l2201 0912  
                      i2l2121 06A0                        i2l2105 0638                        i2l2043 1574  
                      i2l2211 0978                        i2l2203 091E                        i2l2123 06BC  
                      i2l2115 0662                        i2l2107 0644                        i2l2045 15DA  
                      i2l2221 18DC                        i2l2213 097C                        i2l2205 0922  
                      i2l2141 077C                        i2l2125 06E4                        i2l2133 0710  
                      i2l2117 067A                        i2l2109 064C                        i2l2301 0CB2  
                      i2l2047 15F2                        i2l1159 19E4                        i2l2223 18E4  
                      i2l2207 092A                        i2l2143 0780                        i2l2135 0756  
                      i2l2127 06E8                        i2l2119 0698                        i2l2215 098E  
                      i2l2231 169A                        i2l2311 0CF0                        i2l2303 0CB8  
                      i2l2225 18F6                        i2l2209 096C                        i2l2161 07D8  
                      i2l2137 0766                        i2l2145 078C                        i2l2217 09B0  
                      i2l2129 070A                        i2l2233 16A4                        i2l2241 16C2  
                      i2l2313 0CFE                        i2l2305 0CBE                        i2l2227 18F8  
                      i2l2171 083C                        i2l2163 07EA                        i2l2155 07A8  
                      i2l2147 079C                        i2l2139 076E                        i2l2235 16AE  
                      i2l2243 16E8                        i2l2315 0D1A                        i2l2307 0CC2  
                      i2l2181 0880                        i2l2173 0848                        i2l2165 07FC  
                      i2l2149 07A4                        i2l2245 16F2                        i2l2237 16B8  
                      i2l2229 1696                        i2l2317 0D26                        i2l2309 0CDE  
                      i2l2183 0884                        i2l2191 08C2                        i2l2175 0850  
                      i2l2167 0812                        i2l2159 07D6                        i2l2247 1700  
                      i2l2319 0D3C                        i2l2193 08D4                        i2l2185 0896  
                      i2l2177 085E                        i2l2169 0818                        i2l2249 1704  
                      i2l2195 08E0                        i2l2187 08A2                        i2l2179 0874  
                      i2l2291 0C6C                        i2l1821 195E                        i2l2197 08E4  
                      i2l2189 08A6                        i2l2293 0C70                        i2l2285 0C54  
                      i2l1911 179A                        i2l1831 19C2                        i2l1823 196E  
                      i2l2199 08FC                        i2l2295 0C84                        i2l2287 0C62  
                      i2l1841 183C                        i2l1921 17D2                        i2l1913 17A2  
                      i2l1825 1972                        i2l1817 194A                        i2l2297 0C8C  
                      i2l2289 0C64                        i2l1851 14FC                        i2l1843 1846  
                      i2l1835 180E                        i2l1931 17FE                        i2l1923 17D8  
                      i2l1915 17B4                        i2l1819 194E                        i2l2299 0C90  
                      i2l1861 154E                        i2l1853 1508                        i2l1845 14CE  
                      i2l1837 181E                        i2l1925 17EE                        i2l1917 17BC  
                      i2l1941 18A8                        i2l1933 1878                        i2l1829 19A6  
                      i2l1863 1550                        i2l1855 1516                        i2l1847 14DE  
                      i2l1839 182C                        i2l1927 17F6                        i2l1919 17C4  
                      i2l1943 18BE                        i2l1935 188A                        i2l1951 0EA2  
                      i2l1865 155A                        i2l1857 1520                        i2l1849 14F4  
                      i2l1929 17F8                        i2l1945 18C6                        i2l1937 1892  
                      i2l1961 0FA4                        i2l1953 0F20                        i2l1859 153E  
                      i2l1947 18CC                        i2l1939 189A                        i2l1971 0FC0  
                      i2l1963 0FAC                        i2l1955 0F28                        i2l1965 0FAE  
                      i2l1957 0F2A                        i2l1949 0E9E                        i2l1981 105E  
                      i2l1973 0FD2                        i2l1967 0FB6                        i2l1959 0F32  
                      i2l1991 10EA                        i2l1983 1066                        i2l1975 0FD6  
                      i2l1969 0FB8                        i2l1993 10EC                        i2l1985 10D8  
                      i2l1977 1054                        i2l1995 1720                        i2l1987 10E0  
                      i2l1979 105C                        i2l1997 1724                        i2l1989 10E2  
                      i2l1999 172C                        _INTCON 000FF2                     ??_Lcd_Cmd 0080  
                   ??_Lcd_Out 0086                        i2u7_40 19F6                        i2u7_41 19F2  
                ?_serial_init 0036             __end_of_PWM1_Init 140C                        ___lmul 180E  
                 ?_Lcd_Chr_CP 0036             __end_ofi2_Lcd_Cmd 10FC                     ??___aldiv 0088  
                      ___wmul 19A6             __end_ofi2_Lcd_Out 171E           __size_of_PWM1_Start 002C  
                   ??___lldiv 004A                     ??___lwdiv 003A                     ??___lwmod 0041  
                      _infrav 0005                        clear_0 1934                        _result 0001  
        serial_rx_str_until@i 0088                  __pdataCOMRAM 005E                     ??_isdigit 0036  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                     ??_sprintf 0048                    __accesstop 0080  
     __end_of__initialization 193A                 ___rparam_used 000001                __pcstackCOMRAM 0036  
       __end_of_PWM1_Set_Duty 1604         __end_of_serial_tx_str 1916                     ?_Lcd_Init 0036  
                sprintf@width 0052           __size_of_Lcd_Chr_CP 013E   __end_of_serial_rx_str_until 1316  
                     ?___lmul 0036                       ?___wmul 0036                 ??_adc_amostra 0038  
                     _CCP1CON 000FBD                ___lmul@product 003E                     ?_adc_init 0036  
          __size_of_serial_tx 0016                  ??_PWM1_Start 0080                       i2u92_40 195E  
                     i2u92_41 195A                       i2u93_40 196E                    ??_Lcd_Init 0083  
                     i2u93_41 196A                       i2u94_40 182C                       i2u94_41 1828  
                     i2u95_40 1866                       i2u95_41 1862                       i2u96_40 14F4  
                     i2u96_41 14F0                       i2u97_40 1516                       i2u97_41 1512  
                     i2u98_40 153E                       i2u98_41 153A                       _Lcd_Cmd 0AFC  
                     _Lcd_Out 1604                       __Hparam 0000                       __Lparam 0000  
                     ___aldiv 10FC                 ?i2_Lcd_Chr_CP 0036               __size_of___lmul 006A  
                     ___lldiv 14CE               __size_of___wmul 0026                       ___lwdiv 179A  
                     ___lwmod 1878            __end_of_PWM1_Start 19A6          __size_of_serial_init 0016  
                __psmallconst 0600                       __pcinit 1916                       __ramtop 0600  
                  ??_adc_init 0080                       __ptext0 140C                       __ptext1 120A  
                     __ptext2 19CC                       __ptext3 19F8                       __ptext4 197A  
                     __ptext5 1316                       __ptext6 10FC                       __ptext7 1604  
                     __ptext8 09BE                       __ptext9 0D68                       _dpowers 0601  
                   _T2CONbits 000FCA           __end_of_adc_amostra 179A                       _isdigit 1948  
                __size_of_isr 0D60              ___aldiv@dividend 0080                       _sprintf 061A  
              __pintcode_body 0C32          end_of_initialization 193A                 __Lmediumconst 0000  
                     int_func 0C32             __end_of_serial_tx 19F8                 i2Lcd_Cmd@data 0038  
             ___lldiv@divisor 0046               ___lldiv@counter 004E                ??i2_Lcd_Chr_CP 0036  
                   _RCSTAbits 000FAB              ___aldiv@quotient 008A                  ??_Lcd_Chr_CP 0080  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
                   _PWM1_Init 1316                     i2_Lcd_Cmd 0FD0                     i2_Lcd_Out 1694  
                   _PORTCbits 000F82                     _PORTDbits 000F83                     _PORTEbits 000F84  
               i2Lcd_Out@data 003D                     _TRISCbits 000F94                     _TRISDbits 000F95  
                   _TRISEbits 000F96                PWM1_Set_Duty@d 0051            __end_of_Lcd_Chr_CP 0AFC  
                   _TXSTAbits 000FAC                serial_tx_str@i 0039                   _adc_amostra 171E  
              __end_of___lmul 1878                __end_of___wmul 19CC                   _BAUDCONbits 000FB8  
               __pidataCOMRAM 1A06                    ?_PWM1_Init 008E                    ?i2_Lcd_Cmd 0036  
                  ?i2_Lcd_Out 0039           start_initialization 1916                   __end_of_isr 0D68  
               Lcd_Out@buffer 0084             __size_of_Lcd_Init 0134                      ??___lmul 003E  
                    ??___wmul 003A             __size_of_adc_init 000E                   __pbssCOMRAM 0001  
               __pcstackBANK0 0080                  _isdigit$1631 0037          __end_ofi2_Lcd_Chr_CP 0FD0  
      __size_of_PWM1_Set_Duty 0092                      ?_Lcd_Cmd 0036        __size_of_serial_tx_str 003A  
                 sprintf@flag 0051                      ?_Lcd_Out 0083                   sprintf@prec 004C  
            ___lwdiv@dividend 0036              i2Lcd_Chr_CP@data 0038                     __pintcode 0008  
                    ?___aldiv 0080                      ?___lldiv 0042                      ?___lwdiv 0036  
                    ?___lwmod 003D  __size_of_serial_rx_str_until 010C                   ??_PWM1_Init 0090  
                   _buffer_rx 0009                   ??i2_Lcd_Cmd 0036                     _buffer_tx 001D  
                 ??i2_Lcd_Out 003C                   __smallconst 0600                      ?_isdigit 0036  
            ___lwdiv@quotient 003A                      ?_sprintf 0042                    PWM1_Init@f 008E  
             ___aldiv@divisor 0084               ___aldiv@counter 0088                ___wmul@product 003A  
                    _LATDbits 000F8C                 PWM1_Init@temp 0094                      i2u110_40 18BE  
                    i2u110_41 18BA                      i2u111_45 0EAA                      i2u112_45 0EC4  
                    i2u105_40 17B4                      i2u105_41 17B0                      i2u113_45 0EEA  
                    i2u106_40 17D2                      i2u106_41 17CE                      i2u114_45 0FDE  
                    i2u210_47 10DA                      i2u107_40 17EE                      i2u107_41 17EA  
                    i2u115_45 0FF8                      i2u211_47 10E4                      i2u108_40 188A  
                    i2u140_40 0812                      i2u132_40 0638                      i2u108_41 1886  
                    i2u140_41 080E                      i2u132_41 0634                      i2u116_45 101E  
                    i2u212_47 10F2                      i2u117_40 176A                      i2u109_40 18A8  
                    i2u141_40 083C                      i2u133_40 0698                      i2u117_41 1766  
                    i2u109_41 18A4                      i2u141_41 0838                      i2u133_41 0694  
                    i2u213_47 0F22                      i2u150_40 09B0                      i2u142_40 085E  
                    i2u134_40 0706                      i2u150_41 09AC                      i2u142_41 085A  
                    i2u134_41 0702                      i2u118_45 1772                      i2u214_47 0F2C  
                    i2u151_40 1914                      i2u143_40 0874                      i2u135_40 0756  
                    i2u151_41 1910                      i2u143_41 0870                      i2u135_41 0752  
                    i2u215_47 0FA6                      i2u144_40 0896                      i2u136_40 077C  
                    i2u152_40 171C                      i2u144_41 0892                      i2u136_41 0778  
                    i2u152_41 1718                      i2u216_47 0FB0                      i2u208_47 1056  
                    i2u145_40 08BE                      i2u137_40 07D2                      i2u153_40 0C62  
                    i2u145_41 08BA                      i2u137_41 07CE                      i2u153_41 0C5E  
                    i2u217_47 0FBA                      i2u209_47 1060                      i2u146_40 08D4  
                    i2u138_40 07EA                      i2u154_40 0C84                      i2u146_41 08D0  
                    i2u138_41 07E6                      i2u154_41 0C80                      i2u218_47 0FC6  
                    i2u147_40 08FC                      i2u139_40 07FC                      i2u155_40 0CA0  
                    i2u147_41 08F8                      i2u139_41 07F8                      i2u155_41 0C9A  
                    i2u155_46 0CA2                      i2u148_40 0912                      i2u156_40 0D3C  
                    i2u148_41 090E                      i2u156_41 0D38                      i2u149_40 098E  
                    i2u149_41 098A                      _PIR1bits 000F9E                 ??_serial_init 0080  
                   _serial_tx 19E2                      Lcd_Out@x 0083                      Lcd_Out@y 0086  
               _PWM1_Set_Duty 1572                 _serial_tx_str 18DC                  Lcd_Init@data 0084  
                  _ADCON0bits 000FC2             ___wmul@multiplier 0036       serial_rx_str_until@buff 0080  
     serial_rx_str_until@term 0084       serial_rx_str_until@size 0082                      _Lcd_Init 0D68  
           ___lmul@multiplier 0036                   _INTCON2bits 000FF1              __size_of_Lcd_Cmd 0136  
            __size_of_Lcd_Out 0090                      __Hrparam 0000                      __Lrparam 0000  
                  ?_serial_tx 0036                ?_PWM1_Set_Duty 0036                  ?_adc_amostra 0036  
            __size_of___aldiv 010E                ?_serial_tx_str 0037              __size_of___lldiv 00A4  
            __size_of___lwdiv 0074              __size_of___lwmod 0064           __end_of_serial_init 19E2  
                    _adc_init 19F8         __size_ofi2_Lcd_Chr_CP 0134                    sprintf@val 004F  
            __size_of_isdigit 0032                Lcd_Chr_CP@data 0082               ___lwdiv@divisor 0038  
             ___lwdiv@counter 003C                      __ptext10 0AFC                      __ptext20 18DC  
                    __ptext12 1694                      __ptext21 19E2                      __ptext13 0FD0  
                    __ptext22 171E                      __ptext14 0E9C                      __ptext23 1572  
                    __ptext15 061A                      __ptext24 180E                      __ptext16 1948  
                    __ptext25 14CE                      __ptext17 19A6                      __ptext18 1878  
                    __ptext19 179A              __size_of_sprintf 03A4                   Lcd_Cmd@data 0082  
               __size_of_main 00C2                      _segundos 0007                      int$flags 0060  
                i2_Lcd_Chr_CP 0E9C                  serial_tx@val 0036                   Lcd_Out@data 0087  
                  _INTCONbits 000FF2                      isdigit@c 0038                      intlevel2 0000  
         _serial_rx_str_until 120A                     sprintf@ap 004D                     sprintf@sp 0042  
            ___lwmod@dividend 003D              ___lldiv@dividend 0042               ??_PWM1_Set_Duty 004F  
                 ??_serial_tx 0036                   _serial_init 19CC                    i2Lcd_Out@x 0039  
                  i2Lcd_Out@y 003C               ??_serial_tx_str 0039          ?_serial_rx_str_until 0080  
                    sprintf@c 0054                      sprintf@f 0044              ___lldiv@quotient 004A  
             ___lwmod@divisor 003F               ___lwmod@counter 0041              adc_amostra@canal 003C  
                ___aldiv@sign 0089                    _PWM1_Start 197A               i2Lcd_Out@buffer 003A  
