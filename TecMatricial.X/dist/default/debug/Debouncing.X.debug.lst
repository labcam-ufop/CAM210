

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Nov 17 10:43:37 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	idataCOMRAM
    52  007F4A                     __pidataCOMRAM:
    53                           	callstack 0
    54                           
    55                           ;initializer for _filtro0
    56  007F4A  0064               	dw	100
    57  0000                     _LATDbits	set	3980
    58  0000                     _PORTBbits	set	3969
    59  0000                     _LATD	set	3980
    60  0000                     _PORTD	set	3971
    61  0000                     _LATB	set	3978
    62  0000                     _PORTB	set	3969
    63  0000                     _TRISD	set	3989
    64  0000                     _TRISB	set	3987
    65  0000                     _INTCON2bits	set	4081
    66                           
    67                           ; #config settings
    68                           
    69                           	psect	cinit
    70  007F4C                     __pcinit:
    71                           	callstack 0
    72  007F4C                     start_initialization:
    73                           	callstack 0
    74  007F4C                     __initialization:
    75                           	callstack 0
    76                           
    77                           ; Initialize objects allocated to COMRAM (2 bytes)
    78                           ; load TBLPTR registers with __pidataCOMRAM
    79  007F4C  0E4A               	movlw	low __pidataCOMRAM
    80  007F4E  6EF6               	movwf	tblptrl,c
    81  007F50  0E7F               	movlw	high __pidataCOMRAM
    82  007F52  6EF7               	movwf	tblptrh,c
    83  007F54  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    84  007F56  6EF8               	movwf	tblptru,c
    85  007F58  0009               	tblrd		*+	;fetch initializer
    86  007F5A  CFF5 F001          	movff	tablat,__pdataCOMRAM
    87  007F5E  0009               	tblrd		*+	;fetch initializer
    88  007F60  CFF5 F002          	movff	tablat,__pdataCOMRAM+1
    89                           
    90                           ; Clear objects allocated to BITCOMRAM (1 bytes)
    91  007F64  6A03               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
    92  007F66                     end_of_initialization:
    93                           	callstack 0
    94  007F66                     __end_of__initialization:
    95                           	callstack 0
    96  007F66  0100               	movlb	0
    97  007F68  EFB6  F03F         	goto	_main	;jump to C main() function
    98                           
    99                           	psect	bitbssCOMRAM
   100  000018                     __pbitbssCOMRAM:
   101                           	callstack 0
   102  000018                     _bt_press:
   103                           	callstack 0
   104  000018                     	ds	1
   105                           
   106                           	psect	dataCOMRAM
   107  000001                     __pdataCOMRAM:
   108                           	callstack 0
   109  000001                     _filtro0:
   110                           	callstack 0
   111  000001                     	ds	2
   112                           
   113                           	psect	cstackCOMRAM
   114  000004                     __pcstackCOMRAM:
   115                           	callstack 0
   116  000004                     ??_main:
   117                           
   118                           ; 1 bytes @ 0x0
   119  000004                     	ds	1
   120                           
   121 ;;
   122 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   123 ;;
   124 ;; *************** function _main *****************
   125 ;; Defined at:
   126 ;;		line 20 in file "mainDeb.c"
   127 ;; Parameters:    Size  Location     Type
   128 ;;		None
   129 ;; Auto vars:     Size  Location     Type
   130 ;;		None
   131 ;; Return value:  Size  Location     Type
   132 ;;                  1    wreg      void 
   133 ;; Registers used:
   134 ;;		wreg, status,2, status,0
   135 ;; Tracked objects:
   136 ;;		On entry : 0/0
   137 ;;		On exit  : 0/0
   138 ;;		Unchanged: 0/0
   139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   140 ;;      Params:         0       0       0       0       0       0       0       0       0
   141 ;;      Locals:         0       0       0       0       0       0       0       0       0
   142 ;;      Temps:          1       0       0       0       0       0       0       0       0
   143 ;;      Totals:         1       0       0       0       0       0       0       0       0
   144 ;;Total ram usage:        1 bytes
   145 ;; This function calls:
   146 ;;		Nothing
   147 ;; This function is called by:
   148 ;;		Startup code after reset
   149 ;; This function uses a non-reentrant model
   150 ;;
   151                           
   152                           	psect	text0
   153  007F6C                     __ptext0:
   154                           	callstack 0
   155  007F6C                     _main:
   156                           	callstack 31
   157  007F6C                     
   158                           ;mainDeb.c: 27: INTCON2bits.RBPU = 1;
   159  007F6C  8EF1               	bsf	241,7,c	;volatile
   160  007F6E                     
   161                           ;mainDeb.c: 28: TRISB = 0b00000001;
   162  007F6E  0E01               	movlw	1
   163  007F70  6E93               	movwf	147,c	;volatile
   164                           
   165                           ;mainDeb.c: 29: TRISD = 0x00;
   166  007F72  0E00               	movlw	0
   167  007F74  6E95               	movwf	149,c	;volatile
   168                           
   169                           ;mainDeb.c: 30: PORTB = 0;
   170  007F76  0E00               	movlw	0
   171  007F78  6E81               	movwf	129,c	;volatile
   172                           
   173                           ;mainDeb.c: 31: LATB = 0;
   174  007F7A  0E00               	movlw	0
   175  007F7C  6E8A               	movwf	138,c	;volatile
   176                           
   177                           ;mainDeb.c: 32: PORTD = 0;
   178  007F7E  0E00               	movlw	0
   179  007F80  6E83               	movwf	131,c	;volatile
   180                           
   181                           ;mainDeb.c: 33: LATD = 0;
   182  007F82  0E00               	movlw	0
   183  007F84  6E8C               	movwf	140,c	;volatile
   184  007F86                     l27:
   185  007F86  0004               	clrwdt		;# 
   186  007F88                     
   187                           ;mainDeb.c: 37: if (!PORTBbits.RB0)
   188  007F88  B081               	btfsc	129,0,c	;volatile
   189  007F8A  EFC9  F03F         	goto	u11
   190  007F8E  EFCB  F03F         	goto	u10
   191  007F92                     u11:
   192  007F92  EFF7  F03F         	goto	l797
   193  007F96                     u10:
   194  007F96                     
   195                           ;mainDeb.c: 38: {;mainDeb.c: 39: if (!(bt_press))
   196  007F96  B003               	btfsc	(_bt_press/(0+8))^0,_bt_press& (0+7),c
   197  007F98  EFD0  F03F         	goto	u21
   198  007F9C  EFD2  F03F         	goto	u20
   199  007FA0                     u21:
   200  007FA0  EFC3  F03F         	goto	l27
   201  007FA4                     u20:
   202  007FA4                     
   203                           ;mainDeb.c: 40: {;mainDeb.c: 41: if (filtro0 > 0)
   204  007FA4  BE02               	btfsc	(_filtro0+1)^0,7,c
   205  007FA6  EFDD  F03F         	goto	u31
   206  007FAA  5002               	movf	(_filtro0+1)^0,w,c
   207  007FAC  E108               	bnz	u30
   208  007FAE  0401               	decf	_filtro0^0,w,c
   209  007FB0  A0D8               	btfss	status,0,c
   210  007FB2  EFDD  F03F         	goto	u31
   211  007FB6  EFDF  F03F         	goto	u30
   212  007FBA                     u31:
   213  007FBA  EFE4  F03F         	goto	l30
   214  007FBE                     u30:
   215  007FBE                     
   216                           ;mainDeb.c: 42: {;mainDeb.c: 43: filtro0--;
   217  007FBE  0601               	decf	_filtro0^0,f,c
   218  007FC0  A0D8               	btfss	status,0,c
   219  007FC2  0602               	decf	(_filtro0+1)^0,f,c
   220                           
   221                           ;mainDeb.c: 44: }
   222  007FC4  EFC3  F03F         	goto	l27
   223  007FC8                     l30:
   224                           
   225                           ;mainDeb.c: 45: else;mainDeb.c: 46: {;mainDeb.c: 47: bt_press = 1;
   226  007FC8  8003               	bsf	(_bt_press/(0+8))^0,_bt_press& (0+7),c
   227  007FCA                     
   228                           ;mainDeb.c: 48: LATDbits.LD0 = ~LATDbits.LD0;
   229  007FCA  B08C               	btfsc	140,0,c	;volatile
   230  007FCC  EFEA  F03F         	goto	u41
   231  007FD0  EFED  F03F         	goto	u40
   232  007FD4                     u41:
   233  007FD4  0E01               	movlw	1
   234  007FD6  EFEE  F03F         	goto	u46
   235  007FDA                     u40:
   236  007FDA  0E00               	movlw	0
   237  007FDC                     u46:
   238  007FDC  0AFF               	xorlw	255
   239  007FDE  6E04               	movwf	??_main^0,c
   240  007FE0  508C               	movf	140,w,c	;volatile
   241  007FE2  1804               	xorwf	??_main^0,w,c
   242  007FE4  0BFE               	andlw	-2
   243  007FE6  1804               	xorwf	??_main^0,w,c
   244  007FE8  6E8C               	movwf	140,c	;volatile
   245  007FEA  EFC3  F03F         	goto	l27
   246  007FEE                     l797:
   247                           
   248                           ;mainDeb.c: 52: else;mainDeb.c: 53: {;mainDeb.c: 54: filtro0 = 100;
   249  007FEE  0E00               	movlw	0
   250  007FF0  6E02               	movwf	(_filtro0+1)^0,c
   251  007FF2  0E64               	movlw	100
   252  007FF4  6E01               	movwf	_filtro0^0,c
   253  007FF6                     
   254                           ;mainDeb.c: 55: bt_press = 0;
   255  007FF6  9003               	bcf	(_bt_press/(0+8))^0,_bt_press& (0+7),c
   256  007FF8  EFC3  F03F         	goto	l27
   257  007FFC  EF00  F000         	goto	start
   258  008000                     __end_of_main:
   259                           	callstack 0
   260  0000                     
   261                           	psect	rparam
   262  0000                     
   263                           	psect	idloc
   264                           
   265                           ;Config register IDLOC0 @ 0x200000
   266                           ;	unspecified, using default values
   267  200000                     	org	2097152
   268  200000  FF                 	db	255
   269                           
   270                           ;Config register IDLOC1 @ 0x200001
   271                           ;	unspecified, using default values
   272  200001                     	org	2097153
   273  200001  FF                 	db	255
   274                           
   275                           ;Config register IDLOC2 @ 0x200002
   276                           ;	unspecified, using default values
   277  200002                     	org	2097154
   278  200002  FF                 	db	255
   279                           
   280                           ;Config register IDLOC3 @ 0x200003
   281                           ;	unspecified, using default values
   282  200003                     	org	2097155
   283  200003  FF                 	db	255
   284                           
   285                           ;Config register IDLOC4 @ 0x200004
   286                           ;	unspecified, using default values
   287  200004                     	org	2097156
   288  200004  FF                 	db	255
   289                           
   290                           ;Config register IDLOC5 @ 0x200005
   291                           ;	unspecified, using default values
   292  200005                     	org	2097157
   293  200005  FF                 	db	255
   294                           
   295                           ;Config register IDLOC6 @ 0x200006
   296                           ;	unspecified, using default values
   297  200006                     	org	2097158
   298  200006  FF                 	db	255
   299                           
   300                           ;Config register IDLOC7 @ 0x200007
   301                           ;	unspecified, using default values
   302  200007                     	org	2097159
   303  200007  FF                 	db	255
   304                           
   305                           	psect	config
   306                           
   307                           ;Config register CONFIG1L @ 0x300000
   308                           ;	PLL Prescaler Selection bits
   309                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   310                           ;	System Clock Postscaler Selection bits
   311                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   312                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   313                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   314  300000                     	org	3145728
   315  300000  00                 	db	0
   316                           
   317                           ;Config register CONFIG1H @ 0x300001
   318                           ;	Oscillator Selection bits
   319                           ;	FOSC = HS, HS oscillator (HS)
   320                           ;	Fail-Safe Clock Monitor Enable bit
   321                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   322                           ;	Internal/External Oscillator Switchover bit
   323                           ;	IESO = OFF, Oscillator Switchover mode disabled
   324  300001                     	org	3145729
   325  300001  0C                 	db	12
   326                           
   327                           ;Config register CONFIG2L @ 0x300002
   328                           ;	Power-up Timer Enable bit
   329                           ;	PWRT = OFF, PWRT disabled
   330                           ;	Brown-out Reset Enable bits
   331                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   332                           ;	Brown-out Reset Voltage bits
   333                           ;	BORV = 3, Minimum setting 2.05V
   334                           ;	USB Voltage Regulator Enable bit
   335                           ;	VREGEN = OFF, USB voltage regulator disabled
   336  300002                     	org	3145730
   337  300002  1F                 	db	31
   338                           
   339                           ;Config register CONFIG2H @ 0x300003
   340                           ;	Watchdog Timer Enable bit
   341                           ;	WDT = ON, WDT enabled
   342                           ;	Watchdog Timer Postscale Select bits
   343                           ;	WDTPS = 32768, 1:32768
   344  300003                     	org	3145731
   345  300003  1F                 	db	31
   346                           
   347                           ; Padding undefined space
   348  300004                     	org	3145732
   349  300004  FF                 	db	255
   350                           
   351                           ;Config register CONFIG3H @ 0x300005
   352                           ;	CCP2 MUX bit
   353                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   354                           ;	PORTB A/D Enable bit
   355                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   356                           ;	Low-Power Timer 1 Oscillator Enable bit
   357                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   358                           ;	MCLR Pin Enable bit
   359                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   360  300005                     	org	3145733
   361  300005  81                 	db	129
   362                           
   363                           ;Config register CONFIG4L @ 0x300006
   364                           ;	Stack Full/Underflow Reset Enable bit
   365                           ;	STVREN = ON, Stack full/underflow will cause Reset
   366                           ;	Single-Supply ICSP Enable bit
   367                           ;	LVP = ON, Single-Supply ICSP enabled
   368                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   369                           ;	ICPRT = OFF, ICPORT disabled
   370                           ;	Extended Instruction Set Enable bit
   371                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   372                           ;	Background Debugger Enable bit
   373                           ;	DEBUG = 0x1, unprogrammed default
   374  300006                     	org	3145734
   375  300006  85                 	db	133
   376                           
   377                           ; Padding undefined space
   378  300007                     	org	3145735
   379  300007  FF                 	db	255
   380                           
   381                           ;Config register CONFIG5L @ 0x300008
   382                           ;	Code Protection bit
   383                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   384                           ;	Code Protection bit
   385                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   386                           ;	Code Protection bit
   387                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   388                           ;	Code Protection bit
   389                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   390  300008                     	org	3145736
   391  300008  0F                 	db	15
   392                           
   393                           ;Config register CONFIG5H @ 0x300009
   394                           ;	Boot Block Code Protection bit
   395                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   396                           ;	Data EEPROM Code Protection bit
   397                           ;	CPD = OFF, Data EEPROM is not code-protected
   398  300009                     	org	3145737
   399  300009  C0                 	db	192
   400                           
   401                           ;Config register CONFIG6L @ 0x30000A
   402                           ;	Write Protection bit
   403                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   404                           ;	Write Protection bit
   405                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   406                           ;	Write Protection bit
   407                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   408                           ;	Write Protection bit
   409                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   410  30000A                     	org	3145738
   411  30000A  0F                 	db	15
   412                           
   413                           ;Config register CONFIG6H @ 0x30000B
   414                           ;	Configuration Register Write Protection bit
   415                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   416                           ;	Boot Block Write Protection bit
   417                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   418                           ;	Data EEPROM Write Protection bit
   419                           ;	WRTD = OFF, Data EEPROM is not write-protected
   420  30000B                     	org	3145739
   421  30000B  E0                 	db	224
   422                           
   423                           ;Config register CONFIG7L @ 0x30000C
   424                           ;	Table Read Protection bit
   425                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   426                           ;	Table Read Protection bit
   427                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   428                           ;	Table Read Protection bit
   429                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   430                           ;	Table Read Protection bit
   431                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   432  30000C                     	org	3145740
   433  30000C  0F                 	db	15
   434                           
   435                           ;Config register CONFIG7H @ 0x30000D
   436                           ;	Boot Block Table Read Protection bit
   437                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   438  30000D                     	org	3145741
   439  30000D  40                 	db	64
   440                           tosu	equ	0xFFF
   441                           tosh	equ	0xFFE
   442                           tosl	equ	0xFFD
   443                           stkptr	equ	0xFFC
   444                           pclatu	equ	0xFFB
   445                           pclath	equ	0xFFA
   446                           pcl	equ	0xFF9
   447                           tblptru	equ	0xFF8
   448                           tblptrh	equ	0xFF7
   449                           tblptrl	equ	0xFF6
   450                           tablat	equ	0xFF5
   451                           prodh	equ	0xFF4
   452                           prodl	equ	0xFF3
   453                           indf0	equ	0xFEF
   454                           postinc0	equ	0xFEE
   455                           postdec0	equ	0xFED
   456                           preinc0	equ	0xFEC
   457                           plusw0	equ	0xFEB
   458                           fsr0h	equ	0xFEA
   459                           fsr0l	equ	0xFE9
   460                           wreg	equ	0xFE8
   461                           indf1	equ	0xFE7
   462                           postinc1	equ	0xFE6
   463                           postdec1	equ	0xFE5
   464                           preinc1	equ	0xFE4
   465                           plusw1	equ	0xFE3
   466                           fsr1h	equ	0xFE2
   467                           fsr1l	equ	0xFE1
   468                           bsr	equ	0xFE0
   469                           indf2	equ	0xFDF
   470                           postinc2	equ	0xFDE
   471                           postdec2	equ	0xFDD
   472                           preinc2	equ	0xFDC
   473                           plusw2	equ	0xFDB
   474                           fsr2h	equ	0xFDA
   475                           fsr2l	equ	0xFD9
   476                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F      1       4       1        4.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4      20        0.0%
DATA                 0      0       4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Nov 17 10:43:37 2020

                     l30 7FC8                       l27 7F86                       u10 7F96  
                     u11 7F92                       u20 7FA4                       u21 7FA0  
                     u30 7FBE                       u31 7FBA                       u40 7FDA  
                     u41 7FD4                       u46 7FDC                      l791 7FA4  
                    l783 7F6C                      l793 7FBE                      l785 7F6E  
                    l795 7FCA                      l787 7F88                      l789 7F96  
                    l797 7FEE                      l799 7FF6                     _LATB 000F8A  
                   _LATD 000F8C                     _main 7F6C                     start 0000  
           ___param_bank 000000                    ?_main 0004                    _PORTB 000F81  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISD 000F95  
         __pbitbssCOMRAM 0018                    tablat 000FF5                    status 000FD8  
        __initialization 7F4C             __end_of_main 8000                   ??_main 0004  
          __activetblptr 000000             __pdataCOMRAM 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 7F66            ___rparam_used 000001           __pcstackCOMRAM 0004  
                __Hparam 0000                  __Lparam 0000                  __pcinit 7F4C  
                __ramtop 0800                  __ptext0 7F6C                  _filtro0 0001  
   end_of_initialization 7F66                _PORTBbits 000F81            __pidataCOMRAM 7F4A  
    start_initialization 7F4C                 _LATDbits 000F8C              _INTCON2bits 000FF1  
               __Hrparam 0000                 __Lrparam 0000                 _bt_press 0018  
          __size_of_main 0094  
