

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Nov 23 18:12:29 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  001024                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _tecla
    61  001024  20                 	db	32
    62  0000                     _PORTC	set	3970
    63  0000                     _TRISC	set	3988
    64  0000                     _PORTDbits	set	3971
    65  0000                     _PORTEbits	set	3972
    66  0000                     _TRISDbits	set	3989
    67  0000                     _PORTE	set	3972
    68  0000                     _PORTD	set	3971
    69  0000                     _PORTB	set	3969
    70  0000                     _TRISE	set	3990
    71  0000                     _TRISD	set	3989
    72  0000                     _INTCON2bits	set	4081
    73  0000                     _PORTBbits	set	3969
    74  0000                     _ADCON1	set	4033
    75  0000                     _ADCON0	set	4034
    76  0000                     _TRISEbits	set	3990
    77  0000                     _LATC	set	3979
    78  0000                     _TRISB	set	3987
    79  0000                     _INTCON3	set	4080
    80  0000                     _INTCON2	set	4081
    81  0000                     _INTCON	set	4082
    82  0000                     _LATE	set	3981
    83  0000                     _LATD	set	3980
    84                           
    85                           	psect	smallconst
    86  000600                     __psmallconst:
    87                           	callstack 0
    88  000600  00                 	db	0
    89  000601                     STR_2:
    90  000601  53                 	db	83	;'S'
    91  000602  69                 	db	105	;'i'
    92  000603  73                 	db	115	;'s'
    93  000604  74                 	db	116	;'t'
    94  000605  2E                 	db	46
    95  000606  20                 	db	32
    96  000607  45                 	db	69	;'E'
    97  000608  6D                 	db	109	;'m'
    98  000609  62                 	db	98	;'b'
    99  00060A  61                 	db	97	;'a'
   100  00060B  72                 	db	114	;'r'
   101  00060C  63                 	db	99	;'c'
   102  00060D  61                 	db	97	;'a'
   103  00060E  64                 	db	100	;'d'
   104  00060F  6F                 	db	111	;'o'
   105  000610  73                 	db	115	;'s'
   106  000611  00                 	db	0
   107  000612                     STR_1:
   108  000612  20                 	db	32
   109  000613  20                 	db	32
   110  000614  41                 	db	65	;'A'
   111  000615  55                 	db	85	;'U'
   112  000616  54                 	db	84	;'T'
   113  000617  20                 	db	32
   114  000618  20                 	db	32
   115  000619  43                 	db	67	;'C'
   116  00061A  41                 	db	65	;'A'
   117  00061B  54                 	db	84	;'T'
   118  00061C  33                 	db	51	;'3'
   119  00061D  34                 	db	52	;'4'
   120  00061E  31                 	db	49	;'1'
   121  00061F  20                 	db	32
   122  000620  20                 	db	32
   123  000621  00                 	db	0
   124  000622                     STR_14:
   125  000622  2D                 	db	45
   126  000623  00                 	db	0
   127  000624                     STR_12:
   128  000624  30                 	db	48	;'0'
   129  000625  00                 	db	0
   130  000626                     STR_3:
   131  000626  31                 	db	49	;'1'
   132  000627  00                 	db	0
   133  000628                     STR_4:
   134  000628  32                 	db	50	;'2'
   135  000629  00                 	db	0
   136  00062A                     STR_5:
   137  00062A  33                 	db	51	;'3'
   138  00062B  00                 	db	0
   139  00062C                     STR_6:
   140  00062C  34                 	db	52	;'4'
   141  00062D  00                 	db	0
   142  00062E                     STR_7:
   143  00062E  35                 	db	53	;'5'
   144  00062F  00                 	db	0
   145  000630                     STR_8:
   146  000630  36                 	db	54	;'6'
   147  000631  00                 	db	0
   148  000632                     STR_9:
   149  000632  37                 	db	55	;'7'
   150  000633  00                 	db	0
   151  000634                     STR_10:
   152  000634  38                 	db	56	;'8'
   153  000635  00                 	db	0
   154  000636                     STR_11:
   155  000636  39                 	db	57	;'9'
   156  000637  00                 	db	0
   157  000638                     STR_13:
   158  000638  78                 	db	120	;'x'
   159  000639  00                 	db	0
   160  00063A  00                 	db	0	; dummy byte at the end
   161  0000                     
   162                           ; #config settings
   163                           
   164                           	psect	cinit
   165  001008                     __pcinit:
   166                           	callstack 0
   167  001008                     start_initialization:
   168                           	callstack 0
   169  001008                     __initialization:
   170                           	callstack 0
   171                           
   172                           ; Initialize objects allocated to COMRAM (1 bytes)
   173                           ; load TBLPTR registers with __pidataCOMRAM
   174  001008  0E24               	movlw	low __pidataCOMRAM
   175  00100A  6EF6               	movwf	tblptrl,c
   176  00100C  0E10               	movlw	high __pidataCOMRAM
   177  00100E  6EF7               	movwf	tblptrh,c
   178  001010  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   179  001012  6EF8               	movwf	tblptru,c
   180  001014  0009               	tblrd		*+	;fetch initializer
   181  001016  CFF5 F00B          	movff	tablat,__pdataCOMRAM
   182  00101A                     end_of_initialization:
   183                           	callstack 0
   184  00101A                     __end_of__initialization:
   185                           	callstack 0
   186  00101A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   187  00101C  6EF8               	movwf	tblptru,c
   188  00101E  0100               	movlb	0
   189  001020  EFBB  F004         	goto	_main	;jump to C main() function
   190                           
   191                           	psect	dataCOMRAM
   192  00000B                     __pdataCOMRAM:
   193                           	callstack 0
   194  00000B                     _tecla:
   195                           	callstack 0
   196  00000B                     	ds	1
   197                           
   198                           	psect	cstackCOMRAM
   199  000001                     __pcstackCOMRAM:
   200                           	callstack 0
   201  000001                     ??_Lcd_Cmd:
   202  000001                     ??_Lcd_Chr_CP:
   203  000001                     ??_tc_tecla:
   204  000001                     
   205                           ; 1 bytes @ 0x0
   206  000001                     	ds	1
   207  000002                     tc_tecla@key:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x1
   211  000002                     	ds	1
   212  000003                     Lcd_Chr_CP@data:
   213                           	callstack 0
   214  000003                     Lcd_Cmd@data:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x2
   218  000003                     	ds	1
   219  000004                     ??_Lcd_Init:
   220  000004                     Lcd_Out@x:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x3
   224  000004                     	ds	1
   225  000005                     Lcd_Init@data:
   226                           	callstack 0
   227  000005                     Lcd_Out@buffer:
   228                           	callstack 0
   229                           
   230                           ; 2 bytes @ 0x4
   231  000005                     	ds	2
   232  000007                     Lcd_Out@y:
   233                           	callstack 0
   234                           
   235                           ; 1 bytes @ 0x6
   236  000007                     	ds	1
   237  000008                     Lcd_Out@data:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x7
   241  000008                     	ds	1
   242  000009                     ??_main:
   243                           
   244                           ; 1 bytes @ 0x8
   245  000009                     	ds	2
   246                           
   247 ;;
   248 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   249 ;;
   250 ;; *************** function _main *****************
   251 ;; Defined at:
   252 ;;		line 24 in file "mainLCDtecl2.c"
   253 ;; Parameters:    Size  Location     Type
   254 ;;		None
   255 ;; Auto vars:     Size  Location     Type
   256 ;;		None
   257 ;; Return value:  Size  Location     Type
   258 ;;                  1    wreg      void 
   259 ;; Registers used:
   260 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   261 ;; Tracked objects:
   262 ;;		On entry : 0/0
   263 ;;		On exit  : 0/0
   264 ;;		Unchanged: 0/0
   265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   266 ;;      Params:         0       0       0       0       0       0       0
   267 ;;      Locals:         0       0       0       0       0       0       0
   268 ;;      Temps:          2       0       0       0       0       0       0
   269 ;;      Totals:         2       0       0       0       0       0       0
   270 ;;Total ram usage:        2 bytes
   271 ;; Hardware stack levels required when called: 2
   272 ;; This function calls:
   273 ;;		_Lcd_Cmd
   274 ;;		_Lcd_Init
   275 ;;		_Lcd_Out
   276 ;;		_tc_tecla
   277 ;; This function is called by:
   278 ;;		Startup code after reset
   279 ;; This function uses a non-reentrant model
   280 ;;
   281                           
   282                           	psect	text0
   283  000976                     __ptext0:
   284                           	callstack 0
   285  000976                     _main:
   286                           	callstack 29
   287  000976                     
   288                           ;mainLCDtecl2.c: 26: ADCON0 = 0b00000000;
   289  000976  0E00               	movlw	0
   290  000978  6EC2               	movwf	194,c	;volatile
   291                           
   292                           ;mainLCDtecl2.c: 27: ADCON1 = 0b00001111;
   293  00097A  0E0F               	movlw	15
   294  00097C  6EC1               	movwf	193,c	;volatile
   295                           
   296                           ;mainLCDtecl2.c: 29: INTCON = 0b00000000;
   297  00097E  0E00               	movlw	0
   298  000980  6EF2               	movwf	242,c	;volatile
   299                           
   300                           ;mainLCDtecl2.c: 30: INTCON2 = 0b10000000;
   301  000982  0E80               	movlw	128
   302  000984  6EF1               	movwf	241,c	;volatile
   303  000986                     
   304                           ;mainLCDtecl2.c: 31: INTCON2bits.RBPU = 1;
   305  000986  8EF1               	bsf	241,7,c	;volatile
   306                           
   307                           ;mainLCDtecl2.c: 32: INTCON3 = 0b00000000;
   308  000988  0E00               	movlw	0
   309  00098A  6EF0               	movwf	240,c	;volatile
   310                           
   311                           ;mainLCDtecl2.c: 34: TRISB = 0b00001111;
   312  00098C  0E0F               	movlw	15
   313  00098E  6E93               	movwf	147,c	;volatile
   314                           
   315                           ;mainLCDtecl2.c: 35: TRISC = 0b00000000;
   316  000990  0E00               	movlw	0
   317  000992  6E94               	movwf	148,c	;volatile
   318                           
   319                           ;mainLCDtecl2.c: 36: TRISD = 0b00001111;
   320  000994  0E0F               	movlw	15
   321  000996  6E95               	movwf	149,c	;volatile
   322                           
   323                           ;mainLCDtecl2.c: 37: TRISE = 0b00000000;
   324  000998  0E00               	movlw	0
   325  00099A  6E96               	movwf	150,c	;volatile
   326  00099C                     
   327                           ;mainLCDtecl2.c: 39: PORTB = 0b11111111;
   328  00099C  6881               	setf	129,c	;volatile
   329                           
   330                           ;mainLCDtecl2.c: 41: PORTC = 0;
   331  00099E  0E00               	movlw	0
   332  0009A0  6E82               	movwf	130,c	;volatile
   333                           
   334                           ;mainLCDtecl2.c: 42: LATC = 0;
   335  0009A2  0E00               	movlw	0
   336  0009A4  6E8B               	movwf	139,c	;volatile
   337                           
   338                           ;mainLCDtecl2.c: 43: PORTD = 0;
   339  0009A6  0E00               	movlw	0
   340  0009A8  6E83               	movwf	131,c	;volatile
   341                           
   342                           ;mainLCDtecl2.c: 44: LATD = 0;
   343  0009AA  0E00               	movlw	0
   344  0009AC  6E8C               	movwf	140,c	;volatile
   345                           
   346                           ;mainLCDtecl2.c: 45: PORTE = 0;
   347  0009AE  0E00               	movlw	0
   348  0009B0  6E84               	movwf	132,c	;volatile
   349                           
   350                           ;mainLCDtecl2.c: 46: LATE = 0;
   351  0009B2  0E00               	movlw	0
   352  0009B4  6E8D               	movwf	141,c	;volatile
   353  0009B6                     
   354                           ;mainLCDtecl2.c: 48: Lcd_Init();
   355  0009B6  EC32  F007         	call	_Lcd_Init	;wreg free
   356  0009BA                     
   357                           ;mainLCDtecl2.c: 50: Lcd_Cmd(12);
   358  0009BA  0E0C               	movlw	12
   359  0009BC  EC9C  F006         	call	_Lcd_Cmd
   360  0009C0                     
   361                           ;mainLCDtecl2.c: 51: Lcd_Out(1, 0, "  AUT  CAT341  ");
   362  0009C0  0E00               	movlw	0
   363  0009C2  6E04               	movwf	Lcd_Out@x^0,c
   364  0009C4  0E12               	movlw	low STR_1
   365  0009C6  6E05               	movwf	Lcd_Out@buffer^0,c
   366  0009C8  0E06               	movlw	high STR_1
   367  0009CA  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   368  0009CC  0E01               	movlw	1
   369  0009CE  ECBC  F007         	call	_Lcd_Out
   370  0009D2                     
   371                           ;mainLCDtecl2.c: 52: Lcd_Out(2, 0, "Sist. Embarcados");
   372  0009D2  0E00               	movlw	0
   373  0009D4  6E04               	movwf	Lcd_Out@x^0,c
   374  0009D6  0E01               	movlw	low STR_2
   375  0009D8  6E05               	movwf	Lcd_Out@buffer^0,c
   376  0009DA  0E06               	movlw	high STR_2
   377  0009DC  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   378  0009DE  0E02               	movlw	2
   379  0009E0  ECBC  F007         	call	_Lcd_Out
   380  0009E4                     
   381                           ;mainLCDtecl2.c: 53: _delay((unsigned long)((200)*(8000000/4000.0)));
   382  0009E4  0E03               	movlw	3
   383  0009E6  6E0A               	movwf	(??_main+1)^0,c
   384  0009E8  0E08               	movlw	8
   385  0009EA  6E09               	movwf	??_main^0,c
   386  0009EC  0E77               	movlw	119
   387  0009EE                     u697:
   388  0009EE  2EE8               	decfsz	wreg,f,c
   389  0009F0  D7FE               	bra	u697
   390  0009F2  2E09               	decfsz	??_main^0,f,c
   391  0009F4  D7FC               	bra	u697
   392  0009F6  2E0A               	decfsz	(??_main+1)^0,f,c
   393  0009F8  D7FA               	bra	u697
   394  0009FA  F000               	nop	
   395  0009FC                     l145:
   396  0009FC  0004               	clrwdt		;# 
   397  0009FE                     
   398                           ;mainLCDtecl2.c: 60: tecla = tc_tecla();
   399  0009FE  EC1E  F003         	call	_tc_tecla	;wreg free
   400  000A02  6E0B               	movwf	_tecla^0,c
   401  000A04                     
   402                           ;mainLCDtecl2.c: 63: if (tecla == '1')
   403  000A04  0E31               	movlw	49
   404  000A06  180B               	xorwf	_tecla^0,w,c
   405  000A08  A4D8               	btfss	status,2,c
   406  000A0A  EF09  F005         	goto	u571
   407  000A0E  EF0B  F005         	goto	u570
   408  000A12                     u571:
   409  000A12  EF22  F005         	goto	l1337
   410  000A16                     u570:
   411  000A16                     
   412                           ;mainLCDtecl2.c: 64: {;mainLCDtecl2.c: 65: Lcd_Out(1, 0, "1");
   413  000A16  0E00               	movlw	0
   414  000A18  6E04               	movwf	Lcd_Out@x^0,c
   415  000A1A  0E26               	movlw	low STR_3
   416  000A1C  6E05               	movwf	Lcd_Out@buffer^0,c
   417  000A1E  0E06               	movlw	high STR_3
   418  000A20  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   419  000A22  0E01               	movlw	1
   420  000A24  ECBC  F007         	call	_Lcd_Out
   421  000A28                     l1335:
   422                           
   423                           ;mainLCDtecl2.c: 66: _delay((unsigned long)((100)*(8000000/4000.0)));
   424  000A28  0E02               	movlw	2
   425  000A2A  6E0A               	movwf	(??_main+1)^0,c
   426  000A2C  0E04               	movlw	4
   427  000A2E  6E09               	movwf	??_main^0,c
   428  000A30  0EBA               	movlw	186
   429  000A32                     u707:
   430  000A32  2EE8               	decfsz	wreg,f,c
   431  000A34  D7FE               	bra	u707
   432  000A36  2E09               	decfsz	??_main^0,f,c
   433  000A38  D7FC               	bra	u707
   434  000A3A  2E0A               	decfsz	(??_main+1)^0,f,c
   435  000A3C  D7FA               	bra	u707
   436  000A3E  D000               	nop2	
   437                           
   438                           ;mainLCDtecl2.c: 67: }
   439  000A40  EFFE  F004         	goto	l145
   440  000A44                     l1337:
   441                           
   442                           ;mainLCDtecl2.c: 68: else if (tecla == '2')
   443  000A44  0E32               	movlw	50
   444  000A46  180B               	xorwf	_tecla^0,w,c
   445  000A48  A4D8               	btfss	status,2,c
   446  000A4A  EF29  F005         	goto	u581
   447  000A4E  EF2B  F005         	goto	u580
   448  000A52                     u581:
   449  000A52  EF36  F005         	goto	l1343
   450  000A56                     u580:
   451  000A56                     
   452                           ;mainLCDtecl2.c: 69: {;mainLCDtecl2.c: 70: Lcd_Out(1, 0, "2");
   453  000A56  0E00               	movlw	0
   454  000A58  6E04               	movwf	Lcd_Out@x^0,c
   455  000A5A  0E28               	movlw	low STR_4
   456  000A5C  6E05               	movwf	Lcd_Out@buffer^0,c
   457  000A5E  0E06               	movlw	high STR_4
   458  000A60  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   459  000A62  0E01               	movlw	1
   460  000A64  ECBC  F007         	call	_Lcd_Out
   461  000A68  EF14  F005         	goto	l1335
   462  000A6C                     l1343:
   463                           
   464                           ;mainLCDtecl2.c: 73: else if (tecla == '3')
   465  000A6C  0E33               	movlw	51
   466  000A6E  180B               	xorwf	_tecla^0,w,c
   467  000A70  A4D8               	btfss	status,2,c
   468  000A72  EF3D  F005         	goto	u591
   469  000A76  EF3F  F005         	goto	u590
   470  000A7A                     u591:
   471  000A7A  EF4A  F005         	goto	l1349
   472  000A7E                     u590:
   473  000A7E                     
   474                           ;mainLCDtecl2.c: 74: {;mainLCDtecl2.c: 75: Lcd_Out(1, 0, "3");
   475  000A7E  0E00               	movlw	0
   476  000A80  6E04               	movwf	Lcd_Out@x^0,c
   477  000A82  0E2A               	movlw	low STR_5
   478  000A84  6E05               	movwf	Lcd_Out@buffer^0,c
   479  000A86  0E06               	movlw	high STR_5
   480  000A88  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   481  000A8A  0E01               	movlw	1
   482  000A8C  ECBC  F007         	call	_Lcd_Out
   483  000A90  EF14  F005         	goto	l1335
   484  000A94                     l1349:
   485                           
   486                           ;mainLCDtecl2.c: 78: else if (tecla == '4')
   487  000A94  0E34               	movlw	52
   488  000A96  180B               	xorwf	_tecla^0,w,c
   489  000A98  A4D8               	btfss	status,2,c
   490  000A9A  EF51  F005         	goto	u601
   491  000A9E  EF53  F005         	goto	u600
   492  000AA2                     u601:
   493  000AA2  EF5E  F005         	goto	l1355
   494  000AA6                     u600:
   495  000AA6                     
   496                           ;mainLCDtecl2.c: 79: {;mainLCDtecl2.c: 80: Lcd_Out(1, 0, "4");
   497  000AA6  0E00               	movlw	0
   498  000AA8  6E04               	movwf	Lcd_Out@x^0,c
   499  000AAA  0E2C               	movlw	low STR_6
   500  000AAC  6E05               	movwf	Lcd_Out@buffer^0,c
   501  000AAE  0E06               	movlw	high STR_6
   502  000AB0  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   503  000AB2  0E01               	movlw	1
   504  000AB4  ECBC  F007         	call	_Lcd_Out
   505  000AB8  EF14  F005         	goto	l1335
   506  000ABC                     l1355:
   507                           
   508                           ;mainLCDtecl2.c: 83: else if (tecla == '5')
   509  000ABC  0E35               	movlw	53
   510  000ABE  180B               	xorwf	_tecla^0,w,c
   511  000AC0  A4D8               	btfss	status,2,c
   512  000AC2  EF65  F005         	goto	u611
   513  000AC6  EF67  F005         	goto	u610
   514  000ACA                     u611:
   515  000ACA  EF72  F005         	goto	l1361
   516  000ACE                     u610:
   517  000ACE                     
   518                           ;mainLCDtecl2.c: 84: {;mainLCDtecl2.c: 85: Lcd_Out(1, 0, "5");
   519  000ACE  0E00               	movlw	0
   520  000AD0  6E04               	movwf	Lcd_Out@x^0,c
   521  000AD2  0E2E               	movlw	low STR_7
   522  000AD4  6E05               	movwf	Lcd_Out@buffer^0,c
   523  000AD6  0E06               	movlw	high STR_7
   524  000AD8  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   525  000ADA  0E01               	movlw	1
   526  000ADC  ECBC  F007         	call	_Lcd_Out
   527  000AE0  EF14  F005         	goto	l1335
   528  000AE4                     l1361:
   529                           
   530                           ;mainLCDtecl2.c: 88: else if (tecla == '6')
   531  000AE4  0E36               	movlw	54
   532  000AE6  180B               	xorwf	_tecla^0,w,c
   533  000AE8  A4D8               	btfss	status,2,c
   534  000AEA  EF79  F005         	goto	u621
   535  000AEE  EF7B  F005         	goto	u620
   536  000AF2                     u621:
   537  000AF2  EF86  F005         	goto	l1367
   538  000AF6                     u620:
   539  000AF6                     
   540                           ;mainLCDtecl2.c: 89: {;mainLCDtecl2.c: 90: Lcd_Out(1, 0, "6");
   541  000AF6  0E00               	movlw	0
   542  000AF8  6E04               	movwf	Lcd_Out@x^0,c
   543  000AFA  0E30               	movlw	low STR_8
   544  000AFC  6E05               	movwf	Lcd_Out@buffer^0,c
   545  000AFE  0E06               	movlw	high STR_8
   546  000B00  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   547  000B02  0E01               	movlw	1
   548  000B04  ECBC  F007         	call	_Lcd_Out
   549  000B08  EF14  F005         	goto	l1335
   550  000B0C                     l1367:
   551                           
   552                           ;mainLCDtecl2.c: 93: else if (tecla == '7')
   553  000B0C  0E37               	movlw	55
   554  000B0E  180B               	xorwf	_tecla^0,w,c
   555  000B10  A4D8               	btfss	status,2,c
   556  000B12  EF8D  F005         	goto	u631
   557  000B16  EF8F  F005         	goto	u630
   558  000B1A                     u631:
   559  000B1A  EF9A  F005         	goto	l1371
   560  000B1E                     u630:
   561  000B1E                     
   562                           ;mainLCDtecl2.c: 94: {;mainLCDtecl2.c: 95: Lcd_Out(1, 0, "7");
   563  000B1E  0E00               	movlw	0
   564  000B20  6E04               	movwf	Lcd_Out@x^0,c
   565  000B22  0E32               	movlw	low STR_9
   566  000B24  6E05               	movwf	Lcd_Out@buffer^0,c
   567  000B26  0E06               	movlw	high STR_9
   568  000B28  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   569  000B2A  0E01               	movlw	1
   570  000B2C  ECBC  F007         	call	_Lcd_Out
   571                           
   572                           ;mainLCDtecl2.c: 96: }
   573  000B30  EFFE  F004         	goto	l145
   574  000B34                     l1371:
   575                           
   576                           ;mainLCDtecl2.c: 97: else if (tecla == '8')
   577  000B34  0E38               	movlw	56
   578  000B36  180B               	xorwf	_tecla^0,w,c
   579  000B38  A4D8               	btfss	status,2,c
   580  000B3A  EFA1  F005         	goto	u641
   581  000B3E  EFA3  F005         	goto	u640
   582  000B42                     u641:
   583  000B42  EFAE  F005         	goto	l1375
   584  000B46                     u640:
   585  000B46                     
   586                           ;mainLCDtecl2.c: 98: {;mainLCDtecl2.c: 99: Lcd_Out(1, 0, "8");
   587  000B46  0E00               	movlw	0
   588  000B48  6E04               	movwf	Lcd_Out@x^0,c
   589  000B4A  0E34               	movlw	low STR_10
   590  000B4C  6E05               	movwf	Lcd_Out@buffer^0,c
   591  000B4E  0E06               	movlw	high STR_10
   592  000B50  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   593  000B52  0E01               	movlw	1
   594  000B54  ECBC  F007         	call	_Lcd_Out
   595                           
   596                           ;mainLCDtecl2.c: 100: }
   597  000B58  EFFE  F004         	goto	l145
   598  000B5C                     l1375:
   599                           
   600                           ;mainLCDtecl2.c: 101: else if (tecla == '9')
   601  000B5C  0E39               	movlw	57
   602  000B5E  180B               	xorwf	_tecla^0,w,c
   603  000B60  A4D8               	btfss	status,2,c
   604  000B62  EFB5  F005         	goto	u651
   605  000B66  EFB7  F005         	goto	u650
   606  000B6A                     u651:
   607  000B6A  EFC2  F005         	goto	l1379
   608  000B6E                     u650:
   609  000B6E                     
   610                           ;mainLCDtecl2.c: 102: {;mainLCDtecl2.c: 103: Lcd_Out(1, 0, "9");
   611  000B6E  0E00               	movlw	0
   612  000B70  6E04               	movwf	Lcd_Out@x^0,c
   613  000B72  0E36               	movlw	low STR_11
   614  000B74  6E05               	movwf	Lcd_Out@buffer^0,c
   615  000B76  0E06               	movlw	high STR_11
   616  000B78  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   617  000B7A  0E01               	movlw	1
   618  000B7C  ECBC  F007         	call	_Lcd_Out
   619                           
   620                           ;mainLCDtecl2.c: 104: }
   621  000B80  EFFE  F004         	goto	l145
   622  000B84                     l1379:
   623                           
   624                           ;mainLCDtecl2.c: 105: else if (tecla == '0')
   625  000B84  0E30               	movlw	48
   626  000B86  180B               	xorwf	_tecla^0,w,c
   627  000B88  A4D8               	btfss	status,2,c
   628  000B8A  EFC9  F005         	goto	u661
   629  000B8E  EFCB  F005         	goto	u660
   630  000B92                     u661:
   631  000B92  EFD6  F005         	goto	l1383
   632  000B96                     u660:
   633  000B96                     
   634                           ;mainLCDtecl2.c: 106: {;mainLCDtecl2.c: 107: Lcd_Out(1, 0, "0");
   635  000B96  0E00               	movlw	0
   636  000B98  6E04               	movwf	Lcd_Out@x^0,c
   637  000B9A  0E24               	movlw	low STR_12
   638  000B9C  6E05               	movwf	Lcd_Out@buffer^0,c
   639  000B9E  0E06               	movlw	high STR_12
   640  000BA0  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   641  000BA2  0E01               	movlw	1
   642  000BA4  ECBC  F007         	call	_Lcd_Out
   643                           
   644                           ;mainLCDtecl2.c: 108: }
   645  000BA8  EFFE  F004         	goto	l145
   646  000BAC                     l1383:
   647                           
   648                           ;mainLCDtecl2.c: 109: else if (tecla == 'x')
   649  000BAC  0E78               	movlw	120
   650  000BAE  180B               	xorwf	_tecla^0,w,c
   651  000BB0  A4D8               	btfss	status,2,c
   652  000BB2  EFDD  F005         	goto	u671
   653  000BB6  EFDF  F005         	goto	u670
   654  000BBA                     u671:
   655  000BBA  EFEA  F005         	goto	l1387
   656  000BBE                     u670:
   657  000BBE                     
   658                           ;mainLCDtecl2.c: 110: {;mainLCDtecl2.c: 111: Lcd_Out(1, 0, "x");
   659  000BBE  0E00               	movlw	0
   660  000BC0  6E04               	movwf	Lcd_Out@x^0,c
   661  000BC2  0E38               	movlw	low STR_13
   662  000BC4  6E05               	movwf	Lcd_Out@buffer^0,c
   663  000BC6  0E06               	movlw	high STR_13
   664  000BC8  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   665  000BCA  0E01               	movlw	1
   666  000BCC  ECBC  F007         	call	_Lcd_Out
   667                           
   668                           ;mainLCDtecl2.c: 112: }
   669  000BD0  EFFE  F004         	goto	l145
   670  000BD4                     l1387:
   671                           
   672                           ;mainLCDtecl2.c: 113: else if (tecla == '-')
   673  000BD4  0E2D               	movlw	45
   674  000BD6  180B               	xorwf	_tecla^0,w,c
   675  000BD8  A4D8               	btfss	status,2,c
   676  000BDA  EFF1  F005         	goto	u681
   677  000BDE  EFF3  F005         	goto	u680
   678  000BE2                     u681:
   679  000BE2  EFFE  F005         	goto	l163
   680  000BE6                     u680:
   681  000BE6                     
   682                           ;mainLCDtecl2.c: 114: {;mainLCDtecl2.c: 115: Lcd_Out(1, 0, "-");
   683  000BE6  0E00               	movlw	0
   684  000BE8  6E04               	movwf	Lcd_Out@x^0,c
   685  000BEA  0E22               	movlw	low STR_14
   686  000BEC  6E05               	movwf	Lcd_Out@buffer^0,c
   687  000BEE  0E06               	movlw	high STR_14
   688  000BF0  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   689  000BF2  0E01               	movlw	1
   690  000BF4  ECBC  F007         	call	_Lcd_Out
   691  000BF8  EFFE  F004         	goto	l145
   692  000BFC                     l163:
   693  000BFC  EFFE  F004         	goto	l145
   694  000C00  EF00  F000         	goto	start
   695  000C04                     __end_of_main:
   696                           	callstack 0
   697                           
   698 ;; *************** function _tc_tecla *****************
   699 ;; Defined at:
   700 ;;		line 7 in file "teclado.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;		None
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  key             1    1[COMRAM] unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      unsigned char 
   707 ;; Registers used:
   708 ;;		wreg, status,2
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   714 ;;      Params:         0       0       0       0       0       0       0
   715 ;;      Locals:         1       0       0       0       0       0       0
   716 ;;      Temps:          1       0       0       0       0       0       0
   717 ;;      Totals:         2       0       0       0       0       0       0
   718 ;;Total ram usage:        2 bytes
   719 ;; Hardware stack levels used: 1
   720 ;; This function calls:
   721 ;;		Nothing
   722 ;; This function is called by:
   723 ;;		_main
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text1
   728  00063C                     __ptext1:
   729                           	callstack 0
   730  00063C                     _tc_tecla:
   731                           	callstack 30
   732  00063C                     
   733                           ;teclado.c: 9: unsigned char key;;teclado.c: 11: PORTBbits.RB4 = 1; PORTBbits.RB5 = 1; P
      +                          ORTBbits.RB6 = 1; PORTBbits.RB7 = 1;
   734  00063C  8881               	bsf	129,4,c	;volatile
   735  00063E  8A81               	bsf	129,5,c	;volatile
   736  000640  8C81               	bsf	129,6,c	;volatile
   737  000642  8E81               	bsf	129,7,c	;volatile
   738                           
   739                           ;teclado.c: 12: PORTBbits.RB4 = 0;
   740  000644  9881               	bcf	129,4,c	;volatile
   741                           
   742                           ;teclado.c: 13: if(!PORTBbits.RB3) {_delay((unsigned long)((20)*(8000000/4000.0))); if (
      +                          !PORTBbits.RB3){key = '1'; }}
   743  000646  B681               	btfsc	129,3,c	;volatile
   744  000648  EF28  F003         	goto	u71
   745  00064C  EF2A  F003         	goto	u70
   746  000650                     u71:
   747  000650  EF3C  F003         	goto	l7
   748  000654                     u70:
   749  000654  0E34               	movlw	52
   750  000656  6E01               	movwf	??_tc_tecla^0,c
   751  000658  0EF2               	movlw	242
   752  00065A                     u717:
   753  00065A  2EE8               	decfsz	wreg,f,c
   754  00065C  D7FE               	bra	u717
   755  00065E  2E01               	decfsz	??_tc_tecla^0,f,c
   756  000660  D7FC               	bra	u717
   757  000662  B681               	btfsc	129,3,c	;volatile
   758  000664  EF36  F003         	goto	u81
   759  000668  EF38  F003         	goto	u80
   760  00066C                     u81:
   761  00066C  EF85  F003         	goto	l999
   762  000670                     u80:
   763  000670  0E31               	movlw	49
   764  000672  6E02               	movwf	tc_tecla@key^0,c
   765  000674  EF85  F003         	goto	l999
   766  000678                     l7:
   767                           
   768                           ;teclado.c: 14: else if(!PORTBbits.RB2) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB2){key = '2'; }}
   769  000678  B481               	btfsc	129,2,c	;volatile
   770  00067A  EF41  F003         	goto	u91
   771  00067E  EF43  F003         	goto	u90
   772  000682                     u91:
   773  000682  EF55  F003         	goto	l10
   774  000686                     u90:
   775  000686  0E34               	movlw	52
   776  000688  6E01               	movwf	??_tc_tecla^0,c
   777  00068A  0EF2               	movlw	242
   778  00068C                     u727:
   779  00068C  2EE8               	decfsz	wreg,f,c
   780  00068E  D7FE               	bra	u727
   781  000690  2E01               	decfsz	??_tc_tecla^0,f,c
   782  000692  D7FC               	bra	u727
   783  000694  B481               	btfsc	129,2,c	;volatile
   784  000696  EF4F  F003         	goto	u101
   785  00069A  EF51  F003         	goto	u100
   786  00069E                     u101:
   787  00069E  EF85  F003         	goto	l999
   788  0006A2                     u100:
   789  0006A2  0E32               	movlw	50
   790  0006A4  6E02               	movwf	tc_tecla@key^0,c
   791  0006A6  EF85  F003         	goto	l999
   792  0006AA                     l10:
   793                           
   794                           ;teclado.c: 15: else if(!PORTBbits.RB1) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB1){key = '3'; }}
   795  0006AA  B281               	btfsc	129,1,c	;volatile
   796  0006AC  EF5A  F003         	goto	u111
   797  0006B0  EF5C  F003         	goto	u110
   798  0006B4                     u111:
   799  0006B4  EF6E  F003         	goto	l13
   800  0006B8                     u110:
   801  0006B8  0E34               	movlw	52
   802  0006BA  6E01               	movwf	??_tc_tecla^0,c
   803  0006BC  0EF2               	movlw	242
   804  0006BE                     u737:
   805  0006BE  2EE8               	decfsz	wreg,f,c
   806  0006C0  D7FE               	bra	u737
   807  0006C2  2E01               	decfsz	??_tc_tecla^0,f,c
   808  0006C4  D7FC               	bra	u737
   809  0006C6  B281               	btfsc	129,1,c	;volatile
   810  0006C8  EF68  F003         	goto	u121
   811  0006CC  EF6A  F003         	goto	u120
   812  0006D0                     u121:
   813  0006D0  EF85  F003         	goto	l999
   814  0006D4                     u120:
   815  0006D4  0E33               	movlw	51
   816  0006D6  6E02               	movwf	tc_tecla@key^0,c
   817  0006D8  EF85  F003         	goto	l999
   818  0006DC                     l13:
   819                           
   820                           ;teclado.c: 16: else if(!PORTBbits.RB0) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB0){key = '4'; }}
   821  0006DC  B081               	btfsc	129,0,c	;volatile
   822  0006DE  EF73  F003         	goto	u131
   823  0006E2  EF75  F003         	goto	u130
   824  0006E6                     u131:
   825  0006E6  EF85  F003         	goto	l999
   826  0006EA                     u130:
   827  0006EA  0E34               	movlw	52
   828  0006EC  6E01               	movwf	??_tc_tecla^0,c
   829  0006EE  0EF2               	movlw	242
   830  0006F0                     u747:
   831  0006F0  2EE8               	decfsz	wreg,f,c
   832  0006F2  D7FE               	bra	u747
   833  0006F4  2E01               	decfsz	??_tc_tecla^0,f,c
   834  0006F6  D7FC               	bra	u747
   835  0006F8  B081               	btfsc	129,0,c	;volatile
   836  0006FA  EF81  F003         	goto	u141
   837  0006FE  EF83  F003         	goto	u140
   838  000702                     u141:
   839  000702  EF85  F003         	goto	l999
   840  000706                     u140:
   841  000706  0E34               	movlw	52
   842  000708  6E02               	movwf	tc_tecla@key^0,c
   843  00070A                     l999:
   844                           
   845                           ;teclado.c: 18: PORTBbits.RB4 = 1;
   846  00070A  8881               	bsf	129,4,c	;volatile
   847  00070C                     
   848                           ;teclado.c: 19: PORTBbits.RB5 = 0;
   849  00070C  9A81               	bcf	129,5,c	;volatile
   850  00070E                     
   851                           ;teclado.c: 21: if(!PORTBbits.RB3) {_delay((unsigned long)((20)*(8000000/4000.0))); if (
      +                          !PORTBbits.RB3){key = '4'; }}
   852  00070E  B681               	btfsc	129,3,c	;volatile
   853  000710  EF8C  F003         	goto	u151
   854  000714  EF8E  F003         	goto	u150
   855  000718                     u151:
   856  000718  EFA0  F003         	goto	l18
   857  00071C                     u150:
   858  00071C  0E34               	movlw	52
   859  00071E  6E01               	movwf	??_tc_tecla^0,c
   860  000720  0EF2               	movlw	242
   861  000722                     u757:
   862  000722  2EE8               	decfsz	wreg,f,c
   863  000724  D7FE               	bra	u757
   864  000726  2E01               	decfsz	??_tc_tecla^0,f,c
   865  000728  D7FC               	bra	u757
   866  00072A  B681               	btfsc	129,3,c	;volatile
   867  00072C  EF9A  F003         	goto	u161
   868  000730  EF9C  F003         	goto	u160
   869  000734                     u161:
   870  000734  EFE9  F003         	goto	l1029
   871  000738                     u160:
   872  000738  0E34               	movlw	52
   873  00073A  6E02               	movwf	tc_tecla@key^0,c
   874  00073C  EFE9  F003         	goto	l1029
   875  000740                     l18:
   876                           
   877                           ;teclado.c: 22: else if(!PORTBbits.RB2) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB2){key = '5'; }}
   878  000740  B481               	btfsc	129,2,c	;volatile
   879  000742  EFA5  F003         	goto	u171
   880  000746  EFA7  F003         	goto	u170
   881  00074A                     u171:
   882  00074A  EFB9  F003         	goto	l21
   883  00074E                     u170:
   884  00074E  0E34               	movlw	52
   885  000750  6E01               	movwf	??_tc_tecla^0,c
   886  000752  0EF2               	movlw	242
   887  000754                     u767:
   888  000754  2EE8               	decfsz	wreg,f,c
   889  000756  D7FE               	bra	u767
   890  000758  2E01               	decfsz	??_tc_tecla^0,f,c
   891  00075A  D7FC               	bra	u767
   892  00075C  B481               	btfsc	129,2,c	;volatile
   893  00075E  EFB3  F003         	goto	u181
   894  000762  EFB5  F003         	goto	u180
   895  000766                     u181:
   896  000766  EFE9  F003         	goto	l1029
   897  00076A                     u180:
   898  00076A  0E35               	movlw	53
   899  00076C  6E02               	movwf	tc_tecla@key^0,c
   900  00076E  EFE9  F003         	goto	l1029
   901  000772                     l21:
   902                           
   903                           ;teclado.c: 23: else if(!PORTBbits.RB1) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB1){key = '6'; }}
   904  000772  B281               	btfsc	129,1,c	;volatile
   905  000774  EFBE  F003         	goto	u191
   906  000778  EFC0  F003         	goto	u190
   907  00077C                     u191:
   908  00077C  EFD2  F003         	goto	l24
   909  000780                     u190:
   910  000780  0E34               	movlw	52
   911  000782  6E01               	movwf	??_tc_tecla^0,c
   912  000784  0EF2               	movlw	242
   913  000786                     u777:
   914  000786  2EE8               	decfsz	wreg,f,c
   915  000788  D7FE               	bra	u777
   916  00078A  2E01               	decfsz	??_tc_tecla^0,f,c
   917  00078C  D7FC               	bra	u777
   918  00078E  B281               	btfsc	129,1,c	;volatile
   919  000790  EFCC  F003         	goto	u201
   920  000794  EFCE  F003         	goto	u200
   921  000798                     u201:
   922  000798  EFE9  F003         	goto	l1029
   923  00079C                     u200:
   924  00079C  0E36               	movlw	54
   925  00079E  6E02               	movwf	tc_tecla@key^0,c
   926  0007A0  EFE9  F003         	goto	l1029
   927  0007A4                     l24:
   928                           
   929                           ;teclado.c: 24: else if(!PORTBbits.RB0) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB0){key = 'B'; }}
   930  0007A4  B081               	btfsc	129,0,c	;volatile
   931  0007A6  EFD7  F003         	goto	u211
   932  0007AA  EFD9  F003         	goto	u210
   933  0007AE                     u211:
   934  0007AE  EFE9  F003         	goto	l1029
   935  0007B2                     u210:
   936  0007B2  0E34               	movlw	52
   937  0007B4  6E01               	movwf	??_tc_tecla^0,c
   938  0007B6  0EF2               	movlw	242
   939  0007B8                     u787:
   940  0007B8  2EE8               	decfsz	wreg,f,c
   941  0007BA  D7FE               	bra	u787
   942  0007BC  2E01               	decfsz	??_tc_tecla^0,f,c
   943  0007BE  D7FC               	bra	u787
   944  0007C0  B081               	btfsc	129,0,c	;volatile
   945  0007C2  EFE5  F003         	goto	u221
   946  0007C6  EFE7  F003         	goto	u220
   947  0007CA                     u221:
   948  0007CA  EFE9  F003         	goto	l1029
   949  0007CE                     u220:
   950  0007CE  0E42               	movlw	66
   951  0007D0  6E02               	movwf	tc_tecla@key^0,c
   952  0007D2                     l1029:
   953                           
   954                           ;teclado.c: 26: PORTBbits.RB5 = 1;
   955  0007D2  8A81               	bsf	129,5,c	;volatile
   956  0007D4                     
   957                           ;teclado.c: 27: PORTBbits.RB6 = 0;
   958  0007D4  9C81               	bcf	129,6,c	;volatile
   959  0007D6                     
   960                           ;teclado.c: 29: if(!PORTBbits.RB3) {_delay((unsigned long)((20)*(8000000/4000.0))); if (
      +                          !PORTBbits.RB3){key = '5'; }}
   961  0007D6  B681               	btfsc	129,3,c	;volatile
   962  0007D8  EFF0  F003         	goto	u231
   963  0007DC  EFF2  F003         	goto	u230
   964  0007E0                     u231:
   965  0007E0  EF04  F004         	goto	l29
   966  0007E4                     u230:
   967  0007E4  0E34               	movlw	52
   968  0007E6  6E01               	movwf	??_tc_tecla^0,c
   969  0007E8  0EF2               	movlw	242
   970  0007EA                     u797:
   971  0007EA  2EE8               	decfsz	wreg,f,c
   972  0007EC  D7FE               	bra	u797
   973  0007EE  2E01               	decfsz	??_tc_tecla^0,f,c
   974  0007F0  D7FC               	bra	u797
   975  0007F2  B681               	btfsc	129,3,c	;volatile
   976  0007F4  EFFE  F003         	goto	u241
   977  0007F8  EF00  F004         	goto	u240
   978  0007FC                     u241:
   979  0007FC  EF4D  F004         	goto	l1059
   980  000800                     u240:
   981  000800  0E35               	movlw	53
   982  000802  6E02               	movwf	tc_tecla@key^0,c
   983  000804  EF4D  F004         	goto	l1059
   984  000808                     l29:
   985                           
   986                           ;teclado.c: 30: else if(!PORTBbits.RB2) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB2){key = '6'; }}
   987  000808  B481               	btfsc	129,2,c	;volatile
   988  00080A  EF09  F004         	goto	u251
   989  00080E  EF0B  F004         	goto	u250
   990  000812                     u251:
   991  000812  EF1D  F004         	goto	l32
   992  000816                     u250:
   993  000816  0E34               	movlw	52
   994  000818  6E01               	movwf	??_tc_tecla^0,c
   995  00081A  0EF2               	movlw	242
   996  00081C                     u807:
   997  00081C  2EE8               	decfsz	wreg,f,c
   998  00081E  D7FE               	bra	u807
   999  000820  2E01               	decfsz	??_tc_tecla^0,f,c
  1000  000822  D7FC               	bra	u807
  1001  000824  B481               	btfsc	129,2,c	;volatile
  1002  000826  EF17  F004         	goto	u261
  1003  00082A  EF19  F004         	goto	u260
  1004  00082E                     u261:
  1005  00082E  EF4D  F004         	goto	l1059
  1006  000832                     u260:
  1007  000832  0E36               	movlw	54
  1008  000834  6E02               	movwf	tc_tecla@key^0,c
  1009  000836  EF4D  F004         	goto	l1059
  1010  00083A                     l32:
  1011                           
  1012                           ;teclado.c: 31: else if(!PORTBbits.RB1) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB1){key = '7'; }}
  1013  00083A  B281               	btfsc	129,1,c	;volatile
  1014  00083C  EF22  F004         	goto	u271
  1015  000840  EF24  F004         	goto	u270
  1016  000844                     u271:
  1017  000844  EF36  F004         	goto	l35
  1018  000848                     u270:
  1019  000848  0E34               	movlw	52
  1020  00084A  6E01               	movwf	??_tc_tecla^0,c
  1021  00084C  0EF2               	movlw	242
  1022  00084E                     u817:
  1023  00084E  2EE8               	decfsz	wreg,f,c
  1024  000850  D7FE               	bra	u817
  1025  000852  2E01               	decfsz	??_tc_tecla^0,f,c
  1026  000854  D7FC               	bra	u817
  1027  000856  B281               	btfsc	129,1,c	;volatile
  1028  000858  EF30  F004         	goto	u281
  1029  00085C  EF32  F004         	goto	u280
  1030  000860                     u281:
  1031  000860  EF4D  F004         	goto	l1059
  1032  000864                     u280:
  1033  000864  0E37               	movlw	55
  1034  000866  6E02               	movwf	tc_tecla@key^0,c
  1035  000868  EF4D  F004         	goto	l1059
  1036  00086C                     l35:
  1037                           
  1038                           ;teclado.c: 32: else if(!PORTBbits.RB0) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB0){key = '8'; }}
  1039  00086C  B081               	btfsc	129,0,c	;volatile
  1040  00086E  EF3B  F004         	goto	u291
  1041  000872  EF3D  F004         	goto	u290
  1042  000876                     u291:
  1043  000876  EF4D  F004         	goto	l1059
  1044  00087A                     u290:
  1045  00087A  0E34               	movlw	52
  1046  00087C  6E01               	movwf	??_tc_tecla^0,c
  1047  00087E  0EF2               	movlw	242
  1048  000880                     u827:
  1049  000880  2EE8               	decfsz	wreg,f,c
  1050  000882  D7FE               	bra	u827
  1051  000884  2E01               	decfsz	??_tc_tecla^0,f,c
  1052  000886  D7FC               	bra	u827
  1053  000888  B081               	btfsc	129,0,c	;volatile
  1054  00088A  EF49  F004         	goto	u301
  1055  00088E  EF4B  F004         	goto	u300
  1056  000892                     u301:
  1057  000892  EF4D  F004         	goto	l1059
  1058  000896                     u300:
  1059  000896  0E38               	movlw	56
  1060  000898  6E02               	movwf	tc_tecla@key^0,c
  1061  00089A                     l1059:
  1062                           
  1063                           ;teclado.c: 34: PORTBbits.RB6 = 1;
  1064  00089A  8C81               	bsf	129,6,c	;volatile
  1065  00089C                     
  1066                           ;teclado.c: 35: PORTBbits.RB7 = 0;
  1067  00089C  9E81               	bcf	129,7,c	;volatile
  1068  00089E                     
  1069                           ;teclado.c: 37: if(!PORTBbits.RB3) {_delay((unsigned long)((20)*(8000000/4000.0))); if (
      +                          !PORTBbits.RB3){key = '9'; }}
  1070  00089E  B681               	btfsc	129,3,c	;volatile
  1071  0008A0  EF54  F004         	goto	u311
  1072  0008A4  EF56  F004         	goto	u310
  1073  0008A8                     u311:
  1074  0008A8  EF68  F004         	goto	l40
  1075  0008AC                     u310:
  1076  0008AC  0E34               	movlw	52
  1077  0008AE  6E01               	movwf	??_tc_tecla^0,c
  1078  0008B0  0EF2               	movlw	242
  1079  0008B2                     u837:
  1080  0008B2  2EE8               	decfsz	wreg,f,c
  1081  0008B4  D7FE               	bra	u837
  1082  0008B6  2E01               	decfsz	??_tc_tecla^0,f,c
  1083  0008B8  D7FC               	bra	u837
  1084  0008BA  B681               	btfsc	129,3,c	;volatile
  1085  0008BC  EF62  F004         	goto	u321
  1086  0008C0  EF64  F004         	goto	u320
  1087  0008C4                     u321:
  1088  0008C4  EFB1  F004         	goto	l1089
  1089  0008C8                     u320:
  1090  0008C8  0E39               	movlw	57
  1091  0008CA  6E02               	movwf	tc_tecla@key^0,c
  1092  0008CC  EFB1  F004         	goto	l1089
  1093  0008D0                     l40:
  1094                           
  1095                           ;teclado.c: 38: else if(!PORTBbits.RB2) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB2){key = '0'; }}
  1096  0008D0  B481               	btfsc	129,2,c	;volatile
  1097  0008D2  EF6D  F004         	goto	u331
  1098  0008D6  EF6F  F004         	goto	u330
  1099  0008DA                     u331:
  1100  0008DA  EF81  F004         	goto	l43
  1101  0008DE                     u330:
  1102  0008DE  0E34               	movlw	52
  1103  0008E0  6E01               	movwf	??_tc_tecla^0,c
  1104  0008E2  0EF2               	movlw	242
  1105  0008E4                     u847:
  1106  0008E4  2EE8               	decfsz	wreg,f,c
  1107  0008E6  D7FE               	bra	u847
  1108  0008E8  2E01               	decfsz	??_tc_tecla^0,f,c
  1109  0008EA  D7FC               	bra	u847
  1110  0008EC  B481               	btfsc	129,2,c	;volatile
  1111  0008EE  EF7B  F004         	goto	u341
  1112  0008F2  EF7D  F004         	goto	u340
  1113  0008F6                     u341:
  1114  0008F6  EFB1  F004         	goto	l1089
  1115  0008FA                     u340:
  1116  0008FA  0E30               	movlw	48
  1117  0008FC  6E02               	movwf	tc_tecla@key^0,c
  1118  0008FE  EFB1  F004         	goto	l1089
  1119  000902                     l43:
  1120                           
  1121                           ;teclado.c: 39: else if(!PORTBbits.RB1) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB1){key = '-'; }}
  1122  000902  B281               	btfsc	129,1,c	;volatile
  1123  000904  EF86  F004         	goto	u351
  1124  000908  EF88  F004         	goto	u350
  1125  00090C                     u351:
  1126  00090C  EF9A  F004         	goto	l46
  1127  000910                     u350:
  1128  000910  0E34               	movlw	52
  1129  000912  6E01               	movwf	??_tc_tecla^0,c
  1130  000914  0EF2               	movlw	242
  1131  000916                     u857:
  1132  000916  2EE8               	decfsz	wreg,f,c
  1133  000918  D7FE               	bra	u857
  1134  00091A  2E01               	decfsz	??_tc_tecla^0,f,c
  1135  00091C  D7FC               	bra	u857
  1136  00091E  B281               	btfsc	129,1,c	;volatile
  1137  000920  EF94  F004         	goto	u361
  1138  000924  EF96  F004         	goto	u360
  1139  000928                     u361:
  1140  000928  EFB1  F004         	goto	l1089
  1141  00092C                     u360:
  1142  00092C  0E2D               	movlw	45
  1143  00092E  6E02               	movwf	tc_tecla@key^0,c
  1144  000930  EFB1  F004         	goto	l1089
  1145  000934                     l46:
  1146                           
  1147                           ;teclado.c: 40: else if(!PORTBbits.RB0) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB0){key = 'x'; }}
  1148  000934  B081               	btfsc	129,0,c	;volatile
  1149  000936  EF9F  F004         	goto	u371
  1150  00093A  EFA1  F004         	goto	u370
  1151  00093E                     u371:
  1152  00093E  EFB1  F004         	goto	l1089
  1153  000942                     u370:
  1154  000942  0E34               	movlw	52
  1155  000944  6E01               	movwf	??_tc_tecla^0,c
  1156  000946  0EF2               	movlw	242
  1157  000948                     u867:
  1158  000948  2EE8               	decfsz	wreg,f,c
  1159  00094A  D7FE               	bra	u867
  1160  00094C  2E01               	decfsz	??_tc_tecla^0,f,c
  1161  00094E  D7FC               	bra	u867
  1162  000950  B081               	btfsc	129,0,c	;volatile
  1163  000952  EFAD  F004         	goto	u381
  1164  000956  EFAF  F004         	goto	u380
  1165  00095A                     u381:
  1166  00095A  EFB1  F004         	goto	l1089
  1167  00095E                     u380:
  1168  00095E  0E78               	movlw	120
  1169  000960  6E02               	movwf	tc_tecla@key^0,c
  1170  000962                     l1089:
  1171                           
  1172                           ;teclado.c: 42: PORTBbits.RB7 = 1;
  1173  000962  8E81               	bsf	129,7,c	;volatile
  1174  000964                     
  1175                           ;teclado.c: 44: _delay((unsigned long)((20)*(8000000/4000.0)));
  1176  000964  0E34               	movlw	52
  1177  000966  6E01               	movwf	??_tc_tecla^0,c
  1178  000968  0EF2               	movlw	242
  1179  00096A                     u877:
  1180  00096A  2EE8               	decfsz	wreg,f,c
  1181  00096C  D7FE               	bra	u877
  1182  00096E  2E01               	decfsz	??_tc_tecla^0,f,c
  1183  000970  D7FC               	bra	u877
  1184  000972                     
  1185                           ;teclado.c: 48: return key;
  1186  000972  5002               	movf	tc_tecla@key^0,w,c
  1187  000974  0012               	return		;funcret
  1188  000976                     __end_of_tc_tecla:
  1189                           	callstack 0
  1190                           
  1191 ;; *************** function _Lcd_Out *****************
  1192 ;; Defined at:
  1193 ;;		line 120 in file "flexlcd.h"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;  y               1    wreg     unsigned char 
  1196 ;;  x               1    3[COMRAM] unsigned char 
  1197 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  1198 ;;		 -> STR_14(2), STR_13(2), STR_12(2), STR_11(2), 
  1199 ;;		 -> STR_10(2), STR_9(2), STR_8(2), STR_7(2), 
  1200 ;;		 -> STR_6(2), STR_5(2), STR_4(2), STR_3(2), 
  1201 ;;		 -> STR_2(17), STR_1(16), 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;  y               1    6[COMRAM] unsigned char 
  1204 ;;  data            1    7[COMRAM] unsigned char 
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1214 ;;      Params:         3       0       0       0       0       0       0
  1215 ;;      Locals:         2       0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0
  1217 ;;      Totals:         5       0       0       0       0       0       0
  1218 ;;Total ram usage:        5 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 1
  1221 ;; This function calls:
  1222 ;;		_Lcd_Chr_CP
  1223 ;;		_Lcd_Cmd
  1224 ;; This function is called by:
  1225 ;;		_main
  1226 ;; This function uses a non-reentrant model
  1227 ;;
  1228                           
  1229                           	psect	text2
  1230  000F78                     __ptext2:
  1231                           	callstack 0
  1232  000F78                     _Lcd_Out:
  1233                           	callstack 29
  1234                           
  1235                           ;incstack = 0
  1236                           ;Lcd_Out@y stored from wreg
  1237  000F78  6E07               	movwf	Lcd_Out@y^0,c
  1238  000F7A                     
  1239                           ;flexlcd.h: 122: unsigned char data;;flexlcd.h: 123: switch (y)
  1240  000F7A  EFD3  F007         	goto	l1303
  1241  000F7E                     l1293:
  1242  000F7E  5004               	movf	Lcd_Out@x^0,w,c
  1243  000F80  0F80               	addlw	128
  1244  000F82  6E08               	movwf	Lcd_Out@data^0,c
  1245  000F84  EFE6  F007         	goto	l1305
  1246  000F88                     l1295:
  1247  000F88  5004               	movf	Lcd_Out@x^0,w,c
  1248  000F8A  0FC0               	addlw	192
  1249  000F8C  6E08               	movwf	Lcd_Out@data^0,c
  1250  000F8E  EFE6  F007         	goto	l1305
  1251  000F92                     l1297:
  1252  000F92  5004               	movf	Lcd_Out@x^0,w,c
  1253  000F94  0F94               	addlw	148
  1254  000F96  6E08               	movwf	Lcd_Out@data^0,c
  1255  000F98  EFE6  F007         	goto	l1305
  1256  000F9C                     l1299:
  1257  000F9C  5004               	movf	Lcd_Out@x^0,w,c
  1258  000F9E  0FD4               	addlw	212
  1259  000FA0  6E08               	movwf	Lcd_Out@data^0,c
  1260  000FA2  EFE6  F007         	goto	l1305
  1261  000FA6                     l1303:
  1262  000FA6  5007               	movf	Lcd_Out@y^0,w,c
  1263                           
  1264                           ; Switch size 1, requested type "simple"
  1265                           ; Number of cases is 4, Range of values is 1 to 4
  1266                           ; switch strategies available:
  1267                           ; Name         Instructions Cycles
  1268                           ; simple_byte           13     7 (average)
  1269                           ;	Chosen strategy is simple_byte
  1270  000FA8  0A01               	xorlw	1	; case 1
  1271  000FAA  B4D8               	btfsc	status,2,c
  1272  000FAC  EFBF  F007         	goto	l1293
  1273  000FB0  0A03               	xorlw	3	; case 2
  1274  000FB2  B4D8               	btfsc	status,2,c
  1275  000FB4  EFC4  F007         	goto	l1295
  1276  000FB8  0A01               	xorlw	1	; case 3
  1277  000FBA  B4D8               	btfsc	status,2,c
  1278  000FBC  EFC9  F007         	goto	l1297
  1279  000FC0  0A07               	xorlw	7	; case 4
  1280  000FC2  B4D8               	btfsc	status,2,c
  1281  000FC4  EFCE  F007         	goto	l1299
  1282  000FC8  EFE6  F007         	goto	l1305
  1283  000FCC                     l1305:
  1284                           
  1285                           ;flexlcd.h: 131: Lcd_Cmd(data);
  1286  000FCC  5008               	movf	Lcd_Out@data^0,w,c
  1287  000FCE  EC9C  F006         	call	_Lcd_Cmd
  1288                           
  1289                           ;flexlcd.h: 132: while(*buffer)
  1290  000FD2  EFF5  F007         	goto	l1311
  1291  000FD6                     l1307:
  1292                           
  1293                           ;flexlcd.h: 133: {;flexlcd.h: 134: Lcd_Chr_CP(*buffer);
  1294  000FD6  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  1295  000FDA  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  1296  000FDE                     	if	0	;tblptru may be non-zero
  1297  000FDE                     	endif
  1298  000FDE                     	if	0	;tblptru may be non-zero
  1299  000FDE                     	endif
  1300  000FDE  0008               	tblrd		*
  1301  000FE0  50F5               	movf	tablat,w,c
  1302  000FE2  EC02  F006         	call	_Lcd_Chr_CP
  1303  000FE6                     
  1304                           ;flexlcd.h: 135: buffer++;
  1305  000FE6  4A05               	infsnz	Lcd_Out@buffer^0,f,c
  1306  000FE8  2A06               	incf	(Lcd_Out@buffer+1)^0,f,c
  1307  000FEA                     l1311:
  1308  000FEA  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  1309  000FEE  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  1310  000FF2                     	if	0	;tblptru may be non-zero
  1311  000FF2                     	endif
  1312  000FF2                     	if	0	;tblptru may be non-zero
  1313  000FF2                     	endif
  1314  000FF2  0008               	tblrd		*
  1315  000FF4  50F5               	movf	tablat,w,c
  1316  000FF6  0900               	iorlw	0
  1317  000FF8  A4D8               	btfss	status,2,c
  1318  000FFA  EF01  F008         	goto	u561
  1319  000FFE  EF03  F008         	goto	u560
  1320  001002                     u561:
  1321  001002  EFEB  F007         	goto	l1307
  1322  001006                     u560:
  1323  001006  0012               	return		;funcret
  1324  001008                     __end_of_Lcd_Out:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _Lcd_Chr_CP *****************
  1328 ;; Defined at:
  1329 ;;		line 162 in file "flexlcd.h"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;  data            1    wreg     unsigned char 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  data            1    2[COMRAM] unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2, status,0
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1343 ;;      Params:         0       0       0       0       0       0       0
  1344 ;;      Locals:         1       0       0       0       0       0       0
  1345 ;;      Temps:          2       0       0       0       0       0       0
  1346 ;;      Totals:         3       0       0       0       0       0       0
  1347 ;;Total ram usage:        3 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; This function calls:
  1350 ;;		Nothing
  1351 ;; This function is called by:
  1352 ;;		_Lcd_Out
  1353 ;;		_Lcd_Out2
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text3
  1358  000C04                     __ptext3:
  1359                           	callstack 0
  1360  000C04                     _Lcd_Chr_CP:
  1361                           	callstack 29
  1362                           
  1363                           ;incstack = 0
  1364                           ;Lcd_Chr_CP@data stored from wreg
  1365  000C04  6E03               	movwf	Lcd_Chr_CP@data^0,c
  1366  000C06                     
  1367                           ;flexlcd.h: 163: PORTEbits.RE1 = 0; PORTEbits.RE0 = 1;
  1368  000C06  9284               	bcf	132,1,c	;volatile
  1369  000C08  8084               	bsf	132,0,c	;volatile
  1370  000C0A                     
  1371                           ;flexlcd.h: 164: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1372  000C0A  6A01               	clrf	??_Lcd_Chr_CP^0,c
  1373  000C0C  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
  1374  000C0E  D001               	bra	u45
  1375  000C10  2A01               	incf	??_Lcd_Chr_CP^0,f,c
  1376  000C12                     u45:
  1377  000C12  0E01               	movlw	1
  1378  000C14  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1379  000C16  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1380  000C18  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1381  000C1A  5083               	movf	131,w,c	;volatile
  1382  000C1C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1383  000C1E  0B7F               	andlw	-129
  1384  000C20  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1385  000C22  6E83               	movwf	131,c	;volatile
  1386  000C24  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1387  000C28  0E06               	movlw	6
  1388  000C2A  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  1389  000C2C                     u55:
  1390  000C2C  90D8               	bcf	status,0,c
  1391  000C2E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1392  000C30  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  1393  000C32  EF16  F006         	goto	u55
  1394  000C36  0E01               	movlw	1
  1395  000C38  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1396  000C3A  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1397  000C3C  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1398  000C3E  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1399  000C40  5083               	movf	131,w,c	;volatile
  1400  000C42  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1401  000C44  0BBF               	andlw	-65
  1402  000C46  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1403  000C48  6E83               	movwf	131,c	;volatile
  1404                           
  1405                           ;flexlcd.h: 165: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1406  000C4A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1407  000C4E  0E05               	movlw	5
  1408  000C50  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  1409  000C52                     u65:
  1410  000C52  90D8               	bcf	status,0,c
  1411  000C54  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1412  000C56  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  1413  000C58  EF29  F006         	goto	u65
  1414  000C5C  0E01               	movlw	1
  1415  000C5E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1416  000C60  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1417  000C62  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1418  000C64  5083               	movf	131,w,c	;volatile
  1419  000C66  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1420  000C68  0BDF               	andlw	-33
  1421  000C6A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1422  000C6C  6E83               	movwf	131,c	;volatile
  1423  000C6E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1424  000C72  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1425  000C74  0E0F               	movlw	15
  1426  000C76  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1427  000C78  0E01               	movlw	1
  1428  000C7A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1429  000C7C  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1430  000C7E  5083               	movf	131,w,c	;volatile
  1431  000C80  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1432  000C82  0BEF               	andlw	-17
  1433  000C84  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1434  000C86  6E83               	movwf	131,c	;volatile
  1435  000C88                     
  1436                           ;flexlcd.h: 166: _delay(10);
  1437  000C88  0E03               	movlw	3
  1438  000C8A                     u887:
  1439  000C8A  2EE8               	decfsz	wreg,f,c
  1440  000C8C  D7FE               	bra	u887
  1441  000C8E  F000               	nop	
  1442  000C90                     
  1443                           ;flexlcd.h: 167: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1444  000C90  8284               	bsf	132,1,c	;volatile
  1445  000C92  0E03               	movlw	3
  1446  000C94                     u897:
  1447  000C94  2EE8               	decfsz	wreg,f,c
  1448  000C96  D7FE               	bra	u897
  1449  000C98  F000               	nop	
  1450  000C9A  9284               	bcf	132,1,c	;volatile
  1451                           
  1452                           ;flexlcd.h: 168: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1453  000C9C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1454  000CA0  90D8               	bcf	status,0,c
  1455  000CA2  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1456  000CA4  90D8               	bcf	status,0,c
  1457  000CA6  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1458  000CA8  90D8               	bcf	status,0,c
  1459  000CAA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1460  000CAC  0E01               	movlw	1
  1461  000CAE  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1462  000CB0  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1463  000CB2  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1464  000CB4  5083               	movf	131,w,c	;volatile
  1465  000CB6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1466  000CB8  0B7F               	andlw	-129
  1467  000CBA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1468  000CBC  6E83               	movwf	131,c	;volatile
  1469  000CBE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1470  000CC2  90D8               	bcf	status,0,c
  1471  000CC4  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1472  000CC6  90D8               	bcf	status,0,c
  1473  000CC8  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1474  000CCA  0E01               	movlw	1
  1475  000CCC  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1476  000CCE  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1477  000CD0  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1478  000CD2  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1479  000CD4  5083               	movf	131,w,c	;volatile
  1480  000CD6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1481  000CD8  0BBF               	andlw	-65
  1482  000CDA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1483  000CDC  6E83               	movwf	131,c	;volatile
  1484                           
  1485                           ;flexlcd.h: 169: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1486  000CDE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1487  000CE2  90D8               	bcf	status,0,c
  1488  000CE4  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1489  000CE6  0E01               	movlw	1
  1490  000CE8  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1491  000CEA  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1492  000CEC  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1493  000CEE  5083               	movf	131,w,c	;volatile
  1494  000CF0  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1495  000CF2  0BDF               	andlw	-33
  1496  000CF4  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1497  000CF6  6E83               	movwf	131,c	;volatile
  1498  000CF8  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1499  000CFC  0E01               	movlw	1
  1500  000CFE  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1501  000D00  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1502  000D02  5083               	movf	131,w,c	;volatile
  1503  000D04  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1504  000D06  0BEF               	andlw	-17
  1505  000D08  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1506  000D0A  6E83               	movwf	131,c	;volatile
  1507  000D0C                     
  1508                           ;flexlcd.h: 170: _delay(10);
  1509  000D0C  0E03               	movlw	3
  1510  000D0E                     u907:
  1511  000D0E  2EE8               	decfsz	wreg,f,c
  1512  000D10  D7FE               	bra	u907
  1513  000D12  F000               	nop	
  1514  000D14                     
  1515                           ;flexlcd.h: 171: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1516  000D14  8284               	bsf	132,1,c	;volatile
  1517  000D16  0E03               	movlw	3
  1518  000D18                     u917:
  1519  000D18  2EE8               	decfsz	wreg,f,c
  1520  000D1A  D7FE               	bra	u917
  1521  000D1C  F000               	nop	
  1522  000D1E  9284               	bcf	132,1,c	;volatile
  1523  000D20                     
  1524                           ;flexlcd.h: 172: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  1525  000D20  0E03               	movlw	3
  1526  000D22                     u927:
  1527  000D22  2EE8               	decfsz	wreg,f,c
  1528  000D24  D7FE               	bra	u927
  1529  000D26  F000               	nop	
  1530  000D28  0E0F               	movlw	15
  1531  000D2A  6E01               	movwf	??_Lcd_Chr_CP^0,c
  1532  000D2C  0E48               	movlw	72
  1533  000D2E                     u937:
  1534  000D2E  2EE8               	decfsz	wreg,f,c
  1535  000D30  D7FE               	bra	u937
  1536  000D32  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  1537  000D34  D7FC               	bra	u937
  1538  000D36  0012               	return		;funcret
  1539  000D38                     __end_of_Lcd_Chr_CP:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _Lcd_Init *****************
  1543 ;; Defined at:
  1544 ;;		line 76 in file "flexlcd.h"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  data            1    4[COMRAM] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1558 ;;      Params:         0       0       0       0       0       0       0
  1559 ;;      Locals:         1       0       0       0       0       0       0
  1560 ;;      Temps:          1       0       0       0       0       0       0
  1561 ;;      Totals:         2       0       0       0       0       0       0
  1562 ;;Total ram usage:        2 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 1
  1565 ;; This function calls:
  1566 ;;		_Lcd_Cmd
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text4
  1573  000E64                     __ptext4:
  1574                           	callstack 0
  1575  000E64                     _Lcd_Init:
  1576                           	callstack 29
  1577  000E64                     
  1578                           ;flexlcd.h: 77: unsigned char data;;flexlcd.h: 78: TRISDbits.TRISD7 = 0;
  1579  000E64  9E95               	bcf	149,7,c	;volatile
  1580                           
  1581                           ;flexlcd.h: 79: TRISDbits.TRISD6 = 0;
  1582  000E66  9C95               	bcf	149,6,c	;volatile
  1583                           
  1584                           ;flexlcd.h: 80: TRISDbits.TRISD5 = 0;
  1585  000E68  9A95               	bcf	149,5,c	;volatile
  1586                           
  1587                           ;flexlcd.h: 81: TRISDbits.TRISD4 = 0;
  1588  000E6A  9895               	bcf	149,4,c	;volatile
  1589                           
  1590                           ;flexlcd.h: 82: TRISEbits.TRISE1 = 0;
  1591  000E6C  9296               	bcf	150,1,c	;volatile
  1592                           
  1593                           ;flexlcd.h: 83: TRISEbits.TRISE0 = 0;
  1594  000E6E  9096               	bcf	150,0,c	;volatile
  1595                           
  1596                           ;flexlcd.h: 84: TRISEbits.TRISE2 = 0;
  1597  000E70  9496               	bcf	150,2,c	;volatile
  1598                           
  1599                           ;flexlcd.h: 85: PORTEbits.RE2 = 0;
  1600  000E72  9484               	bcf	132,2,c	;volatile
  1601                           
  1602                           ;flexlcd.h: 86: PORTDbits.RD7 = 0;
  1603  000E74  9E83               	bcf	131,7,c	;volatile
  1604                           
  1605                           ;flexlcd.h: 87: PORTDbits.RD6 = 0;
  1606  000E76  9C83               	bcf	131,6,c	;volatile
  1607                           
  1608                           ;flexlcd.h: 88: PORTDbits.RD5 = 0;
  1609  000E78  9A83               	bcf	131,5,c	;volatile
  1610                           
  1611                           ;flexlcd.h: 89: PORTDbits.RD4 = 0;
  1612  000E7A  9883               	bcf	131,4,c	;volatile
  1613                           
  1614                           ;flexlcd.h: 90: PORTEbits.RE1 = 0;
  1615  000E7C  9284               	bcf	132,1,c	;volatile
  1616                           
  1617                           ;flexlcd.h: 91: PORTEbits.RE0 = 0;
  1618  000E7E  9084               	bcf	132,0,c	;volatile
  1619  000E80                     
  1620                           ;flexlcd.h: 92: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1621  000E80  0E0F               	movlw	15
  1622  000E82  6E04               	movwf	??_Lcd_Init^0,c
  1623  000E84  0E48               	movlw	72
  1624  000E86                     u947:
  1625  000E86  2EE8               	decfsz	wreg,f,c
  1626  000E88  D7FE               	bra	u947
  1627  000E8A  2E04               	decfsz	??_Lcd_Init^0,f,c
  1628  000E8C  D7FC               	bra	u947
  1629                           
  1630                           ;flexlcd.h: 93: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1631  000E8E  0E0F               	movlw	15
  1632  000E90  6E04               	movwf	??_Lcd_Init^0,c
  1633  000E92  0E48               	movlw	72
  1634  000E94                     u957:
  1635  000E94  2EE8               	decfsz	wreg,f,c
  1636  000E96  D7FE               	bra	u957
  1637  000E98  2E04               	decfsz	??_Lcd_Init^0,f,c
  1638  000E9A  D7FC               	bra	u957
  1639                           
  1640                           ;flexlcd.h: 94: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1641  000E9C  0E0F               	movlw	15
  1642  000E9E  6E04               	movwf	??_Lcd_Init^0,c
  1643  000EA0  0E48               	movlw	72
  1644  000EA2                     u967:
  1645  000EA2  2EE8               	decfsz	wreg,f,c
  1646  000EA4  D7FE               	bra	u967
  1647  000EA6  2E04               	decfsz	??_Lcd_Init^0,f,c
  1648  000EA8  D7FC               	bra	u967
  1649                           
  1650                           ;flexlcd.h: 95: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1651  000EAA  0E0F               	movlw	15
  1652  000EAC  6E04               	movwf	??_Lcd_Init^0,c
  1653  000EAE  0E48               	movlw	72
  1654  000EB0                     u977:
  1655  000EB0  2EE8               	decfsz	wreg,f,c
  1656  000EB2  D7FE               	bra	u977
  1657  000EB4  2E04               	decfsz	??_Lcd_Init^0,f,c
  1658  000EB6  D7FC               	bra	u977
  1659                           
  1660                           ;flexlcd.h: 96: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1661  000EB8  0E0F               	movlw	15
  1662  000EBA  6E04               	movwf	??_Lcd_Init^0,c
  1663  000EBC  0E48               	movlw	72
  1664  000EBE                     u987:
  1665  000EBE  2EE8               	decfsz	wreg,f,c
  1666  000EC0  D7FE               	bra	u987
  1667  000EC2  2E04               	decfsz	??_Lcd_Init^0,f,c
  1668  000EC4  D7FC               	bra	u987
  1669                           
  1670                           ;flexlcd.h: 97: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1671  000EC6  0E0F               	movlw	15
  1672  000EC8  6E04               	movwf	??_Lcd_Init^0,c
  1673  000ECA  0E48               	movlw	72
  1674  000ECC                     u997:
  1675  000ECC  2EE8               	decfsz	wreg,f,c
  1676  000ECE  D7FE               	bra	u997
  1677  000ED0  2E04               	decfsz	??_Lcd_Init^0,f,c
  1678  000ED2  D7FC               	bra	u997
  1679  000ED4                     
  1680                           ;flexlcd.h: 98: for(data = 1; data < 4; data ++)
  1681  000ED4  0E01               	movlw	1
  1682  000ED6  6E05               	movwf	Lcd_Init@data^0,c
  1683  000ED8                     l104:
  1684                           
  1685                           ;flexlcd.h: 99: {;flexlcd.h: 100: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 
      +                          1; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  1686  000ED8  9E83               	bcf	131,7,c	;volatile
  1687  000EDA  9C83               	bcf	131,6,c	;volatile
  1688  000EDC  8A83               	bsf	131,5,c	;volatile
  1689  000EDE  8883               	bsf	131,4,c	;volatile
  1690  000EE0  9284               	bcf	132,1,c	;volatile
  1691                           
  1692                           ;flexlcd.h: 101: PORTEbits.RE0 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 
      +                          = 1; PORTDbits.RD4 = 1;
  1693  000EE2  9084               	bcf	132,0,c	;volatile
  1694  000EE4  9E83               	bcf	131,7,c	;volatile
  1695  000EE6  9C83               	bcf	131,6,c	;volatile
  1696  000EE8  8A83               	bsf	131,5,c	;volatile
  1697  000EEA  8883               	bsf	131,4,c	;volatile
  1698                           
  1699                           ;flexlcd.h: 102: PORTEbits.RE1 = 1; PORTEbits.RE0 = 0;
  1700  000EEC  8284               	bsf	132,1,c	;volatile
  1701  000EEE  9084               	bcf	132,0,c	;volatile
  1702  000EF0                     
  1703                           ;flexlcd.h: 103: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1704  000EF0  0E03               	movlw	3
  1705  000EF2                     u1007:
  1706  000EF2  2EE8               	decfsz	wreg,f,c
  1707  000EF4  D7FE               	bra	u1007
  1708  000EF6  F000               	nop	
  1709  000EF8                     
  1710                           ;flexlcd.h: 104: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 1; PORTEbits.RE1 = 0;
  1711  000EF8  9E83               	bcf	131,7,c	;volatile
  1712  000EFA  9C83               	bcf	131,6,c	;volatile
  1713  000EFC  8A83               	bsf	131,5,c	;volatile
  1714  000EFE  8883               	bsf	131,4,c	;volatile
  1715  000F00  9284               	bcf	132,1,c	;volatile
  1716  000F02                     
  1717                           ;flexlcd.h: 105: PORTEbits.RE0 = 0;
  1718  000F02  9084               	bcf	132,0,c	;volatile
  1719                           
  1720                           ;flexlcd.h: 106: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1721  000F04  0E0F               	movlw	15
  1722  000F06  6E04               	movwf	??_Lcd_Init^0,c
  1723  000F08  0E48               	movlw	72
  1724  000F0A                     u1017:
  1725  000F0A  2EE8               	decfsz	wreg,f,c
  1726  000F0C  D7FE               	bra	u1017
  1727  000F0E  2E04               	decfsz	??_Lcd_Init^0,f,c
  1728  000F10  D7FC               	bra	u1017
  1729  000F12  2A05               	incf	Lcd_Init@data^0,f,c
  1730  000F14  0E03               	movlw	3
  1731  000F16  6405               	cpfsgt	Lcd_Init@data^0,c
  1732  000F18  EF90  F007         	goto	u391
  1733  000F1C  EF92  F007         	goto	u390
  1734  000F20                     u391:
  1735  000F20  EF6C  F007         	goto	l104
  1736  000F24                     u390:
  1737  000F24                     
  1738                           ;flexlcd.h: 107: };flexlcd.h: 108: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
  1739  000F24  9E83               	bcf	131,7,c	;volatile
  1740  000F26  9C83               	bcf	131,6,c	;volatile
  1741  000F28  8A83               	bsf	131,5,c	;volatile
  1742  000F2A  9883               	bcf	131,4,c	;volatile
  1743  000F2C  9284               	bcf	132,1,c	;volatile
  1744  000F2E  9084               	bcf	132,0,c	;volatile
  1745                           
  1746                           ;flexlcd.h: 109: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 1; PORTEbits.RE0 = 0;
  1747  000F30  9E83               	bcf	131,7,c	;volatile
  1748  000F32  9C83               	bcf	131,6,c	;volatile
  1749  000F34  8A83               	bsf	131,5,c	;volatile
  1750  000F36  9883               	bcf	131,4,c	;volatile
  1751  000F38  8284               	bsf	132,1,c	;volatile
  1752  000F3A  9084               	bcf	132,0,c	;volatile
  1753  000F3C                     
  1754                           ;flexlcd.h: 110: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1755  000F3C  0E03               	movlw	3
  1756  000F3E                     u1027:
  1757  000F3E  2EE8               	decfsz	wreg,f,c
  1758  000F40  D7FE               	bra	u1027
  1759  000F42  F000               	nop	
  1760  000F44                     
  1761                           ;flexlcd.h: 111: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
  1762  000F44  9E83               	bcf	131,7,c	;volatile
  1763  000F46  9C83               	bcf	131,6,c	;volatile
  1764  000F48  8A83               	bsf	131,5,c	;volatile
  1765  000F4A  9883               	bcf	131,4,c	;volatile
  1766  000F4C  9284               	bcf	132,1,c	;volatile
  1767  000F4E  9084               	bcf	132,0,c	;volatile
  1768                           
  1769                           ;flexlcd.h: 112: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1770  000F50  0E0F               	movlw	15
  1771  000F52  6E04               	movwf	??_Lcd_Init^0,c
  1772  000F54  0E48               	movlw	72
  1773  000F56                     u1037:
  1774  000F56  2EE8               	decfsz	wreg,f,c
  1775  000F58  D7FE               	bra	u1037
  1776  000F5A  2E04               	decfsz	??_Lcd_Init^0,f,c
  1777  000F5C  D7FC               	bra	u1037
  1778  000F5E  0E28               	movlw	40
  1779  000F60  EC9C  F006         	call	_Lcd_Cmd
  1780  000F64  0E10               	movlw	16
  1781  000F66  EC9C  F006         	call	_Lcd_Cmd
  1782  000F6A  0E01               	movlw	1
  1783  000F6C  EC9C  F006         	call	_Lcd_Cmd
  1784  000F70  0E0F               	movlw	15
  1785  000F72  EC9C  F006         	call	_Lcd_Cmd
  1786  000F76  0012               	return		;funcret
  1787  000F78                     __end_of_Lcd_Init:
  1788                           	callstack 0
  1789                           
  1790 ;; *************** function _Lcd_Cmd *****************
  1791 ;; Defined at:
  1792 ;;		line 176 in file "flexlcd.h"
  1793 ;; Parameters:    Size  Location     Type
  1794 ;;  data            1    wreg     unsigned char 
  1795 ;; Auto vars:     Size  Location     Type
  1796 ;;  data            1    2[COMRAM] unsigned char 
  1797 ;; Return value:  Size  Location     Type
  1798 ;;                  1    wreg      void 
  1799 ;; Registers used:
  1800 ;;		wreg, status,2, status,0
  1801 ;; Tracked objects:
  1802 ;;		On entry : 0/0
  1803 ;;		On exit  : 0/0
  1804 ;;		Unchanged: 0/0
  1805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1806 ;;      Params:         0       0       0       0       0       0       0
  1807 ;;      Locals:         1       0       0       0       0       0       0
  1808 ;;      Temps:          2       0       0       0       0       0       0
  1809 ;;      Totals:         3       0       0       0       0       0       0
  1810 ;;Total ram usage:        3 bytes
  1811 ;; Hardware stack levels used: 1
  1812 ;; This function calls:
  1813 ;;		Nothing
  1814 ;; This function is called by:
  1815 ;;		_Lcd_Init
  1816 ;;		_Lcd_Out
  1817 ;;		_main
  1818 ;;		_Lcd_Out2
  1819 ;; This function uses a non-reentrant model
  1820 ;;
  1821                           
  1822                           	psect	text5
  1823  000D38                     __ptext5:
  1824                           	callstack 0
  1825  000D38                     _Lcd_Cmd:
  1826                           	callstack 29
  1827                           
  1828                           ;incstack = 0
  1829                           ;Lcd_Cmd@data stored from wreg
  1830  000D38  6E03               	movwf	Lcd_Cmd@data^0,c
  1831  000D3A                     
  1832                           ;flexlcd.h: 177: PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
  1833  000D3A  9284               	bcf	132,1,c	;volatile
  1834  000D3C  9084               	bcf	132,0,c	;volatile
  1835  000D3E                     
  1836                           ;flexlcd.h: 178: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1837  000D3E  6A01               	clrf	??_Lcd_Cmd^0,c
  1838  000D40  AE03               	btfss	Lcd_Cmd@data^0,7,c
  1839  000D42  D001               	bra	u15
  1840  000D44  2A01               	incf	??_Lcd_Cmd^0,f,c
  1841  000D46                     u15:
  1842  000D46  0E01               	movlw	1
  1843  000D48  1601               	andwf	??_Lcd_Cmd^0,f,c
  1844  000D4A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1845  000D4C  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1846  000D4E  5083               	movf	131,w,c	;volatile
  1847  000D50  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1848  000D52  0B7F               	andlw	-129
  1849  000D54  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1850  000D56  6E83               	movwf	131,c	;volatile
  1851  000D58  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1852  000D5C  0E06               	movlw	6
  1853  000D5E  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1854  000D60                     u25:
  1855  000D60  90D8               	bcf	status,0,c
  1856  000D62  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1857  000D64  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1858  000D66  EFB0  F006         	goto	u25
  1859  000D6A  0E01               	movlw	1
  1860  000D6C  1601               	andwf	??_Lcd_Cmd^0,f,c
  1861  000D6E  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1862  000D70  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1863  000D72  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1864  000D74  5083               	movf	131,w,c	;volatile
  1865  000D76  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1866  000D78  0BBF               	andlw	-65
  1867  000D7A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1868  000D7C  6E83               	movwf	131,c	;volatile
  1869                           
  1870                           ;flexlcd.h: 179: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1871  000D7E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1872  000D82  0E05               	movlw	5
  1873  000D84  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1874  000D86                     u35:
  1875  000D86  90D8               	bcf	status,0,c
  1876  000D88  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1877  000D8A  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1878  000D8C  EFC3  F006         	goto	u35
  1879  000D90  0E01               	movlw	1
  1880  000D92  1601               	andwf	??_Lcd_Cmd^0,f,c
  1881  000D94  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1882  000D96  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1883  000D98  5083               	movf	131,w,c	;volatile
  1884  000D9A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1885  000D9C  0BDF               	andlw	-33
  1886  000D9E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1887  000DA0  6E83               	movwf	131,c	;volatile
  1888  000DA2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1889  000DA6  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1890  000DA8  0E0F               	movlw	15
  1891  000DAA  1601               	andwf	??_Lcd_Cmd^0,f,c
  1892  000DAC  0E01               	movlw	1
  1893  000DAE  1601               	andwf	??_Lcd_Cmd^0,f,c
  1894  000DB0  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1895  000DB2  5083               	movf	131,w,c	;volatile
  1896  000DB4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1897  000DB6  0BEF               	andlw	-17
  1898  000DB8  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1899  000DBA  6E83               	movwf	131,c	;volatile
  1900  000DBC                     
  1901                           ;flexlcd.h: 180: _delay(10);
  1902  000DBC  0E03               	movlw	3
  1903  000DBE                     u1047:
  1904  000DBE  2EE8               	decfsz	wreg,f,c
  1905  000DC0  D7FE               	bra	u1047
  1906  000DC2  F000               	nop	
  1907  000DC4                     
  1908                           ;flexlcd.h: 181: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1909  000DC4  8284               	bsf	132,1,c	;volatile
  1910  000DC6  0E03               	movlw	3
  1911  000DC8                     u1057:
  1912  000DC8  2EE8               	decfsz	wreg,f,c
  1913  000DCA  D7FE               	bra	u1057
  1914  000DCC  F000               	nop	
  1915  000DCE  9284               	bcf	132,1,c	;volatile
  1916                           
  1917                           ;flexlcd.h: 182: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1918  000DD0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1919  000DD4  90D8               	bcf	status,0,c
  1920  000DD6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1921  000DD8  90D8               	bcf	status,0,c
  1922  000DDA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1923  000DDC  90D8               	bcf	status,0,c
  1924  000DDE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1925  000DE0  0E01               	movlw	1
  1926  000DE2  1601               	andwf	??_Lcd_Cmd^0,f,c
  1927  000DE4  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1928  000DE6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1929  000DE8  5083               	movf	131,w,c	;volatile
  1930  000DEA  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1931  000DEC  0B7F               	andlw	-129
  1932  000DEE  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1933  000DF0  6E83               	movwf	131,c	;volatile
  1934  000DF2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1935  000DF6  90D8               	bcf	status,0,c
  1936  000DF8  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1937  000DFA  90D8               	bcf	status,0,c
  1938  000DFC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1939  000DFE  0E01               	movlw	1
  1940  000E00  1601               	andwf	??_Lcd_Cmd^0,f,c
  1941  000E02  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1942  000E04  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1943  000E06  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1944  000E08  5083               	movf	131,w,c	;volatile
  1945  000E0A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1946  000E0C  0BBF               	andlw	-65
  1947  000E0E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1948  000E10  6E83               	movwf	131,c	;volatile
  1949                           
  1950                           ;flexlcd.h: 183: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1951  000E12  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1952  000E16  90D8               	bcf	status,0,c
  1953  000E18  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1954  000E1A  0E01               	movlw	1
  1955  000E1C  1601               	andwf	??_Lcd_Cmd^0,f,c
  1956  000E1E  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1957  000E20  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1958  000E22  5083               	movf	131,w,c	;volatile
  1959  000E24  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1960  000E26  0BDF               	andlw	-33
  1961  000E28  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1962  000E2A  6E83               	movwf	131,c	;volatile
  1963  000E2C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1964  000E30  0E01               	movlw	1
  1965  000E32  1601               	andwf	??_Lcd_Cmd^0,f,c
  1966  000E34  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1967  000E36  5083               	movf	131,w,c	;volatile
  1968  000E38  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1969  000E3A  0BEF               	andlw	-17
  1970  000E3C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1971  000E3E  6E83               	movwf	131,c	;volatile
  1972  000E40                     
  1973                           ;flexlcd.h: 184: _delay(10);
  1974  000E40  0E03               	movlw	3
  1975  000E42                     u1067:
  1976  000E42  2EE8               	decfsz	wreg,f,c
  1977  000E44  D7FE               	bra	u1067
  1978  000E46  F000               	nop	
  1979  000E48                     
  1980                           ;flexlcd.h: 185: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1981  000E48  8284               	bsf	132,1,c	;volatile
  1982  000E4A  0E03               	movlw	3
  1983  000E4C                     u1077:
  1984  000E4C  2EE8               	decfsz	wreg,f,c
  1985  000E4E  D7FE               	bra	u1077
  1986  000E50  F000               	nop	
  1987  000E52  9284               	bcf	132,1,c	;volatile
  1988  000E54                     
  1989                           ;flexlcd.h: 186: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1990  000E54  0E0F               	movlw	15
  1991  000E56  6E01               	movwf	??_Lcd_Cmd^0,c
  1992  000E58  0E48               	movlw	72
  1993  000E5A                     u1087:
  1994  000E5A  2EE8               	decfsz	wreg,f,c
  1995  000E5C  D7FE               	bra	u1087
  1996  000E5E  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  1997  000E60  D7FC               	bra	u1087
  1998  000E62  0012               	return		;funcret
  1999  000E64                     __end_of_Lcd_Cmd:
  2000                           	callstack 0
  2001                           
  2002                           	psect	rparam
  2003  0000                     
  2004                           	psect	idloc
  2005                           
  2006                           ;Config register IDLOC0 @ 0x200000
  2007                           ;	unspecified, using default values
  2008  200000                     	org	2097152
  2009  200000  FF                 	db	255
  2010                           
  2011                           ;Config register IDLOC1 @ 0x200001
  2012                           ;	unspecified, using default values
  2013  200001                     	org	2097153
  2014  200001  FF                 	db	255
  2015                           
  2016                           ;Config register IDLOC2 @ 0x200002
  2017                           ;	unspecified, using default values
  2018  200002                     	org	2097154
  2019  200002  FF                 	db	255
  2020                           
  2021                           ;Config register IDLOC3 @ 0x200003
  2022                           ;	unspecified, using default values
  2023  200003                     	org	2097155
  2024  200003  FF                 	db	255
  2025                           
  2026                           ;Config register IDLOC4 @ 0x200004
  2027                           ;	unspecified, using default values
  2028  200004                     	org	2097156
  2029  200004  FF                 	db	255
  2030                           
  2031                           ;Config register IDLOC5 @ 0x200005
  2032                           ;	unspecified, using default values
  2033  200005                     	org	2097157
  2034  200005  FF                 	db	255
  2035                           
  2036                           ;Config register IDLOC6 @ 0x200006
  2037                           ;	unspecified, using default values
  2038  200006                     	org	2097158
  2039  200006  FF                 	db	255
  2040                           
  2041                           ;Config register IDLOC7 @ 0x200007
  2042                           ;	unspecified, using default values
  2043  200007                     	org	2097159
  2044  200007  FF                 	db	255
  2045                           
  2046                           	psect	config
  2047                           
  2048                           ; Padding undefined space
  2049  300000                     	org	3145728
  2050  300000  FF                 	db	255
  2051                           
  2052                           ;Config register CONFIG1H @ 0x300001
  2053                           ;	Oscillator Selection bits
  2054                           ;	OSC = HS, HS oscillator
  2055                           ;	Fail-Safe Clock Monitor Enable bit
  2056                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2057                           ;	Internal/External Oscillator Switchover bit
  2058                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2059  300001                     	org	3145729
  2060  300001  02                 	db	2
  2061                           
  2062                           ;Config register CONFIG2L @ 0x300002
  2063                           ;	Power-up Timer Enable bit
  2064                           ;	PWRT = OFF, PWRT disabled
  2065                           ;	Brown-out Reset Enable bits
  2066                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2067                           ;	Brown Out Reset Voltage bits
  2068                           ;	BORV = 3, Minimum setting
  2069  300002                     	org	3145730
  2070  300002  1F                 	db	31
  2071                           
  2072                           ;Config register CONFIG2H @ 0x300003
  2073                           ;	Watchdog Timer Enable bit
  2074                           ;	WDT = ON, WDT enabled
  2075                           ;	Watchdog Timer Postscale Select bits
  2076                           ;	WDTPS = 32768, 1:32768
  2077  300003                     	org	3145731
  2078  300003  1F                 	db	31
  2079                           
  2080                           ; Padding undefined space
  2081  300004                     	org	3145732
  2082  300004  FF                 	db	255
  2083                           
  2084                           ;Config register CONFIG3H @ 0x300005
  2085                           ;	CCP2 MUX bit
  2086                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2087                           ;	PORTB A/D Enable bit
  2088                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2089                           ;	Low-Power Timer1 Oscillator Enable bit
  2090                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2091                           ;	MCLR Pin Enable bit
  2092                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  2093  300005                     	org	3145733
  2094  300005  01                 	db	1
  2095                           
  2096                           ;Config register CONFIG4L @ 0x300006
  2097                           ;	Stack Full/Underflow Reset Enable bit
  2098                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2099                           ;	Single-Supply ICSP Enable bit
  2100                           ;	LVP = ON, Single-Supply ICSP enabled
  2101                           ;	Extended Instruction Set Enable bit
  2102                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2103                           ;	Background Debugger Enable bit
  2104                           ;	DEBUG = 0x1, unprogrammed default
  2105  300006                     	org	3145734
  2106  300006  85                 	db	133
  2107                           
  2108                           ; Padding undefined space
  2109  300007                     	org	3145735
  2110  300007  FF                 	db	255
  2111                           
  2112                           ;Config register CONFIG5L @ 0x300008
  2113                           ;	Code Protection bit
  2114                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2115                           ;	Code Protection bit
  2116                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2117                           ;	Code Protection bit
  2118                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2119                           ;	Code Protection bit
  2120                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2121  300008                     	org	3145736
  2122  300008  0F                 	db	15
  2123                           
  2124                           ;Config register CONFIG5H @ 0x300009
  2125                           ;	Boot Block Code Protection bit
  2126                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2127                           ;	Data EEPROM Code Protection bit
  2128                           ;	CPD = OFF, Data EEPROM not code-protected
  2129  300009                     	org	3145737
  2130  300009  C0                 	db	192
  2131                           
  2132                           ;Config register CONFIG6L @ 0x30000A
  2133                           ;	Write Protection bit
  2134                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2135                           ;	Write Protection bit
  2136                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2137                           ;	Write Protection bit
  2138                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2139                           ;	Write Protection bit
  2140                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2141  30000A                     	org	3145738
  2142  30000A  0F                 	db	15
  2143                           
  2144                           ;Config register CONFIG6H @ 0x30000B
  2145                           ;	Configuration Register Write Protection bit
  2146                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2147                           ;	Boot Block Write Protection bit
  2148                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2149                           ;	Data EEPROM Write Protection bit
  2150                           ;	WRTD = OFF, Data EEPROM not write-protected
  2151  30000B                     	org	3145739
  2152  30000B  E0                 	db	224
  2153                           
  2154                           ;Config register CONFIG7L @ 0x30000C
  2155                           ;	Table Read Protection bit
  2156                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2157                           ;	Table Read Protection bit
  2158                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2159                           ;	Table Read Protection bit
  2160                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2161                           ;	Table Read Protection bit
  2162                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2163  30000C                     	org	3145740
  2164  30000C  0F                 	db	15
  2165                           
  2166                           ;Config register CONFIG7H @ 0x30000D
  2167                           ;	Boot Block Table Read Protection bit
  2168                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2169  30000D                     	org	3145741
  2170  30000D  40                 	db	64
  2171                           tosu	equ	0xFFF
  2172                           tosh	equ	0xFFE
  2173                           tosl	equ	0xFFD
  2174                           stkptr	equ	0xFFC
  2175                           pclatu	equ	0xFFB
  2176                           pclath	equ	0xFFA
  2177                           pcl	equ	0xFF9
  2178                           tblptru	equ	0xFF8
  2179                           tblptrh	equ	0xFF7
  2180                           tblptrl	equ	0xFF6
  2181                           tablat	equ	0xFF5
  2182                           prodh	equ	0xFF4
  2183                           prodl	equ	0xFF3
  2184                           indf0	equ	0xFEF
  2185                           postinc0	equ	0xFEE
  2186                           postdec0	equ	0xFED
  2187                           preinc0	equ	0xFEC
  2188                           plusw0	equ	0xFEB
  2189                           fsr0h	equ	0xFEA
  2190                           fsr0l	equ	0xFE9
  2191                           wreg	equ	0xFE8
  2192                           indf1	equ	0xFE7
  2193                           postinc1	equ	0xFE6
  2194                           postdec1	equ	0xFE5
  2195                           preinc1	equ	0xFE4
  2196                           plusw1	equ	0xFE3
  2197                           fsr1h	equ	0xFE2
  2198                           fsr1l	equ	0xFE1
  2199                           bsr	equ	0xFE0
  2200                           indf2	equ	0xFDF
  2201                           postinc2	equ	0xFDE
  2202                           postdec2	equ	0xFDD
  2203                           preinc2	equ	0xFDC
  2204                           plusw2	equ	0xFDB
  2205                           fsr2h	equ	0xFDA
  2206                           fsr2l	equ	0xFD9
  2207                           status	equ	0xFD8

Data Sizes:
    Strings     57
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     10      11
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), STR_11(CODE[2]), 
		 -> STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), 
		 -> STR_2(CODE[17]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2894
                                              8 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _tc_tecla                                             2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3    2549
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _tc_tecla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      A       B       1        8.7%
BITBIGSFRhhhl       2D      0       0      17        0.0%
BITBIGSFRhhl        2A      0       0      18        0.0%
BITBIGSFRhhhh        D      0       0      16        0.0%
BITBIGSFRhlhll       6      0       0      20        0.0%
BITBIGSFRhlhlh       5      0       0      19        0.0%
BITBIGSFRl           1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      22        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Nov 23 18:12:29 2022

                      l7 0678                       l10 06AA                       l21 0772  
                     l13 06DC                       l40 08D0                       l32 083A  
                     l24 07A4                       l18 0740                       l51 0974  
                     l43 0902                       l35 086C                       l29 0808  
                     l46 0934                       u15 0D46                       u25 0D60  
                     u35 0D86                       u45 0C12                       u70 0654  
                     u55 0C2C                       u71 0650                       u80 0670  
                     u65 0C52                       u81 066C                       u90 0686  
                     u91 0682                      l104 0ED8                      l105 0F24  
                    l106 0F76                      l135 0D36                      l119 1006  
                    l145 09FC                      l138 0E62                      l163 0BFC  
                    l931 0DBC                      l941 0E48                      l933 0DC4  
                    l943 0E4A                      l935 0DC6                      l927 0D3A  
                    l951 0C0A                      l945 0E52                      l937 0DCE  
                    l929 0D3E                      l961 0D0C                      l953 0C88  
                    l947 0E54                      l939 0E40                      l971 0D28  
                    l963 0D14                      l955 0C90                      l965 0D16  
                    l957 0C92                      l949 0C06                      l981 0686  
                    l973 063C                      l967 0D1E                      l959 0C9A  
                    l991 06D4                      l983 0694                      l975 0654  
                    l969 0D20                      l993 06EA                      l985 06A2  
                    l977 0662                      l995 06F8                      l987 06B8  
                    l979 0670                      l997 0706                      l989 06C6  
                    l999 070A                      u100 06A2                      u101 069E  
                    u110 06B8                      u111 06B4                      u200 079C  
                    u120 06D4                      u201 0798                      u121 06D0  
                    u210 07B2                      u130 06EA                      u211 07AE  
                    u131 06E6                      u300 0896                      u220 07CE  
                    u140 0706                      u301 0892                      u221 07CA  
                    u141 0702                      u310 08AC                      u230 07E4  
                    u150 071C                      u311 08A8                      u231 07E0  
                    u151 0718                      u320 08C8                      u240 0800  
                    u160 0738                      u321 08C4                      u241 07FC  
                    u161 0734                      u330 08DE                      u250 0816  
                    u170 074E                      u331 08DA                      u251 0812  
                    u171 074A                      u340 08FA                      u260 0832  
                    u180 076A                      u341 08F6                      u261 082E  
                    u181 0766                      u350 0910                      u270 0848  
                    u190 0780                      u351 090C                      u271 0844  
                    u191 077C                      u360 092C                      u280 0864  
                    u600 0AA6                      u361 0928                      u281 0860  
                    u601 0AA2                      u370 0942                      u290 087A  
                    u610 0ACE                      u371 093E                      u291 0876  
                    u611 0ACA                      u380 095E                      u620 0AF6  
                    u381 095A                      u621 0AF2                      u390 0F24  
                    u630 0B1E                      u391 0F20                      u631 0B1A  
                    u560 1006                      u640 0B46                      u561 1002  
                    u641 0B42                      u650 0B6E                      u570 0A16  
                    u651 0B6A                      u707 0A32                      u571 0A12  
                    u660 0B96                      u580 0A56                      u717 065A  
                    u661 0B92                      u581 0A52                      u670 0BBE  
                    u590 0A7E                      u807 081C                      u727 068C  
                    u671 0BBA                      u591 0A7A                      u680 0BE6  
                    u817 084E                      u737 06BE                      u681 0BE2  
                    u907 0D0E                      u827 0880                      u747 06F0  
                    u917 0D18                      u837 08B2                      u757 0722  
                    u927 0D22                      u847 08E4                      u767 0754  
                    u937 0D2E                      u857 0916                      u777 0786  
                    u697 09EE                      u947 0E86                      u867 0948  
                    u787 07B8                      u957 0E94                      u877 096A  
                    u797 07EA                      u967 0EA2                      u887 0C8A  
                    u977 0EB0                      u897 0C94                      u987 0EBE  
                    u997 0ECC                      wreg 000FE8                     l1001 070C  
                   l1011 074E                     l1003 070E                     l1101 0ED4  
                   l1021 079C                     l1013 075C                     l1005 071C  
                   l1111 0EFA                     l1031 07D4                     l1023 07B2  
                   l1015 076A                     l1007 072A                     l1121 0F12  
                   l1113 0EFC                     l1041 0816                     l1033 07D6  
                   l1025 07C0                     l1017 0780                     l1009 0738  
                   l1131 0F4A                     l1123 0F3C                     l1115 0EFE  
                   l1107 0EF0                     l1051 0864                     l1043 0824  
                   l1035 07E4                     l1027 07CE                     l1019 078E  
                   l1141 0F64                     l1133 0F4C                     l1125 0F44  
                   l1117 0F00                     l1109 0EF8                     l1061 089C  
                   l1053 087A                     l1045 0832                     l1037 07F2  
                   l1029 07D2                     l1151 0F70                     l1143 0F64  
                   l1135 0F4E                     l1127 0F46                     l1119 0F02  
                   l1311 0FEA                     l1303 0FA6                     l1071 08DE  
                   l1063 089E                     l1055 0888                     l1047 0848  
                   l1039 0800                     l1145 0F6A                     l1137 0F5E  
                   l1129 0F48                     l1305 0FCC                     l1081 092C  
                   l1073 08EC                     l1065 08AC                     l1057 0896  
                   l1049 0856                     l1321 09BA                     l1313 0976  
                   l1147 0F6A                     l1139 0F5E                     l1307 0FD6  
                   l1091 0964                     l1083 0942                     l1075 08FA  
                   l1067 08BA                     l1059 089A                     l1331 0A04  
                   l1323 09C0                     l1315 0986                     l1149 0F70  
                   l1309 0FE6                     l1093 0972                     l1085 0950  
                   l1077 0910                     l1069 08C8                     l1333 0A16  
                   l1325 09D2                     l1317 099C                     l1087 095E  
                   l1079 091E                     l1351 0AA6                     l1343 0A6C  
                   l1335 0A28                     l1327 09E4                     l1319 09B6  
                   l1097 0E64                     l1089 0962                     l1361 0AE4  
                   l1345 0A7E                     l1337 0A44                     l1329 09FE  
                   l1099 0E80                     l1291 0F7A                     l1371 0B34  
                   l1363 0AF6                     l1355 0ABC                     l1339 0A56  
                   l1293 0F7E                     l1381 0B96                     l1373 0B46  
                   l1357 0ACE                     l1349 0A94                     l1295 0F88  
                   l1383 0BAC                     l1375 0B5C                     l1367 0B0C  
                   l1297 0F92                     l1385 0BBE                     l1377 0B6E  
                   l1369 0B1E                     l1299 0F9C                     l1387 0BD4  
                   l1379 0B84                     l1389 0BE6                     STR_1 0612  
                   STR_2 0601                     STR_3 0626                     STR_4 0628  
                   STR_5 062A                     STR_6 062C                     STR_7 062E  
                   STR_8 0630                     STR_9 0632                     u1007 0EF2  
                   u1017 0F0A                     u1027 0F3E                     u1037 0F56  
                   u1047 0DBE                     u1057 0DC8                     u1067 0E42  
                   u1077 0E4C                     u1087 0E5A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     _main 0976  
                   start 0000          __end_of_Lcd_Cmd 0E64          __end_of_Lcd_Out 1008  
           ___param_bank 000000               _Lcd_Chr_CP 0C04                    ?_main 0001  
                  STR_10 0634                    STR_11 0636                    STR_12 0624  
                  STR_13 0638                    STR_14 0622                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _tecla 000B                    tablat 000FF5  
                  status 000FD8         __end_of_Lcd_Init 0F78          __initialization 1008  
           __end_of_main 0C04                   ??_main 0009            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _INTCON 000FF2  
              ??_Lcd_Cmd 0001                ??_Lcd_Out 0007              ?_Lcd_Chr_CP 0001  
                 isa$std 000001         __end_of_tc_tecla 0976             __pdataCOMRAM 000B  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 101A  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?_Lcd_Init 0001  
            tc_tecla@key 0002                  _INTCON2 000FF1                  _INTCON3 000FF0  
             ??_Lcd_Init 0004                  _Lcd_Cmd 0D38                  _Lcd_Out 0F78  
              ?_tc_tecla 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 1008                  __ramtop 0600  
                __ptext0 0976                  __ptext1 063C                  __ptext2 0F78  
                __ptext3 0C04                  __ptext4 0E64                  __ptext5 0D38  
   end_of_initialization 101A            __Lmediumconst 0000               ??_tc_tecla 0001  
           ??_Lcd_Chr_CP 0001                _PORTBbits 000F81                _PORTDbits 000F83  
              _PORTEbits 000F84                _TRISDbits 000F95                _TRISEbits 000F96  
     __end_of_Lcd_Chr_CP 0D38            __pidataCOMRAM 1024      start_initialization 1008  
          Lcd_Out@buffer 0005                 ?_Lcd_Cmd 0001                 ?_Lcd_Out 0004  
            __smallconst 0600                 Lcd_Out@x 0004                 Lcd_Out@y 0007  
           Lcd_Init@data 0005                 _Lcd_Init 0E64              _INTCON2bits 000FF1  
               __Hrparam 0000                 __Lrparam 0000           Lcd_Chr_CP@data 0003  
            Lcd_Cmd@data 0003                 _tc_tecla 063C                 isa$xinst 000000  
            Lcd_Out@data 0008  
