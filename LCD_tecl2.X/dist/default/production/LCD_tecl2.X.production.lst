

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jun 22 18:34:05 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  0010FC                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _tecla
    61  0010FC  20                 	db	32
    62  0000                     _PORTDbits	set	3971
    63  0000                     _PORTEbits	set	3972
    64  0000                     _TRISEbits	set	3990
    65  0000                     _TRISDbits	set	3989
    66  0000                     _LATB	set	3978
    67  0000                     _PORTB	set	3969
    68  0000                     _INTCON2bits	set	4081
    69  0000                     _PORTBbits	set	3969
    70  0000                     _LATBbits	set	3978
    71  0000                     _LATE	set	3981
    72  0000                     _LATD	set	3980
    73  0000                     _LATC	set	3979
    74  0000                     _TRISB	set	3987
    75  0000                     _ADCON1	set	4033
    76  0000                     _ADCON0	set	4034
    77  0000                     _PORTE	set	3972
    78  0000                     _PORTD	set	3971
    79  0000                     _PORTC	set	3970
    80  0000                     _INTCON3	set	4080
    81  0000                     _INTCON2	set	4081
    82  0000                     _INTCON	set	4082
    83  0000                     _TRISE	set	3990
    84  0000                     _TRISD	set	3989
    85  0000                     _TRISC	set	3988
    86                           
    87                           	psect	smallconst
    88  000600                     __psmallconst:
    89                           	callstack 0
    90  000600  00                 	db	0
    91  000601                     STR_2:
    92  000601  53                 	db	83	;'S'
    93  000602  69                 	db	105	;'i'
    94  000603  73                 	db	115	;'s'
    95  000604  74                 	db	116	;'t'
    96  000605  2E                 	db	46
    97  000606  20                 	db	32
    98  000607  45                 	db	69	;'E'
    99  000608  6D                 	db	109	;'m'
   100  000609  62                 	db	98	;'b'
   101  00060A  61                 	db	97	;'a'
   102  00060B  72                 	db	114	;'r'
   103  00060C  63                 	db	99	;'c'
   104  00060D  61                 	db	97	;'a'
   105  00060E  64                 	db	100	;'d'
   106  00060F  6F                 	db	111	;'o'
   107  000610  73                 	db	115	;'s'
   108  000611  00                 	db	0
   109  000612                     STR_1:
   110  000612  20                 	db	32
   111  000613  20                 	db	32
   112  000614  41                 	db	65	;'A'
   113  000615  55                 	db	85	;'U'
   114  000616  54                 	db	84	;'T'
   115  000617  20                 	db	32
   116  000618  20                 	db	32
   117  000619  43                 	db	67	;'C'
   118  00061A  41                 	db	65	;'A'
   119  00061B  54                 	db	84	;'T'
   120  00061C  33                 	db	51	;'3'
   121  00061D  34                 	db	52	;'4'
   122  00061E  31                 	db	49	;'1'
   123  00061F  20                 	db	32
   124  000620  20                 	db	32
   125  000621  00                 	db	0
   126  000622                     STR_14:
   127  000622  2D                 	db	45
   128  000623  00                 	db	0
   129  000624                     STR_12:
   130  000624  30                 	db	48	;'0'
   131  000625  00                 	db	0
   132  000626                     STR_3:
   133  000626  31                 	db	49	;'1'
   134  000627  00                 	db	0
   135  000628                     STR_4:
   136  000628  32                 	db	50	;'2'
   137  000629  00                 	db	0
   138  00062A                     STR_5:
   139  00062A  33                 	db	51	;'3'
   140  00062B  00                 	db	0
   141  00062C                     STR_6:
   142  00062C  34                 	db	52	;'4'
   143  00062D  00                 	db	0
   144  00062E                     STR_7:
   145  00062E  35                 	db	53	;'5'
   146  00062F  00                 	db	0
   147  000630                     STR_8:
   148  000630  36                 	db	54	;'6'
   149  000631  00                 	db	0
   150  000632                     STR_9:
   151  000632  37                 	db	55	;'7'
   152  000633  00                 	db	0
   153  000634                     STR_10:
   154  000634  38                 	db	56	;'8'
   155  000635  00                 	db	0
   156  000636                     STR_11:
   157  000636  39                 	db	57	;'9'
   158  000637  00                 	db	0
   159  000638                     STR_15:
   160  000638  41                 	db	65	;'A'
   161  000639  00                 	db	0
   162  00063A                     STR_16:
   163  00063A  42                 	db	66	;'B'
   164  00063B  00                 	db	0
   165  00063C                     STR_17:
   166  00063C  43                 	db	67	;'C'
   167  00063D  00                 	db	0
   168  00063E                     STR_18:
   169  00063E  44                 	db	68	;'D'
   170  00063F  00                 	db	0
   171  000640                     STR_19:
   172  000640  46                 	db	70	;'F'
   173  000641  00                 	db	0
   174  000642                     STR_13:
   175  000642  78                 	db	120	;'x'
   176  000643  00                 	db	0
   177  000644  00                 	db	0	; dummy byte at the end
   178  0000                     
   179                           ; #config settings
   180                           
   181                           	psect	cinit
   182  0010E0                     __pcinit:
   183                           	callstack 0
   184  0010E0                     start_initialization:
   185                           	callstack 0
   186  0010E0                     __initialization:
   187                           	callstack 0
   188                           
   189                           ; Initialize objects allocated to COMRAM (1 bytes)
   190                           ; load TBLPTR registers with __pidataCOMRAM
   191  0010E0  0EFC               	movlw	low __pidataCOMRAM
   192  0010E2  6EF6               	movwf	tblptrl,c
   193  0010E4  0E10               	movlw	high __pidataCOMRAM
   194  0010E6  6EF7               	movwf	tblptrh,c
   195  0010E8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   196  0010EA  6EF8               	movwf	tblptru,c
   197  0010EC  0009               	tblrd		*+	;fetch initializer
   198  0010EE  CFF5 F00B          	movff	tablat,__pdataCOMRAM
   199  0010F2                     end_of_initialization:
   200                           	callstack 0
   201  0010F2                     __end_of__initialization:
   202                           	callstack 0
   203  0010F2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   204  0010F4  6EF8               	movwf	tblptru,c
   205  0010F6  0100               	movlb	0
   206  0010F8  EF23  F003         	goto	_main	;jump to C main() function
   207                           
   208                           	psect	dataCOMRAM
   209  00000B                     __pdataCOMRAM:
   210                           	callstack 0
   211  00000B                     _tecla:
   212                           	callstack 0
   213  00000B                     	ds	1
   214                           
   215                           	psect	cstackCOMRAM
   216  000001                     __pcstackCOMRAM:
   217                           	callstack 0
   218  000001                     ??_Lcd_Cmd:
   219  000001                     ??_Lcd_Chr_CP:
   220  000001                     ??_tc_tecla:
   221  000001                     
   222                           ; 1 bytes @ 0x0
   223  000001                     	ds	1
   224  000002                     tc_tecla@key:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x1
   228  000002                     	ds	1
   229  000003                     Lcd_Chr_CP@data:
   230                           	callstack 0
   231  000003                     Lcd_Cmd@data:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x2
   235  000003                     	ds	1
   236  000004                     ??_Lcd_Init:
   237  000004                     Lcd_Out@x:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x3
   241  000004                     	ds	1
   242  000005                     Lcd_Init@data:
   243                           	callstack 0
   244  000005                     Lcd_Out@buffer:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0x4
   248  000005                     	ds	2
   249  000007                     Lcd_Out@y:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x6
   253  000007                     	ds	1
   254  000008                     Lcd_Out@data:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x7
   258  000008                     	ds	1
   259  000009                     ??_main:
   260                           
   261                           ; 1 bytes @ 0x8
   262  000009                     	ds	2
   263                           
   264 ;;
   265 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   266 ;;
   267 ;; *************** function _main *****************
   268 ;; Defined at:
   269 ;;		line 25 in file "mainLCDtecl2.c"
   270 ;; Parameters:    Size  Location     Type
   271 ;;		None
   272 ;; Auto vars:     Size  Location     Type
   273 ;;		None
   274 ;; Return value:  Size  Location     Type
   275 ;;                  1    wreg      void 
   276 ;; Registers used:
   277 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   278 ;; Tracked objects:
   279 ;;		On entry : 0/0
   280 ;;		On exit  : 0/0
   281 ;;		Unchanged: 0/0
   282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   283 ;;      Params:         0       0       0       0       0       0       0
   284 ;;      Locals:         0       0       0       0       0       0       0
   285 ;;      Temps:          2       0       0       0       0       0       0
   286 ;;      Totals:         2       0       0       0       0       0       0
   287 ;;Total ram usage:        2 bytes
   288 ;; Hardware stack levels required when called: 2
   289 ;; This function calls:
   290 ;;		_Lcd_Cmd
   291 ;;		_Lcd_Init
   292 ;;		_Lcd_Out
   293 ;;		_tc_tecla
   294 ;; This function is called by:
   295 ;;		Startup code after reset
   296 ;; This function uses a non-reentrant model
   297 ;;
   298                           
   299                           	psect	text0
   300  000646                     __ptext0:
   301                           	callstack 0
   302  000646                     _main:
   303                           	callstack 29
   304  000646                     
   305                           ;mainLCDtecl2.c: 27: ADCON0 = 0b00000000;
   306  000646  0E00               	movlw	0
   307  000648  6EC2               	movwf	194,c	;volatile
   308                           
   309                           ;mainLCDtecl2.c: 28: ADCON1 = 0b00001111;
   310  00064A  0E0F               	movlw	15
   311  00064C  6EC1               	movwf	193,c	;volatile
   312                           
   313                           ;mainLCDtecl2.c: 30: INTCON = 0b00000000;
   314  00064E  0E00               	movlw	0
   315  000650  6EF2               	movwf	242,c	;volatile
   316                           
   317                           ;mainLCDtecl2.c: 31: INTCON2 = 0b10000000;
   318  000652  0E80               	movlw	128
   319  000654  6EF1               	movwf	241,c	;volatile
   320  000656                     
   321                           ;mainLCDtecl2.c: 32: INTCON2bits.RBPU = 0;
   322  000656  9EF1               	bcf	241,7,c	;volatile
   323                           
   324                           ;mainLCDtecl2.c: 33: INTCON3 = 0b00000000;
   325  000658  0E00               	movlw	0
   326  00065A  6EF0               	movwf	240,c	;volatile
   327                           
   328                           ;mainLCDtecl2.c: 35: TRISB = 0b00001111;
   329  00065C  0E0F               	movlw	15
   330  00065E  6E93               	movwf	147,c	;volatile
   331                           
   332                           ;mainLCDtecl2.c: 36: TRISC = 0b00000000;
   333  000660  0E00               	movlw	0
   334  000662  6E94               	movwf	148,c	;volatile
   335                           
   336                           ;mainLCDtecl2.c: 37: TRISD = 0;
   337  000664  0E00               	movlw	0
   338  000666  6E95               	movwf	149,c	;volatile
   339                           
   340                           ;mainLCDtecl2.c: 38: TRISE = 0b00000000;
   341  000668  0E00               	movlw	0
   342  00066A  6E96               	movwf	150,c	;volatile
   343                           
   344                           ;mainLCDtecl2.c: 40: PORTB = 0;
   345  00066C  0E00               	movlw	0
   346  00066E  6E81               	movwf	129,c	;volatile
   347                           
   348                           ;mainLCDtecl2.c: 41: LATB = 0;
   349  000670  0E00               	movlw	0
   350  000672  6E8A               	movwf	138,c	;volatile
   351                           
   352                           ;mainLCDtecl2.c: 42: PORTC = 0;
   353  000674  0E00               	movlw	0
   354  000676  6E82               	movwf	130,c	;volatile
   355                           
   356                           ;mainLCDtecl2.c: 43: LATC = 0;
   357  000678  0E00               	movlw	0
   358  00067A  6E8B               	movwf	139,c	;volatile
   359                           
   360                           ;mainLCDtecl2.c: 44: PORTD = 0;
   361  00067C  0E00               	movlw	0
   362  00067E  6E83               	movwf	131,c	;volatile
   363                           
   364                           ;mainLCDtecl2.c: 45: LATD = 0;
   365  000680  0E00               	movlw	0
   366  000682  6E8C               	movwf	140,c	;volatile
   367                           
   368                           ;mainLCDtecl2.c: 46: PORTE = 0;
   369  000684  0E00               	movlw	0
   370  000686  6E84               	movwf	132,c	;volatile
   371                           
   372                           ;mainLCDtecl2.c: 47: LATE = 0;
   373  000688  0E00               	movlw	0
   374  00068A  6E8D               	movwf	141,c	;volatile
   375  00068C                     
   376                           ;mainLCDtecl2.c: 49: Lcd_Init();
   377  00068C  EC9E  F007         	call	_Lcd_Init	;wreg free
   378  000690                     
   379                           ;mainLCDtecl2.c: 51: Lcd_Cmd(12);
   380  000690  0E0C               	movlw	12
   381  000692  EC08  F007         	call	_Lcd_Cmd
   382  000696                     
   383                           ;mainLCDtecl2.c: 52: Lcd_Out(1, 0, "  AUT  CAT341  ");
   384  000696  0E00               	movlw	0
   385  000698  6E04               	movwf	Lcd_Out@x^0,c
   386  00069A  0E12               	movlw	low STR_1
   387  00069C  6E05               	movwf	Lcd_Out@buffer^0,c
   388  00069E  0E06               	movlw	high STR_1
   389  0006A0  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   390  0006A2  0E01               	movlw	1
   391  0006A4  EC28  F008         	call	_Lcd_Out
   392  0006A8                     
   393                           ;mainLCDtecl2.c: 53: Lcd_Out(2, 0, "Sist. Embarcados");
   394  0006A8  0E00               	movlw	0
   395  0006AA  6E04               	movwf	Lcd_Out@x^0,c
   396  0006AC  0E01               	movlw	low STR_2
   397  0006AE  6E05               	movwf	Lcd_Out@buffer^0,c
   398  0006B0  0E06               	movlw	high STR_2
   399  0006B2  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   400  0006B4  0E02               	movlw	2
   401  0006B6  EC28  F008         	call	_Lcd_Out
   402  0006BA                     
   403                           ;mainLCDtecl2.c: 54: _delay((unsigned long)((200)*(8000000/4000.0)));
   404  0006BA  0E03               	movlw	3
   405  0006BC  6E0A               	movwf	(??_main+1)^0,c
   406  0006BE  0E08               	movlw	8
   407  0006C0  6E09               	movwf	??_main^0,c
   408  0006C2  0E77               	movlw	119
   409  0006C4                     u797:
   410  0006C4  2EE8               	decfsz	wreg,f,c
   411  0006C6  D7FE               	bra	u797
   412  0006C8  2E09               	decfsz	??_main^0,f,c
   413  0006CA  D7FC               	bra	u797
   414  0006CC  2E0A               	decfsz	(??_main+1)^0,f,c
   415  0006CE  D7FA               	bra	u797
   416  0006D0  F000               	nop	
   417  0006D2                     l106:
   418  0006D2  0004               	clrwdt		;# 
   419  0006D4                     
   420                           ;mainLCDtecl2.c: 61: tecla = tc_tecla();
   421  0006D4  ECD1  F004         	call	_tc_tecla	;wreg free
   422  0006D8  6E0B               	movwf	_tecla^0,c
   423  0006DA                     
   424                           ;mainLCDtecl2.c: 64: if (tecla == '1')
   425  0006DA  0E31               	movlw	49
   426  0006DC  180B               	xorwf	_tecla^0,w,c
   427  0006DE  A4D8               	btfss	status,2,c
   428  0006E0  EF74  F003         	goto	u621
   429  0006E4  EF76  F003         	goto	u620
   430  0006E8                     u621:
   431  0006E8  EF8D  F003         	goto	l1375
   432  0006EC                     u620:
   433  0006EC                     
   434                           ;mainLCDtecl2.c: 65: {;mainLCDtecl2.c: 66: Lcd_Out(1, 0, "1");
   435  0006EC  0E00               	movlw	0
   436  0006EE  6E04               	movwf	Lcd_Out@x^0,c
   437  0006F0  0E26               	movlw	low STR_3
   438  0006F2  6E05               	movwf	Lcd_Out@buffer^0,c
   439  0006F4  0E06               	movlw	high STR_3
   440  0006F6  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   441  0006F8  0E01               	movlw	1
   442  0006FA  EC28  F008         	call	_Lcd_Out
   443  0006FE                     l1373:
   444                           
   445                           ;mainLCDtecl2.c: 67: _delay((unsigned long)((100)*(8000000/4000.0)));
   446  0006FE  0E02               	movlw	2
   447  000700  6E0A               	movwf	(??_main+1)^0,c
   448  000702  0E04               	movlw	4
   449  000704  6E09               	movwf	??_main^0,c
   450  000706  0EBA               	movlw	186
   451  000708                     u807:
   452  000708  2EE8               	decfsz	wreg,f,c
   453  00070A  D7FE               	bra	u807
   454  00070C  2E09               	decfsz	??_main^0,f,c
   455  00070E  D7FC               	bra	u807
   456  000710  2E0A               	decfsz	(??_main+1)^0,f,c
   457  000712  D7FA               	bra	u807
   458  000714  D000               	nop2	
   459                           
   460                           ;mainLCDtecl2.c: 68: }
   461  000716  EF69  F003         	goto	l106
   462  00071A                     l1375:
   463                           
   464                           ;mainLCDtecl2.c: 69: else if (tecla == '2')
   465  00071A  0E32               	movlw	50
   466  00071C  180B               	xorwf	_tecla^0,w,c
   467  00071E  A4D8               	btfss	status,2,c
   468  000720  EF94  F003         	goto	u631
   469  000724  EF96  F003         	goto	u630
   470  000728                     u631:
   471  000728  EFA1  F003         	goto	l1381
   472  00072C                     u630:
   473  00072C                     
   474                           ;mainLCDtecl2.c: 70: {;mainLCDtecl2.c: 71: Lcd_Out(1, 0, "2");
   475  00072C  0E00               	movlw	0
   476  00072E  6E04               	movwf	Lcd_Out@x^0,c
   477  000730  0E28               	movlw	low STR_4
   478  000732  6E05               	movwf	Lcd_Out@buffer^0,c
   479  000734  0E06               	movlw	high STR_4
   480  000736  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   481  000738  0E01               	movlw	1
   482  00073A  EC28  F008         	call	_Lcd_Out
   483  00073E  EF7F  F003         	goto	l1373
   484  000742                     l1381:
   485                           
   486                           ;mainLCDtecl2.c: 74: else if (tecla == '3')
   487  000742  0E33               	movlw	51
   488  000744  180B               	xorwf	_tecla^0,w,c
   489  000746  A4D8               	btfss	status,2,c
   490  000748  EFA8  F003         	goto	u641
   491  00074C  EFAA  F003         	goto	u640
   492  000750                     u641:
   493  000750  EFB5  F003         	goto	l1387
   494  000754                     u640:
   495  000754                     
   496                           ;mainLCDtecl2.c: 75: {;mainLCDtecl2.c: 76: Lcd_Out(1, 0, "3");
   497  000754  0E00               	movlw	0
   498  000756  6E04               	movwf	Lcd_Out@x^0,c
   499  000758  0E2A               	movlw	low STR_5
   500  00075A  6E05               	movwf	Lcd_Out@buffer^0,c
   501  00075C  0E06               	movlw	high STR_5
   502  00075E  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   503  000760  0E01               	movlw	1
   504  000762  EC28  F008         	call	_Lcd_Out
   505  000766  EF7F  F003         	goto	l1373
   506  00076A                     l1387:
   507                           
   508                           ;mainLCDtecl2.c: 79: else if (tecla == '4')
   509  00076A  0E34               	movlw	52
   510  00076C  180B               	xorwf	_tecla^0,w,c
   511  00076E  A4D8               	btfss	status,2,c
   512  000770  EFBC  F003         	goto	u651
   513  000774  EFBE  F003         	goto	u650
   514  000778                     u651:
   515  000778  EFC9  F003         	goto	l1393
   516  00077C                     u650:
   517  00077C                     
   518                           ;mainLCDtecl2.c: 80: {;mainLCDtecl2.c: 81: Lcd_Out(1, 0, "4");
   519  00077C  0E00               	movlw	0
   520  00077E  6E04               	movwf	Lcd_Out@x^0,c
   521  000780  0E2C               	movlw	low STR_6
   522  000782  6E05               	movwf	Lcd_Out@buffer^0,c
   523  000784  0E06               	movlw	high STR_6
   524  000786  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   525  000788  0E01               	movlw	1
   526  00078A  EC28  F008         	call	_Lcd_Out
   527  00078E  EF7F  F003         	goto	l1373
   528  000792                     l1393:
   529                           
   530                           ;mainLCDtecl2.c: 84: else if (tecla == '5')
   531  000792  0E35               	movlw	53
   532  000794  180B               	xorwf	_tecla^0,w,c
   533  000796  A4D8               	btfss	status,2,c
   534  000798  EFD0  F003         	goto	u661
   535  00079C  EFD2  F003         	goto	u660
   536  0007A0                     u661:
   537  0007A0  EFDD  F003         	goto	l1399
   538  0007A4                     u660:
   539  0007A4                     
   540                           ;mainLCDtecl2.c: 85: {;mainLCDtecl2.c: 86: Lcd_Out(1, 0, "5");
   541  0007A4  0E00               	movlw	0
   542  0007A6  6E04               	movwf	Lcd_Out@x^0,c
   543  0007A8  0E2E               	movlw	low STR_7
   544  0007AA  6E05               	movwf	Lcd_Out@buffer^0,c
   545  0007AC  0E06               	movlw	high STR_7
   546  0007AE  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   547  0007B0  0E01               	movlw	1
   548  0007B2  EC28  F008         	call	_Lcd_Out
   549  0007B6  EF7F  F003         	goto	l1373
   550  0007BA                     l1399:
   551                           
   552                           ;mainLCDtecl2.c: 89: else if (tecla == '6')
   553  0007BA  0E36               	movlw	54
   554  0007BC  180B               	xorwf	_tecla^0,w,c
   555  0007BE  A4D8               	btfss	status,2,c
   556  0007C0  EFE4  F003         	goto	u671
   557  0007C4  EFE6  F003         	goto	u670
   558  0007C8                     u671:
   559  0007C8  EFF1  F003         	goto	l1405
   560  0007CC                     u670:
   561  0007CC                     
   562                           ;mainLCDtecl2.c: 90: {;mainLCDtecl2.c: 91: Lcd_Out(1, 0, "6");
   563  0007CC  0E00               	movlw	0
   564  0007CE  6E04               	movwf	Lcd_Out@x^0,c
   565  0007D0  0E30               	movlw	low STR_8
   566  0007D2  6E05               	movwf	Lcd_Out@buffer^0,c
   567  0007D4  0E06               	movlw	high STR_8
   568  0007D6  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   569  0007D8  0E01               	movlw	1
   570  0007DA  EC28  F008         	call	_Lcd_Out
   571  0007DE  EF7F  F003         	goto	l1373
   572  0007E2                     l1405:
   573                           
   574                           ;mainLCDtecl2.c: 94: else if (tecla == '7')
   575  0007E2  0E37               	movlw	55
   576  0007E4  180B               	xorwf	_tecla^0,w,c
   577  0007E6  A4D8               	btfss	status,2,c
   578  0007E8  EFF8  F003         	goto	u681
   579  0007EC  EFFA  F003         	goto	u680
   580  0007F0                     u681:
   581  0007F0  EF05  F004         	goto	l1409
   582  0007F4                     u680:
   583  0007F4                     
   584                           ;mainLCDtecl2.c: 95: {;mainLCDtecl2.c: 96: Lcd_Out(1, 0, "7");
   585  0007F4  0E00               	movlw	0
   586  0007F6  6E04               	movwf	Lcd_Out@x^0,c
   587  0007F8  0E32               	movlw	low STR_9
   588  0007FA  6E05               	movwf	Lcd_Out@buffer^0,c
   589  0007FC  0E06               	movlw	high STR_9
   590  0007FE  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   591  000800  0E01               	movlw	1
   592  000802  EC28  F008         	call	_Lcd_Out
   593                           
   594                           ;mainLCDtecl2.c: 97: }
   595  000806  EF69  F003         	goto	l106
   596  00080A                     l1409:
   597                           
   598                           ;mainLCDtecl2.c: 98: else if (tecla == '8')
   599  00080A  0E38               	movlw	56
   600  00080C  180B               	xorwf	_tecla^0,w,c
   601  00080E  A4D8               	btfss	status,2,c
   602  000810  EF0C  F004         	goto	u691
   603  000814  EF0E  F004         	goto	u690
   604  000818                     u691:
   605  000818  EF19  F004         	goto	l1413
   606  00081C                     u690:
   607  00081C                     
   608                           ;mainLCDtecl2.c: 99: {;mainLCDtecl2.c: 100: Lcd_Out(1, 0, "8");
   609  00081C  0E00               	movlw	0
   610  00081E  6E04               	movwf	Lcd_Out@x^0,c
   611  000820  0E34               	movlw	low STR_10
   612  000822  6E05               	movwf	Lcd_Out@buffer^0,c
   613  000824  0E06               	movlw	high STR_10
   614  000826  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   615  000828  0E01               	movlw	1
   616  00082A  EC28  F008         	call	_Lcd_Out
   617                           
   618                           ;mainLCDtecl2.c: 101: }
   619  00082E  EF69  F003         	goto	l106
   620  000832                     l1413:
   621                           
   622                           ;mainLCDtecl2.c: 102: else if (tecla == '9')
   623  000832  0E39               	movlw	57
   624  000834  180B               	xorwf	_tecla^0,w,c
   625  000836  A4D8               	btfss	status,2,c
   626  000838  EF20  F004         	goto	u701
   627  00083C  EF22  F004         	goto	u700
   628  000840                     u701:
   629  000840  EF2D  F004         	goto	l1417
   630  000844                     u700:
   631  000844                     
   632                           ;mainLCDtecl2.c: 103: {;mainLCDtecl2.c: 104: Lcd_Out(1, 0, "9");
   633  000844  0E00               	movlw	0
   634  000846  6E04               	movwf	Lcd_Out@x^0,c
   635  000848  0E36               	movlw	low STR_11
   636  00084A  6E05               	movwf	Lcd_Out@buffer^0,c
   637  00084C  0E06               	movlw	high STR_11
   638  00084E  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   639  000850  0E01               	movlw	1
   640  000852  EC28  F008         	call	_Lcd_Out
   641                           
   642                           ;mainLCDtecl2.c: 105: }
   643  000856  EF69  F003         	goto	l106
   644  00085A                     l1417:
   645                           
   646                           ;mainLCDtecl2.c: 106: else if (tecla == '0')
   647  00085A  0E30               	movlw	48
   648  00085C  180B               	xorwf	_tecla^0,w,c
   649  00085E  A4D8               	btfss	status,2,c
   650  000860  EF34  F004         	goto	u711
   651  000864  EF36  F004         	goto	u710
   652  000868                     u711:
   653  000868  EF41  F004         	goto	l1421
   654  00086C                     u710:
   655  00086C                     
   656                           ;mainLCDtecl2.c: 107: {;mainLCDtecl2.c: 108: Lcd_Out(1, 0, "0");
   657  00086C  0E00               	movlw	0
   658  00086E  6E04               	movwf	Lcd_Out@x^0,c
   659  000870  0E24               	movlw	low STR_12
   660  000872  6E05               	movwf	Lcd_Out@buffer^0,c
   661  000874  0E06               	movlw	high STR_12
   662  000876  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   663  000878  0E01               	movlw	1
   664  00087A  EC28  F008         	call	_Lcd_Out
   665                           
   666                           ;mainLCDtecl2.c: 109: }
   667  00087E  EF69  F003         	goto	l106
   668  000882                     l1421:
   669                           
   670                           ;mainLCDtecl2.c: 110: else if (tecla == 'x')
   671  000882  0E78               	movlw	120
   672  000884  180B               	xorwf	_tecla^0,w,c
   673  000886  A4D8               	btfss	status,2,c
   674  000888  EF48  F004         	goto	u721
   675  00088C  EF4A  F004         	goto	u720
   676  000890                     u721:
   677  000890  EF55  F004         	goto	l1425
   678  000894                     u720:
   679  000894                     
   680                           ;mainLCDtecl2.c: 111: {;mainLCDtecl2.c: 112: Lcd_Out(1, 0, "x");
   681  000894  0E00               	movlw	0
   682  000896  6E04               	movwf	Lcd_Out@x^0,c
   683  000898  0E42               	movlw	low STR_13
   684  00089A  6E05               	movwf	Lcd_Out@buffer^0,c
   685  00089C  0E06               	movlw	high STR_13
   686  00089E  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   687  0008A0  0E01               	movlw	1
   688  0008A2  EC28  F008         	call	_Lcd_Out
   689                           
   690                           ;mainLCDtecl2.c: 113: }
   691  0008A6  EF69  F003         	goto	l106
   692  0008AA                     l1425:
   693                           
   694                           ;mainLCDtecl2.c: 114: else if (tecla == '-')
   695  0008AA  0E2D               	movlw	45
   696  0008AC  180B               	xorwf	_tecla^0,w,c
   697  0008AE  A4D8               	btfss	status,2,c
   698  0008B0  EF5C  F004         	goto	u731
   699  0008B4  EF5E  F004         	goto	u730
   700  0008B8                     u731:
   701  0008B8  EF69  F004         	goto	l1429
   702  0008BC                     u730:
   703  0008BC                     
   704                           ;mainLCDtecl2.c: 115: {;mainLCDtecl2.c: 116: Lcd_Out(1, 0, "-");
   705  0008BC  0E00               	movlw	0
   706  0008BE  6E04               	movwf	Lcd_Out@x^0,c
   707  0008C0  0E22               	movlw	low STR_14
   708  0008C2  6E05               	movwf	Lcd_Out@buffer^0,c
   709  0008C4  0E06               	movlw	high STR_14
   710  0008C6  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   711  0008C8  0E01               	movlw	1
   712  0008CA  EC28  F008         	call	_Lcd_Out
   713                           
   714                           ;mainLCDtecl2.c: 117: }
   715  0008CE  EF69  F003         	goto	l106
   716  0008D2                     l1429:
   717                           
   718                           ;mainLCDtecl2.c: 118: else if (tecla == 'A')
   719  0008D2  0E41               	movlw	65
   720  0008D4  180B               	xorwf	_tecla^0,w,c
   721  0008D6  A4D8               	btfss	status,2,c
   722  0008D8  EF70  F004         	goto	u741
   723  0008DC  EF72  F004         	goto	u740
   724  0008E0                     u741:
   725  0008E0  EF7D  F004         	goto	l1433
   726  0008E4                     u740:
   727  0008E4                     
   728                           ;mainLCDtecl2.c: 119: {;mainLCDtecl2.c: 120: Lcd_Out(1, 0, "A");
   729  0008E4  0E00               	movlw	0
   730  0008E6  6E04               	movwf	Lcd_Out@x^0,c
   731  0008E8  0E38               	movlw	low STR_15
   732  0008EA  6E05               	movwf	Lcd_Out@buffer^0,c
   733  0008EC  0E06               	movlw	high STR_15
   734  0008EE  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   735  0008F0  0E01               	movlw	1
   736  0008F2  EC28  F008         	call	_Lcd_Out
   737                           
   738                           ;mainLCDtecl2.c: 121: }
   739  0008F6  EF69  F003         	goto	l106
   740  0008FA                     l1433:
   741                           
   742                           ;mainLCDtecl2.c: 122: else if (tecla == 'B')
   743  0008FA  0E42               	movlw	66
   744  0008FC  180B               	xorwf	_tecla^0,w,c
   745  0008FE  A4D8               	btfss	status,2,c
   746  000900  EF84  F004         	goto	u751
   747  000904  EF86  F004         	goto	u750
   748  000908                     u751:
   749  000908  EF91  F004         	goto	l1437
   750  00090C                     u750:
   751  00090C                     
   752                           ;mainLCDtecl2.c: 123: {;mainLCDtecl2.c: 124: Lcd_Out(1, 0, "B");
   753  00090C  0E00               	movlw	0
   754  00090E  6E04               	movwf	Lcd_Out@x^0,c
   755  000910  0E3A               	movlw	low STR_16
   756  000912  6E05               	movwf	Lcd_Out@buffer^0,c
   757  000914  0E06               	movlw	high STR_16
   758  000916  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   759  000918  0E01               	movlw	1
   760  00091A  EC28  F008         	call	_Lcd_Out
   761                           
   762                           ;mainLCDtecl2.c: 125: }
   763  00091E  EF69  F003         	goto	l106
   764  000922                     l1437:
   765                           
   766                           ;mainLCDtecl2.c: 126: else if (tecla == 'C')
   767  000922  0E43               	movlw	67
   768  000924  180B               	xorwf	_tecla^0,w,c
   769  000926  A4D8               	btfss	status,2,c
   770  000928  EF98  F004         	goto	u761
   771  00092C  EF9A  F004         	goto	u760
   772  000930                     u761:
   773  000930  EFA5  F004         	goto	l1441
   774  000934                     u760:
   775  000934                     
   776                           ;mainLCDtecl2.c: 127: {;mainLCDtecl2.c: 128: Lcd_Out(1, 0, "C");
   777  000934  0E00               	movlw	0
   778  000936  6E04               	movwf	Lcd_Out@x^0,c
   779  000938  0E3C               	movlw	low STR_17
   780  00093A  6E05               	movwf	Lcd_Out@buffer^0,c
   781  00093C  0E06               	movlw	high STR_17
   782  00093E  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   783  000940  0E01               	movlw	1
   784  000942  EC28  F008         	call	_Lcd_Out
   785                           
   786                           ;mainLCDtecl2.c: 129: }
   787  000946  EF69  F003         	goto	l106
   788  00094A                     l1441:
   789                           
   790                           ;mainLCDtecl2.c: 130: else if (tecla == 'D')
   791  00094A  0E44               	movlw	68
   792  00094C  180B               	xorwf	_tecla^0,w,c
   793  00094E  A4D8               	btfss	status,2,c
   794  000950  EFAC  F004         	goto	u771
   795  000954  EFAE  F004         	goto	u770
   796  000958                     u771:
   797  000958  EFB9  F004         	goto	l1445
   798  00095C                     u770:
   799  00095C                     
   800                           ;mainLCDtecl2.c: 131: {;mainLCDtecl2.c: 132: Lcd_Out(1, 0, "D");
   801  00095C  0E00               	movlw	0
   802  00095E  6E04               	movwf	Lcd_Out@x^0,c
   803  000960  0E3E               	movlw	low STR_18
   804  000962  6E05               	movwf	Lcd_Out@buffer^0,c
   805  000964  0E06               	movlw	high STR_18
   806  000966  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   807  000968  0E01               	movlw	1
   808  00096A  EC28  F008         	call	_Lcd_Out
   809                           
   810                           ;mainLCDtecl2.c: 133: }
   811  00096E  EF69  F003         	goto	l106
   812  000972                     l1445:
   813                           
   814                           ;mainLCDtecl2.c: 134: else if (tecla == 'F')
   815  000972  0E46               	movlw	70
   816  000974  180B               	xorwf	_tecla^0,w,c
   817  000976  A4D8               	btfss	status,2,c
   818  000978  EFC0  F004         	goto	u781
   819  00097C  EFC2  F004         	goto	u780
   820  000980                     u781:
   821  000980  EFCD  F004         	goto	l134
   822  000984                     u780:
   823  000984                     
   824                           ;mainLCDtecl2.c: 135: {;mainLCDtecl2.c: 136: Lcd_Out(1, 0, "F");
   825  000984  0E00               	movlw	0
   826  000986  6E04               	movwf	Lcd_Out@x^0,c
   827  000988  0E40               	movlw	low STR_19
   828  00098A  6E05               	movwf	Lcd_Out@buffer^0,c
   829  00098C  0E06               	movlw	high STR_19
   830  00098E  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   831  000990  0E01               	movlw	1
   832  000992  EC28  F008         	call	_Lcd_Out
   833  000996  EF69  F003         	goto	l106
   834  00099A                     l134:
   835  00099A  EF69  F003         	goto	l106
   836  00099E  EF00  F000         	goto	start
   837  0009A2                     __end_of_main:
   838                           	callstack 0
   839                           
   840 ;; *************** function _tc_tecla *****************
   841 ;; Defined at:
   842 ;;		line 49 in file "teclado.c"
   843 ;; Parameters:    Size  Location     Type
   844 ;;		None
   845 ;; Auto vars:     Size  Location     Type
   846 ;;  key             1    1[COMRAM] unsigned char 
   847 ;; Return value:  Size  Location     Type
   848 ;;                  1    wreg      unsigned char 
   849 ;; Registers used:
   850 ;;		wreg, status,2
   851 ;; Tracked objects:
   852 ;;		On entry : 0/0
   853 ;;		On exit  : 0/0
   854 ;;		Unchanged: 0/0
   855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   856 ;;      Params:         0       0       0       0       0       0       0
   857 ;;      Locals:         1       0       0       0       0       0       0
   858 ;;      Temps:          1       0       0       0       0       0       0
   859 ;;      Totals:         2       0       0       0       0       0       0
   860 ;;Total ram usage:        2 bytes
   861 ;; Hardware stack levels used: 1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           	psect	text1
   870  0009A2                     __ptext1:
   871                           	callstack 0
   872  0009A2                     _tc_tecla:
   873                           	callstack 30
   874  0009A2                     
   875                           ;teclado.c: 52: unsigned char key;;teclado.c: 54: LATBbits.LB4 = 1; LATBbits.LB5 = 1; LA
      +                          TBbits.LB6 = 1; LATBbits.LB7 = 1;
   876  0009A2  888A               	bsf	138,4,c	;volatile
   877  0009A4  8A8A               	bsf	138,5,c	;volatile
   878  0009A6  8C8A               	bsf	138,6,c	;volatile
   879  0009A8  8E8A               	bsf	138,7,c	;volatile
   880                           
   881                           ;teclado.c: 55: LATBbits.LB4 = 0;
   882  0009AA  988A               	bcf	138,4,c	;volatile
   883                           
   884                           ;teclado.c: 56: if(!PORTBbits.RB3) {_delay((unsigned long)((20)*(8000000/4000.0))); if (
      +                          !PORTBbits.RB3){key = '1'; }}
   885  0009AC  B681               	btfsc	129,3,c	;volatile
   886  0009AE  EFDB  F004         	goto	u71
   887  0009B2  EFDD  F004         	goto	u70
   888  0009B6                     u71:
   889  0009B6  EFEF  F004         	goto	l9
   890  0009BA                     u70:
   891  0009BA  0E34               	movlw	52
   892  0009BC  6E01               	movwf	??_tc_tecla^0,c
   893  0009BE  0EF2               	movlw	242
   894  0009C0                     u817:
   895  0009C0  2EE8               	decfsz	wreg,f,c
   896  0009C2  D7FE               	bra	u817
   897  0009C4  2E01               	decfsz	??_tc_tecla^0,f,c
   898  0009C6  D7FC               	bra	u817
   899  0009C8  B681               	btfsc	129,3,c	;volatile
   900  0009CA  EFE9  F004         	goto	u81
   901  0009CE  EFEB  F004         	goto	u80
   902  0009D2                     u81:
   903  0009D2  EF38  F005         	goto	l1021
   904  0009D6                     u80:
   905  0009D6  0E31               	movlw	49
   906  0009D8  6E02               	movwf	tc_tecla@key^0,c
   907  0009DA  EF38  F005         	goto	l1021
   908  0009DE                     l9:
   909                           
   910                           ;teclado.c: 57: else if(!PORTBbits.RB2) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB2){key = '2'; }}
   911  0009DE  B481               	btfsc	129,2,c	;volatile
   912  0009E0  EFF4  F004         	goto	u91
   913  0009E4  EFF6  F004         	goto	u90
   914  0009E8                     u91:
   915  0009E8  EF08  F005         	goto	l12
   916  0009EC                     u90:
   917  0009EC  0E34               	movlw	52
   918  0009EE  6E01               	movwf	??_tc_tecla^0,c
   919  0009F0  0EF2               	movlw	242
   920  0009F2                     u827:
   921  0009F2  2EE8               	decfsz	wreg,f,c
   922  0009F4  D7FE               	bra	u827
   923  0009F6  2E01               	decfsz	??_tc_tecla^0,f,c
   924  0009F8  D7FC               	bra	u827
   925  0009FA  B481               	btfsc	129,2,c	;volatile
   926  0009FC  EF02  F005         	goto	u101
   927  000A00  EF04  F005         	goto	u100
   928  000A04                     u101:
   929  000A04  EF38  F005         	goto	l1021
   930  000A08                     u100:
   931  000A08  0E32               	movlw	50
   932  000A0A  6E02               	movwf	tc_tecla@key^0,c
   933  000A0C  EF38  F005         	goto	l1021
   934  000A10                     l12:
   935                           
   936                           ;teclado.c: 58: else if(!PORTBbits.RB1) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB1){key = '3'; }}
   937  000A10  B281               	btfsc	129,1,c	;volatile
   938  000A12  EF0D  F005         	goto	u111
   939  000A16  EF0F  F005         	goto	u110
   940  000A1A                     u111:
   941  000A1A  EF21  F005         	goto	l15
   942  000A1E                     u110:
   943  000A1E  0E34               	movlw	52
   944  000A20  6E01               	movwf	??_tc_tecla^0,c
   945  000A22  0EF2               	movlw	242
   946  000A24                     u837:
   947  000A24  2EE8               	decfsz	wreg,f,c
   948  000A26  D7FE               	bra	u837
   949  000A28  2E01               	decfsz	??_tc_tecla^0,f,c
   950  000A2A  D7FC               	bra	u837
   951  000A2C  B281               	btfsc	129,1,c	;volatile
   952  000A2E  EF1B  F005         	goto	u121
   953  000A32  EF1D  F005         	goto	u120
   954  000A36                     u121:
   955  000A36  EF38  F005         	goto	l1021
   956  000A3A                     u120:
   957  000A3A  0E33               	movlw	51
   958  000A3C  6E02               	movwf	tc_tecla@key^0,c
   959  000A3E  EF38  F005         	goto	l1021
   960  000A42                     l15:
   961                           
   962                           ;teclado.c: 59: else if(!PORTBbits.RB0) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB0){key = 'A'; }}
   963  000A42  B081               	btfsc	129,0,c	;volatile
   964  000A44  EF26  F005         	goto	u131
   965  000A48  EF28  F005         	goto	u130
   966  000A4C                     u131:
   967  000A4C  EF38  F005         	goto	l1021
   968  000A50                     u130:
   969  000A50  0E34               	movlw	52
   970  000A52  6E01               	movwf	??_tc_tecla^0,c
   971  000A54  0EF2               	movlw	242
   972  000A56                     u847:
   973  000A56  2EE8               	decfsz	wreg,f,c
   974  000A58  D7FE               	bra	u847
   975  000A5A  2E01               	decfsz	??_tc_tecla^0,f,c
   976  000A5C  D7FC               	bra	u847
   977  000A5E  B081               	btfsc	129,0,c	;volatile
   978  000A60  EF34  F005         	goto	u141
   979  000A64  EF36  F005         	goto	u140
   980  000A68                     u141:
   981  000A68  EF38  F005         	goto	l1021
   982  000A6C                     u140:
   983  000A6C  0E41               	movlw	65
   984  000A6E  6E02               	movwf	tc_tecla@key^0,c
   985  000A70                     l1021:
   986                           
   987                           ;teclado.c: 61: LATBbits.LB4 = 1;
   988  000A70  888A               	bsf	138,4,c	;volatile
   989  000A72                     
   990                           ;teclado.c: 62: LATBbits.LB5 = 0;
   991  000A72  9A8A               	bcf	138,5,c	;volatile
   992  000A74                     
   993                           ;teclado.c: 64: if(!PORTBbits.RB3) {_delay((unsigned long)((20)*(8000000/4000.0))); if (
      +                          !PORTBbits.RB3){key = '4'; }}
   994  000A74  B681               	btfsc	129,3,c	;volatile
   995  000A76  EF3F  F005         	goto	u151
   996  000A7A  EF41  F005         	goto	u150
   997  000A7E                     u151:
   998  000A7E  EF53  F005         	goto	l20
   999  000A82                     u150:
  1000  000A82  0E34               	movlw	52
  1001  000A84  6E01               	movwf	??_tc_tecla^0,c
  1002  000A86  0EF2               	movlw	242
  1003  000A88                     u857:
  1004  000A88  2EE8               	decfsz	wreg,f,c
  1005  000A8A  D7FE               	bra	u857
  1006  000A8C  2E01               	decfsz	??_tc_tecla^0,f,c
  1007  000A8E  D7FC               	bra	u857
  1008  000A90  B681               	btfsc	129,3,c	;volatile
  1009  000A92  EF4D  F005         	goto	u161
  1010  000A96  EF4F  F005         	goto	u160
  1011  000A9A                     u161:
  1012  000A9A  EF9C  F005         	goto	l1051
  1013  000A9E                     u160:
  1014  000A9E  0E34               	movlw	52
  1015  000AA0  6E02               	movwf	tc_tecla@key^0,c
  1016  000AA2  EF9C  F005         	goto	l1051
  1017  000AA6                     l20:
  1018                           
  1019                           ;teclado.c: 65: else if(!PORTBbits.RB2) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB2){key = '5'; }}
  1020  000AA6  B481               	btfsc	129,2,c	;volatile
  1021  000AA8  EF58  F005         	goto	u171
  1022  000AAC  EF5A  F005         	goto	u170
  1023  000AB0                     u171:
  1024  000AB0  EF6C  F005         	goto	l23
  1025  000AB4                     u170:
  1026  000AB4  0E34               	movlw	52
  1027  000AB6  6E01               	movwf	??_tc_tecla^0,c
  1028  000AB8  0EF2               	movlw	242
  1029  000ABA                     u867:
  1030  000ABA  2EE8               	decfsz	wreg,f,c
  1031  000ABC  D7FE               	bra	u867
  1032  000ABE  2E01               	decfsz	??_tc_tecla^0,f,c
  1033  000AC0  D7FC               	bra	u867
  1034  000AC2  B481               	btfsc	129,2,c	;volatile
  1035  000AC4  EF66  F005         	goto	u181
  1036  000AC8  EF68  F005         	goto	u180
  1037  000ACC                     u181:
  1038  000ACC  EF9C  F005         	goto	l1051
  1039  000AD0                     u180:
  1040  000AD0  0E35               	movlw	53
  1041  000AD2  6E02               	movwf	tc_tecla@key^0,c
  1042  000AD4  EF9C  F005         	goto	l1051
  1043  000AD8                     l23:
  1044                           
  1045                           ;teclado.c: 66: else if(!PORTBbits.RB1) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB1){key = '6'; }}
  1046  000AD8  B281               	btfsc	129,1,c	;volatile
  1047  000ADA  EF71  F005         	goto	u191
  1048  000ADE  EF73  F005         	goto	u190
  1049  000AE2                     u191:
  1050  000AE2  EF85  F005         	goto	l26
  1051  000AE6                     u190:
  1052  000AE6  0E34               	movlw	52
  1053  000AE8  6E01               	movwf	??_tc_tecla^0,c
  1054  000AEA  0EF2               	movlw	242
  1055  000AEC                     u877:
  1056  000AEC  2EE8               	decfsz	wreg,f,c
  1057  000AEE  D7FE               	bra	u877
  1058  000AF0  2E01               	decfsz	??_tc_tecla^0,f,c
  1059  000AF2  D7FC               	bra	u877
  1060  000AF4  B281               	btfsc	129,1,c	;volatile
  1061  000AF6  EF7F  F005         	goto	u201
  1062  000AFA  EF81  F005         	goto	u200
  1063  000AFE                     u201:
  1064  000AFE  EF9C  F005         	goto	l1051
  1065  000B02                     u200:
  1066  000B02  0E36               	movlw	54
  1067  000B04  6E02               	movwf	tc_tecla@key^0,c
  1068  000B06  EF9C  F005         	goto	l1051
  1069  000B0A                     l26:
  1070                           
  1071                           ;teclado.c: 67: else if(!PORTBbits.RB0) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB0){key = 'B'; }}
  1072  000B0A  B081               	btfsc	129,0,c	;volatile
  1073  000B0C  EF8A  F005         	goto	u211
  1074  000B10  EF8C  F005         	goto	u210
  1075  000B14                     u211:
  1076  000B14  EF9C  F005         	goto	l1051
  1077  000B18                     u210:
  1078  000B18  0E34               	movlw	52
  1079  000B1A  6E01               	movwf	??_tc_tecla^0,c
  1080  000B1C  0EF2               	movlw	242
  1081  000B1E                     u887:
  1082  000B1E  2EE8               	decfsz	wreg,f,c
  1083  000B20  D7FE               	bra	u887
  1084  000B22  2E01               	decfsz	??_tc_tecla^0,f,c
  1085  000B24  D7FC               	bra	u887
  1086  000B26  B081               	btfsc	129,0,c	;volatile
  1087  000B28  EF98  F005         	goto	u221
  1088  000B2C  EF9A  F005         	goto	u220
  1089  000B30                     u221:
  1090  000B30  EF9C  F005         	goto	l1051
  1091  000B34                     u220:
  1092  000B34  0E42               	movlw	66
  1093  000B36  6E02               	movwf	tc_tecla@key^0,c
  1094  000B38                     l1051:
  1095                           
  1096                           ;teclado.c: 69: LATBbits.LB5 = 1;
  1097  000B38  8A8A               	bsf	138,5,c	;volatile
  1098  000B3A                     
  1099                           ;teclado.c: 70: LATBbits.LB6 = 0;
  1100  000B3A  9C8A               	bcf	138,6,c	;volatile
  1101  000B3C                     
  1102                           ;teclado.c: 72: if(!PORTBbits.RB3) {_delay((unsigned long)((20)*(8000000/4000.0))); if (
      +                          !PORTBbits.RB3){key = '7'; }}
  1103  000B3C  B681               	btfsc	129,3,c	;volatile
  1104  000B3E  EFA3  F005         	goto	u231
  1105  000B42  EFA5  F005         	goto	u230
  1106  000B46                     u231:
  1107  000B46  EFB7  F005         	goto	l31
  1108  000B4A                     u230:
  1109  000B4A  0E34               	movlw	52
  1110  000B4C  6E01               	movwf	??_tc_tecla^0,c
  1111  000B4E  0EF2               	movlw	242
  1112  000B50                     u897:
  1113  000B50  2EE8               	decfsz	wreg,f,c
  1114  000B52  D7FE               	bra	u897
  1115  000B54  2E01               	decfsz	??_tc_tecla^0,f,c
  1116  000B56  D7FC               	bra	u897
  1117  000B58  B681               	btfsc	129,3,c	;volatile
  1118  000B5A  EFB1  F005         	goto	u241
  1119  000B5E  EFB3  F005         	goto	u240
  1120  000B62                     u241:
  1121  000B62  EF00  F006         	goto	l1081
  1122  000B66                     u240:
  1123  000B66  0E37               	movlw	55
  1124  000B68  6E02               	movwf	tc_tecla@key^0,c
  1125  000B6A  EF00  F006         	goto	l1081
  1126  000B6E                     l31:
  1127                           
  1128                           ;teclado.c: 73: else if(!PORTBbits.RB2) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB2){key = '8'; }}
  1129  000B6E  B481               	btfsc	129,2,c	;volatile
  1130  000B70  EFBC  F005         	goto	u251
  1131  000B74  EFBE  F005         	goto	u250
  1132  000B78                     u251:
  1133  000B78  EFD0  F005         	goto	l34
  1134  000B7C                     u250:
  1135  000B7C  0E34               	movlw	52
  1136  000B7E  6E01               	movwf	??_tc_tecla^0,c
  1137  000B80  0EF2               	movlw	242
  1138  000B82                     u907:
  1139  000B82  2EE8               	decfsz	wreg,f,c
  1140  000B84  D7FE               	bra	u907
  1141  000B86  2E01               	decfsz	??_tc_tecla^0,f,c
  1142  000B88  D7FC               	bra	u907
  1143  000B8A  B481               	btfsc	129,2,c	;volatile
  1144  000B8C  EFCA  F005         	goto	u261
  1145  000B90  EFCC  F005         	goto	u260
  1146  000B94                     u261:
  1147  000B94  EF00  F006         	goto	l1081
  1148  000B98                     u260:
  1149  000B98  0E38               	movlw	56
  1150  000B9A  6E02               	movwf	tc_tecla@key^0,c
  1151  000B9C  EF00  F006         	goto	l1081
  1152  000BA0                     l34:
  1153                           
  1154                           ;teclado.c: 74: else if(!PORTBbits.RB1) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB1){key = '9'; }}
  1155  000BA0  B281               	btfsc	129,1,c	;volatile
  1156  000BA2  EFD5  F005         	goto	u271
  1157  000BA6  EFD7  F005         	goto	u270
  1158  000BAA                     u271:
  1159  000BAA  EFE9  F005         	goto	l37
  1160  000BAE                     u270:
  1161  000BAE  0E34               	movlw	52
  1162  000BB0  6E01               	movwf	??_tc_tecla^0,c
  1163  000BB2  0EF2               	movlw	242
  1164  000BB4                     u917:
  1165  000BB4  2EE8               	decfsz	wreg,f,c
  1166  000BB6  D7FE               	bra	u917
  1167  000BB8  2E01               	decfsz	??_tc_tecla^0,f,c
  1168  000BBA  D7FC               	bra	u917
  1169  000BBC  B281               	btfsc	129,1,c	;volatile
  1170  000BBE  EFE3  F005         	goto	u281
  1171  000BC2  EFE5  F005         	goto	u280
  1172  000BC6                     u281:
  1173  000BC6  EF00  F006         	goto	l1081
  1174  000BCA                     u280:
  1175  000BCA  0E39               	movlw	57
  1176  000BCC  6E02               	movwf	tc_tecla@key^0,c
  1177  000BCE  EF00  F006         	goto	l1081
  1178  000BD2                     l37:
  1179                           
  1180                           ;teclado.c: 75: else if(!PORTBbits.RB0) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB0){key = 'C'; }}
  1181  000BD2  B081               	btfsc	129,0,c	;volatile
  1182  000BD4  EFEE  F005         	goto	u291
  1183  000BD8  EFF0  F005         	goto	u290
  1184  000BDC                     u291:
  1185  000BDC  EF00  F006         	goto	l1081
  1186  000BE0                     u290:
  1187  000BE0  0E34               	movlw	52
  1188  000BE2  6E01               	movwf	??_tc_tecla^0,c
  1189  000BE4  0EF2               	movlw	242
  1190  000BE6                     u927:
  1191  000BE6  2EE8               	decfsz	wreg,f,c
  1192  000BE8  D7FE               	bra	u927
  1193  000BEA  2E01               	decfsz	??_tc_tecla^0,f,c
  1194  000BEC  D7FC               	bra	u927
  1195  000BEE  B081               	btfsc	129,0,c	;volatile
  1196  000BF0  EFFC  F005         	goto	u301
  1197  000BF4  EFFE  F005         	goto	u300
  1198  000BF8                     u301:
  1199  000BF8  EF00  F006         	goto	l1081
  1200  000BFC                     u300:
  1201  000BFC  0E43               	movlw	67
  1202  000BFE  6E02               	movwf	tc_tecla@key^0,c
  1203  000C00                     l1081:
  1204                           
  1205                           ;teclado.c: 77: LATBbits.LB6 = 1;
  1206  000C00  8C8A               	bsf	138,6,c	;volatile
  1207  000C02                     
  1208                           ;teclado.c: 78: LATBbits.LB7 = 0;
  1209  000C02  9E8A               	bcf	138,7,c	;volatile
  1210  000C04                     
  1211                           ;teclado.c: 80: if(!PORTBbits.RB3) {_delay((unsigned long)((20)*(8000000/4000.0))); if (
      +                          !PORTBbits.RB3){key = 'x'; }}
  1212  000C04  B681               	btfsc	129,3,c	;volatile
  1213  000C06  EF07  F006         	goto	u311
  1214  000C0A  EF09  F006         	goto	u310
  1215  000C0E                     u311:
  1216  000C0E  EF1B  F006         	goto	l42
  1217  000C12                     u310:
  1218  000C12  0E34               	movlw	52
  1219  000C14  6E01               	movwf	??_tc_tecla^0,c
  1220  000C16  0EF2               	movlw	242
  1221  000C18                     u937:
  1222  000C18  2EE8               	decfsz	wreg,f,c
  1223  000C1A  D7FE               	bra	u937
  1224  000C1C  2E01               	decfsz	??_tc_tecla^0,f,c
  1225  000C1E  D7FC               	bra	u937
  1226  000C20  B681               	btfsc	129,3,c	;volatile
  1227  000C22  EF15  F006         	goto	u321
  1228  000C26  EF17  F006         	goto	u320
  1229  000C2A                     u321:
  1230  000C2A  EF64  F006         	goto	l1111
  1231  000C2E                     u320:
  1232  000C2E  0E78               	movlw	120
  1233  000C30  6E02               	movwf	tc_tecla@key^0,c
  1234  000C32  EF64  F006         	goto	l1111
  1235  000C36                     l42:
  1236                           
  1237                           ;teclado.c: 81: else if(!PORTBbits.RB2) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB2){key = '0'; }}
  1238  000C36  B481               	btfsc	129,2,c	;volatile
  1239  000C38  EF20  F006         	goto	u331
  1240  000C3C  EF22  F006         	goto	u330
  1241  000C40                     u331:
  1242  000C40  EF34  F006         	goto	l45
  1243  000C44                     u330:
  1244  000C44  0E34               	movlw	52
  1245  000C46  6E01               	movwf	??_tc_tecla^0,c
  1246  000C48  0EF2               	movlw	242
  1247  000C4A                     u947:
  1248  000C4A  2EE8               	decfsz	wreg,f,c
  1249  000C4C  D7FE               	bra	u947
  1250  000C4E  2E01               	decfsz	??_tc_tecla^0,f,c
  1251  000C50  D7FC               	bra	u947
  1252  000C52  B481               	btfsc	129,2,c	;volatile
  1253  000C54  EF2E  F006         	goto	u341
  1254  000C58  EF30  F006         	goto	u340
  1255  000C5C                     u341:
  1256  000C5C  EF64  F006         	goto	l1111
  1257  000C60                     u340:
  1258  000C60  0E30               	movlw	48
  1259  000C62  6E02               	movwf	tc_tecla@key^0,c
  1260  000C64  EF64  F006         	goto	l1111
  1261  000C68                     l45:
  1262                           
  1263                           ;teclado.c: 82: else if(!PORTBbits.RB1) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB1){key = 'F'; }}
  1264  000C68  B281               	btfsc	129,1,c	;volatile
  1265  000C6A  EF39  F006         	goto	u351
  1266  000C6E  EF3B  F006         	goto	u350
  1267  000C72                     u351:
  1268  000C72  EF4D  F006         	goto	l48
  1269  000C76                     u350:
  1270  000C76  0E34               	movlw	52
  1271  000C78  6E01               	movwf	??_tc_tecla^0,c
  1272  000C7A  0EF2               	movlw	242
  1273  000C7C                     u957:
  1274  000C7C  2EE8               	decfsz	wreg,f,c
  1275  000C7E  D7FE               	bra	u957
  1276  000C80  2E01               	decfsz	??_tc_tecla^0,f,c
  1277  000C82  D7FC               	bra	u957
  1278  000C84  B281               	btfsc	129,1,c	;volatile
  1279  000C86  EF47  F006         	goto	u361
  1280  000C8A  EF49  F006         	goto	u360
  1281  000C8E                     u361:
  1282  000C8E  EF64  F006         	goto	l1111
  1283  000C92                     u360:
  1284  000C92  0E46               	movlw	70
  1285  000C94  6E02               	movwf	tc_tecla@key^0,c
  1286  000C96  EF64  F006         	goto	l1111
  1287  000C9A                     l48:
  1288                           
  1289                           ;teclado.c: 83: else if(!PORTBbits.RB0) {_delay((unsigned long)((20)*(8000000/4000.0)));
      +                           if (!PORTBbits.RB0){key = 'D'; }}
  1290  000C9A  B081               	btfsc	129,0,c	;volatile
  1291  000C9C  EF52  F006         	goto	u371
  1292  000CA0  EF54  F006         	goto	u370
  1293  000CA4                     u371:
  1294  000CA4  EF64  F006         	goto	l1111
  1295  000CA8                     u370:
  1296  000CA8  0E34               	movlw	52
  1297  000CAA  6E01               	movwf	??_tc_tecla^0,c
  1298  000CAC  0EF2               	movlw	242
  1299  000CAE                     u967:
  1300  000CAE  2EE8               	decfsz	wreg,f,c
  1301  000CB0  D7FE               	bra	u967
  1302  000CB2  2E01               	decfsz	??_tc_tecla^0,f,c
  1303  000CB4  D7FC               	bra	u967
  1304  000CB6  B081               	btfsc	129,0,c	;volatile
  1305  000CB8  EF60  F006         	goto	u381
  1306  000CBC  EF62  F006         	goto	u380
  1307  000CC0                     u381:
  1308  000CC0  EF64  F006         	goto	l1111
  1309  000CC4                     u380:
  1310  000CC4  0E44               	movlw	68
  1311  000CC6  6E02               	movwf	tc_tecla@key^0,c
  1312  000CC8                     l1111:
  1313                           
  1314                           ;teclado.c: 85: LATBbits.LB7 = 1;
  1315  000CC8  8E8A               	bsf	138,7,c	;volatile
  1316  000CCA                     
  1317                           ;teclado.c: 87: _delay((unsigned long)((20)*(8000000/4000.0)));
  1318  000CCA  0E34               	movlw	52
  1319  000CCC  6E01               	movwf	??_tc_tecla^0,c
  1320  000CCE  0EF2               	movlw	242
  1321  000CD0                     u977:
  1322  000CD0  2EE8               	decfsz	wreg,f,c
  1323  000CD2  D7FE               	bra	u977
  1324  000CD4  2E01               	decfsz	??_tc_tecla^0,f,c
  1325  000CD6  D7FC               	bra	u977
  1326  000CD8                     
  1327                           ;teclado.c: 91: return key;
  1328  000CD8  5002               	movf	tc_tecla@key^0,w,c
  1329  000CDA  0012               	return		;funcret
  1330  000CDC                     __end_of_tc_tecla:
  1331                           	callstack 0
  1332                           
  1333 ;; *************** function _Lcd_Out *****************
  1334 ;; Defined at:
  1335 ;;		line 53 in file "flexlcd.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  y               1    wreg     unsigned char 
  1338 ;;  x               1    3[COMRAM] unsigned char 
  1339 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  1340 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  1341 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  1342 ;;		 -> STR_11(2), STR_10(2), STR_9(2), STR_8(2), 
  1343 ;;		 -> STR_7(2), STR_6(2), STR_5(2), STR_4(2), 
  1344 ;;		 -> STR_3(2), STR_2(17), STR_1(16), 
  1345 ;; Auto vars:     Size  Location     Type
  1346 ;;  y               1    6[COMRAM] unsigned char 
  1347 ;;  data            1    7[COMRAM] unsigned char 
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      void 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1357 ;;      Params:         3       0       0       0       0       0       0
  1358 ;;      Locals:         2       0       0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0       0       0
  1360 ;;      Totals:         5       0       0       0       0       0       0
  1361 ;;Total ram usage:        5 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 1
  1364 ;; This function calls:
  1365 ;;		_Lcd_Chr_CP
  1366 ;;		_Lcd_Cmd
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text2
  1373  001050                     __ptext2:
  1374                           	callstack 0
  1375  001050                     _Lcd_Out:
  1376                           	callstack 29
  1377                           
  1378                           ;incstack = 0
  1379                           ;Lcd_Out@y stored from wreg
  1380  001050  6E07               	movwf	Lcd_Out@y^0,c
  1381  001052                     
  1382                           ;flexlcd.c: 56: unsigned char data;;flexlcd.c: 57: switch (y)
  1383  001052  EF3F  F008         	goto	l1343
  1384  001056                     l1333:
  1385  001056  5004               	movf	Lcd_Out@x^0,w,c
  1386  001058  0F80               	addlw	128
  1387  00105A  6E08               	movwf	Lcd_Out@data^0,c
  1388  00105C  EF52  F008         	goto	l1345
  1389  001060                     l1335:
  1390  001060  5004               	movf	Lcd_Out@x^0,w,c
  1391  001062  0FC0               	addlw	192
  1392  001064  6E08               	movwf	Lcd_Out@data^0,c
  1393  001066  EF52  F008         	goto	l1345
  1394  00106A                     l1337:
  1395  00106A  5004               	movf	Lcd_Out@x^0,w,c
  1396  00106C  0F94               	addlw	148
  1397  00106E  6E08               	movwf	Lcd_Out@data^0,c
  1398  001070  EF52  F008         	goto	l1345
  1399  001074                     l1339:
  1400  001074  5004               	movf	Lcd_Out@x^0,w,c
  1401  001076  0FD4               	addlw	212
  1402  001078  6E08               	movwf	Lcd_Out@data^0,c
  1403  00107A  EF52  F008         	goto	l1345
  1404  00107E                     l1343:
  1405  00107E  5007               	movf	Lcd_Out@y^0,w,c
  1406                           
  1407                           ; Switch size 1, requested type "simple"
  1408                           ; Number of cases is 4, Range of values is 1 to 4
  1409                           ; switch strategies available:
  1410                           ; Name         Instructions Cycles
  1411                           ; simple_byte           13     7 (average)
  1412                           ;	Chosen strategy is simple_byte
  1413  001080  0A01               	xorlw	1	; case 1
  1414  001082  B4D8               	btfsc	status,2,c
  1415  001084  EF2B  F008         	goto	l1333
  1416  001088  0A03               	xorlw	3	; case 2
  1417  00108A  B4D8               	btfsc	status,2,c
  1418  00108C  EF30  F008         	goto	l1335
  1419  001090  0A01               	xorlw	1	; case 3
  1420  001092  B4D8               	btfsc	status,2,c
  1421  001094  EF35  F008         	goto	l1337
  1422  001098  0A07               	xorlw	7	; case 4
  1423  00109A  B4D8               	btfsc	status,2,c
  1424  00109C  EF3A  F008         	goto	l1339
  1425  0010A0  EF52  F008         	goto	l1345
  1426  0010A4                     l1345:
  1427                           
  1428                           ;flexlcd.c: 65: Lcd_Cmd(data);
  1429  0010A4  5008               	movf	Lcd_Out@data^0,w,c
  1430  0010A6  EC08  F007         	call	_Lcd_Cmd
  1431                           
  1432                           ;flexlcd.c: 66: while(*buffer)
  1433  0010AA  EF61  F008         	goto	l1351
  1434  0010AE                     l1347:
  1435                           
  1436                           ;flexlcd.c: 67: {;flexlcd.c: 68: Lcd_Chr_CP(*buffer);
  1437  0010AE  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  1438  0010B2  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  1439  0010B6                     	if	0	;tblptru may be non-zero
  1440  0010B6                     	endif
  1441  0010B6                     	if	0	;tblptru may be non-zero
  1442  0010B6                     	endif
  1443  0010B6  0008               	tblrd		*
  1444  0010B8  50F5               	movf	tablat,w,c
  1445  0010BA  EC6E  F006         	call	_Lcd_Chr_CP
  1446  0010BE                     
  1447                           ;flexlcd.c: 69: buffer++;
  1448  0010BE  4A05               	infsnz	Lcd_Out@buffer^0,f,c
  1449  0010C0  2A06               	incf	(Lcd_Out@buffer+1)^0,f,c
  1450  0010C2                     l1351:
  1451  0010C2  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
  1452  0010C6  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
  1453  0010CA                     	if	0	;tblptru may be non-zero
  1454  0010CA                     	endif
  1455  0010CA                     	if	0	;tblptru may be non-zero
  1456  0010CA                     	endif
  1457  0010CA  0008               	tblrd		*
  1458  0010CC  50F5               	movf	tablat,w,c
  1459  0010CE  0900               	iorlw	0
  1460  0010D0  A4D8               	btfss	status,2,c
  1461  0010D2  EF6D  F008         	goto	u611
  1462  0010D6  EF6F  F008         	goto	u610
  1463  0010DA                     u611:
  1464  0010DA  EF57  F008         	goto	l1347
  1465  0010DE                     u610:
  1466  0010DE  0012               	return		;funcret
  1467  0010E0                     __end_of_Lcd_Out:
  1468                           	callstack 0
  1469                           
  1470 ;; *************** function _Lcd_Chr_CP *****************
  1471 ;; Defined at:
  1472 ;;		line 97 in file "flexlcd.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  data            1    wreg     unsigned char 
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;  data            1    2[COMRAM] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1486 ;;      Params:         0       0       0       0       0       0       0
  1487 ;;      Locals:         1       0       0       0       0       0       0
  1488 ;;      Temps:          2       0       0       0       0       0       0
  1489 ;;      Totals:         3       0       0       0       0       0       0
  1490 ;;Total ram usage:        3 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		_Lcd_Out
  1496 ;;		_Lcd_Out2
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text3
  1501  000CDC                     __ptext3:
  1502                           	callstack 0
  1503  000CDC                     _Lcd_Chr_CP:
  1504                           	callstack 29
  1505                           
  1506                           ;incstack = 0
  1507                           ;Lcd_Chr_CP@data stored from wreg
  1508  000CDC  6E03               	movwf	Lcd_Chr_CP@data^0,c
  1509  000CDE                     
  1510                           ;flexlcd.c: 99: PORTEbits.RE1 = 0; PORTEbits.RE0 = 1;
  1511  000CDE  9284               	bcf	132,1,c	;volatile
  1512  000CE0  8084               	bsf	132,0,c	;volatile
  1513  000CE2                     
  1514                           ;flexlcd.c: 100: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1515  000CE2  6A01               	clrf	??_Lcd_Chr_CP^0,c
  1516  000CE4  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
  1517  000CE6  D001               	bra	u45
  1518  000CE8  2A01               	incf	??_Lcd_Chr_CP^0,f,c
  1519  000CEA                     u45:
  1520  000CEA  0E01               	movlw	1
  1521  000CEC  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1522  000CEE  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1523  000CF0  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1524  000CF2  5083               	movf	131,w,c	;volatile
  1525  000CF4  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1526  000CF6  0B7F               	andlw	-129
  1527  000CF8  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1528  000CFA  6E83               	movwf	131,c	;volatile
  1529  000CFC  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1530  000D00  0E06               	movlw	6
  1531  000D02  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  1532  000D04                     u55:
  1533  000D04  90D8               	bcf	status,0,c
  1534  000D06  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1535  000D08  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  1536  000D0A  EF82  F006         	goto	u55
  1537  000D0E  0E01               	movlw	1
  1538  000D10  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1539  000D12  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1540  000D14  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1541  000D16  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1542  000D18  5083               	movf	131,w,c	;volatile
  1543  000D1A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1544  000D1C  0BBF               	andlw	-65
  1545  000D1E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1546  000D20  6E83               	movwf	131,c	;volatile
  1547                           
  1548                           ;flexlcd.c: 101: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1549  000D22  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1550  000D26  0E05               	movlw	5
  1551  000D28  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  1552  000D2A                     u65:
  1553  000D2A  90D8               	bcf	status,0,c
  1554  000D2C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1555  000D2E  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  1556  000D30  EF95  F006         	goto	u65
  1557  000D34  0E01               	movlw	1
  1558  000D36  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1559  000D38  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1560  000D3A  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1561  000D3C  5083               	movf	131,w,c	;volatile
  1562  000D3E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1563  000D40  0BDF               	andlw	-33
  1564  000D42  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1565  000D44  6E83               	movwf	131,c	;volatile
  1566  000D46  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1567  000D4A  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1568  000D4C  0E0F               	movlw	15
  1569  000D4E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1570  000D50  0E01               	movlw	1
  1571  000D52  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1572  000D54  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1573  000D56  5083               	movf	131,w,c	;volatile
  1574  000D58  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1575  000D5A  0BEF               	andlw	-17
  1576  000D5C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1577  000D5E  6E83               	movwf	131,c	;volatile
  1578  000D60                     
  1579                           ;flexlcd.c: 102: _delay(10);
  1580  000D60  0E03               	movlw	3
  1581  000D62                     u987:
  1582  000D62  2EE8               	decfsz	wreg,f,c
  1583  000D64  D7FE               	bra	u987
  1584  000D66  F000               	nop	
  1585  000D68                     
  1586                           ;flexlcd.c: 103: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1587  000D68  8284               	bsf	132,1,c	;volatile
  1588  000D6A  0E03               	movlw	3
  1589  000D6C                     u997:
  1590  000D6C  2EE8               	decfsz	wreg,f,c
  1591  000D6E  D7FE               	bra	u997
  1592  000D70  F000               	nop	
  1593  000D72  9284               	bcf	132,1,c	;volatile
  1594                           
  1595                           ;flexlcd.c: 104: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1596  000D74  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1597  000D78  90D8               	bcf	status,0,c
  1598  000D7A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1599  000D7C  90D8               	bcf	status,0,c
  1600  000D7E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1601  000D80  90D8               	bcf	status,0,c
  1602  000D82  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1603  000D84  0E01               	movlw	1
  1604  000D86  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1605  000D88  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1606  000D8A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1607  000D8C  5083               	movf	131,w,c	;volatile
  1608  000D8E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1609  000D90  0B7F               	andlw	-129
  1610  000D92  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1611  000D94  6E83               	movwf	131,c	;volatile
  1612  000D96  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1613  000D9A  90D8               	bcf	status,0,c
  1614  000D9C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1615  000D9E  90D8               	bcf	status,0,c
  1616  000DA0  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1617  000DA2  0E01               	movlw	1
  1618  000DA4  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1619  000DA6  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1620  000DA8  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1621  000DAA  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1622  000DAC  5083               	movf	131,w,c	;volatile
  1623  000DAE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1624  000DB0  0BBF               	andlw	-65
  1625  000DB2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1626  000DB4  6E83               	movwf	131,c	;volatile
  1627                           
  1628                           ;flexlcd.c: 105: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1629  000DB6  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1630  000DBA  90D8               	bcf	status,0,c
  1631  000DBC  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1632  000DBE  0E01               	movlw	1
  1633  000DC0  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1634  000DC2  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1635  000DC4  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1636  000DC6  5083               	movf	131,w,c	;volatile
  1637  000DC8  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1638  000DCA  0BDF               	andlw	-33
  1639  000DCC  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1640  000DCE  6E83               	movwf	131,c	;volatile
  1641  000DD0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1642  000DD4  0E01               	movlw	1
  1643  000DD6  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1644  000DD8  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1645  000DDA  5083               	movf	131,w,c	;volatile
  1646  000DDC  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1647  000DDE  0BEF               	andlw	-17
  1648  000DE0  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1649  000DE2  6E83               	movwf	131,c	;volatile
  1650  000DE4                     
  1651                           ;flexlcd.c: 106: _delay(10);
  1652  000DE4  0E03               	movlw	3
  1653  000DE6                     u1007:
  1654  000DE6  2EE8               	decfsz	wreg,f,c
  1655  000DE8  D7FE               	bra	u1007
  1656  000DEA  F000               	nop	
  1657  000DEC                     
  1658                           ;flexlcd.c: 107: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1659  000DEC  8284               	bsf	132,1,c	;volatile
  1660  000DEE  0E03               	movlw	3
  1661  000DF0                     u1017:
  1662  000DF0  2EE8               	decfsz	wreg,f,c
  1663  000DF2  D7FE               	bra	u1017
  1664  000DF4  F000               	nop	
  1665  000DF6  9284               	bcf	132,1,c	;volatile
  1666  000DF8                     
  1667                           ;flexlcd.c: 108: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  1668  000DF8  0E03               	movlw	3
  1669  000DFA                     u1027:
  1670  000DFA  2EE8               	decfsz	wreg,f,c
  1671  000DFC  D7FE               	bra	u1027
  1672  000DFE  F000               	nop	
  1673  000E00  0E0F               	movlw	15
  1674  000E02  6E01               	movwf	??_Lcd_Chr_CP^0,c
  1675  000E04  0E48               	movlw	72
  1676  000E06                     u1037:
  1677  000E06  2EE8               	decfsz	wreg,f,c
  1678  000E08  D7FE               	bra	u1037
  1679  000E0A  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  1680  000E0C  D7FC               	bra	u1037
  1681  000E0E  0012               	return		;funcret
  1682  000E10                     __end_of_Lcd_Chr_CP:
  1683                           	callstack 0
  1684                           
  1685 ;; *************** function _Lcd_Init *****************
  1686 ;; Defined at:
  1687 ;;		line 9 in file "flexlcd.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;  data            1    4[COMRAM] unsigned char 
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		wreg, status,2, status,0, cstack
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1701 ;;      Params:         0       0       0       0       0       0       0
  1702 ;;      Locals:         1       0       0       0       0       0       0
  1703 ;;      Temps:          1       0       0       0       0       0       0
  1704 ;;      Totals:         2       0       0       0       0       0       0
  1705 ;;Total ram usage:        2 bytes
  1706 ;; Hardware stack levels used: 1
  1707 ;; Hardware stack levels required when called: 1
  1708 ;; This function calls:
  1709 ;;		_Lcd_Cmd
  1710 ;; This function is called by:
  1711 ;;		_main
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           	psect	text4
  1716  000F3C                     __ptext4:
  1717                           	callstack 0
  1718  000F3C                     _Lcd_Init:
  1719                           	callstack 29
  1720  000F3C                     
  1721                           ;flexlcd.c: 10: unsigned char data;;flexlcd.c: 11: TRISDbits.TRISD7 = 0;
  1722  000F3C  9E95               	bcf	149,7,c	;volatile
  1723                           
  1724                           ;flexlcd.c: 12: TRISDbits.TRISD6 = 0;
  1725  000F3E  9C95               	bcf	149,6,c	;volatile
  1726                           
  1727                           ;flexlcd.c: 13: TRISDbits.TRISD5 = 0;
  1728  000F40  9A95               	bcf	149,5,c	;volatile
  1729                           
  1730                           ;flexlcd.c: 14: TRISDbits.TRISD4 = 0;
  1731  000F42  9895               	bcf	149,4,c	;volatile
  1732                           
  1733                           ;flexlcd.c: 15: TRISEbits.TRISE1 = 0;
  1734  000F44  9296               	bcf	150,1,c	;volatile
  1735                           
  1736                           ;flexlcd.c: 16: TRISEbits.TRISE0 = 0;
  1737  000F46  9096               	bcf	150,0,c	;volatile
  1738                           
  1739                           ;flexlcd.c: 17: TRISEbits.TRISE2 = 0;
  1740  000F48  9496               	bcf	150,2,c	;volatile
  1741                           
  1742                           ;flexlcd.c: 18: PORTEbits.RE2 = 0;
  1743  000F4A  9484               	bcf	132,2,c	;volatile
  1744                           
  1745                           ;flexlcd.c: 19: PORTDbits.RD7 = 0;
  1746  000F4C  9E83               	bcf	131,7,c	;volatile
  1747                           
  1748                           ;flexlcd.c: 20: PORTDbits.RD6 = 0;
  1749  000F4E  9C83               	bcf	131,6,c	;volatile
  1750                           
  1751                           ;flexlcd.c: 21: PORTDbits.RD5 = 0;
  1752  000F50  9A83               	bcf	131,5,c	;volatile
  1753                           
  1754                           ;flexlcd.c: 22: PORTDbits.RD4 = 0;
  1755  000F52  9883               	bcf	131,4,c	;volatile
  1756                           
  1757                           ;flexlcd.c: 23: PORTEbits.RE1 = 0;
  1758  000F54  9284               	bcf	132,1,c	;volatile
  1759                           
  1760                           ;flexlcd.c: 24: PORTEbits.RE0 = 0;
  1761  000F56  9084               	bcf	132,0,c	;volatile
  1762  000F58                     
  1763                           ;flexlcd.c: 25: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1764  000F58  0E0F               	movlw	15
  1765  000F5A  6E04               	movwf	??_Lcd_Init^0,c
  1766  000F5C  0E48               	movlw	72
  1767  000F5E                     u1047:
  1768  000F5E  2EE8               	decfsz	wreg,f,c
  1769  000F60  D7FE               	bra	u1047
  1770  000F62  2E04               	decfsz	??_Lcd_Init^0,f,c
  1771  000F64  D7FC               	bra	u1047
  1772                           
  1773                           ;flexlcd.c: 26: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1774  000F66  0E0F               	movlw	15
  1775  000F68  6E04               	movwf	??_Lcd_Init^0,c
  1776  000F6A  0E48               	movlw	72
  1777  000F6C                     u1057:
  1778  000F6C  2EE8               	decfsz	wreg,f,c
  1779  000F6E  D7FE               	bra	u1057
  1780  000F70  2E04               	decfsz	??_Lcd_Init^0,f,c
  1781  000F72  D7FC               	bra	u1057
  1782                           
  1783                           ;flexlcd.c: 27: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1784  000F74  0E0F               	movlw	15
  1785  000F76  6E04               	movwf	??_Lcd_Init^0,c
  1786  000F78  0E48               	movlw	72
  1787  000F7A                     u1067:
  1788  000F7A  2EE8               	decfsz	wreg,f,c
  1789  000F7C  D7FE               	bra	u1067
  1790  000F7E  2E04               	decfsz	??_Lcd_Init^0,f,c
  1791  000F80  D7FC               	bra	u1067
  1792                           
  1793                           ;flexlcd.c: 28: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1794  000F82  0E0F               	movlw	15
  1795  000F84  6E04               	movwf	??_Lcd_Init^0,c
  1796  000F86  0E48               	movlw	72
  1797  000F88                     u1077:
  1798  000F88  2EE8               	decfsz	wreg,f,c
  1799  000F8A  D7FE               	bra	u1077
  1800  000F8C  2E04               	decfsz	??_Lcd_Init^0,f,c
  1801  000F8E  D7FC               	bra	u1077
  1802                           
  1803                           ;flexlcd.c: 29: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1804  000F90  0E0F               	movlw	15
  1805  000F92  6E04               	movwf	??_Lcd_Init^0,c
  1806  000F94  0E48               	movlw	72
  1807  000F96                     u1087:
  1808  000F96  2EE8               	decfsz	wreg,f,c
  1809  000F98  D7FE               	bra	u1087
  1810  000F9A  2E04               	decfsz	??_Lcd_Init^0,f,c
  1811  000F9C  D7FC               	bra	u1087
  1812                           
  1813                           ;flexlcd.c: 30: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1814  000F9E  0E0F               	movlw	15
  1815  000FA0  6E04               	movwf	??_Lcd_Init^0,c
  1816  000FA2  0E48               	movlw	72
  1817  000FA4                     u1097:
  1818  000FA4  2EE8               	decfsz	wreg,f,c
  1819  000FA6  D7FE               	bra	u1097
  1820  000FA8  2E04               	decfsz	??_Lcd_Init^0,f,c
  1821  000FAA  D7FC               	bra	u1097
  1822  000FAC                     
  1823                           ;flexlcd.c: 31: for(data = 1; data < 4; data ++)
  1824  000FAC  0E01               	movlw	1
  1825  000FAE  6E05               	movwf	Lcd_Init@data^0,c
  1826  000FB0                     l167:
  1827                           
  1828                           ;flexlcd.c: 32: {;flexlcd.c: 33: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  1829  000FB0  9E83               	bcf	131,7,c	;volatile
  1830  000FB2  9C83               	bcf	131,6,c	;volatile
  1831  000FB4  8A83               	bsf	131,5,c	;volatile
  1832  000FB6  8883               	bsf	131,4,c	;volatile
  1833  000FB8  9284               	bcf	132,1,c	;volatile
  1834                           
  1835                           ;flexlcd.c: 34: PORTEbits.RE0 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
  1836  000FBA  9084               	bcf	132,0,c	;volatile
  1837  000FBC  9E83               	bcf	131,7,c	;volatile
  1838  000FBE  9C83               	bcf	131,6,c	;volatile
  1839  000FC0  8A83               	bsf	131,5,c	;volatile
  1840  000FC2  8883               	bsf	131,4,c	;volatile
  1841                           
  1842                           ;flexlcd.c: 35: PORTEbits.RE1 = 1; PORTEbits.RE0 = 0;
  1843  000FC4  8284               	bsf	132,1,c	;volatile
  1844  000FC6  9084               	bcf	132,0,c	;volatile
  1845  000FC8                     
  1846                           ;flexlcd.c: 36: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1847  000FC8  0E03               	movlw	3
  1848  000FCA                     u1107:
  1849  000FCA  2EE8               	decfsz	wreg,f,c
  1850  000FCC  D7FE               	bra	u1107
  1851  000FCE  F000               	nop	
  1852  000FD0                     
  1853                           ;flexlcd.c: 37: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           1; PORTEbits.RE1 = 0;
  1854  000FD0  9E83               	bcf	131,7,c	;volatile
  1855  000FD2  9C83               	bcf	131,6,c	;volatile
  1856  000FD4  8A83               	bsf	131,5,c	;volatile
  1857  000FD6  8883               	bsf	131,4,c	;volatile
  1858  000FD8  9284               	bcf	132,1,c	;volatile
  1859  000FDA                     
  1860                           ;flexlcd.c: 38: PORTEbits.RE0 = 0;
  1861  000FDA  9084               	bcf	132,0,c	;volatile
  1862                           
  1863                           ;flexlcd.c: 39: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1864  000FDC  0E0F               	movlw	15
  1865  000FDE  6E04               	movwf	??_Lcd_Init^0,c
  1866  000FE0  0E48               	movlw	72
  1867  000FE2                     u1117:
  1868  000FE2  2EE8               	decfsz	wreg,f,c
  1869  000FE4  D7FE               	bra	u1117
  1870  000FE6  2E04               	decfsz	??_Lcd_Init^0,f,c
  1871  000FE8  D7FC               	bra	u1117
  1872  000FEA  2A05               	incf	Lcd_Init@data^0,f,c
  1873  000FEC  0E03               	movlw	3
  1874  000FEE  6405               	cpfsgt	Lcd_Init@data^0,c
  1875  000FF0  EFFC  F007         	goto	u391
  1876  000FF4  EFFE  F007         	goto	u390
  1877  000FF8                     u391:
  1878  000FF8  EFD8  F007         	goto	l167
  1879  000FFC                     u390:
  1880  000FFC                     
  1881                           ;flexlcd.c: 40: };flexlcd.c: 41: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
  1882  000FFC  9E83               	bcf	131,7,c	;volatile
  1883  000FFE  9C83               	bcf	131,6,c	;volatile
  1884  001000  8A83               	bsf	131,5,c	;volatile
  1885  001002  9883               	bcf	131,4,c	;volatile
  1886  001004  9284               	bcf	132,1,c	;volatile
  1887  001006  9084               	bcf	132,0,c	;volatile
  1888                           
  1889                           ;flexlcd.c: 42: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 1; PORTEbits.RE0 = 0;
  1890  001008  9E83               	bcf	131,7,c	;volatile
  1891  00100A  9C83               	bcf	131,6,c	;volatile
  1892  00100C  8A83               	bsf	131,5,c	;volatile
  1893  00100E  9883               	bcf	131,4,c	;volatile
  1894  001010  8284               	bsf	132,1,c	;volatile
  1895  001012  9084               	bcf	132,0,c	;volatile
  1896  001014                     
  1897                           ;flexlcd.c: 43: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1898  001014  0E03               	movlw	3
  1899  001016                     u1127:
  1900  001016  2EE8               	decfsz	wreg,f,c
  1901  001018  D7FE               	bra	u1127
  1902  00101A  F000               	nop	
  1903  00101C                     
  1904                           ;flexlcd.c: 44: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
  1905  00101C  9E83               	bcf	131,7,c	;volatile
  1906  00101E  9C83               	bcf	131,6,c	;volatile
  1907  001020  8A83               	bsf	131,5,c	;volatile
  1908  001022  9883               	bcf	131,4,c	;volatile
  1909  001024  9284               	bcf	132,1,c	;volatile
  1910  001026  9084               	bcf	132,0,c	;volatile
  1911                           
  1912                           ;flexlcd.c: 45: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1913  001028  0E0F               	movlw	15
  1914  00102A  6E04               	movwf	??_Lcd_Init^0,c
  1915  00102C  0E48               	movlw	72
  1916  00102E                     u1137:
  1917  00102E  2EE8               	decfsz	wreg,f,c
  1918  001030  D7FE               	bra	u1137
  1919  001032  2E04               	decfsz	??_Lcd_Init^0,f,c
  1920  001034  D7FC               	bra	u1137
  1921  001036  0E28               	movlw	40
  1922  001038  EC08  F007         	call	_Lcd_Cmd
  1923  00103C  0E10               	movlw	16
  1924  00103E  EC08  F007         	call	_Lcd_Cmd
  1925  001042  0E01               	movlw	1
  1926  001044  EC08  F007         	call	_Lcd_Cmd
  1927  001048  0E0F               	movlw	15
  1928  00104A  EC08  F007         	call	_Lcd_Cmd
  1929  00104E  0012               	return		;funcret
  1930  001050                     __end_of_Lcd_Init:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _Lcd_Cmd *****************
  1934 ;; Defined at:
  1935 ;;		line 112 in file "flexlcd.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  data            1    wreg     unsigned char 
  1938 ;; Auto vars:     Size  Location     Type
  1939 ;;  data            1    2[COMRAM] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  1    wreg      void 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1949 ;;      Params:         0       0       0       0       0       0       0
  1950 ;;      Locals:         1       0       0       0       0       0       0
  1951 ;;      Temps:          2       0       0       0       0       0       0
  1952 ;;      Totals:         3       0       0       0       0       0       0
  1953 ;;Total ram usage:        3 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_main
  1959 ;;		_Lcd_Init
  1960 ;;		_Lcd_Out
  1961 ;;		_Lcd_Out2
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text5
  1966  000E10                     __ptext5:
  1967                           	callstack 0
  1968  000E10                     _Lcd_Cmd:
  1969                           	callstack 29
  1970                           
  1971                           ;incstack = 0
  1972                           ;Lcd_Cmd@data stored from wreg
  1973  000E10  6E03               	movwf	Lcd_Cmd@data^0,c
  1974  000E12                     
  1975                           ;flexlcd.c: 114: PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
  1976  000E12  9284               	bcf	132,1,c	;volatile
  1977  000E14  9084               	bcf	132,0,c	;volatile
  1978  000E16                     
  1979                           ;flexlcd.c: 115: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1980  000E16  6A01               	clrf	??_Lcd_Cmd^0,c
  1981  000E18  AE03               	btfss	Lcd_Cmd@data^0,7,c
  1982  000E1A  D001               	bra	u15
  1983  000E1C  2A01               	incf	??_Lcd_Cmd^0,f,c
  1984  000E1E                     u15:
  1985  000E1E  0E01               	movlw	1
  1986  000E20  1601               	andwf	??_Lcd_Cmd^0,f,c
  1987  000E22  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1988  000E24  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1989  000E26  5083               	movf	131,w,c	;volatile
  1990  000E28  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1991  000E2A  0B7F               	andlw	-129
  1992  000E2C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1993  000E2E  6E83               	movwf	131,c	;volatile
  1994  000E30  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1995  000E34  0E06               	movlw	6
  1996  000E36  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1997  000E38                     u25:
  1998  000E38  90D8               	bcf	status,0,c
  1999  000E3A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2000  000E3C  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  2001  000E3E  EF1C  F007         	goto	u25
  2002  000E42  0E01               	movlw	1
  2003  000E44  1601               	andwf	??_Lcd_Cmd^0,f,c
  2004  000E46  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2005  000E48  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2006  000E4A  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2007  000E4C  5083               	movf	131,w,c	;volatile
  2008  000E4E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2009  000E50  0BBF               	andlw	-65
  2010  000E52  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2011  000E54  6E83               	movwf	131,c	;volatile
  2012                           
  2013                           ;flexlcd.c: 116: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  2014  000E56  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2015  000E5A  0E05               	movlw	5
  2016  000E5C  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  2017  000E5E                     u35:
  2018  000E5E  90D8               	bcf	status,0,c
  2019  000E60  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2020  000E62  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  2021  000E64  EF2F  F007         	goto	u35
  2022  000E68  0E01               	movlw	1
  2023  000E6A  1601               	andwf	??_Lcd_Cmd^0,f,c
  2024  000E6C  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2025  000E6E  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2026  000E70  5083               	movf	131,w,c	;volatile
  2027  000E72  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2028  000E74  0BDF               	andlw	-33
  2029  000E76  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2030  000E78  6E83               	movwf	131,c	;volatile
  2031  000E7A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2032  000E7E  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2033  000E80  0E0F               	movlw	15
  2034  000E82  1601               	andwf	??_Lcd_Cmd^0,f,c
  2035  000E84  0E01               	movlw	1
  2036  000E86  1601               	andwf	??_Lcd_Cmd^0,f,c
  2037  000E88  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2038  000E8A  5083               	movf	131,w,c	;volatile
  2039  000E8C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2040  000E8E  0BEF               	andlw	-17
  2041  000E90  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2042  000E92  6E83               	movwf	131,c	;volatile
  2043  000E94                     
  2044                           ;flexlcd.c: 117: _delay(10);
  2045  000E94  0E03               	movlw	3
  2046  000E96                     u1147:
  2047  000E96  2EE8               	decfsz	wreg,f,c
  2048  000E98  D7FE               	bra	u1147
  2049  000E9A  F000               	nop	
  2050  000E9C                     
  2051                           ;flexlcd.c: 118: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  2052  000E9C  8284               	bsf	132,1,c	;volatile
  2053  000E9E  0E03               	movlw	3
  2054  000EA0                     u1157:
  2055  000EA0  2EE8               	decfsz	wreg,f,c
  2056  000EA2  D7FE               	bra	u1157
  2057  000EA4  F000               	nop	
  2058  000EA6  9284               	bcf	132,1,c	;volatile
  2059                           
  2060                           ;flexlcd.c: 119: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  2061  000EA8  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2062  000EAC  90D8               	bcf	status,0,c
  2063  000EAE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2064  000EB0  90D8               	bcf	status,0,c
  2065  000EB2  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2066  000EB4  90D8               	bcf	status,0,c
  2067  000EB6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2068  000EB8  0E01               	movlw	1
  2069  000EBA  1601               	andwf	??_Lcd_Cmd^0,f,c
  2070  000EBC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2071  000EBE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2072  000EC0  5083               	movf	131,w,c	;volatile
  2073  000EC2  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2074  000EC4  0B7F               	andlw	-129
  2075  000EC6  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2076  000EC8  6E83               	movwf	131,c	;volatile
  2077  000ECA  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2078  000ECE  90D8               	bcf	status,0,c
  2079  000ED0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2080  000ED2  90D8               	bcf	status,0,c
  2081  000ED4  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2082  000ED6  0E01               	movlw	1
  2083  000ED8  1601               	andwf	??_Lcd_Cmd^0,f,c
  2084  000EDA  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2085  000EDC  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2086  000EDE  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2087  000EE0  5083               	movf	131,w,c	;volatile
  2088  000EE2  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2089  000EE4  0BBF               	andlw	-65
  2090  000EE6  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2091  000EE8  6E83               	movwf	131,c	;volatile
  2092                           
  2093                           ;flexlcd.c: 120: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  2094  000EEA  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2095  000EEE  90D8               	bcf	status,0,c
  2096  000EF0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2097  000EF2  0E01               	movlw	1
  2098  000EF4  1601               	andwf	??_Lcd_Cmd^0,f,c
  2099  000EF6  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2100  000EF8  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2101  000EFA  5083               	movf	131,w,c	;volatile
  2102  000EFC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2103  000EFE  0BDF               	andlw	-33
  2104  000F00  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2105  000F02  6E83               	movwf	131,c	;volatile
  2106  000F04  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2107  000F08  0E01               	movlw	1
  2108  000F0A  1601               	andwf	??_Lcd_Cmd^0,f,c
  2109  000F0C  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2110  000F0E  5083               	movf	131,w,c	;volatile
  2111  000F10  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2112  000F12  0BEF               	andlw	-17
  2113  000F14  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2114  000F16  6E83               	movwf	131,c	;volatile
  2115  000F18                     
  2116                           ;flexlcd.c: 121: _delay(10);
  2117  000F18  0E03               	movlw	3
  2118  000F1A                     u1167:
  2119  000F1A  2EE8               	decfsz	wreg,f,c
  2120  000F1C  D7FE               	bra	u1167
  2121  000F1E  F000               	nop	
  2122  000F20                     
  2123                           ;flexlcd.c: 122: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  2124  000F20  8284               	bsf	132,1,c	;volatile
  2125  000F22  0E03               	movlw	3
  2126  000F24                     u1177:
  2127  000F24  2EE8               	decfsz	wreg,f,c
  2128  000F26  D7FE               	bra	u1177
  2129  000F28  F000               	nop	
  2130  000F2A  9284               	bcf	132,1,c	;volatile
  2131  000F2C                     
  2132                           ;flexlcd.c: 123: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2133  000F2C  0E0F               	movlw	15
  2134  000F2E  6E01               	movwf	??_Lcd_Cmd^0,c
  2135  000F30  0E48               	movlw	72
  2136  000F32                     u1187:
  2137  000F32  2EE8               	decfsz	wreg,f,c
  2138  000F34  D7FE               	bra	u1187
  2139  000F36  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  2140  000F38  D7FC               	bra	u1187
  2141  000F3A  0012               	return		;funcret
  2142  000F3C                     __end_of_Lcd_Cmd:
  2143                           	callstack 0
  2144                           
  2145                           	psect	rparam
  2146  0000                     
  2147                           	psect	idloc
  2148                           
  2149                           ;Config register IDLOC0 @ 0x200000
  2150                           ;	unspecified, using default values
  2151  200000                     	org	2097152
  2152  200000  FF                 	db	255
  2153                           
  2154                           ;Config register IDLOC1 @ 0x200001
  2155                           ;	unspecified, using default values
  2156  200001                     	org	2097153
  2157  200001  FF                 	db	255
  2158                           
  2159                           ;Config register IDLOC2 @ 0x200002
  2160                           ;	unspecified, using default values
  2161  200002                     	org	2097154
  2162  200002  FF                 	db	255
  2163                           
  2164                           ;Config register IDLOC3 @ 0x200003
  2165                           ;	unspecified, using default values
  2166  200003                     	org	2097155
  2167  200003  FF                 	db	255
  2168                           
  2169                           ;Config register IDLOC4 @ 0x200004
  2170                           ;	unspecified, using default values
  2171  200004                     	org	2097156
  2172  200004  FF                 	db	255
  2173                           
  2174                           ;Config register IDLOC5 @ 0x200005
  2175                           ;	unspecified, using default values
  2176  200005                     	org	2097157
  2177  200005  FF                 	db	255
  2178                           
  2179                           ;Config register IDLOC6 @ 0x200006
  2180                           ;	unspecified, using default values
  2181  200006                     	org	2097158
  2182  200006  FF                 	db	255
  2183                           
  2184                           ;Config register IDLOC7 @ 0x200007
  2185                           ;	unspecified, using default values
  2186  200007                     	org	2097159
  2187  200007  FF                 	db	255
  2188                           
  2189                           	psect	config
  2190                           
  2191                           ; Padding undefined space
  2192  300000                     	org	3145728
  2193  300000  FF                 	db	255
  2194                           
  2195                           ;Config register CONFIG1H @ 0x300001
  2196                           ;	Oscillator Selection bits
  2197                           ;	OSC = HS, HS oscillator
  2198                           ;	Fail-Safe Clock Monitor Enable bit
  2199                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2200                           ;	Internal/External Oscillator Switchover bit
  2201                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2202  300001                     	org	3145729
  2203  300001  02                 	db	2
  2204                           
  2205                           ;Config register CONFIG2L @ 0x300002
  2206                           ;	Power-up Timer Enable bit
  2207                           ;	PWRT = OFF, PWRT disabled
  2208                           ;	Brown-out Reset Enable bits
  2209                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2210                           ;	Brown Out Reset Voltage bits
  2211                           ;	BORV = 3, Minimum setting
  2212  300002                     	org	3145730
  2213  300002  1F                 	db	31
  2214                           
  2215                           ;Config register CONFIG2H @ 0x300003
  2216                           ;	Watchdog Timer Enable bit
  2217                           ;	WDT = ON, WDT enabled
  2218                           ;	Watchdog Timer Postscale Select bits
  2219                           ;	WDTPS = 32768, 1:32768
  2220  300003                     	org	3145731
  2221  300003  1F                 	db	31
  2222                           
  2223                           ; Padding undefined space
  2224  300004                     	org	3145732
  2225  300004  FF                 	db	255
  2226                           
  2227                           ;Config register CONFIG3H @ 0x300005
  2228                           ;	CCP2 MUX bit
  2229                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  2230                           ;	PORTB A/D Enable bit
  2231                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2232                           ;	Low-Power Timer1 Oscillator Enable bit
  2233                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2234                           ;	MCLR Pin Enable bit
  2235                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  2236  300005                     	org	3145733
  2237  300005  01                 	db	1
  2238                           
  2239                           ;Config register CONFIG4L @ 0x300006
  2240                           ;	Stack Full/Underflow Reset Enable bit
  2241                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2242                           ;	Single-Supply ICSP Enable bit
  2243                           ;	LVP = ON, Single-Supply ICSP enabled
  2244                           ;	Extended Instruction Set Enable bit
  2245                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2246                           ;	Background Debugger Enable bit
  2247                           ;	DEBUG = 0x1, unprogrammed default
  2248  300006                     	org	3145734
  2249  300006  85                 	db	133
  2250                           
  2251                           ; Padding undefined space
  2252  300007                     	org	3145735
  2253  300007  FF                 	db	255
  2254                           
  2255                           ;Config register CONFIG5L @ 0x300008
  2256                           ;	Code Protection bit
  2257                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  2258                           ;	Code Protection bit
  2259                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  2260                           ;	Code Protection bit
  2261                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  2262                           ;	Code Protection bit
  2263                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  2264  300008                     	org	3145736
  2265  300008  0F                 	db	15
  2266                           
  2267                           ;Config register CONFIG5H @ 0x300009
  2268                           ;	Boot Block Code Protection bit
  2269                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  2270                           ;	Data EEPROM Code Protection bit
  2271                           ;	CPD = OFF, Data EEPROM not code-protected
  2272  300009                     	org	3145737
  2273  300009  C0                 	db	192
  2274                           
  2275                           ;Config register CONFIG6L @ 0x30000A
  2276                           ;	Write Protection bit
  2277                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  2278                           ;	Write Protection bit
  2279                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  2280                           ;	Write Protection bit
  2281                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  2282                           ;	Write Protection bit
  2283                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  2284  30000A                     	org	3145738
  2285  30000A  0F                 	db	15
  2286                           
  2287                           ;Config register CONFIG6H @ 0x30000B
  2288                           ;	Configuration Register Write Protection bit
  2289                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  2290                           ;	Boot Block Write Protection bit
  2291                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  2292                           ;	Data EEPROM Write Protection bit
  2293                           ;	WRTD = OFF, Data EEPROM not write-protected
  2294  30000B                     	org	3145739
  2295  30000B  E0                 	db	224
  2296                           
  2297                           ;Config register CONFIG7L @ 0x30000C
  2298                           ;	Table Read Protection bit
  2299                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  2300                           ;	Table Read Protection bit
  2301                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  2302                           ;	Table Read Protection bit
  2303                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  2304                           ;	Table Read Protection bit
  2305                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  2306  30000C                     	org	3145740
  2307  30000C  0F                 	db	15
  2308                           
  2309                           ;Config register CONFIG7H @ 0x30000D
  2310                           ;	Boot Block Table Read Protection bit
  2311                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  2312  30000D                     	org	3145741
  2313  30000D  40                 	db	64
  2314                           tosu	equ	0xFFF
  2315                           tosh	equ	0xFFE
  2316                           tosl	equ	0xFFD
  2317                           stkptr	equ	0xFFC
  2318                           pclatu	equ	0xFFB
  2319                           pclath	equ	0xFFA
  2320                           pcl	equ	0xFF9
  2321                           tblptru	equ	0xFF8
  2322                           tblptrh	equ	0xFF7
  2323                           tblptrl	equ	0xFF6
  2324                           tablat	equ	0xFF5
  2325                           prodh	equ	0xFF4
  2326                           prodl	equ	0xFF3
  2327                           indf0	equ	0xFEF
  2328                           postinc0	equ	0xFEE
  2329                           postdec0	equ	0xFED
  2330                           preinc0	equ	0xFEC
  2331                           plusw0	equ	0xFEB
  2332                           fsr0h	equ	0xFEA
  2333                           fsr0l	equ	0xFE9
  2334                           wreg	equ	0xFE8
  2335                           indf1	equ	0xFE7
  2336                           postinc1	equ	0xFE6
  2337                           postdec1	equ	0xFE5
  2338                           preinc1	equ	0xFE4
  2339                           plusw1	equ	0xFE3
  2340                           fsr1h	equ	0xFE2
  2341                           fsr1l	equ	0xFE1
  2342                           bsr	equ	0xFE0
  2343                           indf2	equ	0xFDF
  2344                           postinc2	equ	0xFDE
  2345                           postdec2	equ	0xFDD
  2346                           preinc2	equ	0xFDC
  2347                           plusw2	equ	0xFDB
  2348                           fsr2h	equ	0xFDA
  2349                           fsr2l	equ	0xFD9
  2350                           status	equ	0xFD8

Data Sizes:
    Strings     67
    Constant    0
    Data        1
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     10      11
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 
		 -> STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), STR_8(CODE[2]), 
		 -> STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[17]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3654
                                              8 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _tc_tecla                                             2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3    3309
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _tc_tecla

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      23        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      A       B       1        8.7%
BITBIGSFRhhl        2D      0       0      17        0.0%
BITBIGSFRhlh        2A      0       0      18        0.0%
BITBIGSFRhhh         D      0       0      16        0.0%
BITBIGSFRlh          5      0       0      20        0.0%
BITBIGSFRhll         5      0       0      19        0.0%
BITBIGSFRll          1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      22        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jun 22 18:34:05 2023

                      l9 09DE                       l20 0AA6                       l12 0A10  
                     l31 0B6E                       l23 0AD8                       l15 0A42  
                     l42 0C36                       l34 0BA0                       l26 0B0A  
                     l53 0CDA                       l45 0C68                       l37 0BD2  
                     l48 0C9A                       u15 0E1E                       u25 0E38  
                     u35 0E5E                       u45 0CEA                       u70 09BA  
                     u55 0D04                       u71 09B6                       u80 09D6  
                     u65 0D2A                       u81 09D2                       u90 09EC  
                     u91 09E8                      l201 0F3A                      l106 06D2  
                    l134 099A                      l182 10DE                      l167 0FB0  
                    l168 0FFC                      l169 104E                      l198 0E0E  
                    l951 0E16                      l961 0F18                      l953 0E94  
                    l963 0F20                      l955 0E9C                      l971 0CDE  
                    l965 0F22                      l957 0E9E                      l949 0E12  
                    l981 0D72                      l973 0CE2                      l967 0F2A  
                    l959 0EA6                      l991 0DF8                      l983 0DE4  
                    l975 0D60                      l969 0F2C                      l993 0E00  
                    l985 0DEC                      l977 0D68                      l987 0DEE  
                    l979 0D6A                      l995 09A2                      l989 0DF6  
                    l997 09BA                      l999 09C8                      u100 0A08  
                    u101 0A04                      u110 0A1E                      u111 0A1A  
                    u200 0B02                      u120 0A3A                      u201 0AFE  
                    u121 0A36                      u210 0B18                      u130 0A50  
                    u211 0B14                      u131 0A4C                      u300 0BFC  
                    u220 0B34                      u140 0A6C                      u301 0BF8  
                    u221 0B30                      u141 0A68                      u310 0C12  
                    u230 0B4A                      u150 0A82                      u311 0C0E  
                    u231 0B46                      u151 0A7E                      u320 0C2E  
                    u240 0B66                      u160 0A9E                      u321 0C2A  
                    u241 0B62                      u161 0A9A                      u330 0C44  
                    u250 0B7C                      u170 0AB4                      u331 0C40  
                    u251 0B78                      u171 0AB0                      u340 0C60  
                    u260 0B98                      u180 0AD0                      u341 0C5C  
                    u261 0B94                      u181 0ACC                      u350 0C76  
                    u270 0BAE                      u190 0AE6                      u351 0C72  
                    u271 0BAA                      u191 0AE2                      u360 0C92  
                    u280 0BCA                      u361 0C8E                      u281 0BC6  
                    u610 10DE                      u370 0CA8                      u290 0BE0  
                    u611 10DA                      u371 0CA4                      u291 0BDC  
                    u380 0CC4                      u700 0844                      u620 06EC  
                    u381 0CC0                      u701 0840                      u621 06E8  
                    u390 0FFC                      u710 086C                      u630 072C  
                    u391 0FF8                      u711 0868                      u631 0728  
                    u720 0894                      u640 0754                      u721 0890  
                    u641 0750                      u730 08BC                      u650 077C  
                    u731 08B8                      u651 0778                      u740 08E4  
                    u660 07A4                      u741 08E0                      u661 07A0  
                    u750 090C                      u670 07CC                      u751 0908  
                    u671 07C8                      u807 0708                      u760 0934  
                    u680 07F4                      u817 09C0                      u761 0930  
                    u681 07F0                      u770 095C                      u690 081C  
                    u907 0B82                      u827 09F2                      u771 0958  
                    u691 0818                      u780 0984                      u917 0BB4  
                    u837 0A24                      u781 0980                      u927 0BE6  
                    u847 0A56                      u937 0C18                      u857 0A88  
                    u947 0C4A                      u867 0ABA                      u957 0C7C  
                    u877 0AEC                      u797 06C4                      u967 0CAE  
                    u887 0B1E                      u977 0CD0                      u897 0B50  
                    u987 0D62                      u997 0D6C                      wreg 000FE8  
                   l1001 09D6                     l1011 0A2C                     l1003 09EC  
                   l1101 0C84                     l1013 0A3A                     l1005 09FA  
                   l1021 0A70                     l1103 0C92                     l1111 0CC8  
                   l1031 0A9E                     l1023 0A72                     l1015 0A50  
                   l1007 0A08                     l1121 0F58                     l1113 0CCA  
                   l1105 0CA8                     l1041 0AF4                     l1033 0AB4  
                   l1025 0A74                     l1017 0A5E                     l1009 0A1E  
                   l1131 0FD0                     l1123 0FAC                     l1115 0CD8  
                   l1107 0CB6                     l1043 0B02                     l1035 0AC2  
                   l1051 0B38                     l1027 0A82                     l1019 0A6C  
                   l1141 0FDA                     l1133 0FD2                     l1109 0CC4  
                   l1061 0B66                     l1053 0B3A                     l1045 0B18  
                   l1037 0AD0                     l1029 0A90                     l1151 1020  
                   l1143 0FEA                     l1135 0FD4                     l1119 0F3C  
                   l1071 0BBC                     l1063 0B7C                     l1055 0B3C  
                   l1047 0B26                     l1039 0AE6                     l1161 1036  
                   l1153 1022                     l1145 1014                     l1137 0FD6  
                   l1129 0FC8                     l1073 0BCA                     l1065 0B8A  
                   l1081 0C00                     l1057 0B4A                     l1049 0B34  
                   l1401 07CC                     l1171 1048                     l1163 103C  
                   l1155 1024                     l1147 101C                     l1139 0FD8  
                   l1331 1052                     l1091 0C2E                     l1083 0C02  
                   l1075 0BE0                     l1067 0B98                     l1059 0B58  
                   l1411 081C                     l1173 1048                     l1165 103C  
                   l1157 1026                     l1149 101E                     l1333 1056  
                   l1093 0C44                     l1085 0C04                     l1077 0BEE  
                   l1069 0BAE                     l1421 0882                     l1413 0832  
                   l1405 07E2                     l1167 1042                     l1159 1036  
                   l1351 10C2                     l1335 1060                     l1343 107E  
                   l1095 0C52                     l1087 0C12                     l1079 0BFC  
                   l1431 08E4                     l1423 0894                     l1415 0844  
                   l1407 07F4                     l1169 1042                     l1337 106A  
                   l1345 10A4                     l1097 0C60                     l1089 0C20  
                   l1441 094A                     l1433 08FA                     l1425 08AA  
                   l1417 085A                     l1409 080A                     l1361 0696  
                   l1353 0646                     l1347 10AE                     l1339 1074  
                   l1099 0C76                     l1443 095C                     l1435 090C  
                   l1427 08BC                     l1419 086C                     l1371 06EC  
                   l1363 06A8                     l1355 0656                     l1349 10BE  
                   l1445 0972                     l1437 0922                     l1429 08D2  
                   l1381 0742                     l1373 06FE                     l1365 06BA  
                   l1357 068C                     l1447 0984                     l1439 0934  
                   l1383 0754                     l1375 071A                     l1367 06D4  
                   l1359 0690                     l1393 0792                     l1377 072C  
                   l1369 06DA                     l1395 07A4                     l1387 076A  
                   l1389 077C                     l1399 07BA                     STR_1 0612  
                   STR_2 0601                     STR_3 0626                     STR_4 0628  
                   STR_5 062A                     STR_6 062C                     STR_7 062E  
                   STR_8 0630                     STR_9 0632                     u1007 0DE6  
                   u1017 0DF0                     u1107 0FCA                     u1027 0DFA  
                   u1117 0FE2                     u1037 0E06                     u1127 1016  
                   u1047 0F5E                     u1137 102E                     u1057 0F6C  
                   u1147 0E96                     u1067 0F7A                     u1157 0EA0  
                   u1077 0F88                     _LATB 000F8A                     u1167 0F1A  
                   u1087 0F96                     _LATC 000F8B                     _LATD 000F8C  
                   u1177 0F24                     u1097 0FA4                     _LATE 000F8D  
                   u1187 0F32                     _main 0646                     start 0000  
        __end_of_Lcd_Cmd 0F3C          __end_of_Lcd_Out 10E0             ___param_bank 000000  
             _Lcd_Chr_CP 0CDC                    ?_main 0001                    STR_10 0634  
                  STR_11 0636                    STR_12 0624                    STR_13 0642  
                  STR_14 0622                    STR_15 0638                    STR_16 063A  
                  STR_17 063C                    STR_18 063E                    STR_19 0640  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _tecla 000B  
                  tablat 000FF5                    status 000FD8         __end_of_Lcd_Init 1050  
        __initialization 10E0             __end_of_main 09A2                   ??_main 0009  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _INTCON 000FF2                ??_Lcd_Cmd 0001                ??_Lcd_Out 0007  
            ?_Lcd_Chr_CP 0001                   isa$std 000001         __end_of_tc_tecla 0CDC  
           __pdataCOMRAM 000B             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 10F2            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_Lcd_Init 0001              tc_tecla@key 0002                  _INTCON2 000FF1  
                _INTCON3 000FF0               ??_Lcd_Init 0004                  _Lcd_Cmd 0E10  
                _Lcd_Out 1050                ?_tc_tecla 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 10E0  
                __ramtop 0600                  __ptext0 0646                  __ptext1 09A2  
                __ptext2 1050                  __ptext3 0CDC                  __ptext4 0F3C  
                __ptext5 0E10     end_of_initialization 10F2            __Lmediumconst 0000  
             ??_tc_tecla 0001             ??_Lcd_Chr_CP 0001                _PORTBbits 000F81  
              _PORTDbits 000F83                _PORTEbits 000F84                _TRISDbits 000F95  
              _TRISEbits 000F96       __end_of_Lcd_Chr_CP 0E10            __pidataCOMRAM 10FC  
    start_initialization 10E0            Lcd_Out@buffer 0005                 ?_Lcd_Cmd 0001  
               ?_Lcd_Out 0004              __smallconst 0600                 _LATBbits 000F8A  
               Lcd_Out@x 0004                 Lcd_Out@y 0007             Lcd_Init@data 0005  
               _Lcd_Init 0F3C              _INTCON2bits 000FF1                 __Hrparam 0000  
               __Lrparam 0000           Lcd_Chr_CP@data 0003              Lcd_Cmd@data 0003  
               _tc_tecla 09A2                 isa$xinst 000000              Lcd_Out@data 0008  
