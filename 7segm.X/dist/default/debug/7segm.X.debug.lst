

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Nov 16 15:21:42 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _TMR0	set	4054
    53  0000                     _T0CON	set	4053
    54  0000                     _INTCONbits	set	4082
    55  0000                     _INTCON2bits	set	4081
    56  0000                     _ADCON1	set	4033
    57  0000                     _LATD	set	3980
    58  0000                     _PORTD	set	3971
    59  0000                     _LATB	set	3978
    60  0000                     _PORTB	set	3969
    61  0000                     _TRISD	set	3989
    62  0000                     _TRISB	set	3987
    63                           
    64                           ; #config settings
    65                           
    66                           	psect	cinit
    67  0001B6                     __pcinit:
    68                           	callstack 0
    69  0001B6                     start_initialization:
    70                           	callstack 0
    71  0001B6                     __initialization:
    72                           	callstack 0
    73                           
    74                           ; Clear objects allocated to COMRAM (3 bytes)
    75  0001B6  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    76  0001B8  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    77  0001BA  6A01               	clrf	__pbssCOMRAM& (0+255),c
    78  0001BC                     end_of_initialization:
    79                           	callstack 0
    80  0001BC                     __end_of__initialization:
    81                           	callstack 0
    82  0001BC  9005               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    83  0001BE  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    84  0001C0  0E00               	movlw	low (__Lmediumconst shr (0+16))
    85  0001C2  6EF8               	movwf	tblptru,c
    86  0001C4  0100               	movlb	0
    87  0001C6  EFBB  F000         	goto	_main	;jump to C main() function
    88                           
    89                           	psect	bssCOMRAM
    90  000001                     __pbssCOMRAM:
    91                           	callstack 0
    92  000001                     _count:
    93                           	callstack 0
    94  000001                     	ds	2
    95  000003                     _tmp:
    96                           	callstack 0
    97  000003                     	ds	1
    98                           
    99                           	psect	cstackCOMRAM
   100  000004                     __pcstackCOMRAM:
   101                           	callstack 0
   102  000004                     display7s@v:
   103                           	callstack 0
   104                           
   105                           ; 1 bytes @ 0x0
   106  000004                     	ds	1
   107  000005                     
   108                           ; 1 bytes @ 0x1
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 17 in file "main.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;		None
   119 ;; Return value:  Size  Location     Type
   120 ;;                  1    wreg      void 
   121 ;; Registers used:
   122 ;;		wreg, status,2
   123 ;; Tracked objects:
   124 ;;		On entry : 0/0
   125 ;;		On exit  : 0/0
   126 ;;		Unchanged: 0/0
   127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   128 ;;      Params:         0       0       0       0       0       0       0       0       0
   129 ;;      Locals:         0       0       0       0       0       0       0       0       0
   130 ;;      Temps:          0       0       0       0       0       0       0       0       0
   131 ;;      Totals:         0       0       0       0       0       0       0       0       0
   132 ;;Total ram usage:        0 bytes
   133 ;; Hardware stack levels required when called:    2
   134 ;; This function calls:
   135 ;;		Nothing
   136 ;; This function is called by:
   137 ;;		Startup code after reset
   138 ;; This function uses a non-reentrant model
   139 ;;
   140                           
   141                           	psect	text0
   142  000176                     __ptext0:
   143                           	callstack 0
   144  000176                     _main:
   145                           	callstack 29
   146  000176                     
   147                           ;main.c: 22: TRISB = 0b00000001;
   148  000176  0E01               	movlw	1
   149  000178  6E93               	movwf	147,c	;volatile
   150                           
   151                           ;main.c: 23: TRISD = 0b00000000;
   152  00017A  0E00               	movlw	0
   153  00017C  6E95               	movwf	149,c	;volatile
   154                           
   155                           ;main.c: 24: PORTB = 0;
   156  00017E  0E00               	movlw	0
   157  000180  6E81               	movwf	129,c	;volatile
   158                           
   159                           ;main.c: 25: LATB = 0;
   160  000182  0E00               	movlw	0
   161  000184  6E8A               	movwf	138,c	;volatile
   162                           
   163                           ;main.c: 26: PORTD = 0;
   164  000186  0E00               	movlw	0
   165  000188  6E83               	movwf	131,c	;volatile
   166                           
   167                           ;main.c: 27: LATD = 0;
   168  00018A  0E00               	movlw	0
   169  00018C  6E8C               	movwf	140,c	;volatile
   170                           
   171                           ;main.c: 29: ADCON1 = 0b00001111;
   172  00018E  0E0F               	movlw	15
   173  000190  6EC1               	movwf	193,c	;volatile
   174  000192                     
   175                           ;main.c: 31: INTCON2bits.RBPU = 0;
   176  000192  9EF1               	bcf	241,7,c	;volatile
   177  000194                     
   178                           ;main.c: 36: INTCON2bits.INTEDG0 = 0;
   179  000194  9CF1               	bcf	241,6,c	;volatile
   180  000196                     
   181                           ;main.c: 38: INTCONbits.INT0IF = 0;
   182  000196  92F2               	bcf	242,1,c	;volatile
   183  000198                     
   184                           ;main.c: 40: INTCONbits.INT0IE = 1;
   185  000198  88F2               	bsf	242,4,c	;volatile
   186  00019A                     
   187                           ;main.c: 42: INTCONbits.TMR0IF = 0;
   188  00019A  94F2               	bcf	242,2,c	;volatile
   189  00019C                     
   190                           ;main.c: 44: INTCONbits.TMR0IE = 1;
   191  00019C  8AF2               	bsf	242,5,c	;volatile
   192                           
   193                           ;main.c: 47: T0CON = 0b11000101;
   194  00019E  0EC5               	movlw	197
   195  0001A0  6ED5               	movwf	213,c	;volatile
   196                           
   197                           ;main.c: 48: TMR0 = 131;
   198  0001A2  0E00               	movlw	0
   199  0001A4  6ED7               	movwf	215,c	;volatile
   200  0001A6  0E83               	movlw	131
   201  0001A8  6ED6               	movwf	214,c	;volatile
   202  0001AA                     
   203                           ;main.c: 49: (INTCONbits.GIE = 1);
   204  0001AA  8EF2               	bsf	242,7,c	;volatile
   205  0001AC                     l33:
   206  0001AC  0004               	clrwdt		;# 
   207  0001AE  EFD6  F000         	goto	l33
   208  0001B2  EF07  F000         	goto	start
   209  0001B6                     __end_of_main:
   210                           	callstack 0
   211                           
   212 ;; *************** function _isr *****************
   213 ;; Defined at:
   214 ;;		line 63 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;		None
   217 ;; Auto vars:     Size  Location     Type
   218 ;;		None
   219 ;; Return value:  Size  Location     Type
   220 ;;                  1    wreg      void 
   221 ;; Registers used:
   222 ;;		wreg, status,2, status,0, cstack
   223 ;; Tracked objects:
   224 ;;		On entry : 0/0
   225 ;;		On exit  : 0/0
   226 ;;		Unchanged: 0/0
   227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   228 ;;      Params:         0       0       0       0       0       0       0       0       0
   229 ;;      Locals:         0       0       0       0       0       0       0       0       0
   230 ;;      Temps:          0       0       0       0       0       0       0       0       0
   231 ;;      Totals:         0       0       0       0       0       0       0       0       0
   232 ;;Total ram usage:        0 bytes
   233 ;; Hardware stack levels used:    1
   234 ;; Hardware stack levels required when called:    1
   235 ;; This function calls:
   236 ;;		_display7s
   237 ;; This function is called by:
   238 ;;		Interrupt level 2
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           	psect	intcode
   243  000008                     __pintcode:
   244                           	callstack 0
   245  000008                     _isr:
   246                           	callstack 29
   247                           
   248                           ;incstack = 0
   249  000008  8205               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   250  00000A  ED83  F000         	call	int_func,f	;refresh shadow registers
   251                           
   252                           	psect	intcode_body
   253  000106                     __pintcode_body:
   254                           	callstack 29
   255  000106                     int_func:
   256                           	callstack 29
   257  000106  0006               	pop		; remove dummy address from shadow register refresh
   258  000108                     
   259                           ;main.c: 64: if (INTCONbits.INT0F == 1)
   260  000108  A2F2               	btfss	242,1,c	;volatile
   261  00010A  EF89  F000         	goto	i2u1_41
   262  00010E  EF8B  F000         	goto	i2u1_40
   263  000112                     i2u1_41:
   264  000112  EF8E  F000         	goto	i2l911
   265  000116                     i2u1_40:
   266  000116                     
   267                           ;main.c: 65: {;main.c: 66: INTCONbits.INT0F = 0;
   268  000116  92F2               	bcf	242,1,c	;volatile
   269  000118                     
   270                           ;main.c: 67: tmp = 0;
   271  000118  0E00               	movlw	0
   272  00011A  6E03               	movwf	_tmp^0,c
   273  00011C                     i2l911:
   274                           
   275                           ;main.c: 68: };main.c: 69: if (INTCONbits.TMR0IF == 1)
   276  00011C  A4F2               	btfss	242,2,c	;volatile
   277  00011E  EF93  F000         	goto	i2u2_41
   278  000122  EF95  F000         	goto	i2u2_40
   279  000126                     i2u2_41:
   280  000126  EFB9  F000         	goto	i2l45
   281  00012A                     i2u2_40:
   282  00012A                     
   283                           ;main.c: 70: {;main.c: 71: INTCONbits.TMR0IF = 0;
   284  00012A  94F2               	bcf	242,2,c	;volatile
   285  00012C                     
   286                           ;main.c: 72: TMR0 = 131;
   287  00012C  0E00               	movlw	0
   288  00012E  6ED7               	movwf	215,c	;volatile
   289  000130  0E83               	movlw	131
   290  000132  6ED6               	movwf	214,c	;volatile
   291  000134                     
   292                           ;main.c: 73: count ++;
   293  000134  4A01               	infsnz	_count^0,f,c
   294  000136  2A02               	incf	(_count+1)^0,f,c
   295  000138                     
   296                           ;main.c: 74: if (count == 250)
   297  000138  0EFA               	movlw	250
   298  00013A  1801               	xorwf	_count^0,w,c
   299  00013C  1002               	iorwf	(_count+1)^0,w,c
   300  00013E  A4D8               	btfss	status,2,c
   301  000140  EFA4  F000         	goto	i2u3_41
   302  000144  EFA6  F000         	goto	i2u3_40
   303  000148                     i2u3_41:
   304  000148  EFB9  F000         	goto	i2l45
   305  00014C                     i2u3_40:
   306  00014C                     
   307                           ;main.c: 75: {;main.c: 76: count = 0;
   308  00014C  0E00               	movlw	0
   309  00014E  6E02               	movwf	(_count+1)^0,c
   310  000150  0E00               	movlw	0
   311  000152  6E01               	movwf	_count^0,c
   312  000154                     
   313                           ;main.c: 77: PORTD=display7s(tmp);
   314  000154  5003               	movf	_tmp^0,w,c
   315  000156  EC09  F000         	call	_display7s
   316  00015A  6E83               	movwf	131,c	;volatile
   317  00015C                     
   318                           ;main.c: 78: tmp++;
   319  00015C  2A03               	incf	_tmp^0,f,c
   320  00015E                     
   321                           ;main.c: 79: if (tmp>15)
   322  00015E  0E0F               	movlw	15
   323  000160  6403               	cpfsgt	_tmp^0,c
   324  000162  EFB5  F000         	goto	i2u4_41
   325  000166  EFB7  F000         	goto	i2u4_40
   326  00016A                     i2u4_41:
   327  00016A  EFB9  F000         	goto	i2l45
   328  00016E                     i2u4_40:
   329  00016E                     
   330                           ;main.c: 80: {;main.c: 81: tmp = 0;
   331  00016E  0E00               	movlw	0
   332  000170  6E03               	movwf	_tmp^0,c
   333  000172                     i2l45:
   334  000172  9205               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   335  000174  0011               	retfie		f
   336  000176                     __end_of_isr:
   337                           	callstack 0
   338                           
   339 ;; *************** function _display7s *****************
   340 ;; Defined at:
   341 ;;		line 35 in file "display7s.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;  v               1    wreg     unsigned char 
   344 ;; Auto vars:     Size  Location     Type
   345 ;;  v               1    0[COMRAM] unsigned char 
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      unsigned char 
   348 ;; Registers used:
   349 ;;		wreg, status,2, status,0
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   355 ;;      Params:         0       0       0       0       0       0       0       0       0
   356 ;;      Locals:         1       0       0       0       0       0       0       0       0
   357 ;;      Temps:          0       0       0       0       0       0       0       0       0
   358 ;;      Totals:         1       0       0       0       0       0       0       0       0
   359 ;;Total ram usage:        1 bytes
   360 ;; Hardware stack levels used:    1
   361 ;; This function calls:
   362 ;;		Nothing
   363 ;; This function is called by:
   364 ;;		_isr
   365 ;; This function uses a non-reentrant model
   366 ;;
   367                           
   368                           	psect	text2
   369  000012                     __ptext2:
   370                           	callstack 0
   371  000012                     _display7s:
   372                           	callstack 29
   373                           
   374                           ;incstack = 0
   375                           ;display7s@v stored from wreg
   376  000012  6E04               	movwf	display7s@v^0,c
   377  000014                     
   378                           ;display7s.c: 37: switch(v)
   379  000014  EF3F  F000         	goto	i2l887
   380  000018                     i2l817:
   381                           
   382                           ;display7s.c: 40: return 0x3F;
   383  000018  0E3F               	movlw	63
   384  00001A  EF82  F000         	goto	i2l50
   385  00001E                     i2l821:
   386                           
   387                           ;display7s.c: 42: return 0x06;
   388  00001E  0E06               	movlw	6
   389  000020  EF82  F000         	goto	i2l50
   390  000024                     i2l825:
   391                           
   392                           ;display7s.c: 44: return 0x5B;
   393  000024  0E5B               	movlw	91
   394  000026  EF82  F000         	goto	i2l50
   395  00002A                     i2l829:
   396                           
   397                           ;display7s.c: 46: return 0x4F;
   398  00002A  0E4F               	movlw	79
   399  00002C  EF82  F000         	goto	i2l50
   400  000030                     i2l833:
   401                           
   402                           ;display7s.c: 48: return 0x66;
   403  000030  0E66               	movlw	102
   404  000032  EF82  F000         	goto	i2l50
   405  000036                     i2l837:
   406                           
   407                           ;display7s.c: 50: return 0x6D;
   408  000036  0E6D               	movlw	109
   409  000038  EF82  F000         	goto	i2l50
   410  00003C                     i2l841:
   411                           
   412                           ;display7s.c: 52: return 0x7D;
   413  00003C  0E7D               	movlw	125
   414  00003E  EF82  F000         	goto	i2l50
   415  000042                     i2l845:
   416                           
   417                           ;display7s.c: 54: return 0x07;
   418  000042  0E07               	movlw	7
   419  000044  EF82  F000         	goto	i2l50
   420  000048                     i2l849:
   421                           
   422                           ;display7s.c: 56: return 0x7F;
   423  000048  0E7F               	movlw	127
   424  00004A  EF82  F000         	goto	i2l50
   425  00004E                     i2l853:
   426                           
   427                           ;display7s.c: 58: return 0x6F;
   428  00004E  0E6F               	movlw	111
   429  000050  EF82  F000         	goto	i2l50
   430  000054                     i2l857:
   431                           
   432                           ;display7s.c: 60: return 0x77;
   433  000054  0E77               	movlw	119
   434  000056  EF82  F000         	goto	i2l50
   435  00005A                     i2l861:
   436                           
   437                           ;display7s.c: 62: return 0x7c;
   438  00005A  0E7C               	movlw	124
   439  00005C  EF82  F000         	goto	i2l50
   440  000060                     i2l865:
   441                           
   442                           ;display7s.c: 64: return 0x58;
   443  000060  0E58               	movlw	88
   444  000062  EF82  F000         	goto	i2l50
   445  000066                     i2l869:
   446                           
   447                           ;display7s.c: 66: return 0x5E;
   448  000066  0E5E               	movlw	94
   449  000068  EF82  F000         	goto	i2l50
   450  00006C                     i2l873:
   451                           
   452                           ;display7s.c: 68: return 0x79;
   453  00006C  0E79               	movlw	121
   454  00006E  EF82  F000         	goto	i2l50
   455  000072                     i2l877:
   456                           
   457                           ;display7s.c: 70: return 0x71;
   458  000072  0E71               	movlw	113
   459  000074  EF82  F000         	goto	i2l50
   460  000078                     i2l881:
   461                           
   462                           ;display7s.c: 72: return 0;
   463  000078  0E00               	movlw	0
   464  00007A  EF82  F000         	goto	i2l50
   465  00007E                     i2l887:
   466  00007E  5004               	movf	display7s@v^0,w,c
   467                           
   468                           ; Switch size 1, requested type "simple"
   469                           ; Number of cases is 16, Range of values is 0 to 15
   470                           ; switch strategies available:
   471                           ; Name         Instructions Cycles
   472                           ; simple_byte           49    25 (average)
   473                           ;	Chosen strategy is simple_byte
   474  000080  0A00               	xorlw	0	; case 0
   475  000082  B4D8               	btfsc	status,2,c
   476  000084  EF0C  F000         	goto	i2l817
   477  000088  0A01               	xorlw	1	; case 1
   478  00008A  B4D8               	btfsc	status,2,c
   479  00008C  EF0F  F000         	goto	i2l821
   480  000090  0A03               	xorlw	3	; case 2
   481  000092  B4D8               	btfsc	status,2,c
   482  000094  EF12  F000         	goto	i2l825
   483  000098  0A01               	xorlw	1	; case 3
   484  00009A  B4D8               	btfsc	status,2,c
   485  00009C  EF15  F000         	goto	i2l829
   486  0000A0  0A07               	xorlw	7	; case 4
   487  0000A2  B4D8               	btfsc	status,2,c
   488  0000A4  EF18  F000         	goto	i2l833
   489  0000A8  0A01               	xorlw	1	; case 5
   490  0000AA  B4D8               	btfsc	status,2,c
   491  0000AC  EF1B  F000         	goto	i2l837
   492  0000B0  0A03               	xorlw	3	; case 6
   493  0000B2  B4D8               	btfsc	status,2,c
   494  0000B4  EF1E  F000         	goto	i2l841
   495  0000B8  0A01               	xorlw	1	; case 7
   496  0000BA  B4D8               	btfsc	status,2,c
   497  0000BC  EF21  F000         	goto	i2l845
   498  0000C0  0A0F               	xorlw	15	; case 8
   499  0000C2  B4D8               	btfsc	status,2,c
   500  0000C4  EF24  F000         	goto	i2l849
   501  0000C8  0A01               	xorlw	1	; case 9
   502  0000CA  B4D8               	btfsc	status,2,c
   503  0000CC  EF27  F000         	goto	i2l853
   504  0000D0  0A03               	xorlw	3	; case 10
   505  0000D2  B4D8               	btfsc	status,2,c
   506  0000D4  EF2A  F000         	goto	i2l857
   507  0000D8  0A01               	xorlw	1	; case 11
   508  0000DA  B4D8               	btfsc	status,2,c
   509  0000DC  EF2D  F000         	goto	i2l861
   510  0000E0  0A07               	xorlw	7	; case 12
   511  0000E2  B4D8               	btfsc	status,2,c
   512  0000E4  EF30  F000         	goto	i2l865
   513  0000E8  0A01               	xorlw	1	; case 13
   514  0000EA  B4D8               	btfsc	status,2,c
   515  0000EC  EF33  F000         	goto	i2l869
   516  0000F0  0A03               	xorlw	3	; case 14
   517  0000F2  B4D8               	btfsc	status,2,c
   518  0000F4  EF36  F000         	goto	i2l873
   519  0000F8  0A01               	xorlw	1	; case 15
   520  0000FA  B4D8               	btfsc	status,2,c
   521  0000FC  EF39  F000         	goto	i2l877
   522  000100  EF3C  F000         	goto	i2l881
   523  000104                     i2l50:
   524  000104  0012               	return		;funcret
   525  000106                     __end_of_display7s:
   526                           	callstack 0
   527  0000                     
   528                           	psect	rparam
   529  0000                     
   530                           	psect	temp
   531  000005                     btemp:
   532                           	callstack 0
   533  000005                     	ds	1
   534  0000                     int$flags	set	btemp
   535  0000                     wtemp8	set	btemp+1
   536  0000                     ttemp5	set	btemp+1
   537  0000                     ttemp6	set	btemp+4
   538  0000                     ttemp7	set	btemp+8
   539                           
   540                           	psect	idloc
   541                           
   542                           ;Config register IDLOC0 @ 0x200000
   543                           ;	unspecified, using default values
   544  200000                     	org	2097152
   545  200000  FF                 	db	255
   546                           
   547                           ;Config register IDLOC1 @ 0x200001
   548                           ;	unspecified, using default values
   549  200001                     	org	2097153
   550  200001  FF                 	db	255
   551                           
   552                           ;Config register IDLOC2 @ 0x200002
   553                           ;	unspecified, using default values
   554  200002                     	org	2097154
   555  200002  FF                 	db	255
   556                           
   557                           ;Config register IDLOC3 @ 0x200003
   558                           ;	unspecified, using default values
   559  200003                     	org	2097155
   560  200003  FF                 	db	255
   561                           
   562                           ;Config register IDLOC4 @ 0x200004
   563                           ;	unspecified, using default values
   564  200004                     	org	2097156
   565  200004  FF                 	db	255
   566                           
   567                           ;Config register IDLOC5 @ 0x200005
   568                           ;	unspecified, using default values
   569  200005                     	org	2097157
   570  200005  FF                 	db	255
   571                           
   572                           ;Config register IDLOC6 @ 0x200006
   573                           ;	unspecified, using default values
   574  200006                     	org	2097158
   575  200006  FF                 	db	255
   576                           
   577                           ;Config register IDLOC7 @ 0x200007
   578                           ;	unspecified, using default values
   579  200007                     	org	2097159
   580  200007  FF                 	db	255
   581                           
   582                           	psect	config
   583                           
   584                           ;Config register CONFIG1L @ 0x300000
   585                           ;	PLL Prescaler Selection bits
   586                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   587                           ;	System Clock Postscaler Selection bits
   588                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   589                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   590                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   591  300000                     	org	3145728
   592  300000  00                 	db	0
   593                           
   594                           ;Config register CONFIG1H @ 0x300001
   595                           ;	Oscillator Selection bits
   596                           ;	FOSC = HS, HS oscillator (HS)
   597                           ;	Fail-Safe Clock Monitor Enable bit
   598                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   599                           ;	Internal/External Oscillator Switchover bit
   600                           ;	IESO = OFF, Oscillator Switchover mode disabled
   601  300001                     	org	3145729
   602  300001  0C                 	db	12
   603                           
   604                           ;Config register CONFIG2L @ 0x300002
   605                           ;	Power-up Timer Enable bit
   606                           ;	PWRT = OFF, PWRT disabled
   607                           ;	Brown-out Reset Enable bits
   608                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   609                           ;	Brown-out Reset Voltage bits
   610                           ;	BORV = 3, Minimum setting 2.05V
   611                           ;	USB Voltage Regulator Enable bit
   612                           ;	VREGEN = OFF, USB voltage regulator disabled
   613  300002                     	org	3145730
   614  300002  1F                 	db	31
   615                           
   616                           ;Config register CONFIG2H @ 0x300003
   617                           ;	Watchdog Timer Enable bit
   618                           ;	WDT = ON, WDT enabled
   619                           ;	Watchdog Timer Postscale Select bits
   620                           ;	WDTPS = 32768, 1:32768
   621  300003                     	org	3145731
   622  300003  1F                 	db	31
   623                           
   624                           ; Padding undefined space
   625  300004                     	org	3145732
   626  300004  FF                 	db	255
   627                           
   628                           ;Config register CONFIG3H @ 0x300005
   629                           ;	CCP2 MUX bit
   630                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   631                           ;	PORTB A/D Enable bit
   632                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   633                           ;	Low-Power Timer 1 Oscillator Enable bit
   634                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   635                           ;	MCLR Pin Enable bit
   636                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   637  300005                     	org	3145733
   638  300005  81                 	db	129
   639                           
   640                           ;Config register CONFIG4L @ 0x300006
   641                           ;	Stack Full/Underflow Reset Enable bit
   642                           ;	STVREN = ON, Stack full/underflow will cause Reset
   643                           ;	Single-Supply ICSP Enable bit
   644                           ;	LVP = ON, Single-Supply ICSP enabled
   645                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   646                           ;	ICPRT = OFF, ICPORT disabled
   647                           ;	Extended Instruction Set Enable bit
   648                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   649                           ;	Background Debugger Enable bit
   650                           ;	DEBUG = 0x1, unprogrammed default
   651  300006                     	org	3145734
   652  300006  85                 	db	133
   653                           
   654                           ; Padding undefined space
   655  300007                     	org	3145735
   656  300007  FF                 	db	255
   657                           
   658                           ;Config register CONFIG5L @ 0x300008
   659                           ;	Code Protection bit
   660                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   661                           ;	Code Protection bit
   662                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   663                           ;	Code Protection bit
   664                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   665                           ;	Code Protection bit
   666                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   667  300008                     	org	3145736
   668  300008  0F                 	db	15
   669                           
   670                           ;Config register CONFIG5H @ 0x300009
   671                           ;	Boot Block Code Protection bit
   672                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   673                           ;	Data EEPROM Code Protection bit
   674                           ;	CPD = OFF, Data EEPROM is not code-protected
   675  300009                     	org	3145737
   676  300009  C0                 	db	192
   677                           
   678                           ;Config register CONFIG6L @ 0x30000A
   679                           ;	Write Protection bit
   680                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   681                           ;	Write Protection bit
   682                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   683                           ;	Write Protection bit
   684                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   685                           ;	Write Protection bit
   686                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   687  30000A                     	org	3145738
   688  30000A  0F                 	db	15
   689                           
   690                           ;Config register CONFIG6H @ 0x30000B
   691                           ;	Configuration Register Write Protection bit
   692                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   693                           ;	Boot Block Write Protection bit
   694                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   695                           ;	Data EEPROM Write Protection bit
   696                           ;	WRTD = OFF, Data EEPROM is not write-protected
   697  30000B                     	org	3145739
   698  30000B  E0                 	db	224
   699                           
   700                           ;Config register CONFIG7L @ 0x30000C
   701                           ;	Table Read Protection bit
   702                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   703                           ;	Table Read Protection bit
   704                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   705                           ;	Table Read Protection bit
   706                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   707                           ;	Table Read Protection bit
   708                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   709  30000C                     	org	3145740
   710  30000C  0F                 	db	15
   711                           
   712                           ;Config register CONFIG7H @ 0x30000D
   713                           ;	Boot Block Table Read Protection bit
   714                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   715  30000D                     	org	3145741
   716  30000D  40                 	db	64
   717                           tosu	equ	0xFFF
   718                           tosh	equ	0xFFE
   719                           tosl	equ	0xFFD
   720                           stkptr	equ	0xFFC
   721                           pclatu	equ	0xFFB
   722                           pclath	equ	0xFFA
   723                           pcl	equ	0xFF9
   724                           tblptru	equ	0xFF8
   725                           tblptrh	equ	0xFF7
   726                           tblptrl	equ	0xFF6
   727                           tablat	equ	0xFF5
   728                           prodh	equ	0xFF4
   729                           prodl	equ	0xFF3
   730                           indf0	equ	0xFEF
   731                           postinc0	equ	0xFEE
   732                           postdec0	equ	0xFED
   733                           preinc0	equ	0xFEC
   734                           plusw0	equ	0xFEB
   735                           fsr0h	equ	0xFEA
   736                           fsr0l	equ	0xFE9
   737                           wreg	equ	0xFE8
   738                           indf1	equ	0xFE7
   739                           postinc1	equ	0xFE6
   740                           postdec1	equ	0xFE5
   741                           preinc1	equ	0xFE4
   742                           plusw1	equ	0xFE3
   743                           fsr1h	equ	0xFE2
   744                           fsr1l	equ	0xFE1
   745                           bsr	equ	0xFE0
   746                           indf2	equ	0xFDF
   747                           postinc2	equ	0xFDE
   748                           postdec2	equ	0xFDD
   749                           preinc2	equ	0xFDC
   750                           plusw2	equ	0xFDB
   751                           fsr2h	equ	0xFDA
   752                           fsr2l	equ	0xFD9
   753                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      1       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_display7s

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  0     0      0      15
                          _display7s
 ---------------------------------------------------------------------------------
 (2) _display7s                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   _display7s

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E      1       4       1        4.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       4      20        0.0%
DATA                 0      0       4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Nov 16 15:21:42 2020

                     l33 01AC                      l901 019C                      l903 01AA  
                    l891 0192                      l893 0194                      l895 0196  
                    l897 0198                      l889 0176                      l899 019A  
                    _isr 0008                      _tmp 0003                     ?_isr 0004  
                   _LATB 000F8A                     _LATD 000F8C                     i2l50 0104  
                   i2l45 0172                     _TMR0 000FD6                     _main 0176  
                   btemp 0005                     start 000E             ___param_bank 000000  
                  ??_isr 0005                    ?_main 0004                    _T0CON 000FD5  
                  i2l821 001E                    i2l815 0014                    i2l911 011C  
                  i2l841 003C                    i2l833 0030                    i2l825 0024  
                  i2l817 0018                    i2l921 014C                    i2l913 012A  
                  i2l905 0108                    i2l923 0154                    i2l915 012C  
                  i2l907 0116                    i2l861 005A                    i2l853 004E  
                  i2l845 0042                    i2l837 0036                    i2l829 002A  
                  i2l925 015C                    i2l917 0134                    i2l909 0118  
                  i2l927 015E                    i2l919 0138                    i2l881 0078  
                  i2l873 006C                    i2l865 0060                    i2l857 0054  
                  i2l849 0048                    i2l929 016E                    i2l877 0072  
                  i2l869 0066                    i2l887 007E                    _PORTB 000F81  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISD 000F95  
                  _count 0001                    ttemp5 0006                    ttemp6 0009  
                  ttemp7 000D                    status 000FD8                    wtemp8 0006  
        __initialization 01B6             __end_of_main 01B6                   ??_main 0005  
          __activetblptr 000002                   _ADCON1 000FC1                   i2u1_40 0116  
                 i2u1_41 0112                   i2u2_40 012A                   i2u2_41 0126  
                 i2u3_40 014C                   i2u3_41 0148                   i2u4_40 016E  
                 i2u4_41 016A                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 01BC            ___rparam_used 000001           __pcstackCOMRAM 0004  
     __size_of_display7s 00F4                  __Hparam 0000                  __Lparam 0000  
      __end_of_display7s 0106                  __pcinit 01B6                  __ramtop 0800  
                __ptext0 0176                  __ptext2 0012             __size_of_isr 016E  
         __pintcode_body 0106     end_of_initialization 01BC            __Lmediumconst 0000  
                int_func 0106               display7s@v 0004      start_initialization 01B6  
            __end_of_isr 0176              __pbssCOMRAM 0001                __pintcode 0008  
              _display7s 0012               ?_display7s 0004              _INTCON2bits 000FF1  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 0040  
               int$flags 0005              ??_display7s 0004               _INTCONbits 000FF2  
               intlevel2 0000  
