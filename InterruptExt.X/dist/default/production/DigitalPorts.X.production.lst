

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Nov 13 17:28:50 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     _LATDbits	set	3980
    51  0000                     _INTCONbits	set	4082
    52  0000                     _INTCON2bits	set	4081
    53  0000                     _ADCON1	set	4033
    54  0000                     _LATD	set	3980
    55  0000                     _PORTD	set	3971
    56  0000                     _LATB	set	3978
    57  0000                     _PORTB	set	3969
    58  0000                     _TRISD	set	3989
    59  0000                     _TRISB	set	3987
    60                           
    61                           ; #config settings
    62                           
    63                           	psect	cinit
    64  0000A6                     __pcinit:
    65                           	callstack 0
    66  0000A6                     start_initialization:
    67                           	callstack 0
    68  0000A6                     __initialization:
    69                           	callstack 0
    70  0000A6                     end_of_initialization:
    71                           	callstack 0
    72  0000A6                     __end_of__initialization:
    73                           	callstack 0
    74  0000A6  9004               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    75  0000A8  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    76  0000AA  0100               	movlb	0
    77  0000AC  EF09  F000         	goto	_main	;jump to C main() function
    78                           
    79                           	psect	cstackCOMRAM
    80  000001                     __pcstackCOMRAM:
    81                           	callstack 0
    82  000001                     ??_isr:
    83                           
    84                           ; 1 bytes @ 0x0
    85  000001                     	ds	1
    86  000002                     ??_main:
    87                           
    88                           ; 1 bytes @ 0x1
    89  000002                     	ds	2
    90                           
    91 ;;
    92 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    93 ;;
    94 ;; *************** function _main *****************
    95 ;; Defined at:
    96 ;;		line 15 in file "main.c"
    97 ;; Parameters:    Size  Location     Type
    98 ;;		None
    99 ;; Auto vars:     Size  Location     Type
   100 ;;		None
   101 ;; Return value:  Size  Location     Type
   102 ;;                  1    wreg      void 
   103 ;; Registers used:
   104 ;;		wreg, status,2, status,0
   105 ;; Tracked objects:
   106 ;;		On entry : 0/0
   107 ;;		On exit  : 0/0
   108 ;;		Unchanged: 0/0
   109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   110 ;;      Params:         0       0       0       0       0       0       0       0       0
   111 ;;      Locals:         0       0       0       0       0       0       0       0       0
   112 ;;      Temps:          2       0       0       0       0       0       0       0       0
   113 ;;      Totals:         2       0       0       0       0       0       0       0       0
   114 ;;Total ram usage:        2 bytes
   115 ;; Hardware stack levels required when called:    1
   116 ;; This function calls:
   117 ;;		Nothing
   118 ;; This function is called by:
   119 ;;		Startup code after reset
   120 ;; This function uses a non-reentrant model
   121 ;;
   122                           
   123                           	psect	text0
   124  000012                     __ptext0:
   125                           	callstack 0
   126  000012                     _main:
   127                           	callstack 30
   128  000012                     
   129                           ;main.c: 20: TRISB = 0b00000001;
   130  000012  0E01               	movlw	1
   131  000014  6E93               	movwf	147,c	;volatile
   132                           
   133                           ;main.c: 21: TRISD = 0b00000000;
   134  000016  0E00               	movlw	0
   135  000018  6E95               	movwf	149,c	;volatile
   136                           
   137                           ;main.c: 22: PORTB = 0;
   138  00001A  0E00               	movlw	0
   139  00001C  6E81               	movwf	129,c	;volatile
   140                           
   141                           ;main.c: 23: LATB = 0;
   142  00001E  0E00               	movlw	0
   143  000020  6E8A               	movwf	138,c	;volatile
   144                           
   145                           ;main.c: 24: PORTD = 0;
   146  000022  0E00               	movlw	0
   147  000024  6E83               	movwf	131,c	;volatile
   148                           
   149                           ;main.c: 25: LATD = 0;
   150  000026  0E00               	movlw	0
   151  000028  6E8C               	movwf	140,c	;volatile
   152                           
   153                           ;main.c: 27: ADCON1 = 0b00001111;
   154  00002A  0E0F               	movlw	15
   155  00002C  6EC1               	movwf	193,c	;volatile
   156  00002E                     
   157                           ;main.c: 29: INTCON2bits.RBPU = 0;
   158  00002E  9EF1               	bcf	241,7,c	;volatile
   159  000030                     
   160                           ;main.c: 34: INTCON2bits.INTEDG0 = 0;
   161  000030  9CF1               	bcf	241,6,c	;volatile
   162  000032                     
   163                           ;main.c: 36: INTCONbits.INT0IF = 0;
   164  000032  92F2               	bcf	242,1,c	;volatile
   165  000034                     
   166                           ;main.c: 38: INTCONbits.INT0IE = 1;
   167  000034  88F2               	bsf	242,4,c	;volatile
   168  000036                     
   169                           ;main.c: 39: (INTCONbits.GIE = 1);
   170  000036  8EF2               	bsf	242,7,c	;volatile
   171  000038                     l795:
   172                           
   173                           ;main.c: 41: {;main.c: 42: LATDbits.LATD1 = ~LATDbits.LATD1;
   174  000038  B28C               	btfsc	140,1,c	;volatile
   175  00003A  EF21  F000         	goto	u11
   176  00003E  EF24  F000         	goto	u10
   177  000042                     u11:
   178  000042  0E01               	movlw	1
   179  000044  EF25  F000         	goto	u16
   180  000048                     u10:
   181  000048  0E00               	movlw	0
   182  00004A                     u16:
   183  00004A  0AFF               	xorlw	255
   184  00004C  6E02               	movwf	??_main^0,c
   185  00004E  4602               	rlncf	??_main^0,f,c
   186  000050  508C               	movf	140,w,c	;volatile
   187  000052  1802               	xorwf	??_main^0,w,c
   188  000054  0BFD               	andlw	-3
   189  000056  1802               	xorwf	??_main^0,w,c
   190  000058  6E8C               	movwf	140,c	;volatile
   191  00005A                     
   192                           ;main.c: 43: _delaywdt((unsigned long)((500)*(8000000/4000.0)));
   193  00005A  0E04               	movlw	4
   194  00005C  6E03               	movwf	(??_main+1)^0,c
   195  00005E  0ECF               	movlw	207
   196  000060  6E02               	movwf	??_main^0,c
   197  000062  0EA5               	movlw	165
   198  000064                     u37:
   199  000064  0004               	clrwdt	
   200  000066  2EE8               	decfsz	wreg,f,c
   201  000068  D7FD               	bra	u37
   202  00006A  2E02               	decfsz	??_main^0,f,c
   203  00006C  D7FB               	bra	u37
   204  00006E  2E03               	decfsz	(??_main+1)^0,f,c
   205  000070  D7F9               	bra	u37
   206  000072  0004               	clrwdt	
   207  000074  F000               	nop	
   208  000076  EF1C  F000         	goto	l795
   209  00007A  EF07  F000         	goto	start
   210  00007E                     __end_of_main:
   211                           	callstack 0
   212                           
   213 ;; *************** function _isr *****************
   214 ;; Defined at:
   215 ;;		line 54 in file "main.c"
   216 ;; Parameters:    Size  Location     Type
   217 ;;		None
   218 ;; Auto vars:     Size  Location     Type
   219 ;;		None
   220 ;; Return value:  Size  Location     Type
   221 ;;                  1    wreg      void 
   222 ;; Registers used:
   223 ;;		wreg, status,2, status,0
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   229 ;;      Params:         0       0       0       0       0       0       0       0       0
   230 ;;      Locals:         0       0       0       0       0       0       0       0       0
   231 ;;      Temps:          1       0       0       0       0       0       0       0       0
   232 ;;      Totals:         1       0       0       0       0       0       0       0       0
   233 ;;Total ram usage:        1 bytes
   234 ;; Hardware stack levels used:    1
   235 ;; This function calls:
   236 ;;		Nothing
   237 ;; This function is called by:
   238 ;;		Interrupt level 2
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           	psect	intcode
   243  000008                     __pintcode:
   244                           	callstack 0
   245  000008                     _isr:
   246                           	callstack 30
   247                           
   248                           ;incstack = 0
   249  000008  8204               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   250  00000A  ED3F  F000         	call	int_func,f	;refresh shadow registers
   251                           
   252                           	psect	intcode_body
   253  00007E                     __pintcode_body:
   254                           	callstack 30
   255  00007E                     int_func:
   256                           	callstack 30
   257  00007E  0006               	pop		; remove dummy address from shadow register refresh
   258  000080                     
   259                           ;main.c: 56: INTCONbits.INT0F = 0;
   260  000080  92F2               	bcf	242,1,c	;volatile
   261  000082                     
   262                           ;main.c: 58: LATDbits.LATD0 = ~LATDbits.LATD0;
   263  000082  B08C               	btfsc	140,0,c	;volatile
   264  000084  EF46  F000         	goto	i2u2_41
   265  000088  EF49  F000         	goto	i2u2_40
   266  00008C                     i2u2_41:
   267  00008C  0E01               	movlw	1
   268  00008E  EF4A  F000         	goto	i2u2_46
   269  000092                     i2u2_40:
   270  000092  0E00               	movlw	0
   271  000094                     i2u2_46:
   272  000094  0AFF               	xorlw	255
   273  000096  6E01               	movwf	??_isr^0,c
   274  000098  508C               	movf	140,w,c	;volatile
   275  00009A  1801               	xorwf	??_isr^0,w,c
   276  00009C  0BFE               	andlw	-2
   277  00009E  1801               	xorwf	??_isr^0,w,c
   278  0000A0  6E8C               	movwf	140,c	;volatile
   279  0000A2  9204               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   280  0000A4  0011               	retfie		f
   281  0000A6                     __end_of_isr:
   282                           	callstack 0
   283  0000                     
   284                           	psect	rparam
   285  0000                     
   286                           	psect	temp
   287  000004                     btemp:
   288                           	callstack 0
   289  000004                     	ds	1
   290  0000                     int$flags	set	btemp
   291  0000                     wtemp8	set	btemp+1
   292  0000                     ttemp5	set	btemp+1
   293  0000                     ttemp6	set	btemp+4
   294  0000                     ttemp7	set	btemp+8
   295                           
   296                           	psect	idloc
   297                           
   298                           ;Config register IDLOC0 @ 0x200000
   299                           ;	unspecified, using default values
   300  200000                     	org	2097152
   301  200000  FF                 	db	255
   302                           
   303                           ;Config register IDLOC1 @ 0x200001
   304                           ;	unspecified, using default values
   305  200001                     	org	2097153
   306  200001  FF                 	db	255
   307                           
   308                           ;Config register IDLOC2 @ 0x200002
   309                           ;	unspecified, using default values
   310  200002                     	org	2097154
   311  200002  FF                 	db	255
   312                           
   313                           ;Config register IDLOC3 @ 0x200003
   314                           ;	unspecified, using default values
   315  200003                     	org	2097155
   316  200003  FF                 	db	255
   317                           
   318                           ;Config register IDLOC4 @ 0x200004
   319                           ;	unspecified, using default values
   320  200004                     	org	2097156
   321  200004  FF                 	db	255
   322                           
   323                           ;Config register IDLOC5 @ 0x200005
   324                           ;	unspecified, using default values
   325  200005                     	org	2097157
   326  200005  FF                 	db	255
   327                           
   328                           ;Config register IDLOC6 @ 0x200006
   329                           ;	unspecified, using default values
   330  200006                     	org	2097158
   331  200006  FF                 	db	255
   332                           
   333                           ;Config register IDLOC7 @ 0x200007
   334                           ;	unspecified, using default values
   335  200007                     	org	2097159
   336  200007  FF                 	db	255
   337                           
   338                           	psect	config
   339                           
   340                           ;Config register CONFIG1L @ 0x300000
   341                           ;	PLL Prescaler Selection bits
   342                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
   343                           ;	System Clock Postscaler Selection bits
   344                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
   345                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
   346                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
   347  300000                     	org	3145728
   348  300000  00                 	db	0
   349                           
   350                           ;Config register CONFIG1H @ 0x300001
   351                           ;	Oscillator Selection bits
   352                           ;	FOSC = HS, HS oscillator (HS)
   353                           ;	Fail-Safe Clock Monitor Enable bit
   354                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   355                           ;	Internal/External Oscillator Switchover bit
   356                           ;	IESO = OFF, Oscillator Switchover mode disabled
   357  300001                     	org	3145729
   358  300001  0C                 	db	12
   359                           
   360                           ;Config register CONFIG2L @ 0x300002
   361                           ;	Power-up Timer Enable bit
   362                           ;	PWRT = OFF, PWRT disabled
   363                           ;	Brown-out Reset Enable bits
   364                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   365                           ;	Brown-out Reset Voltage bits
   366                           ;	BORV = 3, Minimum setting 2.05V
   367                           ;	USB Voltage Regulator Enable bit
   368                           ;	VREGEN = OFF, USB voltage regulator disabled
   369  300002                     	org	3145730
   370  300002  1F                 	db	31
   371                           
   372                           ;Config register CONFIG2H @ 0x300003
   373                           ;	Watchdog Timer Enable bit
   374                           ;	WDT = ON, WDT enabled
   375                           ;	Watchdog Timer Postscale Select bits
   376                           ;	WDTPS = 32768, 1:32768
   377  300003                     	org	3145731
   378  300003  1F                 	db	31
   379                           
   380                           ; Padding undefined space
   381  300004                     	org	3145732
   382  300004  FF                 	db	255
   383                           
   384                           ;Config register CONFIG3H @ 0x300005
   385                           ;	CCP2 MUX bit
   386                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
   387                           ;	PORTB A/D Enable bit
   388                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   389                           ;	Low-Power Timer 1 Oscillator Enable bit
   390                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   391                           ;	MCLR Pin Enable bit
   392                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   393  300005                     	org	3145733
   394  300005  81                 	db	129
   395                           
   396                           ;Config register CONFIG4L @ 0x300006
   397                           ;	Stack Full/Underflow Reset Enable bit
   398                           ;	STVREN = ON, Stack full/underflow will cause Reset
   399                           ;	Single-Supply ICSP Enable bit
   400                           ;	LVP = ON, Single-Supply ICSP enabled
   401                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
   402                           ;	ICPRT = OFF, ICPORT disabled
   403                           ;	Extended Instruction Set Enable bit
   404                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   405                           ;	Background Debugger Enable bit
   406                           ;	DEBUG = 0x1, unprogrammed default
   407  300006                     	org	3145734
   408  300006  85                 	db	133
   409                           
   410                           ; Padding undefined space
   411  300007                     	org	3145735
   412  300007  FF                 	db	255
   413                           
   414                           ;Config register CONFIG5L @ 0x300008
   415                           ;	Code Protection bit
   416                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
   417                           ;	Code Protection bit
   418                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
   419                           ;	Code Protection bit
   420                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
   421                           ;	Code Protection bit
   422                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
   423  300008                     	org	3145736
   424  300008  0F                 	db	15
   425                           
   426                           ;Config register CONFIG5H @ 0x300009
   427                           ;	Boot Block Code Protection bit
   428                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
   429                           ;	Data EEPROM Code Protection bit
   430                           ;	CPD = OFF, Data EEPROM is not code-protected
   431  300009                     	org	3145737
   432  300009  C0                 	db	192
   433                           
   434                           ;Config register CONFIG6L @ 0x30000A
   435                           ;	Write Protection bit
   436                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
   437                           ;	Write Protection bit
   438                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
   439                           ;	Write Protection bit
   440                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
   441                           ;	Write Protection bit
   442                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
   443  30000A                     	org	3145738
   444  30000A  0F                 	db	15
   445                           
   446                           ;Config register CONFIG6H @ 0x30000B
   447                           ;	Configuration Register Write Protection bit
   448                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
   449                           ;	Boot Block Write Protection bit
   450                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
   451                           ;	Data EEPROM Write Protection bit
   452                           ;	WRTD = OFF, Data EEPROM is not write-protected
   453  30000B                     	org	3145739
   454  30000B  E0                 	db	224
   455                           
   456                           ;Config register CONFIG7L @ 0x30000C
   457                           ;	Table Read Protection bit
   458                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
   459                           ;	Table Read Protection bit
   460                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
   461                           ;	Table Read Protection bit
   462                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
   463                           ;	Table Read Protection bit
   464                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
   465  30000C                     	org	3145740
   466  30000C  0F                 	db	15
   467                           
   468                           ;Config register CONFIG7H @ 0x30000D
   469                           ;	Boot Block Table Read Protection bit
   470                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
   471  30000D                     	org	3145741
   472  30000D  40                 	db	64
   473                           tosu	equ	0xFFF
   474                           tosh	equ	0xFFE
   475                           tosl	equ	0xFFD
   476                           stkptr	equ	0xFFC
   477                           pclatu	equ	0xFFB
   478                           pclath	equ	0xFFA
   479                           pcl	equ	0xFF9
   480                           tblptru	equ	0xFF8
   481                           tblptrh	equ	0xFF7
   482                           tblptrl	equ	0xFF6
   483                           tablat	equ	0xFF5
   484                           prodh	equ	0xFF4
   485                           prodl	equ	0xFF3
   486                           indf0	equ	0xFEF
   487                           postinc0	equ	0xFEE
   488                           postdec0	equ	0xFED
   489                           preinc0	equ	0xFEC
   490                           plusw0	equ	0xFEB
   491                           fsr0h	equ	0xFEA
   492                           fsr0l	equ	0xFE9
   493                           wreg	equ	0xFE8
   494                           indf1	equ	0xFE7
   495                           postinc1	equ	0xFE6
   496                           postdec1	equ	0xFE5
   497                           preinc1	equ	0xFE4
   498                           plusw1	equ	0xFE3
   499                           fsr1h	equ	0xFE2
   500                           fsr1l	equ	0xFE1
   501                           bsr	equ	0xFE0
   502                           indf2	equ	0xFDF
   503                           postinc2	equ	0xFDE
   504                           postdec2	equ	0xFDD
   505                           preinc2	equ	0xFDC
   506                           plusw2	equ	0xFDB
   507                           fsr2h	equ	0xFDA
   508                           fsr2l	equ	0xFD9
   509                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      3       3
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      3       3       1        3.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Nov 13 17:28:50 2020

                     u10 0048                       u11 0042                       u16 004A  
                     u37 0064                      l791 0034                      l783 0012  
                    l793 0036                      l785 002E                      l795 0038  
                    l787 0030                      l797 005A                      l789 0032  
                    _isr 0008                      wreg 000FE8                     ?_isr 0001  
                   _LATB 000F8A                     _LATD 000F8C                     i2l35 00A2  
                   _main 0012                     btemp 0004                     start 000E  
           ___param_bank 000000                    ??_isr 0001                    ?_main 0001  
                  i2l801 0082                    i2l799 0080                    _PORTB 000F81  
                  _PORTD 000F83                    _TRISB 000F93                    _TRISD 000F95  
                  ttemp5 0005                    ttemp6 0008                    ttemp7 000C  
                  wtemp8 0005          __initialization 00A6             __end_of_main 007E  
                 ??_main 0002            __activetblptr 000000                   _ADCON1 000FC1  
                 i2u2_40 0092                   i2u2_41 008C                   i2u2_46 0094  
             __accesstop 0060  __end_of__initialization 00A6            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 00A6                  __ramtop 0800                  __ptext0 0012  
           __size_of_isr 009E           __pintcode_body 007E     end_of_initialization 00A6  
                int_func 007E      start_initialization 00A6              __end_of_isr 00A6  
              __pintcode 0008                 _LATDbits 000F8C              _INTCON2bits 000FF1  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 006C  
               int$flags 0004               _INTCONbits 000FF2                 intlevel2 0000  
