

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Nov 23 11:41:35 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _PORTC	set	3970
    53  0000                     _TRISC	set	3988
    54  0000                     _PORTE	set	3972
    55  0000                     _PORTD	set	3971
    56  0000                     _TRISE	set	3990
    57  0000                     _TRISD	set	3989
    58  0000                     _PORTB	set	3969
    59  0000                     _PORTDbits	set	3971
    60  0000                     _TRISDbits	set	3989
    61  0000                     _ADCON1	set	4033
    62  0000                     _ADCON0	set	4034
    63  0000                     _TRISEbits	set	3990
    64  0000                     _LATB	set	3978
    65  0000                     _TRISB	set	3987
    66  0000                     _PORTEbits	set	3972
    67  0000                     _INTCON2bits	set	4081
    68  0000                     _LATE	set	3981
    69  0000                     _LATD	set	3980
    70  0000                     _LATC	set	3979
    71                           
    72                           	psect	smallconst
    73  000600                     __psmallconst:
    74                           	callstack 0
    75  000600  00                 	db	0
    76  000601                     STR_1:
    77  000601  50                 	db	80	;'P'
    78  000602  52                 	db	82	;'R'
    79  000603  4F                 	db	79	;'O'
    80  000604  46                 	db	70	;'F'
    81  000605  49                 	db	73	;'I'
    82  000606  43                 	db	67	;'C'
    83  000607  41                 	db	65	;'A'
    84  000608  4D                 	db	77	;'M'
    85  000609  20                 	db	32
    86  00060A  20                 	db	32
    87  00060B  43                 	db	67	;'C'
    88  00060C  41                 	db	65	;'A'
    89  00060D  4D                 	db	77	;'M'
    90  00060E  32                 	db	50	;'2'
    91  00060F  31                 	db	49	;'1'
    92  000610  30                 	db	48	;'0'
    93  000611  00                 	db	0
    94  000612                     STR_2:
    95  000612  53                 	db	83	;'S'
    96  000613  69                 	db	105	;'i'
    97  000614  73                 	db	115	;'s'
    98  000615  74                 	db	116	;'t'
    99  000616  2E                 	db	46
   100  000617  20                 	db	32
   101  000618  45                 	db	69	;'E'
   102  000619  6D                 	db	109	;'m'
   103  00061A  62                 	db	98	;'b'
   104  00061B  61                 	db	97	;'a'
   105  00061C  72                 	db	114	;'r'
   106  00061D  63                 	db	99	;'c'
   107  00061E  61                 	db	97	;'a'
   108  00061F  64                 	db	100	;'d'
   109  000620  6F                 	db	111	;'o'
   110  000621  73                 	db	115	;'s'
   111  000622  00                 	db	0
   112  000623  00                 	db	0	; dummy byte at the end
   113  0000                     
   114                           ; #config settings
   115                           
   116                           	psect	cinit
   117  000A96                     __pcinit:
   118                           	callstack 0
   119  000A96                     start_initialization:
   120                           	callstack 0
   121  000A96                     __initialization:
   122                           	callstack 0
   123  000A96                     end_of_initialization:
   124                           	callstack 0
   125  000A96                     __end_of__initialization:
   126                           	callstack 0
   127  000A96  0E00               	movlw	low (__Lmediumconst shr (0+16))
   128  000A98  6EF8               	movwf	tblptru,c
   129  000A9A  0100               	movlb	0
   130  000A9C  EF12  F005         	goto	_main	;jump to C main() function
   131                           
   132                           	psect	cstackCOMRAM
   133  000001                     __pcstackCOMRAM:
   134                           	callstack 0
   135  000001                     ??_Lcd_Cmd:
   136  000001                     ??_Lcd_Chr_CP:
   137  000001                     
   138                           ; 1 bytes @ 0x0
   139  000001                     	ds	2
   140  000003                     Lcd_Chr_CP@data:
   141                           	callstack 0
   142  000003                     Lcd_Cmd@data:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x2
   146  000003                     	ds	1
   147  000004                     ??_Lcd_Init:
   148  000004                     Lcd_Out@x:
   149                           	callstack 0
   150                           
   151                           ; 1 bytes @ 0x3
   152  000004                     	ds	1
   153  000005                     Lcd_Init@data:
   154                           	callstack 0
   155  000005                     Lcd_Out@buffer:
   156                           	callstack 0
   157                           
   158                           ; 2 bytes @ 0x4
   159  000005                     	ds	2
   160  000007                     Lcd_Out@y:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x6
   164  000007                     	ds	1
   165  000008                     Lcd_Out@data:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0x7
   169  000008                     	ds	1
   170  000009                     
   171                           ; 1 bytes @ 0x8
   172 ;;
   173 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   174 ;;
   175 ;; *************** function _main *****************
   176 ;; Defined at:
   177 ;;		line 17 in file "mainLCD.c"
   178 ;; Parameters:    Size  Location     Type
   179 ;;		None
   180 ;; Auto vars:     Size  Location     Type
   181 ;;		None
   182 ;; Return value:  Size  Location     Type
   183 ;;                  1    wreg      void 
   184 ;; Registers used:
   185 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   186 ;; Tracked objects:
   187 ;;		On entry : 0/0
   188 ;;		On exit  : 0/0
   189 ;;		Unchanged: 0/0
   190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   191 ;;      Params:         0       0       0       0       0       0       0
   192 ;;      Locals:         0       0       0       0       0       0       0
   193 ;;      Temps:          0       0       0       0       0       0       0
   194 ;;      Totals:         0       0       0       0       0       0       0
   195 ;;Total ram usage:        0 bytes
   196 ;; Hardware stack levels required when called: 2
   197 ;; This function calls:
   198 ;;		_Lcd_Cmd
   199 ;;		_Lcd_Init
   200 ;;		_Lcd_Out
   201 ;; This function is called by:
   202 ;;		Startup code after reset
   203 ;; This function uses a non-reentrant model
   204 ;;
   205                           
   206                           	psect	text0
   207  000A24                     __ptext0:
   208                           	callstack 0
   209  000A24                     _main:
   210                           	callstack 29
   211  000A24                     
   212                           ;mainLCD.c: 19: ADCON0 = 0b00000000;
   213  000A24  0E00               	movlw	0
   214  000A26  6EC2               	movwf	194,c	;volatile
   215                           
   216                           ;mainLCD.c: 20: ADCON1 = 0b00001111;
   217  000A28  0E0F               	movlw	15
   218  000A2A  6EC1               	movwf	193,c	;volatile
   219  000A2C                     
   220                           ;mainLCD.c: 24: INTCON2bits.RBPU = 1;
   221  000A2C  8EF1               	bsf	241,7,c	;volatile
   222                           
   223                           ;mainLCD.c: 26: TRISB = 0b00000000;
   224  000A2E  0E00               	movlw	0
   225  000A30  6E93               	movwf	147,c	;volatile
   226                           
   227                           ;mainLCD.c: 27: TRISC = 0b00000000;
   228  000A32  0E00               	movlw	0
   229  000A34  6E94               	movwf	148,c	;volatile
   230                           
   231                           ;mainLCD.c: 28: TRISD = 0b00001111;
   232  000A36  0E0F               	movlw	15
   233  000A38  6E95               	movwf	149,c	;volatile
   234                           
   235                           ;mainLCD.c: 29: TRISE = 0b00000000;
   236  000A3A  0E00               	movlw	0
   237  000A3C  6E96               	movwf	150,c	;volatile
   238                           
   239                           ;mainLCD.c: 31: PORTB = 0;
   240  000A3E  0E00               	movlw	0
   241  000A40  6E81               	movwf	129,c	;volatile
   242                           
   243                           ;mainLCD.c: 32: LATB = 0;
   244  000A42  0E00               	movlw	0
   245  000A44  6E8A               	movwf	138,c	;volatile
   246                           
   247                           ;mainLCD.c: 33: PORTC = 0;
   248  000A46  0E00               	movlw	0
   249  000A48  6E82               	movwf	130,c	;volatile
   250                           
   251                           ;mainLCD.c: 34: LATC = 0;
   252  000A4A  0E00               	movlw	0
   253  000A4C  6E8B               	movwf	139,c	;volatile
   254                           
   255                           ;mainLCD.c: 35: PORTD = 0;
   256  000A4E  0E00               	movlw	0
   257  000A50  6E83               	movwf	131,c	;volatile
   258                           
   259                           ;mainLCD.c: 36: LATD = 0;
   260  000A52  0E00               	movlw	0
   261  000A54  6E8C               	movwf	140,c	;volatile
   262                           
   263                           ;mainLCD.c: 37: PORTE = 0;
   264  000A56  0E00               	movlw	0
   265  000A58  6E84               	movwf	132,c	;volatile
   266                           
   267                           ;mainLCD.c: 38: LATE = 0;
   268  000A5A  0E00               	movlw	0
   269  000A5C  6E8D               	movwf	141,c	;volatile
   270  000A5E                     
   271                           ;mainLCD.c: 40: Lcd_Init();
   272  000A5E  EC42  F004         	call	_Lcd_Init	;wreg free
   273  000A62                     
   274                           ;mainLCD.c: 41: Lcd_Cmd(12);
   275  000A62  0E0C               	movlw	12
   276  000A64  ECAC  F003         	call	_Lcd_Cmd
   277  000A68                     
   278                           ;mainLCD.c: 42: Lcd_Out(1, 0, "PROFICAM  CAM210");
   279  000A68  0E00               	movlw	0
   280  000A6A  6E04               	movwf	Lcd_Out@x^0,c
   281  000A6C  0E01               	movlw	low STR_1
   282  000A6E  6E05               	movwf	Lcd_Out@buffer^0,c
   283  000A70  0E06               	movlw	high STR_1
   284  000A72  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   285  000A74  0E01               	movlw	1
   286  000A76  ECCA  F004         	call	_Lcd_Out
   287  000A7A                     
   288                           ;mainLCD.c: 43: Lcd_Out(2, 0, "Sist. Embarcados");
   289  000A7A  0E00               	movlw	0
   290  000A7C  6E04               	movwf	Lcd_Out@x^0,c
   291  000A7E  0E12               	movlw	low STR_2
   292  000A80  6E05               	movwf	Lcd_Out@buffer^0,c
   293  000A82  0E06               	movlw	high STR_2
   294  000A84  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   295  000A86  0E02               	movlw	2
   296  000A88  ECCA  F004         	call	_Lcd_Out
   297  000A8C                     l86:
   298  000A8C  0004               	clrwdt		;# 
   299  000A8E  EF46  F005         	goto	l86
   300  000A92  EF00  F000         	goto	start
   301  000A96                     __end_of_main:
   302                           	callstack 0
   303                           
   304 ;; *************** function _Lcd_Out *****************
   305 ;; Defined at:
   306 ;;		line 118 in file "flexlcd.h"
   307 ;; Parameters:    Size  Location     Type
   308 ;;  y               1    wreg     unsigned char 
   309 ;;  x               1    3[COMRAM] unsigned char 
   310 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
   311 ;;		 -> STR_2(17), STR_1(17), 
   312 ;; Auto vars:     Size  Location     Type
   313 ;;  y               1    6[COMRAM] unsigned char 
   314 ;;  data            1    7[COMRAM] unsigned char 
   315 ;; Return value:  Size  Location     Type
   316 ;;                  1    wreg      void 
   317 ;; Registers used:
   318 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   319 ;; Tracked objects:
   320 ;;		On entry : 0/0
   321 ;;		On exit  : 0/0
   322 ;;		Unchanged: 0/0
   323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   324 ;;      Params:         3       0       0       0       0       0       0
   325 ;;      Locals:         2       0       0       0       0       0       0
   326 ;;      Temps:          0       0       0       0       0       0       0
   327 ;;      Totals:         5       0       0       0       0       0       0
   328 ;;Total ram usage:        5 bytes
   329 ;; Hardware stack levels used: 1
   330 ;; Hardware stack levels required when called: 1
   331 ;; This function calls:
   332 ;;		_Lcd_Chr_CP
   333 ;;		_Lcd_Cmd
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339                           	psect	text1
   340  000994                     __ptext1:
   341                           	callstack 0
   342  000994                     _Lcd_Out:
   343                           	callstack 29
   344                           
   345                           ;incstack = 0
   346                           ;Lcd_Out@y stored from wreg
   347  000994  6E07               	movwf	Lcd_Out@y^0,c
   348  000996                     
   349                           ;flexlcd.h: 120: unsigned char data;;flexlcd.h: 121: switch (y)
   350  000996  EFE1  F004         	goto	l1007
   351  00099A                     l997:
   352  00099A  5004               	movf	Lcd_Out@x^0,w,c
   353  00099C  0F80               	addlw	128
   354  00099E  6E08               	movwf	Lcd_Out@data^0,c
   355  0009A0  EFF4  F004         	goto	l1009
   356  0009A4                     l999:
   357  0009A4  5004               	movf	Lcd_Out@x^0,w,c
   358  0009A6  0FC0               	addlw	192
   359  0009A8  6E08               	movwf	Lcd_Out@data^0,c
   360  0009AA  EFF4  F004         	goto	l1009
   361  0009AE                     l1001:
   362  0009AE  5004               	movf	Lcd_Out@x^0,w,c
   363  0009B0  0F94               	addlw	148
   364  0009B2  6E08               	movwf	Lcd_Out@data^0,c
   365  0009B4  EFF4  F004         	goto	l1009
   366  0009B8                     l1003:
   367  0009B8  5004               	movf	Lcd_Out@x^0,w,c
   368  0009BA  0FD4               	addlw	212
   369  0009BC  6E08               	movwf	Lcd_Out@data^0,c
   370  0009BE  EFF4  F004         	goto	l1009
   371  0009C2                     l1007:
   372  0009C2  5007               	movf	Lcd_Out@y^0,w,c
   373                           
   374                           ; Switch size 1, requested type "simple"
   375                           ; Number of cases is 4, Range of values is 1 to 4
   376                           ; switch strategies available:
   377                           ; Name         Instructions Cycles
   378                           ; simple_byte           13     7 (average)
   379                           ;	Chosen strategy is simple_byte
   380  0009C4  0A01               	xorlw	1	; case 1
   381  0009C6  B4D8               	btfsc	status,2,c
   382  0009C8  EFCD  F004         	goto	l997
   383  0009CC  0A03               	xorlw	3	; case 2
   384  0009CE  B4D8               	btfsc	status,2,c
   385  0009D0  EFD2  F004         	goto	l999
   386  0009D4  0A01               	xorlw	1	; case 3
   387  0009D6  B4D8               	btfsc	status,2,c
   388  0009D8  EFD7  F004         	goto	l1001
   389  0009DC  0A07               	xorlw	7	; case 4
   390  0009DE  B4D8               	btfsc	status,2,c
   391  0009E0  EFDC  F004         	goto	l1003
   392  0009E4  EFF4  F004         	goto	l1009
   393  0009E8                     l1009:
   394                           
   395                           ;flexlcd.h: 129: Lcd_Cmd(data);
   396  0009E8  5008               	movf	Lcd_Out@data^0,w,c
   397  0009EA  ECAC  F003         	call	_Lcd_Cmd
   398                           
   399                           ;flexlcd.h: 130: while(*buffer)
   400  0009EE  EF03  F005         	goto	l1015
   401  0009F2                     l1011:
   402                           
   403                           ;flexlcd.h: 131: {;flexlcd.h: 132: Lcd_Chr_CP(*buffer);
   404  0009F2  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
   405  0009F6  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   406  0009FA                     	if	0	;tblptru may be non-zero
   407  0009FA                     	endif
   408  0009FA                     	if	0	;tblptru may be non-zero
   409  0009FA                     	endif
   410  0009FA  0008               	tblrd		*
   411  0009FC  50F5               	movf	tablat,w,c
   412  0009FE  EC12  F003         	call	_Lcd_Chr_CP
   413  000A02                     
   414                           ;flexlcd.h: 133: buffer++;
   415  000A02  4A05               	infsnz	Lcd_Out@buffer^0,f,c
   416  000A04  2A06               	incf	(Lcd_Out@buffer+1)^0,f,c
   417  000A06                     l1015:
   418  000A06  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
   419  000A0A  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   420  000A0E                     	if	0	;tblptru may be non-zero
   421  000A0E                     	endif
   422  000A0E                     	if	0	;tblptru may be non-zero
   423  000A0E                     	endif
   424  000A0E  0008               	tblrd		*
   425  000A10  50F5               	movf	tablat,w,c
   426  000A12  0900               	iorlw	0
   427  000A14  A4D8               	btfss	status,2,c
   428  000A16  EF0F  F005         	goto	u101
   429  000A1A  EF11  F005         	goto	u100
   430  000A1E                     u101:
   431  000A1E  EFF9  F004         	goto	l1011
   432  000A22                     u100:
   433  000A22  0012               	return		;funcret
   434  000A24                     __end_of_Lcd_Out:
   435                           	callstack 0
   436                           
   437 ;; *************** function _Lcd_Chr_CP *****************
   438 ;; Defined at:
   439 ;;		line 160 in file "flexlcd.h"
   440 ;; Parameters:    Size  Location     Type
   441 ;;  data            1    wreg     unsigned char 
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  data            1    2[COMRAM] unsigned char 
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, status,2, status,0
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   453 ;;      Params:         0       0       0       0       0       0       0
   454 ;;      Locals:         1       0       0       0       0       0       0
   455 ;;      Temps:          2       0       0       0       0       0       0
   456 ;;      Totals:         3       0       0       0       0       0       0
   457 ;;Total ram usage:        3 bytes
   458 ;; Hardware stack levels used: 1
   459 ;; This function calls:
   460 ;;		Nothing
   461 ;; This function is called by:
   462 ;;		_Lcd_Out
   463 ;;		_Lcd_Out2
   464 ;; This function uses a non-reentrant model
   465 ;;
   466                           
   467                           	psect	text2
   468  000624                     __ptext2:
   469                           	callstack 0
   470  000624                     _Lcd_Chr_CP:
   471                           	callstack 29
   472                           
   473                           ;incstack = 0
   474                           ;Lcd_Chr_CP@data stored from wreg
   475  000624  6E03               	movwf	Lcd_Chr_CP@data^0,c
   476  000626                     
   477                           ;flexlcd.h: 161: PORTEbits.RE1 = 0; PORTEbits.RE0 = 1;
   478  000626  9284               	bcf	132,1,c	;volatile
   479  000628  8084               	bsf	132,0,c	;volatile
   480  00062A                     
   481                           ;flexlcd.h: 162: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
   482  00062A  6A01               	clrf	??_Lcd_Chr_CP^0,c
   483  00062C  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
   484  00062E  D001               	bra	u45
   485  000630  2A01               	incf	??_Lcd_Chr_CP^0,f,c
   486  000632                     u45:
   487  000632  0E01               	movlw	1
   488  000634  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   489  000636  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   490  000638  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   491  00063A  5083               	movf	131,w,c	;volatile
   492  00063C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   493  00063E  0B7F               	andlw	-129
   494  000640  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   495  000642  6E83               	movwf	131,c	;volatile
   496  000644  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   497  000648  0E06               	movlw	6
   498  00064A  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
   499  00064C                     u55:
   500  00064C  90D8               	bcf	status,0,c
   501  00064E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   502  000650  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
   503  000652  EF26  F003         	goto	u55
   504  000656  0E01               	movlw	1
   505  000658  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   506  00065A  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   507  00065C  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   508  00065E  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   509  000660  5083               	movf	131,w,c	;volatile
   510  000662  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   511  000664  0BBF               	andlw	-65
   512  000666  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   513  000668  6E83               	movwf	131,c	;volatile
   514                           
   515                           ;flexlcd.h: 163: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
   516  00066A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   517  00066E  0E05               	movlw	5
   518  000670  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
   519  000672                     u65:
   520  000672  90D8               	bcf	status,0,c
   521  000674  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   522  000676  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
   523  000678  EF39  F003         	goto	u65
   524  00067C  0E01               	movlw	1
   525  00067E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   526  000680  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   527  000682  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   528  000684  5083               	movf	131,w,c	;volatile
   529  000686  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   530  000688  0BDF               	andlw	-33
   531  00068A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   532  00068C  6E83               	movwf	131,c	;volatile
   533  00068E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   534  000692  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   535  000694  0E0F               	movlw	15
   536  000696  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   537  000698  0E01               	movlw	1
   538  00069A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   539  00069C  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   540  00069E  5083               	movf	131,w,c	;volatile
   541  0006A0  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   542  0006A2  0BEF               	andlw	-17
   543  0006A4  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   544  0006A6  6E83               	movwf	131,c	;volatile
   545  0006A8                     
   546                           ;flexlcd.h: 164: _delay(10);
   547  0006A8  0E03               	movlw	3
   548  0006AA                     u117:
   549  0006AA  2EE8               	decfsz	wreg,f,c
   550  0006AC  D7FE               	bra	u117
   551  0006AE  F000               	nop	
   552  0006B0                     
   553                           ;flexlcd.h: 165: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
   554  0006B0  8284               	bsf	132,1,c	;volatile
   555  0006B2  0E03               	movlw	3
   556  0006B4                     u127:
   557  0006B4  2EE8               	decfsz	wreg,f,c
   558  0006B6  D7FE               	bra	u127
   559  0006B8  F000               	nop	
   560  0006BA  9284               	bcf	132,1,c	;volatile
   561                           
   562                           ;flexlcd.h: 166: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
   563  0006BC  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   564  0006C0  90D8               	bcf	status,0,c
   565  0006C2  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   566  0006C4  90D8               	bcf	status,0,c
   567  0006C6  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   568  0006C8  90D8               	bcf	status,0,c
   569  0006CA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   570  0006CC  0E01               	movlw	1
   571  0006CE  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   572  0006D0  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   573  0006D2  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   574  0006D4  5083               	movf	131,w,c	;volatile
   575  0006D6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   576  0006D8  0B7F               	andlw	-129
   577  0006DA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   578  0006DC  6E83               	movwf	131,c	;volatile
   579  0006DE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   580  0006E2  90D8               	bcf	status,0,c
   581  0006E4  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   582  0006E6  90D8               	bcf	status,0,c
   583  0006E8  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   584  0006EA  0E01               	movlw	1
   585  0006EC  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   586  0006EE  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   587  0006F0  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   588  0006F2  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   589  0006F4  5083               	movf	131,w,c	;volatile
   590  0006F6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   591  0006F8  0BBF               	andlw	-65
   592  0006FA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   593  0006FC  6E83               	movwf	131,c	;volatile
   594                           
   595                           ;flexlcd.h: 167: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
   596  0006FE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   597  000702  90D8               	bcf	status,0,c
   598  000704  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   599  000706  0E01               	movlw	1
   600  000708  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   601  00070A  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   602  00070C  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   603  00070E  5083               	movf	131,w,c	;volatile
   604  000710  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   605  000712  0BDF               	andlw	-33
   606  000714  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   607  000716  6E83               	movwf	131,c	;volatile
   608  000718  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   609  00071C  0E01               	movlw	1
   610  00071E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   611  000720  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   612  000722  5083               	movf	131,w,c	;volatile
   613  000724  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   614  000726  0BEF               	andlw	-17
   615  000728  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   616  00072A  6E83               	movwf	131,c	;volatile
   617  00072C                     
   618                           ;flexlcd.h: 168: _delay(10);
   619  00072C  0E03               	movlw	3
   620  00072E                     u137:
   621  00072E  2EE8               	decfsz	wreg,f,c
   622  000730  D7FE               	bra	u137
   623  000732  F000               	nop	
   624  000734                     
   625                           ;flexlcd.h: 169: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
   626  000734  8284               	bsf	132,1,c	;volatile
   627  000736  0E03               	movlw	3
   628  000738                     u147:
   629  000738  2EE8               	decfsz	wreg,f,c
   630  00073A  D7FE               	bra	u147
   631  00073C  F000               	nop	
   632  00073E  9284               	bcf	132,1,c	;volatile
   633  000740                     
   634                           ;flexlcd.h: 170: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
   635  000740  0E03               	movlw	3
   636  000742                     u157:
   637  000742  2EE8               	decfsz	wreg,f,c
   638  000744  D7FE               	bra	u157
   639  000746  F000               	nop	
   640  000748  0E0F               	movlw	15
   641  00074A  6E01               	movwf	??_Lcd_Chr_CP^0,c
   642  00074C  0E48               	movlw	72
   643  00074E                     u167:
   644  00074E  2EE8               	decfsz	wreg,f,c
   645  000750  D7FE               	bra	u167
   646  000752  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
   647  000754  D7FC               	bra	u167
   648  000756  0012               	return		;funcret
   649  000758                     __end_of_Lcd_Chr_CP:
   650                           	callstack 0
   651                           
   652 ;; *************** function _Lcd_Init *****************
   653 ;; Defined at:
   654 ;;		line 76 in file "flexlcd.h"
   655 ;; Parameters:    Size  Location     Type
   656 ;;		None
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  data            1    4[COMRAM] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   668 ;;      Params:         0       0       0       0       0       0       0
   669 ;;      Locals:         1       0       0       0       0       0       0
   670 ;;      Temps:          1       0       0       0       0       0       0
   671 ;;      Totals:         2       0       0       0       0       0       0
   672 ;;Total ram usage:        2 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; Hardware stack levels required when called: 1
   675 ;; This function calls:
   676 ;;		_Lcd_Cmd
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text3
   683  000884                     __ptext3:
   684                           	callstack 0
   685  000884                     _Lcd_Init:
   686                           	callstack 29
   687  000884                     
   688                           ;flexlcd.h: 77: unsigned char data;;flexlcd.h: 78: TRISDbits.TRISD7 = 0;
   689  000884  9E95               	bcf	149,7,c	;volatile
   690                           
   691                           ;flexlcd.h: 79: TRISDbits.TRISD6 = 0;
   692  000886  9C95               	bcf	149,6,c	;volatile
   693                           
   694                           ;flexlcd.h: 80: TRISDbits.TRISD5 = 0;
   695  000888  9A95               	bcf	149,5,c	;volatile
   696                           
   697                           ;flexlcd.h: 81: TRISDbits.TRISD4 = 0;
   698  00088A  9895               	bcf	149,4,c	;volatile
   699                           
   700                           ;flexlcd.h: 82: TRISEbits.TRISE1 = 0;
   701  00088C  9296               	bcf	150,1,c	;volatile
   702                           
   703                           ;flexlcd.h: 83: TRISEbits.TRISE0 = 0;
   704  00088E  9096               	bcf	150,0,c	;volatile
   705                           
   706                           ;flexlcd.h: 84: PORTDbits.RD7 = 0;
   707  000890  9E83               	bcf	131,7,c	;volatile
   708                           
   709                           ;flexlcd.h: 85: PORTDbits.RD6 = 0;
   710  000892  9C83               	bcf	131,6,c	;volatile
   711                           
   712                           ;flexlcd.h: 86: PORTDbits.RD5 = 0;
   713  000894  9A83               	bcf	131,5,c	;volatile
   714                           
   715                           ;flexlcd.h: 87: PORTDbits.RD4 = 0;
   716  000896  9883               	bcf	131,4,c	;volatile
   717                           
   718                           ;flexlcd.h: 88: PORTEbits.RE1 = 0;
   719  000898  9284               	bcf	132,1,c	;volatile
   720                           
   721                           ;flexlcd.h: 89: PORTEbits.RE0 = 0;
   722  00089A  9084               	bcf	132,0,c	;volatile
   723  00089C                     
   724                           ;flexlcd.h: 90: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   725  00089C  0E0F               	movlw	15
   726  00089E  6E04               	movwf	??_Lcd_Init^0,c
   727  0008A0  0E48               	movlw	72
   728  0008A2                     u177:
   729  0008A2  2EE8               	decfsz	wreg,f,c
   730  0008A4  D7FE               	bra	u177
   731  0008A6  2E04               	decfsz	??_Lcd_Init^0,f,c
   732  0008A8  D7FC               	bra	u177
   733                           
   734                           ;flexlcd.h: 91: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   735  0008AA  0E0F               	movlw	15
   736  0008AC  6E04               	movwf	??_Lcd_Init^0,c
   737  0008AE  0E48               	movlw	72
   738  0008B0                     u187:
   739  0008B0  2EE8               	decfsz	wreg,f,c
   740  0008B2  D7FE               	bra	u187
   741  0008B4  2E04               	decfsz	??_Lcd_Init^0,f,c
   742  0008B6  D7FC               	bra	u187
   743                           
   744                           ;flexlcd.h: 92: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   745  0008B8  0E0F               	movlw	15
   746  0008BA  6E04               	movwf	??_Lcd_Init^0,c
   747  0008BC  0E48               	movlw	72
   748  0008BE                     u197:
   749  0008BE  2EE8               	decfsz	wreg,f,c
   750  0008C0  D7FE               	bra	u197
   751  0008C2  2E04               	decfsz	??_Lcd_Init^0,f,c
   752  0008C4  D7FC               	bra	u197
   753                           
   754                           ;flexlcd.h: 93: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   755  0008C6  0E0F               	movlw	15
   756  0008C8  6E04               	movwf	??_Lcd_Init^0,c
   757  0008CA  0E48               	movlw	72
   758  0008CC                     u207:
   759  0008CC  2EE8               	decfsz	wreg,f,c
   760  0008CE  D7FE               	bra	u207
   761  0008D0  2E04               	decfsz	??_Lcd_Init^0,f,c
   762  0008D2  D7FC               	bra	u207
   763                           
   764                           ;flexlcd.h: 94: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   765  0008D4  0E0F               	movlw	15
   766  0008D6  6E04               	movwf	??_Lcd_Init^0,c
   767  0008D8  0E48               	movlw	72
   768  0008DA                     u217:
   769  0008DA  2EE8               	decfsz	wreg,f,c
   770  0008DC  D7FE               	bra	u217
   771  0008DE  2E04               	decfsz	??_Lcd_Init^0,f,c
   772  0008E0  D7FC               	bra	u217
   773                           
   774                           ;flexlcd.h: 95: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   775  0008E2  0E0F               	movlw	15
   776  0008E4  6E04               	movwf	??_Lcd_Init^0,c
   777  0008E6  0E48               	movlw	72
   778  0008E8                     u227:
   779  0008E8  2EE8               	decfsz	wreg,f,c
   780  0008EA  D7FE               	bra	u227
   781  0008EC  2E04               	decfsz	??_Lcd_Init^0,f,c
   782  0008EE  D7FC               	bra	u227
   783  0008F0                     
   784                           ;flexlcd.h: 96: for(data = 1; data < 4; data ++)
   785  0008F0  0E01               	movlw	1
   786  0008F2  6E05               	movwf	Lcd_Init@data^0,c
   787  0008F4                     l47:
   788                           
   789                           ;flexlcd.h: 97: {;flexlcd.h: 98: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
   790  0008F4  9E83               	bcf	131,7,c	;volatile
   791  0008F6  9C83               	bcf	131,6,c	;volatile
   792  0008F8  8A83               	bsf	131,5,c	;volatile
   793  0008FA  8883               	bsf	131,4,c	;volatile
   794  0008FC  9284               	bcf	132,1,c	;volatile
   795                           
   796                           ;flexlcd.h: 99: PORTEbits.RE0 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
   797  0008FE  9084               	bcf	132,0,c	;volatile
   798  000900  9E83               	bcf	131,7,c	;volatile
   799  000902  9C83               	bcf	131,6,c	;volatile
   800  000904  8A83               	bsf	131,5,c	;volatile
   801  000906  8883               	bsf	131,4,c	;volatile
   802                           
   803                           ;flexlcd.h: 100: PORTEbits.RE1 = 1; PORTEbits.RE0 = 0;
   804  000908  8284               	bsf	132,1,c	;volatile
   805  00090A  9084               	bcf	132,0,c	;volatile
   806  00090C                     
   807                           ;flexlcd.h: 101: _delay((unsigned long)((5)*(8000000/4000000.0)));
   808  00090C  0E03               	movlw	3
   809  00090E                     u237:
   810  00090E  2EE8               	decfsz	wreg,f,c
   811  000910  D7FE               	bra	u237
   812  000912  F000               	nop	
   813  000914                     
   814                           ;flexlcd.h: 102: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 1; PORTEbits.RE1 = 0;
   815  000914  9E83               	bcf	131,7,c	;volatile
   816  000916  9C83               	bcf	131,6,c	;volatile
   817  000918  8A83               	bsf	131,5,c	;volatile
   818  00091A  8883               	bsf	131,4,c	;volatile
   819  00091C  9284               	bcf	132,1,c	;volatile
   820  00091E                     
   821                           ;flexlcd.h: 103: PORTEbits.RE0 = 0;
   822  00091E  9084               	bcf	132,0,c	;volatile
   823                           
   824                           ;flexlcd.h: 104: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   825  000920  0E0F               	movlw	15
   826  000922  6E04               	movwf	??_Lcd_Init^0,c
   827  000924  0E48               	movlw	72
   828  000926                     u247:
   829  000926  2EE8               	decfsz	wreg,f,c
   830  000928  D7FE               	bra	u247
   831  00092A  2E04               	decfsz	??_Lcd_Init^0,f,c
   832  00092C  D7FC               	bra	u247
   833  00092E  2A05               	incf	Lcd_Init@data^0,f,c
   834  000930  0E03               	movlw	3
   835  000932  6405               	cpfsgt	Lcd_Init@data^0,c
   836  000934  EF9E  F004         	goto	u71
   837  000938  EFA0  F004         	goto	u70
   838  00093C                     u71:
   839  00093C  EF7A  F004         	goto	l47
   840  000940                     u70:
   841  000940                     
   842                           ;flexlcd.h: 105: };flexlcd.h: 106: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
   843  000940  9E83               	bcf	131,7,c	;volatile
   844  000942  9C83               	bcf	131,6,c	;volatile
   845  000944  8A83               	bsf	131,5,c	;volatile
   846  000946  9883               	bcf	131,4,c	;volatile
   847  000948  9284               	bcf	132,1,c	;volatile
   848  00094A  9084               	bcf	132,0,c	;volatile
   849                           
   850                           ;flexlcd.h: 107: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 1; PORTEbits.RE0 = 0;
   851  00094C  9E83               	bcf	131,7,c	;volatile
   852  00094E  9C83               	bcf	131,6,c	;volatile
   853  000950  8A83               	bsf	131,5,c	;volatile
   854  000952  9883               	bcf	131,4,c	;volatile
   855  000954  8284               	bsf	132,1,c	;volatile
   856  000956  9084               	bcf	132,0,c	;volatile
   857  000958                     
   858                           ;flexlcd.h: 108: _delay((unsigned long)((5)*(8000000/4000000.0)));
   859  000958  0E03               	movlw	3
   860  00095A                     u257:
   861  00095A  2EE8               	decfsz	wreg,f,c
   862  00095C  D7FE               	bra	u257
   863  00095E  F000               	nop	
   864  000960                     
   865                           ;flexlcd.h: 109: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
   866  000960  9E83               	bcf	131,7,c	;volatile
   867  000962  9C83               	bcf	131,6,c	;volatile
   868  000964  8A83               	bsf	131,5,c	;volatile
   869  000966  9883               	bcf	131,4,c	;volatile
   870  000968  9284               	bcf	132,1,c	;volatile
   871  00096A  9084               	bcf	132,0,c	;volatile
   872                           
   873                           ;flexlcd.h: 110: _delay((unsigned long)((5500)*(8000000/4000000.0)));
   874  00096C  0E0F               	movlw	15
   875  00096E  6E04               	movwf	??_Lcd_Init^0,c
   876  000970  0E48               	movlw	72
   877  000972                     u267:
   878  000972  2EE8               	decfsz	wreg,f,c
   879  000974  D7FE               	bra	u267
   880  000976  2E04               	decfsz	??_Lcd_Init^0,f,c
   881  000978  D7FC               	bra	u267
   882  00097A  0E28               	movlw	40
   883  00097C  ECAC  F003         	call	_Lcd_Cmd
   884  000980  0E10               	movlw	16
   885  000982  ECAC  F003         	call	_Lcd_Cmd
   886  000986  0E01               	movlw	1
   887  000988  ECAC  F003         	call	_Lcd_Cmd
   888  00098C  0E0F               	movlw	15
   889  00098E  ECAC  F003         	call	_Lcd_Cmd
   890  000992  0012               	return		;funcret
   891  000994                     __end_of_Lcd_Init:
   892                           	callstack 0
   893                           
   894 ;; *************** function _Lcd_Cmd *****************
   895 ;; Defined at:
   896 ;;		line 174 in file "flexlcd.h"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  data            1    wreg     unsigned char 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  data            1    2[COMRAM] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, status,2, status,0
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   910 ;;      Params:         0       0       0       0       0       0       0
   911 ;;      Locals:         1       0       0       0       0       0       0
   912 ;;      Temps:          2       0       0       0       0       0       0
   913 ;;      Totals:         3       0       0       0       0       0       0
   914 ;;Total ram usage:        3 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; This function calls:
   917 ;;		Nothing
   918 ;; This function is called by:
   919 ;;		_Lcd_Init
   920 ;;		_Lcd_Out
   921 ;;		_main
   922 ;;		_Lcd_Out2
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           
   926                           	psect	text4
   927  000758                     __ptext4:
   928                           	callstack 0
   929  000758                     _Lcd_Cmd:
   930                           	callstack 29
   931                           
   932                           ;incstack = 0
   933                           ;Lcd_Cmd@data stored from wreg
   934  000758  6E03               	movwf	Lcd_Cmd@data^0,c
   935  00075A                     
   936                           ;flexlcd.h: 175: PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
   937  00075A  9284               	bcf	132,1,c	;volatile
   938  00075C  9084               	bcf	132,0,c	;volatile
   939  00075E                     
   940                           ;flexlcd.h: 176: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
   941  00075E  6A01               	clrf	??_Lcd_Cmd^0,c
   942  000760  AE03               	btfss	Lcd_Cmd@data^0,7,c
   943  000762  D001               	bra	u15
   944  000764  2A01               	incf	??_Lcd_Cmd^0,f,c
   945  000766                     u15:
   946  000766  0E01               	movlw	1
   947  000768  1601               	andwf	??_Lcd_Cmd^0,f,c
   948  00076A  3201               	rrcf	??_Lcd_Cmd^0,f,c
   949  00076C  3201               	rrcf	??_Lcd_Cmd^0,f,c
   950  00076E  5083               	movf	131,w,c	;volatile
   951  000770  1801               	xorwf	??_Lcd_Cmd^0,w,c
   952  000772  0B7F               	andlw	-129
   953  000774  1801               	xorwf	??_Lcd_Cmd^0,w,c
   954  000776  6E83               	movwf	131,c	;volatile
   955  000778  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
   956  00077C  0E06               	movlw	6
   957  00077E  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
   958  000780                     u25:
   959  000780  90D8               	bcf	status,0,c
   960  000782  3201               	rrcf	??_Lcd_Cmd^0,f,c
   961  000784  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
   962  000786  EFC0  F003         	goto	u25
   963  00078A  0E01               	movlw	1
   964  00078C  1601               	andwf	??_Lcd_Cmd^0,f,c
   965  00078E  3A01               	swapf	??_Lcd_Cmd^0,f,c
   966  000790  4601               	rlncf	??_Lcd_Cmd^0,f,c
   967  000792  4601               	rlncf	??_Lcd_Cmd^0,f,c
   968  000794  5083               	movf	131,w,c	;volatile
   969  000796  1801               	xorwf	??_Lcd_Cmd^0,w,c
   970  000798  0BBF               	andlw	-65
   971  00079A  1801               	xorwf	??_Lcd_Cmd^0,w,c
   972  00079C  6E83               	movwf	131,c	;volatile
   973                           
   974                           ;flexlcd.h: 177: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
   975  00079E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
   976  0007A2  0E05               	movlw	5
   977  0007A4  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
   978  0007A6                     u35:
   979  0007A6  90D8               	bcf	status,0,c
   980  0007A8  3201               	rrcf	??_Lcd_Cmd^0,f,c
   981  0007AA  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
   982  0007AC  EFD3  F003         	goto	u35
   983  0007B0  0E01               	movlw	1
   984  0007B2  1601               	andwf	??_Lcd_Cmd^0,f,c
   985  0007B4  3A01               	swapf	??_Lcd_Cmd^0,f,c
   986  0007B6  4601               	rlncf	??_Lcd_Cmd^0,f,c
   987  0007B8  5083               	movf	131,w,c	;volatile
   988  0007BA  1801               	xorwf	??_Lcd_Cmd^0,w,c
   989  0007BC  0BDF               	andlw	-33
   990  0007BE  1801               	xorwf	??_Lcd_Cmd^0,w,c
   991  0007C0  6E83               	movwf	131,c	;volatile
   992  0007C2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
   993  0007C6  3A01               	swapf	??_Lcd_Cmd^0,f,c
   994  0007C8  0E0F               	movlw	15
   995  0007CA  1601               	andwf	??_Lcd_Cmd^0,f,c
   996  0007CC  0E01               	movlw	1
   997  0007CE  1601               	andwf	??_Lcd_Cmd^0,f,c
   998  0007D0  3A01               	swapf	??_Lcd_Cmd^0,f,c
   999  0007D2  5083               	movf	131,w,c	;volatile
  1000  0007D4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1001  0007D6  0BEF               	andlw	-17
  1002  0007D8  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1003  0007DA  6E83               	movwf	131,c	;volatile
  1004  0007DC                     
  1005                           ;flexlcd.h: 178: _delay(10);
  1006  0007DC  0E03               	movlw	3
  1007  0007DE                     u277:
  1008  0007DE  2EE8               	decfsz	wreg,f,c
  1009  0007E0  D7FE               	bra	u277
  1010  0007E2  F000               	nop	
  1011  0007E4                     
  1012                           ;flexlcd.h: 179: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1013  0007E4  8284               	bsf	132,1,c	;volatile
  1014  0007E6  0E03               	movlw	3
  1015  0007E8                     u287:
  1016  0007E8  2EE8               	decfsz	wreg,f,c
  1017  0007EA  D7FE               	bra	u287
  1018  0007EC  F000               	nop	
  1019  0007EE  9284               	bcf	132,1,c	;volatile
  1020                           
  1021                           ;flexlcd.h: 180: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1022  0007F0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1023  0007F4  90D8               	bcf	status,0,c
  1024  0007F6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1025  0007F8  90D8               	bcf	status,0,c
  1026  0007FA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1027  0007FC  90D8               	bcf	status,0,c
  1028  0007FE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1029  000800  0E01               	movlw	1
  1030  000802  1601               	andwf	??_Lcd_Cmd^0,f,c
  1031  000804  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1032  000806  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1033  000808  5083               	movf	131,w,c	;volatile
  1034  00080A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1035  00080C  0B7F               	andlw	-129
  1036  00080E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1037  000810  6E83               	movwf	131,c	;volatile
  1038  000812  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1039  000816  90D8               	bcf	status,0,c
  1040  000818  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1041  00081A  90D8               	bcf	status,0,c
  1042  00081C  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1043  00081E  0E01               	movlw	1
  1044  000820  1601               	andwf	??_Lcd_Cmd^0,f,c
  1045  000822  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1046  000824  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1047  000826  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1048  000828  5083               	movf	131,w,c	;volatile
  1049  00082A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1050  00082C  0BBF               	andlw	-65
  1051  00082E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1052  000830  6E83               	movwf	131,c	;volatile
  1053                           
  1054                           ;flexlcd.h: 181: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1055  000832  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1056  000836  90D8               	bcf	status,0,c
  1057  000838  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1058  00083A  0E01               	movlw	1
  1059  00083C  1601               	andwf	??_Lcd_Cmd^0,f,c
  1060  00083E  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1061  000840  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1062  000842  5083               	movf	131,w,c	;volatile
  1063  000844  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1064  000846  0BDF               	andlw	-33
  1065  000848  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1066  00084A  6E83               	movwf	131,c	;volatile
  1067  00084C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1068  000850  0E01               	movlw	1
  1069  000852  1601               	andwf	??_Lcd_Cmd^0,f,c
  1070  000854  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1071  000856  5083               	movf	131,w,c	;volatile
  1072  000858  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1073  00085A  0BEF               	andlw	-17
  1074  00085C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1075  00085E  6E83               	movwf	131,c	;volatile
  1076  000860                     
  1077                           ;flexlcd.h: 182: _delay(10);
  1078  000860  0E03               	movlw	3
  1079  000862                     u297:
  1080  000862  2EE8               	decfsz	wreg,f,c
  1081  000864  D7FE               	bra	u297
  1082  000866  F000               	nop	
  1083  000868                     
  1084                           ;flexlcd.h: 183: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1085  000868  8284               	bsf	132,1,c	;volatile
  1086  00086A  0E03               	movlw	3
  1087  00086C                     u307:
  1088  00086C  2EE8               	decfsz	wreg,f,c
  1089  00086E  D7FE               	bra	u307
  1090  000870  F000               	nop	
  1091  000872  9284               	bcf	132,1,c	;volatile
  1092  000874                     
  1093                           ;flexlcd.h: 184: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1094  000874  0E0F               	movlw	15
  1095  000876  6E01               	movwf	??_Lcd_Cmd^0,c
  1096  000878  0E48               	movlw	72
  1097  00087A                     u317:
  1098  00087A  2EE8               	decfsz	wreg,f,c
  1099  00087C  D7FE               	bra	u317
  1100  00087E  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  1101  000880  D7FC               	bra	u317
  1102  000882  0012               	return		;funcret
  1103  000884                     __end_of_Lcd_Cmd:
  1104                           	callstack 0
  1105                           
  1106                           	psect	rparam
  1107  0000                     
  1108                           	psect	idloc
  1109                           
  1110                           ;Config register IDLOC0 @ 0x200000
  1111                           ;	unspecified, using default values
  1112  200000                     	org	2097152
  1113  200000  FF                 	db	255
  1114                           
  1115                           ;Config register IDLOC1 @ 0x200001
  1116                           ;	unspecified, using default values
  1117  200001                     	org	2097153
  1118  200001  FF                 	db	255
  1119                           
  1120                           ;Config register IDLOC2 @ 0x200002
  1121                           ;	unspecified, using default values
  1122  200002                     	org	2097154
  1123  200002  FF                 	db	255
  1124                           
  1125                           ;Config register IDLOC3 @ 0x200003
  1126                           ;	unspecified, using default values
  1127  200003                     	org	2097155
  1128  200003  FF                 	db	255
  1129                           
  1130                           ;Config register IDLOC4 @ 0x200004
  1131                           ;	unspecified, using default values
  1132  200004                     	org	2097156
  1133  200004  FF                 	db	255
  1134                           
  1135                           ;Config register IDLOC5 @ 0x200005
  1136                           ;	unspecified, using default values
  1137  200005                     	org	2097157
  1138  200005  FF                 	db	255
  1139                           
  1140                           ;Config register IDLOC6 @ 0x200006
  1141                           ;	unspecified, using default values
  1142  200006                     	org	2097158
  1143  200006  FF                 	db	255
  1144                           
  1145                           ;Config register IDLOC7 @ 0x200007
  1146                           ;	unspecified, using default values
  1147  200007                     	org	2097159
  1148  200007  FF                 	db	255
  1149                           
  1150                           	psect	config
  1151                           
  1152                           ; Padding undefined space
  1153  300000                     	org	3145728
  1154  300000  FF                 	db	255
  1155                           
  1156                           ;Config register CONFIG1H @ 0x300001
  1157                           ;	Oscillator Selection bits
  1158                           ;	OSC = HS, HS oscillator
  1159                           ;	Fail-Safe Clock Monitor Enable bit
  1160                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1161                           ;	Internal/External Oscillator Switchover bit
  1162                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1163  300001                     	org	3145729
  1164  300001  02                 	db	2
  1165                           
  1166                           ;Config register CONFIG2L @ 0x300002
  1167                           ;	Power-up Timer Enable bit
  1168                           ;	PWRT = OFF, PWRT disabled
  1169                           ;	Brown-out Reset Enable bits
  1170                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1171                           ;	Brown Out Reset Voltage bits
  1172                           ;	BORV = 3, Minimum setting
  1173  300002                     	org	3145730
  1174  300002  1F                 	db	31
  1175                           
  1176                           ;Config register CONFIG2H @ 0x300003
  1177                           ;	Watchdog Timer Enable bit
  1178                           ;	WDT = ON, WDT enabled
  1179                           ;	Watchdog Timer Postscale Select bits
  1180                           ;	WDTPS = 32768, 1:32768
  1181  300003                     	org	3145731
  1182  300003  1F                 	db	31
  1183                           
  1184                           ; Padding undefined space
  1185  300004                     	org	3145732
  1186  300004  FF                 	db	255
  1187                           
  1188                           ;Config register CONFIG3H @ 0x300005
  1189                           ;	CCP2 MUX bit
  1190                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1191                           ;	PORTB A/D Enable bit
  1192                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1193                           ;	Low-Power Timer1 Oscillator Enable bit
  1194                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1195                           ;	MCLR Pin Enable bit
  1196                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1197  300005                     	org	3145733
  1198  300005  01                 	db	1
  1199                           
  1200                           ;Config register CONFIG4L @ 0x300006
  1201                           ;	Stack Full/Underflow Reset Enable bit
  1202                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1203                           ;	Single-Supply ICSP Enable bit
  1204                           ;	LVP = ON, Single-Supply ICSP enabled
  1205                           ;	Extended Instruction Set Enable bit
  1206                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1207                           ;	Background Debugger Enable bit
  1208                           ;	DEBUG = 0x1, unprogrammed default
  1209  300006                     	org	3145734
  1210  300006  85                 	db	133
  1211                           
  1212                           ; Padding undefined space
  1213  300007                     	org	3145735
  1214  300007  FF                 	db	255
  1215                           
  1216                           ;Config register CONFIG5L @ 0x300008
  1217                           ;	Code Protection bit
  1218                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1219                           ;	Code Protection bit
  1220                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1221                           ;	Code Protection bit
  1222                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1223                           ;	Code Protection bit
  1224                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1225  300008                     	org	3145736
  1226  300008  0F                 	db	15
  1227                           
  1228                           ;Config register CONFIG5H @ 0x300009
  1229                           ;	Boot Block Code Protection bit
  1230                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1231                           ;	Data EEPROM Code Protection bit
  1232                           ;	CPD = OFF, Data EEPROM not code-protected
  1233  300009                     	org	3145737
  1234  300009  C0                 	db	192
  1235                           
  1236                           ;Config register CONFIG6L @ 0x30000A
  1237                           ;	Write Protection bit
  1238                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1239                           ;	Write Protection bit
  1240                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1241                           ;	Write Protection bit
  1242                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1243                           ;	Write Protection bit
  1244                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1245  30000A                     	org	3145738
  1246  30000A  0F                 	db	15
  1247                           
  1248                           ;Config register CONFIG6H @ 0x30000B
  1249                           ;	Configuration Register Write Protection bit
  1250                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1251                           ;	Boot Block Write Protection bit
  1252                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1253                           ;	Data EEPROM Write Protection bit
  1254                           ;	WRTD = OFF, Data EEPROM not write-protected
  1255  30000B                     	org	3145739
  1256  30000B  E0                 	db	224
  1257                           
  1258                           ;Config register CONFIG7L @ 0x30000C
  1259                           ;	Table Read Protection bit
  1260                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1261                           ;	Table Read Protection bit
  1262                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1263                           ;	Table Read Protection bit
  1264                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1265                           ;	Table Read Protection bit
  1266                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1267  30000C                     	org	3145740
  1268  30000C  0F                 	db	15
  1269                           
  1270                           ;Config register CONFIG7H @ 0x30000D
  1271                           ;	Boot Block Table Read Protection bit
  1272                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1273  30000D                     	org	3145741
  1274  30000D  40                 	db	64
  1275                           tosu	equ	0xFFF
  1276                           tosh	equ	0xFFE
  1277                           tosl	equ	0xFFD
  1278                           stkptr	equ	0xFFC
  1279                           pclatu	equ	0xFFB
  1280                           pclath	equ	0xFFA
  1281                           pcl	equ	0xFF9
  1282                           tblptru	equ	0xFF8
  1283                           tblptrh	equ	0xFF7
  1284                           tblptrl	equ	0xFF6
  1285                           tablat	equ	0xFF5
  1286                           prodh	equ	0xFF4
  1287                           prodl	equ	0xFF3
  1288                           indf0	equ	0xFEF
  1289                           postinc0	equ	0xFEE
  1290                           postdec0	equ	0xFED
  1291                           preinc0	equ	0xFEC
  1292                           plusw0	equ	0xFEB
  1293                           fsr0h	equ	0xFEA
  1294                           fsr0l	equ	0xFE9
  1295                           wreg	equ	0xFE8
  1296                           indf1	equ	0xFE7
  1297                           postinc1	equ	0xFE6
  1298                           postdec1	equ	0xFE5
  1299                           preinc1	equ	0xFE4
  1300                           plusw1	equ	0xFE3
  1301                           fsr1h	equ	0xFE2
  1302                           fsr1l	equ	0xFE1
  1303                           bsr	equ	0xFE0
  1304                           indf2	equ	0xFDF
  1305                           postinc2	equ	0xFDE
  1306                           postdec2	equ	0xFDD
  1307                           preinc2	equ	0xFDC
  1308                           plusw2	equ	0xFDB
  1309                           fsr2h	equ	0xFDA
  1310                           fsr2l	equ	0xFD9
  1311                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      8       8
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Out
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1055
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     725
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      8       8       1        6.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBIGSFRhhh         E      0       0      16        0.0%
BITBIGSFRhhl        2E      0       0      17        0.0%
BITBIGSFRhl         2A      0       0      18        0.0%
BITBIGSFRlhlh        5      0       0      19        0.0%
BITBIGSFRlhll        5      0       0      20        0.0%
BITBIGSFRlll         1      0       0      21        0.0%
ABS                  0      0       0      22        0.0%
BIGRAM             5FF      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Nov 23 11:41:35 2022

                     l62 0A22                       l47 08F4                       l48 0940  
                     l81 0882                       l49 0992                       l78 0756  
                     l86 0A8C                       u15 0766                       u25 0780  
                     u35 07A6                       u45 0632                       u70 0940  
                     u71 093C                       u55 064C                       u65 0672  
                    l901 091A                      l911 0960                      l903 091C  
                    l841 07DC                      l921 096A                      l913 0962  
                    l905 091E                      l851 0868                      l843 07E4  
                    l931 0986                      l923 097A                      l915 0964  
                    l907 092E                      l853 086A                      l845 07E6  
                    l837 075A                      l933 0986                      l925 097A  
                    l917 0966                      l909 0958                      l861 062A  
                    l855 0872                      l847 07EE                      l839 075E  
                    l935 098C                      l927 0980                      l919 0968  
                    l871 072C                      l863 06A8                      l857 0874  
                    l849 0860                      l937 098C                      l929 0980  
                    l881 0748                      l873 0734                      l865 06B0  
                    l883 0884                      l875 0736                      l867 06B2  
                    l859 0626                      l893 090C                      l885 089C  
                    l877 073E                      l869 06BA                      l895 0914  
                    l887 08F0                      l879 0740                      l897 0916  
                    l899 0918                      l995 0996                      l997 099A  
                    l999 09A4                      u100 0A22                      u101 0A1E  
                    u117 06AA                      u207 08CC                      u127 06B4  
                    u217 08DA                      u137 072E                      u307 086C  
                    u227 08E8                      u147 0738                      u317 087A  
                    u237 090E                      u157 0742                      u247 0926  
                    u167 074E                      u257 095A                      u177 08A2  
                    u267 0972                      u187 08B0                      u277 07DE  
                    u197 08BE                      u287 07E8                      u297 0862  
                    wreg 000FE8                     l1001 09AE                     l1011 09F2  
                   l1003 09B8                     l1013 0A02                     l1021 0A5E  
                   l1015 0A06                     l1007 09C2                     l1023 0A62  
                   l1009 09E8                     l1025 0A68                     l1017 0A24  
                   l1027 0A7A                     l1019 0A2C                     STR_1 0601  
                   STR_2 0612                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     _main 0A24  
                   start 0000          __end_of_Lcd_Cmd 0884          __end_of_Lcd_Out 0A24  
           ___param_bank 000000               _Lcd_Chr_CP 0624                    ?_main 0001  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    tablat 000FF5  
                  status 000FD8         __end_of_Lcd_Init 0994          __initialization 0A96  
           __end_of_main 0A96                   ??_main 0009            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                ??_Lcd_Cmd 0001  
              ??_Lcd_Out 0007              ?_Lcd_Chr_CP 0001                   isa$std 000001  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0080  __end_of__initialization 0A96  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?_Lcd_Init 0001  
             ??_Lcd_Init 0004                  _Lcd_Cmd 0758                  _Lcd_Out 0994  
                __Hparam 0000                  __Lparam 0000             __psmallconst 0600  
                __pcinit 0A96                  __ramtop 0600                  __ptext0 0A24  
                __ptext1 0994                  __ptext2 0624                  __ptext3 0884  
                __ptext4 0758     end_of_initialization 0A96            __Lmediumconst 0000  
           ??_Lcd_Chr_CP 0001                _PORTDbits 000F83                _PORTEbits 000F84  
              _TRISDbits 000F95                _TRISEbits 000F96       __end_of_Lcd_Chr_CP 0758  
    start_initialization 0A96            Lcd_Out@buffer 0005                 ?_Lcd_Cmd 0001  
               ?_Lcd_Out 0004              __smallconst 0600                 Lcd_Out@x 0004  
               Lcd_Out@y 0007             Lcd_Init@data 0005                 _Lcd_Init 0884  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
         Lcd_Chr_CP@data 0003              Lcd_Cmd@data 0003                 isa$xinst 000000  
            Lcd_Out@data 0008  
