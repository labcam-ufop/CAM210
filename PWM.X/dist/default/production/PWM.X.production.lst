

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Nov 23 16:17:27 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4520 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     
    58                           	psect	idataCOMRAM
    59  000CF2                     __pidataCOMRAM:
    60                           	callstack 0
    61                           
    62                           ;initializer for _duty
    63  000CF2  000A               	dw	10
    64  0000                     _ADRESL	set	4035
    65  0000                     _ADRESH	set	4036
    66  0000                     _PORTE	set	3972
    67  0000                     _PORTD	set	3971
    68  0000                     _PORTC	set	3970
    69  0000                     _TRISE	set	3990
    70  0000                     _TRISD	set	3989
    71  0000                     _TRISC	set	3988
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _PORTB	set	3969
    74  0000                     _PORTCbits	set	3970
    75  0000                     _TRISCbits	set	3988
    76  0000                     _CCP1CON	set	4029
    77  0000                     _ADCON2	set	4032
    78  0000                     _ADCON1	set	4033
    79  0000                     _ADCON0	set	4034
    80  0000                     _T2CONbits	set	4042
    81  0000                     _CCPR1L	set	4030
    82  0000                     _TRISEbits	set	3990
    83  0000                     _PIR1bits	set	3998
    84  0000                     _TRISDbits	set	3989
    85  0000                     _LATB	set	3978
    86  0000                     _TRISB	set	3987
    87  0000                     _PORTEbits	set	3972
    88  0000                     _PORTDbits	set	3971
    89  0000                     _INTCON2bits	set	4081
    90  0000                     _PR2	set	4043
    91  0000                     _LATE	set	3981
    92  0000                     _LATD	set	3980
    93  0000                     _LATC	set	3979
    94                           
    95                           	psect	smallconst
    96  000600                     __psmallconst:
    97                           	callstack 0
    98  000600  00                 	db	0
    99  000601                     STR_2:
   100  000601  20                 	db	32
   101  000602  20                 	db	32
   102  000603  20                 	db	32
   103  000604  20                 	db	32
   104  000605  20                 	db	32
   105  000606  20                 	db	32
   106  000607  50                 	db	80	;'P'
   107  000608  57                 	db	87	;'W'
   108  000609  4D                 	db	77	;'M'
   109  00060A  20                 	db	32
   110  00060B  20                 	db	32
   111  00060C  20                 	db	32
   112  00060D  20                 	db	32
   113  00060E  20                 	db	32
   114  00060F  20                 	db	32
   115  000610  20                 	db	32
   116  000611  00                 	db	0
   117  000612                     STR_1:
   118  000612  50                 	db	80	;'P'
   119  000613  52                 	db	82	;'R'
   120  000614  4F                 	db	79	;'O'
   121  000615  46                 	db	70	;'F'
   122  000616  49                 	db	73	;'I'
   123  000617  43                 	db	67	;'C'
   124  000618  41                 	db	65	;'A'
   125  000619  4D                 	db	77	;'M'
   126  00061A  20                 	db	32
   127  00061B  20                 	db	32
   128  00061C  43                 	db	67	;'C'
   129  00061D  41                 	db	65	;'A'
   130  00061E  4D                 	db	77	;'M'
   131  00061F  32                 	db	50	;'2'
   132  000620  31                 	db	49	;'1'
   133  000621  30                 	db	48	;'0'
   134  000622  00                 	db	0
   135  000623  00                 	db	0	; dummy byte at the end
   136  0000                     
   137                           ; #config settings
   138                           
   139                           	psect	cinit
   140  000CD0                     __pcinit:
   141                           	callstack 0
   142  000CD0                     start_initialization:
   143                           	callstack 0
   144  000CD0                     __initialization:
   145                           	callstack 0
   146                           
   147                           ; Initialize objects allocated to COMRAM (2 bytes)
   148                           ; load TBLPTR registers with __pidataCOMRAM
   149  000CD0  0EF2               	movlw	low __pidataCOMRAM
   150  000CD2  6EF6               	movwf	tblptrl,c
   151  000CD4  0E0C               	movlw	high __pidataCOMRAM
   152  000CD6  6EF7               	movwf	tblptrh,c
   153  000CD8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   154  000CDA  6EF8               	movwf	tblptru,c
   155  000CDC  0009               	tblrd		*+	;fetch initializer
   156  000CDE  CFF5 F017          	movff	tablat,__pdataCOMRAM
   157  000CE2  0009               	tblrd		*+	;fetch initializer
   158  000CE4  CFF5 F018          	movff	tablat,__pdataCOMRAM+1
   159  000CE8                     end_of_initialization:
   160                           	callstack 0
   161  000CE8                     __end_of__initialization:
   162                           	callstack 0
   163  000CE8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   164  000CEA  6EF8               	movwf	tblptru,c
   165  000CEC  0100               	movlb	0
   166  000CEE  EF11  F006         	goto	_main	;jump to C main() function
   167                           
   168                           	psect	dataCOMRAM
   169  000017                     __pdataCOMRAM:
   170                           	callstack 0
   171  000017                     _duty:
   172                           	callstack 0
   173  000017                     	ds	2
   174                           
   175                           	psect	cstackCOMRAM
   176  000001                     __pcstackCOMRAM:
   177                           	callstack 0
   178  000001                     ??_Lcd_Cmd:
   179  000001                     ??_Lcd_Chr_CP:
   180  000001                     ?___aldiv:
   181                           	callstack 0
   182  000001                     ___aldiv@dividend:
   183                           	callstack 0
   184                           
   185                           ; 4 bytes @ 0x0
   186  000001                     	ds	2
   187  000003                     Lcd_Chr_CP@data:
   188                           	callstack 0
   189  000003                     Lcd_Cmd@data:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x2
   193  000003                     	ds	1
   194  000004                     ??_Lcd_Init:
   195  000004                     Lcd_Out@x:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0x3
   199  000004                     	ds	1
   200  000005                     Lcd_Init@data:
   201                           	callstack 0
   202  000005                     Lcd_Out@buffer:
   203                           	callstack 0
   204  000005                     ___aldiv@divisor:
   205                           	callstack 0
   206                           
   207                           ; 4 bytes @ 0x4
   208  000005                     	ds	2
   209  000007                     Lcd_Out@y:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x6
   213  000007                     	ds	1
   214  000008                     Lcd_Out@data:
   215                           	callstack 0
   216                           
   217                           ; 1 bytes @ 0x7
   218  000008                     	ds	1
   219  000009                     ___aldiv@counter:
   220                           	callstack 0
   221                           
   222                           ; 1 bytes @ 0x8
   223  000009                     	ds	1
   224  00000A                     ___aldiv@sign:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x9
   228  00000A                     	ds	1
   229  00000B                     ___aldiv@quotient:
   230                           	callstack 0
   231                           
   232                           ; 4 bytes @ 0xA
   233  00000B                     	ds	4
   234  00000F                     PWM1_Init@f:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0xE
   238  00000F                     	ds	2
   239  000011                     ??_PWM1_Init:
   240                           
   241                           ; 1 bytes @ 0x10
   242  000011                     	ds	4
   243  000015                     PWM1_Init@temp:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x14
   247  000015                     	ds	2
   248  000017                     
   249                           ; 1 bytes @ 0x16
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 19 in file "mainPWM.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   269 ;;      Params:         0       0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0
   272 ;;      Totals:         0       0       0       0       0       0       0
   273 ;;Total ram usage:        0 bytes
   274 ;; Hardware stack levels required when called: 2
   275 ;; This function calls:
   276 ;;		_Lcd_Cmd
   277 ;;		_Lcd_Init
   278 ;;		_Lcd_Out
   279 ;;		_PWM1_Init
   280 ;;		_PWM1_Start
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text0
   287  000C22                     __ptext0:
   288                           	callstack 0
   289  000C22                     _main:
   290                           	callstack 29
   291  000C22                     
   292                           ;mainPWM.c: 21: ADCON0 = 0b00000000;
   293  000C22  0E00               	movlw	0
   294  000C24  6EC2               	movwf	194,c	;volatile
   295                           
   296                           ;mainPWM.c: 22: ADCON1 = 0b00001111;
   297  000C26  0E0F               	movlw	15
   298  000C28  6EC1               	movwf	193,c	;volatile
   299  000C2A                     
   300                           ;mainPWM.c: 26: INTCON2bits.RBPU = 1;
   301  000C2A  8EF1               	bsf	241,7,c	;volatile
   302                           
   303                           ;mainPWM.c: 28: TRISB = 0b00000000;
   304  000C2C  0E00               	movlw	0
   305  000C2E  6E93               	movwf	147,c	;volatile
   306                           
   307                           ;mainPWM.c: 29: TRISC = 0b00000000;
   308  000C30  0E00               	movlw	0
   309  000C32  6E94               	movwf	148,c	;volatile
   310                           
   311                           ;mainPWM.c: 30: TRISD = 0b00001111;
   312  000C34  0E0F               	movlw	15
   313  000C36  6E95               	movwf	149,c	;volatile
   314                           
   315                           ;mainPWM.c: 31: TRISE = 0b00000000;
   316  000C38  0E00               	movlw	0
   317  000C3A  6E96               	movwf	150,c	;volatile
   318                           
   319                           ;mainPWM.c: 33: PORTB = 0;
   320  000C3C  0E00               	movlw	0
   321  000C3E  6E81               	movwf	129,c	;volatile
   322                           
   323                           ;mainPWM.c: 34: LATB = 0;
   324  000C40  0E00               	movlw	0
   325  000C42  6E8A               	movwf	138,c	;volatile
   326                           
   327                           ;mainPWM.c: 35: PORTC = 0;
   328  000C44  0E00               	movlw	0
   329  000C46  6E82               	movwf	130,c	;volatile
   330                           
   331                           ;mainPWM.c: 36: LATC = 0;
   332  000C48  0E00               	movlw	0
   333  000C4A  6E8B               	movwf	139,c	;volatile
   334                           
   335                           ;mainPWM.c: 37: PORTD = 0;
   336  000C4C  0E00               	movlw	0
   337  000C4E  6E83               	movwf	131,c	;volatile
   338                           
   339                           ;mainPWM.c: 38: LATD = 0;
   340  000C50  0E00               	movlw	0
   341  000C52  6E8C               	movwf	140,c	;volatile
   342                           
   343                           ;mainPWM.c: 39: PORTE = 0;
   344  000C54  0E00               	movlw	0
   345  000C56  6E84               	movwf	132,c	;volatile
   346                           
   347                           ;mainPWM.c: 40: LATE = 0;
   348  000C58  0E00               	movlw	0
   349  000C5A  6E8D               	movwf	141,c	;volatile
   350  000C5C                     
   351                           ;mainPWM.c: 42: Lcd_Init();
   352  000C5C  EC42  F004         	call	_Lcd_Init	;wreg free
   353  000C60                     
   354                           ;mainPWM.c: 43: Lcd_Cmd(12);
   355  000C60  0E0C               	movlw	12
   356  000C62  ECAC  F003         	call	_Lcd_Cmd
   357  000C66                     
   358                           ;mainPWM.c: 44: Lcd_Out(1, 0, "PROFICAM  CAM210");
   359  000C66  0E00               	movlw	0
   360  000C68  6E04               	movwf	Lcd_Out@x^0,c
   361  000C6A  0E12               	movlw	low STR_1
   362  000C6C  6E05               	movwf	Lcd_Out@buffer^0,c
   363  000C6E  0E06               	movlw	high STR_1
   364  000C70  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   365  000C72  0E01               	movlw	1
   366  000C74  ECC9  F005         	call	_Lcd_Out
   367  000C78                     
   368                           ;mainPWM.c: 45: Lcd_Out(2, 0, "      PWM       ");
   369  000C78  0E00               	movlw	0
   370  000C7A  6E04               	movwf	Lcd_Out@x^0,c
   371  000C7C  0E01               	movlw	low STR_2
   372  000C7E  6E05               	movwf	Lcd_Out@buffer^0,c
   373  000C80  0E06               	movlw	high STR_2
   374  000C82  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   375  000C84  0E02               	movlw	2
   376  000C86  ECC9  F005         	call	_Lcd_Out
   377  000C8A                     
   378                           ;mainPWM.c: 47: PWM1_Init(1000);
   379  000C8A  0E03               	movlw	3
   380  000C8C  6E10               	movwf	(PWM1_Init@f+1)^0,c
   381  000C8E  0EE8               	movlw	232
   382  000C90  6E0F               	movwf	PWM1_Init@f^0,c
   383  000C92  EC50  F005         	call	_PWM1_Init	;wreg free
   384  000C96                     
   385                           ;mainPWM.c: 48: PWM1_Start();
   386  000C96  EC52  F006         	call	_PWM1_Start	;wreg free
   387  000C9A                     l158:
   388  000C9A  0004               	clrwdt		;# 
   389  000C9C  EF4D  F006         	goto	l158
   390  000CA0  EF00  F000         	goto	start
   391  000CA4                     __end_of_main:
   392                           	callstack 0
   393                           
   394 ;; *************** function _PWM1_Start *****************
   395 ;; Defined at:
   396 ;;		line 76 in file "pwm.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, status,2
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   410 ;;      Params:         0       0       0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0       0       0
   413 ;;      Totals:         0       0       0       0       0       0       0
   414 ;;Total ram usage:        0 bytes
   415 ;; Hardware stack levels used: 1
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text1
   424  000CA4                     __ptext1:
   425                           	callstack 0
   426  000CA4                     _PWM1_Start:
   427                           	callstack 30
   428  000CA4                     
   429                           ;pwm.c: 79: TRISCbits.TRISC2=0;
   430  000CA4  9494               	bcf	148,2,c	;volatile
   431                           
   432                           ;pwm.c: 80: TRISDbits.TRISD5=0;
   433  000CA6  9A95               	bcf	149,5,c	;volatile
   434  000CA8                     
   435                           ;pwm.c: 83: CCP1CON=0x0F;
   436  000CA8  0E0F               	movlw	15
   437  000CAA  6EBD               	movwf	189,c	;volatile
   438  000CAC                     
   439                           ;pwm.c: 86: T2CONbits.TMR2ON=1;
   440  000CAC  84CA               	bsf	202,2,c	;volatile
   441  000CAE                     
   442                           ;pwm.c: 90: PIR1bits.TMR2IF=0;
   443  000CAE  929E               	bcf	158,1,c	;volatile
   444  000CB0                     l57:
   445  000CB0  A29E               	btfss	158,1,c	;volatile
   446  000CB2  EF5D  F006         	goto	u171
   447  000CB6  EF5F  F006         	goto	u170
   448  000CBA                     u171:
   449  000CBA  EF58  F006         	goto	l57
   450  000CBE                     u170:
   451  000CBE                     
   452                           ;pwm.c: 92: PIR1bits.TMR2IF=0;
   453  000CBE  929E               	bcf	158,1,c	;volatile
   454  000CC0                     l60:
   455  000CC0  A29E               	btfss	158,1,c	;volatile
   456  000CC2  EF65  F006         	goto	u181
   457  000CC6  EF67  F006         	goto	u180
   458  000CCA                     u181:
   459  000CCA  EF60  F006         	goto	l60
   460  000CCE                     u180:
   461  000CCE  0012               	return		;funcret
   462  000CD0                     __end_of_PWM1_Start:
   463                           	callstack 0
   464                           
   465 ;; *************** function _PWM1_Init *****************
   466 ;; Defined at:
   467 ;;		line 31 in file "pwm.c"
   468 ;; Parameters:    Size  Location     Type
   469 ;;  f               2   14[COMRAM] unsigned int 
   470 ;; Auto vars:     Size  Location     Type
   471 ;;  temp            2   20[COMRAM] unsigned int 
   472 ;; Return value:  Size  Location     Type
   473 ;;                  1    wreg      void 
   474 ;; Registers used:
   475 ;;		wreg, status,2, status,0, cstack
   476 ;; Tracked objects:
   477 ;;		On entry : 0/0
   478 ;;		On exit  : 0/0
   479 ;;		Unchanged: 0/0
   480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   481 ;;      Params:         2       0       0       0       0       0       0
   482 ;;      Locals:         2       0       0       0       0       0       0
   483 ;;      Temps:          4       0       0       0       0       0       0
   484 ;;      Totals:         8       0       0       0       0       0       0
   485 ;;Total ram usage:        8 bytes
   486 ;; Hardware stack levels used: 1
   487 ;; Hardware stack levels required when called: 1
   488 ;; This function calls:
   489 ;;		___aldiv
   490 ;; This function is called by:
   491 ;;		_main
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495                           	psect	text2
   496  000AA0                     __ptext2:
   497                           	callstack 0
   498  000AA0                     _PWM1_Init:
   499                           	callstack 29
   500  000AA0                     
   501                           ;pwm.c: 33: unsigned int temp;;pwm.c: 39: CCP1CON=0x00;
   502  000AA0  0E00               	movlw	0
   503  000AA2  6EBD               	movwf	189,c	;volatile
   504  000AA4                     
   505                           ;pwm.c: 40: TRISCbits.TRISC2=1;
   506  000AA4  8494               	bsf	148,2,c	;volatile
   507  000AA6                     
   508                           ;pwm.c: 41: TRISDbits.TRISD5=1;
   509  000AA6  8A95               	bsf	149,5,c	;volatile
   510  000AA8                     
   511                           ;pwm.c: 43: PORTCbits.RC2=0;
   512  000AA8  9482               	bcf	130,2,c	;volatile
   513  000AAA                     
   514                           ;pwm.c: 44: PORTDbits.RD5=0;
   515  000AAA  9A83               	bcf	131,5,c	;volatile
   516                           
   517                           ;pwm.c: 46: CCPR1L=0;
   518  000AAC  0E00               	movlw	0
   519  000AAE  6EBE               	movwf	190,c	;volatile
   520  000AB0                     
   521                           ;pwm.c: 51: T2CONbits.TMR2ON=0;
   522  000AB0  94CA               	bcf	202,2,c	;volatile
   523  000AB2                     
   524                           ;pwm.c: 53: temp=8000000/(f*4l);
   525  000AB2  0E00               	movlw	0
   526  000AB4  6E01               	movwf	___aldiv@dividend^0,c
   527  000AB6  0E12               	movlw	18
   528  000AB8  6E02               	movwf	(___aldiv@dividend+1)^0,c
   529  000ABA  0E7A               	movlw	122
   530  000ABC  6E03               	movwf	(___aldiv@dividend+2)^0,c
   531  000ABE  0E00               	movlw	0
   532  000AC0  6E04               	movwf	(___aldiv@dividend+3)^0,c
   533  000AC2  500F               	movf	PWM1_Init@f^0,w,c
   534  000AC4  6E11               	movwf	??_PWM1_Init^0,c
   535  000AC6  5010               	movf	(PWM1_Init@f+1)^0,w,c
   536  000AC8  6E12               	movwf	(??_PWM1_Init+1)^0,c
   537  000ACA  6A13               	clrf	(??_PWM1_Init+2)^0,c
   538  000ACC  6A14               	clrf	(??_PWM1_Init+3)^0,c
   539  000ACE  0E02               	movlw	2
   540  000AD0                     u295:
   541  000AD0  90D8               	bcf	status,0,c
   542  000AD2  3611               	rlcf	??_PWM1_Init^0,f,c
   543  000AD4  3612               	rlcf	(??_PWM1_Init+1)^0,f,c
   544  000AD6  3613               	rlcf	(??_PWM1_Init+2)^0,f,c
   545  000AD8  3614               	rlcf	(??_PWM1_Init+3)^0,f,c
   546  000ADA  2EE8               	decfsz	wreg,f,c
   547  000ADC  EF68  F005         	goto	u295
   548  000AE0  C011  F005         	movff	??_PWM1_Init,___aldiv@divisor
   549  000AE4  C012  F006         	movff	??_PWM1_Init+1,___aldiv@divisor+1
   550  000AE8  C013  F007         	movff	??_PWM1_Init+2,___aldiv@divisor+2
   551  000AEC  C014  F008         	movff	??_PWM1_Init+3,___aldiv@divisor+3
   552  000AF0  ECCA  F004         	call	___aldiv	;wreg free
   553  000AF4  C001  F015         	movff	?___aldiv,PWM1_Init@temp
   554  000AF8  C002  F016         	movff	?___aldiv+1,PWM1_Init@temp+1
   555  000AFC                     
   556                           ;pwm.c: 55: if (temp < 256)
   557  000AFC  0416               	decf	(PWM1_Init@temp+1)^0,w,c
   558  000AFE  B0D8               	btfsc	status,0,c
   559  000B00  EF84  F005         	goto	u301
   560  000B04  EF86  F005         	goto	u300
   561  000B08                     u301:
   562  000B08  EF8C  F005         	goto	l1239
   563  000B0C                     u300:
   564  000B0C                     
   565                           ;pwm.c: 56: {;pwm.c: 57: T2CONbits.T2CKPS=0;
   566  000B0C  0EFC               	movlw	-4
   567  000B0E  16CA               	andwf	202,f,c	;volatile
   568  000B10                     
   569                           ;pwm.c: 58: PR2=temp;
   570  000B10  C015  FFCB         	movff	PWM1_Init@temp,4043	;volatile
   571                           
   572                           ;pwm.c: 59: }
   573  000B14  EFC6  F005         	goto	l1249
   574  000B18                     l1239:
   575                           
   576                           ;pwm.c: 60: else if(temp/4 < 256 )
   577  000B18  C015  F011         	movff	PWM1_Init@temp,??_PWM1_Init
   578  000B1C  C016  F012         	movff	PWM1_Init@temp+1,??_PWM1_Init+1
   579  000B20  90D8               	bcf	status,0,c
   580  000B22  3212               	rrcf	(??_PWM1_Init+1)^0,f,c
   581  000B24  3211               	rrcf	??_PWM1_Init^0,f,c
   582  000B26  90D8               	bcf	status,0,c
   583  000B28  3212               	rrcf	(??_PWM1_Init+1)^0,f,c
   584  000B2A  3211               	rrcf	??_PWM1_Init^0,f,c
   585  000B2C  0412               	decf	(??_PWM1_Init+1)^0,w,c
   586  000B2E  B0D8               	btfsc	status,0,c
   587  000B30  EF9C  F005         	goto	u311
   588  000B34  EF9E  F005         	goto	u310
   589  000B38                     u311:
   590  000B38  EFB2  F005         	goto	l1245
   591  000B3C                     u310:
   592  000B3C                     
   593                           ;pwm.c: 61: {;pwm.c: 62: T2CONbits.T2CKPS=1;
   594  000B3C  50CA               	movf	202,w,c	;volatile
   595  000B3E  0BFC               	andlw	-4
   596  000B40  0901               	iorlw	1
   597  000B42  6ECA               	movwf	202,c	;volatile
   598  000B44                     
   599                           ;pwm.c: 63: PR2=(temp+2)/4;
   600  000B44  0E02               	movlw	2
   601  000B46  2415               	addwf	PWM1_Init@temp^0,w,c
   602  000B48  6E11               	movwf	??_PWM1_Init^0,c
   603  000B4A  0E00               	movlw	0
   604  000B4C  2016               	addwfc	(PWM1_Init@temp+1)^0,w,c
   605  000B4E  6E12               	movwf	(??_PWM1_Init+1)^0,c
   606  000B50  90D8               	bcf	status,0,c
   607  000B52  3212               	rrcf	(??_PWM1_Init+1)^0,f,c
   608  000B54  3211               	rrcf	??_PWM1_Init^0,f,c
   609  000B56  90D8               	bcf	status,0,c
   610  000B58  3212               	rrcf	(??_PWM1_Init+1)^0,f,c
   611  000B5A  3211               	rrcf	??_PWM1_Init^0,f,c
   612  000B5C  5011               	movf	??_PWM1_Init^0,w,c
   613  000B5E  6ECB               	movwf	203,c	;volatile
   614                           
   615                           ;pwm.c: 64: }
   616  000B60  EFC6  F005         	goto	l1249
   617  000B64                     l1245:
   618                           
   619                           ;pwm.c: 65: else;pwm.c: 66: {;pwm.c: 67: PR2=(temp+8)/16;
   620  000B64  0E08               	movlw	8
   621  000B66  2415               	addwf	PWM1_Init@temp^0,w,c
   622  000B68  6E11               	movwf	??_PWM1_Init^0,c
   623  000B6A  0E00               	movlw	0
   624  000B6C  2016               	addwfc	(PWM1_Init@temp+1)^0,w,c
   625  000B6E  6E12               	movwf	(??_PWM1_Init+1)^0,c
   626  000B70  0E04               	movlw	4
   627  000B72  6E13               	movwf	(??_PWM1_Init+2)^0,c
   628  000B74                     u325:
   629  000B74  90D8               	bcf	status,0,c
   630  000B76  3212               	rrcf	(??_PWM1_Init+1)^0,f,c
   631  000B78  3211               	rrcf	??_PWM1_Init^0,f,c
   632  000B7A  2E13               	decfsz	(??_PWM1_Init+2)^0,f,c
   633  000B7C  EFBA  F005         	goto	u325
   634  000B80  5011               	movf	??_PWM1_Init^0,w,c
   635  000B82  6ECB               	movwf	203,c	;volatile
   636  000B84                     
   637                           ;pwm.c: 68: T2CONbits.T2CKPS=2;
   638  000B84  50CA               	movf	202,w,c	;volatile
   639  000B86  0BFC               	andlw	-4
   640  000B88  0902               	iorlw	2
   641  000B8A  6ECA               	movwf	202,c	;volatile
   642  000B8C                     l1249:
   643                           
   644                           ;pwm.c: 69: };pwm.c: 71: T2CONbits.T2OUTPS=0;
   645  000B8C  0E87               	movlw	-121
   646  000B8E  16CA               	andwf	202,f,c	;volatile
   647  000B90  0012               	return		;funcret
   648  000B92                     __end_of_PWM1_Init:
   649                           	callstack 0
   650                           
   651 ;; *************** function ___aldiv *****************
   652 ;; Defined at:
   653 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\aldiv.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  dividend        4    0[COMRAM] long 
   656 ;;  divisor         4    4[COMRAM] long 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  quotient        4   10[COMRAM] long 
   659 ;;  sign            1    9[COMRAM] unsigned char 
   660 ;;  counter         1    8[COMRAM] unsigned char 
   661 ;; Return value:  Size  Location     Type
   662 ;;                  4    0[COMRAM] long 
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   670 ;;      Params:         8       0       0       0       0       0       0
   671 ;;      Locals:         6       0       0       0       0       0       0
   672 ;;      Temps:          0       0       0       0       0       0       0
   673 ;;      Totals:        14       0       0       0       0       0       0
   674 ;;Total ram usage:       14 bytes
   675 ;; Hardware stack levels used: 1
   676 ;; This function calls:
   677 ;;		Nothing
   678 ;; This function is called by:
   679 ;;		_PWM1_Init
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text3
   684  000994                     __ptext3:
   685                           	callstack 0
   686  000994                     ___aldiv:
   687                           	callstack 29
   688  000994  0E00               	movlw	0
   689  000996  6E0A               	movwf	___aldiv@sign^0,c
   690  000998  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
   691  00099A  EFD3  F004         	goto	u230
   692  00099E  EFD1  F004         	goto	u231
   693  0009A2                     u231:
   694  0009A2  EFDD  F004         	goto	l1183
   695  0009A6                     u230:
   696  0009A6  1E08               	comf	(___aldiv@divisor+3)^0,f,c
   697  0009A8  1E07               	comf	(___aldiv@divisor+2)^0,f,c
   698  0009AA  1E06               	comf	(___aldiv@divisor+1)^0,f,c
   699  0009AC  6C05               	negf	___aldiv@divisor^0,c
   700  0009AE  0E00               	movlw	0
   701  0009B0  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
   702  0009B2  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
   703  0009B4  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
   704  0009B6  0E01               	movlw	1
   705  0009B8  6E0A               	movwf	___aldiv@sign^0,c
   706  0009BA                     l1183:
   707  0009BA  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
   708  0009BC  EFE4  F004         	goto	u240
   709  0009C0  EFE2  F004         	goto	u241
   710  0009C4                     u241:
   711  0009C4  EFEE  F004         	goto	l1189
   712  0009C8                     u240:
   713  0009C8  1E04               	comf	(___aldiv@dividend+3)^0,f,c
   714  0009CA  1E03               	comf	(___aldiv@dividend+2)^0,f,c
   715  0009CC  1E02               	comf	(___aldiv@dividend+1)^0,f,c
   716  0009CE  6C01               	negf	___aldiv@dividend^0,c
   717  0009D0  0E00               	movlw	0
   718  0009D2  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
   719  0009D4  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
   720  0009D6  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
   721  0009D8  0E01               	movlw	1
   722  0009DA  1A0A               	xorwf	___aldiv@sign^0,f,c
   723  0009DC                     l1189:
   724  0009DC  0E00               	movlw	0
   725  0009DE  6E0B               	movwf	___aldiv@quotient^0,c
   726  0009E0  0E00               	movlw	0
   727  0009E2  6E0C               	movwf	(___aldiv@quotient+1)^0,c
   728  0009E4  0E00               	movlw	0
   729  0009E6  6E0D               	movwf	(___aldiv@quotient+2)^0,c
   730  0009E8  0E00               	movlw	0
   731  0009EA  6E0E               	movwf	(___aldiv@quotient+3)^0,c
   732  0009EC  5005               	movf	___aldiv@divisor^0,w,c
   733  0009EE  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
   734  0009F0  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
   735  0009F2  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
   736  0009F4  B4D8               	btfsc	status,2,c
   737  0009F6  EFFF  F004         	goto	u251
   738  0009FA  EF01  F005         	goto	u250
   739  0009FE                     u251:
   740  0009FE  EF37  F005         	goto	l1211
   741  000A02                     u250:
   742  000A02  0E01               	movlw	1
   743  000A04  6E09               	movwf	___aldiv@counter^0,c
   744  000A06  EF0B  F005         	goto	l1197
   745  000A0A                     l1195:
   746  000A0A  90D8               	bcf	status,0,c
   747  000A0C  3605               	rlcf	___aldiv@divisor^0,f,c
   748  000A0E  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
   749  000A10  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
   750  000A12  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
   751  000A14  2A09               	incf	___aldiv@counter^0,f,c
   752  000A16                     l1197:
   753  000A16  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
   754  000A18  EF10  F005         	goto	u261
   755  000A1C  EF12  F005         	goto	u260
   756  000A20                     u261:
   757  000A20  EF05  F005         	goto	l1195
   758  000A24                     u260:
   759  000A24                     l1199:
   760  000A24  90D8               	bcf	status,0,c
   761  000A26  360B               	rlcf	___aldiv@quotient^0,f,c
   762  000A28  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
   763  000A2A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
   764  000A2C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
   765  000A2E  5005               	movf	___aldiv@divisor^0,w,c
   766  000A30  5C01               	subwf	___aldiv@dividend^0,w,c
   767  000A32  5006               	movf	(___aldiv@divisor+1)^0,w,c
   768  000A34  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
   769  000A36  5007               	movf	(___aldiv@divisor+2)^0,w,c
   770  000A38  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
   771  000A3A  5008               	movf	(___aldiv@divisor+3)^0,w,c
   772  000A3C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
   773  000A3E  A0D8               	btfss	status,0,c
   774  000A40  EF24  F005         	goto	u271
   775  000A44  EF26  F005         	goto	u270
   776  000A48                     u271:
   777  000A48  EF2F  F005         	goto	l1207
   778  000A4C                     u270:
   779  000A4C  5005               	movf	___aldiv@divisor^0,w,c
   780  000A4E  5E01               	subwf	___aldiv@dividend^0,f,c
   781  000A50  5006               	movf	(___aldiv@divisor+1)^0,w,c
   782  000A52  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
   783  000A54  5007               	movf	(___aldiv@divisor+2)^0,w,c
   784  000A56  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
   785  000A58  5008               	movf	(___aldiv@divisor+3)^0,w,c
   786  000A5A  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
   787  000A5C  800B               	bsf	___aldiv@quotient^0,0,c
   788  000A5E                     l1207:
   789  000A5E  90D8               	bcf	status,0,c
   790  000A60  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
   791  000A62  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
   792  000A64  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
   793  000A66  3205               	rrcf	___aldiv@divisor^0,f,c
   794  000A68  2E09               	decfsz	___aldiv@counter^0,f,c
   795  000A6A  EF12  F005         	goto	l1199
   796  000A6E                     l1211:
   797  000A6E  500A               	movf	___aldiv@sign^0,w,c
   798  000A70  B4D8               	btfsc	status,2,c
   799  000A72  EF3D  F005         	goto	u281
   800  000A76  EF3F  F005         	goto	u280
   801  000A7A                     u281:
   802  000A7A  EF47  F005         	goto	l1215
   803  000A7E                     u280:
   804  000A7E  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
   805  000A80  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
   806  000A82  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
   807  000A84  6C0B               	negf	___aldiv@quotient^0,c
   808  000A86  0E00               	movlw	0
   809  000A88  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
   810  000A8A  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
   811  000A8C  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
   812  000A8E                     l1215:
   813  000A8E  C00B  F001         	movff	___aldiv@quotient,?___aldiv
   814  000A92  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
   815  000A96  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
   816  000A9A  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
   817  000A9E  0012               	return		;funcret
   818  000AA0                     __end_of___aldiv:
   819                           	callstack 0
   820                           
   821 ;; *************** function _Lcd_Out *****************
   822 ;; Defined at:
   823 ;;		line 118 in file "flexlcd.h"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  y               1    wreg     unsigned char 
   826 ;;  x               1    3[COMRAM] unsigned char 
   827 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
   828 ;;		 -> STR_2(17), STR_1(17), 
   829 ;; Auto vars:     Size  Location     Type
   830 ;;  y               1    6[COMRAM] unsigned char 
   831 ;;  data            1    7[COMRAM] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   841 ;;      Params:         3       0       0       0       0       0       0
   842 ;;      Locals:         2       0       0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0
   844 ;;      Totals:         5       0       0       0       0       0       0
   845 ;;Total ram usage:        5 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 1
   848 ;; This function calls:
   849 ;;		_Lcd_Chr_CP
   850 ;;		_Lcd_Cmd
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text4
   857  000B92                     __ptext4:
   858                           	callstack 0
   859  000B92                     _Lcd_Out:
   860                           	callstack 29
   861                           
   862                           ;incstack = 0
   863                           ;Lcd_Out@y stored from wreg
   864  000B92  6E07               	movwf	Lcd_Out@y^0,c
   865  000B94                     
   866                           ;flexlcd.h: 120: unsigned char data;;flexlcd.h: 121: switch (y)
   867  000B94  EFE0  F005         	goto	l1263
   868  000B98                     l1253:
   869  000B98  5004               	movf	Lcd_Out@x^0,w,c
   870  000B9A  0F80               	addlw	128
   871  000B9C  6E08               	movwf	Lcd_Out@data^0,c
   872  000B9E  EFF3  F005         	goto	l1265
   873  000BA2                     l1255:
   874  000BA2  5004               	movf	Lcd_Out@x^0,w,c
   875  000BA4  0FC0               	addlw	192
   876  000BA6  6E08               	movwf	Lcd_Out@data^0,c
   877  000BA8  EFF3  F005         	goto	l1265
   878  000BAC                     l1257:
   879  000BAC  5004               	movf	Lcd_Out@x^0,w,c
   880  000BAE  0F94               	addlw	148
   881  000BB0  6E08               	movwf	Lcd_Out@data^0,c
   882  000BB2  EFF3  F005         	goto	l1265
   883  000BB6                     l1259:
   884  000BB6  5004               	movf	Lcd_Out@x^0,w,c
   885  000BB8  0FD4               	addlw	212
   886  000BBA  6E08               	movwf	Lcd_Out@data^0,c
   887  000BBC  EFF3  F005         	goto	l1265
   888  000BC0                     l1263:
   889  000BC0  5007               	movf	Lcd_Out@y^0,w,c
   890                           
   891                           ; Switch size 1, requested type "simple"
   892                           ; Number of cases is 4, Range of values is 1 to 4
   893                           ; switch strategies available:
   894                           ; Name         Instructions Cycles
   895                           ; simple_byte           13     7 (average)
   896                           ;	Chosen strategy is simple_byte
   897  000BC2  0A01               	xorlw	1	; case 1
   898  000BC4  B4D8               	btfsc	status,2,c
   899  000BC6  EFCC  F005         	goto	l1253
   900  000BCA  0A03               	xorlw	3	; case 2
   901  000BCC  B4D8               	btfsc	status,2,c
   902  000BCE  EFD1  F005         	goto	l1255
   903  000BD2  0A01               	xorlw	1	; case 3
   904  000BD4  B4D8               	btfsc	status,2,c
   905  000BD6  EFD6  F005         	goto	l1257
   906  000BDA  0A07               	xorlw	7	; case 4
   907  000BDC  B4D8               	btfsc	status,2,c
   908  000BDE  EFDB  F005         	goto	l1259
   909  000BE2  EFF3  F005         	goto	l1265
   910  000BE6                     l1265:
   911                           
   912                           ;flexlcd.h: 129: Lcd_Cmd(data);
   913  000BE6  5008               	movf	Lcd_Out@data^0,w,c
   914  000BE8  ECAC  F003         	call	_Lcd_Cmd
   915                           
   916                           ;flexlcd.h: 130: while(*buffer)
   917  000BEC  EF02  F006         	goto	l1271
   918  000BF0                     l1267:
   919                           
   920                           ;flexlcd.h: 131: {;flexlcd.h: 132: Lcd_Chr_CP(*buffer);
   921  000BF0  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
   922  000BF4  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   923  000BF8                     	if	0	;tblptru may be non-zero
   924  000BF8                     	endif
   925  000BF8                     	if	0	;tblptru may be non-zero
   926  000BF8                     	endif
   927  000BF8  0008               	tblrd		*
   928  000BFA  50F5               	movf	tablat,w,c
   929  000BFC  EC12  F003         	call	_Lcd_Chr_CP
   930  000C00                     
   931                           ;flexlcd.h: 133: buffer++;
   932  000C00  4A05               	infsnz	Lcd_Out@buffer^0,f,c
   933  000C02  2A06               	incf	(Lcd_Out@buffer+1)^0,f,c
   934  000C04                     l1271:
   935  000C04  C005  FFF6         	movff	Lcd_Out@buffer,tblptrl
   936  000C08  C006  FFF7         	movff	Lcd_Out@buffer+1,tblptrh
   937  000C0C                     	if	0	;tblptru may be non-zero
   938  000C0C                     	endif
   939  000C0C                     	if	0	;tblptru may be non-zero
   940  000C0C                     	endif
   941  000C0C  0008               	tblrd		*
   942  000C0E  50F5               	movf	tablat,w,c
   943  000C10  0900               	iorlw	0
   944  000C12  A4D8               	btfss	status,2,c
   945  000C14  EF0E  F006         	goto	u331
   946  000C18  EF10  F006         	goto	u330
   947  000C1C                     u331:
   948  000C1C  EFF8  F005         	goto	l1267
   949  000C20                     u330:
   950  000C20  0012               	return		;funcret
   951  000C22                     __end_of_Lcd_Out:
   952                           	callstack 0
   953                           
   954 ;; *************** function _Lcd_Chr_CP *****************
   955 ;; Defined at:
   956 ;;		line 160 in file "flexlcd.h"
   957 ;; Parameters:    Size  Location     Type
   958 ;;  data            1    wreg     unsigned char 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  data            1    2[COMRAM] unsigned char 
   961 ;; Return value:  Size  Location     Type
   962 ;;                  1    wreg      void 
   963 ;; Registers used:
   964 ;;		wreg, status,2, status,0
   965 ;; Tracked objects:
   966 ;;		On entry : 0/0
   967 ;;		On exit  : 0/0
   968 ;;		Unchanged: 0/0
   969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   970 ;;      Params:         0       0       0       0       0       0       0
   971 ;;      Locals:         1       0       0       0       0       0       0
   972 ;;      Temps:          2       0       0       0       0       0       0
   973 ;;      Totals:         3       0       0       0       0       0       0
   974 ;;Total ram usage:        3 bytes
   975 ;; Hardware stack levels used: 1
   976 ;; This function calls:
   977 ;;		Nothing
   978 ;; This function is called by:
   979 ;;		_Lcd_Out
   980 ;;		_Lcd_Out2
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text5
   985  000624                     __ptext5:
   986                           	callstack 0
   987  000624                     _Lcd_Chr_CP:
   988                           	callstack 29
   989                           
   990                           ;incstack = 0
   991                           ;Lcd_Chr_CP@data stored from wreg
   992  000624  6E03               	movwf	Lcd_Chr_CP@data^0,c
   993  000626                     
   994                           ;flexlcd.h: 161: PORTEbits.RE1 = 0; PORTEbits.RE0 = 1;
   995  000626  9284               	bcf	132,1,c	;volatile
   996  000628  8084               	bsf	132,0,c	;volatile
   997  00062A                     
   998                           ;flexlcd.h: 162: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
   999  00062A  6A01               	clrf	??_Lcd_Chr_CP^0,c
  1000  00062C  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
  1001  00062E  D001               	bra	u45
  1002  000630  2A01               	incf	??_Lcd_Chr_CP^0,f,c
  1003  000632                     u45:
  1004  000632  0E01               	movlw	1
  1005  000634  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1006  000636  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1007  000638  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1008  00063A  5083               	movf	131,w,c	;volatile
  1009  00063C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1010  00063E  0B7F               	andlw	-129
  1011  000640  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1012  000642  6E83               	movwf	131,c	;volatile
  1013  000644  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1014  000648  0E06               	movlw	6
  1015  00064A  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  1016  00064C                     u55:
  1017  00064C  90D8               	bcf	status,0,c
  1018  00064E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1019  000650  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  1020  000652  EF26  F003         	goto	u55
  1021  000656  0E01               	movlw	1
  1022  000658  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1023  00065A  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1024  00065C  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1025  00065E  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1026  000660  5083               	movf	131,w,c	;volatile
  1027  000662  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1028  000664  0BBF               	andlw	-65
  1029  000666  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1030  000668  6E83               	movwf	131,c	;volatile
  1031                           
  1032                           ;flexlcd.h: 163: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1033  00066A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1034  00066E  0E05               	movlw	5
  1035  000670  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  1036  000672                     u65:
  1037  000672  90D8               	bcf	status,0,c
  1038  000674  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1039  000676  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  1040  000678  EF39  F003         	goto	u65
  1041  00067C  0E01               	movlw	1
  1042  00067E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1043  000680  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1044  000682  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1045  000684  5083               	movf	131,w,c	;volatile
  1046  000686  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1047  000688  0BDF               	andlw	-33
  1048  00068A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1049  00068C  6E83               	movwf	131,c	;volatile
  1050  00068E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1051  000692  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1052  000694  0E0F               	movlw	15
  1053  000696  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1054  000698  0E01               	movlw	1
  1055  00069A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1056  00069C  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1057  00069E  5083               	movf	131,w,c	;volatile
  1058  0006A0  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1059  0006A2  0BEF               	andlw	-17
  1060  0006A4  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1061  0006A6  6E83               	movwf	131,c	;volatile
  1062  0006A8                     
  1063                           ;flexlcd.h: 164: _delay(10);
  1064  0006A8  0E03               	movlw	3
  1065  0006AA                     u347:
  1066  0006AA  2EE8               	decfsz	wreg,f,c
  1067  0006AC  D7FE               	bra	u347
  1068  0006AE  F000               	nop	
  1069  0006B0                     
  1070                           ;flexlcd.h: 165: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1071  0006B0  8284               	bsf	132,1,c	;volatile
  1072  0006B2  0E03               	movlw	3
  1073  0006B4                     u357:
  1074  0006B4  2EE8               	decfsz	wreg,f,c
  1075  0006B6  D7FE               	bra	u357
  1076  0006B8  F000               	nop	
  1077  0006BA  9284               	bcf	132,1,c	;volatile
  1078                           
  1079                           ;flexlcd.h: 166: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1080  0006BC  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1081  0006C0  90D8               	bcf	status,0,c
  1082  0006C2  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1083  0006C4  90D8               	bcf	status,0,c
  1084  0006C6  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1085  0006C8  90D8               	bcf	status,0,c
  1086  0006CA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1087  0006CC  0E01               	movlw	1
  1088  0006CE  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1089  0006D0  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1090  0006D2  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1091  0006D4  5083               	movf	131,w,c	;volatile
  1092  0006D6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1093  0006D8  0B7F               	andlw	-129
  1094  0006DA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1095  0006DC  6E83               	movwf	131,c	;volatile
  1096  0006DE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1097  0006E2  90D8               	bcf	status,0,c
  1098  0006E4  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1099  0006E6  90D8               	bcf	status,0,c
  1100  0006E8  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1101  0006EA  0E01               	movlw	1
  1102  0006EC  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1103  0006EE  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1104  0006F0  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1105  0006F2  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1106  0006F4  5083               	movf	131,w,c	;volatile
  1107  0006F6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1108  0006F8  0BBF               	andlw	-65
  1109  0006FA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1110  0006FC  6E83               	movwf	131,c	;volatile
  1111                           
  1112                           ;flexlcd.h: 167: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1113  0006FE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1114  000702  90D8               	bcf	status,0,c
  1115  000704  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1116  000706  0E01               	movlw	1
  1117  000708  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1118  00070A  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1119  00070C  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1120  00070E  5083               	movf	131,w,c	;volatile
  1121  000710  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1122  000712  0BDF               	andlw	-33
  1123  000714  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1124  000716  6E83               	movwf	131,c	;volatile
  1125  000718  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1126  00071C  0E01               	movlw	1
  1127  00071E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1128  000720  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1129  000722  5083               	movf	131,w,c	;volatile
  1130  000724  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1131  000726  0BEF               	andlw	-17
  1132  000728  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1133  00072A  6E83               	movwf	131,c	;volatile
  1134  00072C                     
  1135                           ;flexlcd.h: 168: _delay(10);
  1136  00072C  0E03               	movlw	3
  1137  00072E                     u367:
  1138  00072E  2EE8               	decfsz	wreg,f,c
  1139  000730  D7FE               	bra	u367
  1140  000732  F000               	nop	
  1141  000734                     
  1142                           ;flexlcd.h: 169: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1143  000734  8284               	bsf	132,1,c	;volatile
  1144  000736  0E03               	movlw	3
  1145  000738                     u377:
  1146  000738  2EE8               	decfsz	wreg,f,c
  1147  00073A  D7FE               	bra	u377
  1148  00073C  F000               	nop	
  1149  00073E  9284               	bcf	132,1,c	;volatile
  1150  000740                     
  1151                           ;flexlcd.h: 170: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  1152  000740  0E03               	movlw	3
  1153  000742                     u387:
  1154  000742  2EE8               	decfsz	wreg,f,c
  1155  000744  D7FE               	bra	u387
  1156  000746  F000               	nop	
  1157  000748  0E0F               	movlw	15
  1158  00074A  6E01               	movwf	??_Lcd_Chr_CP^0,c
  1159  00074C  0E48               	movlw	72
  1160  00074E                     u397:
  1161  00074E  2EE8               	decfsz	wreg,f,c
  1162  000750  D7FE               	bra	u397
  1163  000752  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  1164  000754  D7FC               	bra	u397
  1165  000756  0012               	return		;funcret
  1166  000758                     __end_of_Lcd_Chr_CP:
  1167                           	callstack 0
  1168                           
  1169 ;; *************** function _Lcd_Init *****************
  1170 ;; Defined at:
  1171 ;;		line 76 in file "flexlcd.h"
  1172 ;; Parameters:    Size  Location     Type
  1173 ;;		None
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  data            1    4[COMRAM] unsigned char 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      void 
  1178 ;; Registers used:
  1179 ;;		wreg, status,2, status,0, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1185 ;;      Params:         0       0       0       0       0       0       0
  1186 ;;      Locals:         1       0       0       0       0       0       0
  1187 ;;      Temps:          1       0       0       0       0       0       0
  1188 ;;      Totals:         2       0       0       0       0       0       0
  1189 ;;Total ram usage:        2 bytes
  1190 ;; Hardware stack levels used: 1
  1191 ;; Hardware stack levels required when called: 1
  1192 ;; This function calls:
  1193 ;;		_Lcd_Cmd
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text6
  1200  000884                     __ptext6:
  1201                           	callstack 0
  1202  000884                     _Lcd_Init:
  1203                           	callstack 29
  1204  000884                     
  1205                           ;flexlcd.h: 77: unsigned char data;;flexlcd.h: 78: TRISDbits.TRISD7 = 0;
  1206  000884  9E95               	bcf	149,7,c	;volatile
  1207                           
  1208                           ;flexlcd.h: 79: TRISDbits.TRISD6 = 0;
  1209  000886  9C95               	bcf	149,6,c	;volatile
  1210                           
  1211                           ;flexlcd.h: 80: TRISDbits.TRISD5 = 0;
  1212  000888  9A95               	bcf	149,5,c	;volatile
  1213                           
  1214                           ;flexlcd.h: 81: TRISDbits.TRISD4 = 0;
  1215  00088A  9895               	bcf	149,4,c	;volatile
  1216                           
  1217                           ;flexlcd.h: 82: TRISEbits.TRISE1 = 0;
  1218  00088C  9296               	bcf	150,1,c	;volatile
  1219                           
  1220                           ;flexlcd.h: 83: TRISEbits.TRISE0 = 0;
  1221  00088E  9096               	bcf	150,0,c	;volatile
  1222                           
  1223                           ;flexlcd.h: 84: PORTDbits.RD7 = 0;
  1224  000890  9E83               	bcf	131,7,c	;volatile
  1225                           
  1226                           ;flexlcd.h: 85: PORTDbits.RD6 = 0;
  1227  000892  9C83               	bcf	131,6,c	;volatile
  1228                           
  1229                           ;flexlcd.h: 86: PORTDbits.RD5 = 0;
  1230  000894  9A83               	bcf	131,5,c	;volatile
  1231                           
  1232                           ;flexlcd.h: 87: PORTDbits.RD4 = 0;
  1233  000896  9883               	bcf	131,4,c	;volatile
  1234                           
  1235                           ;flexlcd.h: 88: PORTEbits.RE1 = 0;
  1236  000898  9284               	bcf	132,1,c	;volatile
  1237                           
  1238                           ;flexlcd.h: 89: PORTEbits.RE0 = 0;
  1239  00089A  9084               	bcf	132,0,c	;volatile
  1240  00089C                     
  1241                           ;flexlcd.h: 90: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1242  00089C  0E0F               	movlw	15
  1243  00089E  6E04               	movwf	??_Lcd_Init^0,c
  1244  0008A0  0E48               	movlw	72
  1245  0008A2                     u407:
  1246  0008A2  2EE8               	decfsz	wreg,f,c
  1247  0008A4  D7FE               	bra	u407
  1248  0008A6  2E04               	decfsz	??_Lcd_Init^0,f,c
  1249  0008A8  D7FC               	bra	u407
  1250                           
  1251                           ;flexlcd.h: 91: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1252  0008AA  0E0F               	movlw	15
  1253  0008AC  6E04               	movwf	??_Lcd_Init^0,c
  1254  0008AE  0E48               	movlw	72
  1255  0008B0                     u417:
  1256  0008B0  2EE8               	decfsz	wreg,f,c
  1257  0008B2  D7FE               	bra	u417
  1258  0008B4  2E04               	decfsz	??_Lcd_Init^0,f,c
  1259  0008B6  D7FC               	bra	u417
  1260                           
  1261                           ;flexlcd.h: 92: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1262  0008B8  0E0F               	movlw	15
  1263  0008BA  6E04               	movwf	??_Lcd_Init^0,c
  1264  0008BC  0E48               	movlw	72
  1265  0008BE                     u427:
  1266  0008BE  2EE8               	decfsz	wreg,f,c
  1267  0008C0  D7FE               	bra	u427
  1268  0008C2  2E04               	decfsz	??_Lcd_Init^0,f,c
  1269  0008C4  D7FC               	bra	u427
  1270                           
  1271                           ;flexlcd.h: 93: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1272  0008C6  0E0F               	movlw	15
  1273  0008C8  6E04               	movwf	??_Lcd_Init^0,c
  1274  0008CA  0E48               	movlw	72
  1275  0008CC                     u437:
  1276  0008CC  2EE8               	decfsz	wreg,f,c
  1277  0008CE  D7FE               	bra	u437
  1278  0008D0  2E04               	decfsz	??_Lcd_Init^0,f,c
  1279  0008D2  D7FC               	bra	u437
  1280                           
  1281                           ;flexlcd.h: 94: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1282  0008D4  0E0F               	movlw	15
  1283  0008D6  6E04               	movwf	??_Lcd_Init^0,c
  1284  0008D8  0E48               	movlw	72
  1285  0008DA                     u447:
  1286  0008DA  2EE8               	decfsz	wreg,f,c
  1287  0008DC  D7FE               	bra	u447
  1288  0008DE  2E04               	decfsz	??_Lcd_Init^0,f,c
  1289  0008E0  D7FC               	bra	u447
  1290                           
  1291                           ;flexlcd.h: 95: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1292  0008E2  0E0F               	movlw	15
  1293  0008E4  6E04               	movwf	??_Lcd_Init^0,c
  1294  0008E6  0E48               	movlw	72
  1295  0008E8                     u457:
  1296  0008E8  2EE8               	decfsz	wreg,f,c
  1297  0008EA  D7FE               	bra	u457
  1298  0008EC  2E04               	decfsz	??_Lcd_Init^0,f,c
  1299  0008EE  D7FC               	bra	u457
  1300  0008F0                     
  1301                           ;flexlcd.h: 96: for(data = 1; data < 4; data ++)
  1302  0008F0  0E01               	movlw	1
  1303  0008F2  6E05               	movwf	Lcd_Init@data^0,c
  1304  0008F4                     l117:
  1305                           
  1306                           ;flexlcd.h: 97: {;flexlcd.h: 98: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  1307  0008F4  9E83               	bcf	131,7,c	;volatile
  1308  0008F6  9C83               	bcf	131,6,c	;volatile
  1309  0008F8  8A83               	bsf	131,5,c	;volatile
  1310  0008FA  8883               	bsf	131,4,c	;volatile
  1311  0008FC  9284               	bcf	132,1,c	;volatile
  1312                           
  1313                           ;flexlcd.h: 99: PORTEbits.RE0 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
  1314  0008FE  9084               	bcf	132,0,c	;volatile
  1315  000900  9E83               	bcf	131,7,c	;volatile
  1316  000902  9C83               	bcf	131,6,c	;volatile
  1317  000904  8A83               	bsf	131,5,c	;volatile
  1318  000906  8883               	bsf	131,4,c	;volatile
  1319                           
  1320                           ;flexlcd.h: 100: PORTEbits.RE1 = 1; PORTEbits.RE0 = 0;
  1321  000908  8284               	bsf	132,1,c	;volatile
  1322  00090A  9084               	bcf	132,0,c	;volatile
  1323  00090C                     
  1324                           ;flexlcd.h: 101: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1325  00090C  0E03               	movlw	3
  1326  00090E                     u467:
  1327  00090E  2EE8               	decfsz	wreg,f,c
  1328  000910  D7FE               	bra	u467
  1329  000912  F000               	nop	
  1330  000914                     
  1331                           ;flexlcd.h: 102: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 1; PORTEbits.RE1 = 0;
  1332  000914  9E83               	bcf	131,7,c	;volatile
  1333  000916  9C83               	bcf	131,6,c	;volatile
  1334  000918  8A83               	bsf	131,5,c	;volatile
  1335  00091A  8883               	bsf	131,4,c	;volatile
  1336  00091C  9284               	bcf	132,1,c	;volatile
  1337  00091E                     
  1338                           ;flexlcd.h: 103: PORTEbits.RE0 = 0;
  1339  00091E  9084               	bcf	132,0,c	;volatile
  1340                           
  1341                           ;flexlcd.h: 104: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1342  000920  0E0F               	movlw	15
  1343  000922  6E04               	movwf	??_Lcd_Init^0,c
  1344  000924  0E48               	movlw	72
  1345  000926                     u477:
  1346  000926  2EE8               	decfsz	wreg,f,c
  1347  000928  D7FE               	bra	u477
  1348  00092A  2E04               	decfsz	??_Lcd_Init^0,f,c
  1349  00092C  D7FC               	bra	u477
  1350  00092E  2A05               	incf	Lcd_Init@data^0,f,c
  1351  000930  0E03               	movlw	3
  1352  000932  6405               	cpfsgt	Lcd_Init@data^0,c
  1353  000934  EF9E  F004         	goto	u191
  1354  000938  EFA0  F004         	goto	u190
  1355  00093C                     u191:
  1356  00093C  EF7A  F004         	goto	l117
  1357  000940                     u190:
  1358  000940                     
  1359                           ;flexlcd.h: 105: };flexlcd.h: 106: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
  1360  000940  9E83               	bcf	131,7,c	;volatile
  1361  000942  9C83               	bcf	131,6,c	;volatile
  1362  000944  8A83               	bsf	131,5,c	;volatile
  1363  000946  9883               	bcf	131,4,c	;volatile
  1364  000948  9284               	bcf	132,1,c	;volatile
  1365  00094A  9084               	bcf	132,0,c	;volatile
  1366                           
  1367                           ;flexlcd.h: 107: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 1; PORTEbits.RE0 = 0;
  1368  00094C  9E83               	bcf	131,7,c	;volatile
  1369  00094E  9C83               	bcf	131,6,c	;volatile
  1370  000950  8A83               	bsf	131,5,c	;volatile
  1371  000952  9883               	bcf	131,4,c	;volatile
  1372  000954  8284               	bsf	132,1,c	;volatile
  1373  000956  9084               	bcf	132,0,c	;volatile
  1374  000958                     
  1375                           ;flexlcd.h: 108: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1376  000958  0E03               	movlw	3
  1377  00095A                     u487:
  1378  00095A  2EE8               	decfsz	wreg,f,c
  1379  00095C  D7FE               	bra	u487
  1380  00095E  F000               	nop	
  1381  000960                     
  1382                           ;flexlcd.h: 109: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 
      +                          = 0; PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
  1383  000960  9E83               	bcf	131,7,c	;volatile
  1384  000962  9C83               	bcf	131,6,c	;volatile
  1385  000964  8A83               	bsf	131,5,c	;volatile
  1386  000966  9883               	bcf	131,4,c	;volatile
  1387  000968  9284               	bcf	132,1,c	;volatile
  1388  00096A  9084               	bcf	132,0,c	;volatile
  1389                           
  1390                           ;flexlcd.h: 110: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1391  00096C  0E0F               	movlw	15
  1392  00096E  6E04               	movwf	??_Lcd_Init^0,c
  1393  000970  0E48               	movlw	72
  1394  000972                     u497:
  1395  000972  2EE8               	decfsz	wreg,f,c
  1396  000974  D7FE               	bra	u497
  1397  000976  2E04               	decfsz	??_Lcd_Init^0,f,c
  1398  000978  D7FC               	bra	u497
  1399  00097A  0E28               	movlw	40
  1400  00097C  ECAC  F003         	call	_Lcd_Cmd
  1401  000980  0E10               	movlw	16
  1402  000982  ECAC  F003         	call	_Lcd_Cmd
  1403  000986  0E01               	movlw	1
  1404  000988  ECAC  F003         	call	_Lcd_Cmd
  1405  00098C  0E0F               	movlw	15
  1406  00098E  ECAC  F003         	call	_Lcd_Cmd
  1407  000992  0012               	return		;funcret
  1408  000994                     __end_of_Lcd_Init:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function _Lcd_Cmd *****************
  1412 ;; Defined at:
  1413 ;;		line 174 in file "flexlcd.h"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  data            1    wreg     unsigned char 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  data            1    2[COMRAM] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1427 ;;      Params:         0       0       0       0       0       0       0
  1428 ;;      Locals:         1       0       0       0       0       0       0
  1429 ;;      Temps:          2       0       0       0       0       0       0
  1430 ;;      Totals:         3       0       0       0       0       0       0
  1431 ;;Total ram usage:        3 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_Lcd_Init
  1437 ;;		_Lcd_Out
  1438 ;;		_main
  1439 ;;		_Lcd_Out2
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           	psect	text7
  1444  000758                     __ptext7:
  1445                           	callstack 0
  1446  000758                     _Lcd_Cmd:
  1447                           	callstack 29
  1448                           
  1449                           ;incstack = 0
  1450                           ;Lcd_Cmd@data stored from wreg
  1451  000758  6E03               	movwf	Lcd_Cmd@data^0,c
  1452  00075A                     
  1453                           ;flexlcd.h: 175: PORTEbits.RE1 = 0; PORTEbits.RE0 = 0;
  1454  00075A  9284               	bcf	132,1,c	;volatile
  1455  00075C  9084               	bcf	132,0,c	;volatile
  1456  00075E                     
  1457                           ;flexlcd.h: 176: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1458  00075E  6A01               	clrf	??_Lcd_Cmd^0,c
  1459  000760  AE03               	btfss	Lcd_Cmd@data^0,7,c
  1460  000762  D001               	bra	u15
  1461  000764  2A01               	incf	??_Lcd_Cmd^0,f,c
  1462  000766                     u15:
  1463  000766  0E01               	movlw	1
  1464  000768  1601               	andwf	??_Lcd_Cmd^0,f,c
  1465  00076A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1466  00076C  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1467  00076E  5083               	movf	131,w,c	;volatile
  1468  000770  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1469  000772  0B7F               	andlw	-129
  1470  000774  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1471  000776  6E83               	movwf	131,c	;volatile
  1472  000778  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1473  00077C  0E06               	movlw	6
  1474  00077E  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1475  000780                     u25:
  1476  000780  90D8               	bcf	status,0,c
  1477  000782  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1478  000784  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1479  000786  EFC0  F003         	goto	u25
  1480  00078A  0E01               	movlw	1
  1481  00078C  1601               	andwf	??_Lcd_Cmd^0,f,c
  1482  00078E  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1483  000790  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1484  000792  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1485  000794  5083               	movf	131,w,c	;volatile
  1486  000796  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1487  000798  0BBF               	andlw	-65
  1488  00079A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1489  00079C  6E83               	movwf	131,c	;volatile
  1490                           
  1491                           ;flexlcd.h: 177: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1492  00079E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1493  0007A2  0E05               	movlw	5
  1494  0007A4  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1495  0007A6                     u35:
  1496  0007A6  90D8               	bcf	status,0,c
  1497  0007A8  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1498  0007AA  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1499  0007AC  EFD3  F003         	goto	u35
  1500  0007B0  0E01               	movlw	1
  1501  0007B2  1601               	andwf	??_Lcd_Cmd^0,f,c
  1502  0007B4  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1503  0007B6  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1504  0007B8  5083               	movf	131,w,c	;volatile
  1505  0007BA  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1506  0007BC  0BDF               	andlw	-33
  1507  0007BE  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1508  0007C0  6E83               	movwf	131,c	;volatile
  1509  0007C2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1510  0007C6  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1511  0007C8  0E0F               	movlw	15
  1512  0007CA  1601               	andwf	??_Lcd_Cmd^0,f,c
  1513  0007CC  0E01               	movlw	1
  1514  0007CE  1601               	andwf	??_Lcd_Cmd^0,f,c
  1515  0007D0  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1516  0007D2  5083               	movf	131,w,c	;volatile
  1517  0007D4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1518  0007D6  0BEF               	andlw	-17
  1519  0007D8  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1520  0007DA  6E83               	movwf	131,c	;volatile
  1521  0007DC                     
  1522                           ;flexlcd.h: 178: _delay(10);
  1523  0007DC  0E03               	movlw	3
  1524  0007DE                     u507:
  1525  0007DE  2EE8               	decfsz	wreg,f,c
  1526  0007E0  D7FE               	bra	u507
  1527  0007E2  F000               	nop	
  1528  0007E4                     
  1529                           ;flexlcd.h: 179: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1530  0007E4  8284               	bsf	132,1,c	;volatile
  1531  0007E6  0E03               	movlw	3
  1532  0007E8                     u517:
  1533  0007E8  2EE8               	decfsz	wreg,f,c
  1534  0007EA  D7FE               	bra	u517
  1535  0007EC  F000               	nop	
  1536  0007EE  9284               	bcf	132,1,c	;volatile
  1537                           
  1538                           ;flexlcd.h: 180: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1539  0007F0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1540  0007F4  90D8               	bcf	status,0,c
  1541  0007F6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1542  0007F8  90D8               	bcf	status,0,c
  1543  0007FA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1544  0007FC  90D8               	bcf	status,0,c
  1545  0007FE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1546  000800  0E01               	movlw	1
  1547  000802  1601               	andwf	??_Lcd_Cmd^0,f,c
  1548  000804  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1549  000806  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1550  000808  5083               	movf	131,w,c	;volatile
  1551  00080A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1552  00080C  0B7F               	andlw	-129
  1553  00080E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1554  000810  6E83               	movwf	131,c	;volatile
  1555  000812  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1556  000816  90D8               	bcf	status,0,c
  1557  000818  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1558  00081A  90D8               	bcf	status,0,c
  1559  00081C  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1560  00081E  0E01               	movlw	1
  1561  000820  1601               	andwf	??_Lcd_Cmd^0,f,c
  1562  000822  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1563  000824  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1564  000826  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1565  000828  5083               	movf	131,w,c	;volatile
  1566  00082A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1567  00082C  0BBF               	andlw	-65
  1568  00082E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1569  000830  6E83               	movwf	131,c	;volatile
  1570                           
  1571                           ;flexlcd.h: 181: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1572  000832  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1573  000836  90D8               	bcf	status,0,c
  1574  000838  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1575  00083A  0E01               	movlw	1
  1576  00083C  1601               	andwf	??_Lcd_Cmd^0,f,c
  1577  00083E  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1578  000840  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1579  000842  5083               	movf	131,w,c	;volatile
  1580  000844  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1581  000846  0BDF               	andlw	-33
  1582  000848  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1583  00084A  6E83               	movwf	131,c	;volatile
  1584  00084C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1585  000850  0E01               	movlw	1
  1586  000852  1601               	andwf	??_Lcd_Cmd^0,f,c
  1587  000854  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1588  000856  5083               	movf	131,w,c	;volatile
  1589  000858  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1590  00085A  0BEF               	andlw	-17
  1591  00085C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1592  00085E  6E83               	movwf	131,c	;volatile
  1593  000860                     
  1594                           ;flexlcd.h: 182: _delay(10);
  1595  000860  0E03               	movlw	3
  1596  000862                     u527:
  1597  000862  2EE8               	decfsz	wreg,f,c
  1598  000864  D7FE               	bra	u527
  1599  000866  F000               	nop	
  1600  000868                     
  1601                           ;flexlcd.h: 183: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1602  000868  8284               	bsf	132,1,c	;volatile
  1603  00086A  0E03               	movlw	3
  1604  00086C                     u537:
  1605  00086C  2EE8               	decfsz	wreg,f,c
  1606  00086E  D7FE               	bra	u537
  1607  000870  F000               	nop	
  1608  000872  9284               	bcf	132,1,c	;volatile
  1609  000874                     
  1610                           ;flexlcd.h: 184: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1611  000874  0E0F               	movlw	15
  1612  000876  6E01               	movwf	??_Lcd_Cmd^0,c
  1613  000878  0E48               	movlw	72
  1614  00087A                     u547:
  1615  00087A  2EE8               	decfsz	wreg,f,c
  1616  00087C  D7FE               	bra	u547
  1617  00087E  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  1618  000880  D7FC               	bra	u547
  1619  000882  0012               	return		;funcret
  1620  000884                     __end_of_Lcd_Cmd:
  1621                           	callstack 0
  1622                           
  1623                           	psect	rparam
  1624  0000                     
  1625                           	psect	idloc
  1626                           
  1627                           ;Config register IDLOC0 @ 0x200000
  1628                           ;	unspecified, using default values
  1629  200000                     	org	2097152
  1630  200000  FF                 	db	255
  1631                           
  1632                           ;Config register IDLOC1 @ 0x200001
  1633                           ;	unspecified, using default values
  1634  200001                     	org	2097153
  1635  200001  FF                 	db	255
  1636                           
  1637                           ;Config register IDLOC2 @ 0x200002
  1638                           ;	unspecified, using default values
  1639  200002                     	org	2097154
  1640  200002  FF                 	db	255
  1641                           
  1642                           ;Config register IDLOC3 @ 0x200003
  1643                           ;	unspecified, using default values
  1644  200003                     	org	2097155
  1645  200003  FF                 	db	255
  1646                           
  1647                           ;Config register IDLOC4 @ 0x200004
  1648                           ;	unspecified, using default values
  1649  200004                     	org	2097156
  1650  200004  FF                 	db	255
  1651                           
  1652                           ;Config register IDLOC5 @ 0x200005
  1653                           ;	unspecified, using default values
  1654  200005                     	org	2097157
  1655  200005  FF                 	db	255
  1656                           
  1657                           ;Config register IDLOC6 @ 0x200006
  1658                           ;	unspecified, using default values
  1659  200006                     	org	2097158
  1660  200006  FF                 	db	255
  1661                           
  1662                           ;Config register IDLOC7 @ 0x200007
  1663                           ;	unspecified, using default values
  1664  200007                     	org	2097159
  1665  200007  FF                 	db	255
  1666                           
  1667                           	psect	config
  1668                           
  1669                           ; Padding undefined space
  1670  300000                     	org	3145728
  1671  300000  FF                 	db	255
  1672                           
  1673                           ;Config register CONFIG1H @ 0x300001
  1674                           ;	Oscillator Selection bits
  1675                           ;	OSC = HS, HS oscillator
  1676                           ;	Fail-Safe Clock Monitor Enable bit
  1677                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1678                           ;	Internal/External Oscillator Switchover bit
  1679                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1680  300001                     	org	3145729
  1681  300001  02                 	db	2
  1682                           
  1683                           ;Config register CONFIG2L @ 0x300002
  1684                           ;	Power-up Timer Enable bit
  1685                           ;	PWRT = OFF, PWRT disabled
  1686                           ;	Brown-out Reset Enable bits
  1687                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1688                           ;	Brown Out Reset Voltage bits
  1689                           ;	BORV = 3, Minimum setting
  1690  300002                     	org	3145730
  1691  300002  1F                 	db	31
  1692                           
  1693                           ;Config register CONFIG2H @ 0x300003
  1694                           ;	Watchdog Timer Enable bit
  1695                           ;	WDT = ON, WDT enabled
  1696                           ;	Watchdog Timer Postscale Select bits
  1697                           ;	WDTPS = 32768, 1:32768
  1698  300003                     	org	3145731
  1699  300003  1F                 	db	31
  1700                           
  1701                           ; Padding undefined space
  1702  300004                     	org	3145732
  1703  300004  FF                 	db	255
  1704                           
  1705                           ;Config register CONFIG3H @ 0x300005
  1706                           ;	CCP2 MUX bit
  1707                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1708                           ;	PORTB A/D Enable bit
  1709                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1710                           ;	Low-Power Timer1 Oscillator Enable bit
  1711                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1712                           ;	MCLR Pin Enable bit
  1713                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  1714  300005                     	org	3145733
  1715  300005  01                 	db	1
  1716                           
  1717                           ;Config register CONFIG4L @ 0x300006
  1718                           ;	Stack Full/Underflow Reset Enable bit
  1719                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1720                           ;	Single-Supply ICSP Enable bit
  1721                           ;	LVP = ON, Single-Supply ICSP enabled
  1722                           ;	Extended Instruction Set Enable bit
  1723                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1724                           ;	Background Debugger Enable bit
  1725                           ;	DEBUG = 0x1, unprogrammed default
  1726  300006                     	org	3145734
  1727  300006  85                 	db	133
  1728                           
  1729                           ; Padding undefined space
  1730  300007                     	org	3145735
  1731  300007  FF                 	db	255
  1732                           
  1733                           ;Config register CONFIG5L @ 0x300008
  1734                           ;	Code Protection bit
  1735                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1736                           ;	Code Protection bit
  1737                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1738                           ;	Code Protection bit
  1739                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1740                           ;	Code Protection bit
  1741                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1742  300008                     	org	3145736
  1743  300008  0F                 	db	15
  1744                           
  1745                           ;Config register CONFIG5H @ 0x300009
  1746                           ;	Boot Block Code Protection bit
  1747                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1748                           ;	Data EEPROM Code Protection bit
  1749                           ;	CPD = OFF, Data EEPROM not code-protected
  1750  300009                     	org	3145737
  1751  300009  C0                 	db	192
  1752                           
  1753                           ;Config register CONFIG6L @ 0x30000A
  1754                           ;	Write Protection bit
  1755                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1756                           ;	Write Protection bit
  1757                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1758                           ;	Write Protection bit
  1759                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1760                           ;	Write Protection bit
  1761                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1762  30000A                     	org	3145738
  1763  30000A  0F                 	db	15
  1764                           
  1765                           ;Config register CONFIG6H @ 0x30000B
  1766                           ;	Configuration Register Write Protection bit
  1767                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1768                           ;	Boot Block Write Protection bit
  1769                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1770                           ;	Data EEPROM Write Protection bit
  1771                           ;	WRTD = OFF, Data EEPROM not write-protected
  1772  30000B                     	org	3145739
  1773  30000B  E0                 	db	224
  1774                           
  1775                           ;Config register CONFIG7L @ 0x30000C
  1776                           ;	Table Read Protection bit
  1777                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1778                           ;	Table Read Protection bit
  1779                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1780                           ;	Table Read Protection bit
  1781                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1782                           ;	Table Read Protection bit
  1783                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1784  30000C                     	org	3145740
  1785  30000C  0F                 	db	15
  1786                           
  1787                           ;Config register CONFIG7H @ 0x30000D
  1788                           ;	Boot Block Table Read Protection bit
  1789                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1790  30000D                     	org	3145741
  1791  30000D  40                 	db	64
  1792                           tosu	equ	0xFFF
  1793                           tosh	equ	0xFFE
  1794                           tosl	equ	0xFFD
  1795                           stkptr	equ	0xFFC
  1796                           pclatu	equ	0xFFB
  1797                           pclath	equ	0xFFA
  1798                           pcl	equ	0xFF9
  1799                           tblptru	equ	0xFF8
  1800                           tblptrh	equ	0xFF7
  1801                           tblptrl	equ	0xFF6
  1802                           tablat	equ	0xFF5
  1803                           prodh	equ	0xFF4
  1804                           prodl	equ	0xFF3
  1805                           indf0	equ	0xFEF
  1806                           postinc0	equ	0xFEE
  1807                           postdec0	equ	0xFED
  1808                           preinc0	equ	0xFEC
  1809                           plusw0	equ	0xFEB
  1810                           fsr0h	equ	0xFEA
  1811                           fsr0l	equ	0xFE9
  1812                           wreg	equ	0xFE8
  1813                           indf1	equ	0xFE7
  1814                           postinc1	equ	0xFE6
  1815                           postdec1	equ	0xFE5
  1816                           preinc1	equ	0xFE4
  1817                           plusw1	equ	0xFE3
  1818                           fsr1h	equ	0xFE2
  1819                           fsr1l	equ	0xFE1
  1820                           bsr	equ	0xFE0
  1821                           indf2	equ	0xFDF
  1822                           postinc2	equ	0xFDE
  1823                           postdec2	equ	0xFDD
  1824                           preinc2	equ	0xFDC
  1825                           plusw2	equ	0xFDB
  1826                           fsr2h	equ	0xFDA
  1827                           fsr2l	equ	0xFD9
  1828                           status	equ	0xFD8

Data Sizes:
    Strings     34
    Constant    0
    Data        2
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     22      24
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_PWM1_Init
    _PWM1_Init->___aldiv
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1716
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                          _PWM1_Init
                         _PWM1_Start
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     6      2     661
                                             14 COMRAM     8     6      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     725
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PWM1_Init
     ___aldiv
   _PWM1_Start

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      26        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     16      18       1       18.9%
BITBIGSFRhhhl       25      0       0      17        0.0%
BITBIGSFRllhh       1E      0       0      20        0.0%
BITBIGSFRhhhh        E      0       0      16        0.0%
BITBIGSFRllhl        7      0       0      21        0.0%
BITBIGSFRlllhh       5      0       0      22        0.0%
BITBIGSFRlllhl       5      0       0      23        0.0%
BITBIGSFRhhl         5      0       0      18        0.0%
BITBIGSFRlh          1      0       0      19        0.0%
BITBIGSFRllll        1      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      25        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Nov 23 16:17:27 2022

                     l60 0CC0                       l54 0B90                       l63 0CCE  
                     l57 0CB0                       l59 0CBE                       u15 0766  
                     u25 0780                       u35 07A6                       u45 0632  
                     u55 064C                       u65 0672                      l132 0C20  
                    l117 08F4                      l118 0940                      l151 0882  
                    l119 0992                      l243 0A9E                      l148 0756  
                    l158 0C9A                      l911 075E                      l921 0860  
                    l913 07DC                      l923 0868                      l915 07E4  
                    l931 0626                      l925 086A                      l917 07E6  
                    l909 075A                      l941 06BA                      l933 062A  
                    l927 0872                      l919 07EE                      l951 0740  
                    l943 072C                      l935 06A8                      l929 0874  
                    l953 0748                      l945 0734                      l937 06B0  
                    l947 0736                      l939 06B2                      l949 073E  
                    u300 0B0C                      u301 0B08                      u230 09A6  
                    u310 0B3C                      u231 09A2                      u311 0B38  
                    u240 09C8                      u241 09C4                      u330 0C20  
                    u250 0A02                      u170 0CBE                      u331 0C1C  
                    u251 09FE                      u171 0CBA                      u260 0A24  
                    u180 0CCE                      u261 0A20                      u325 0B74  
                    u181 0CCA                      u190 0940                      u270 0A4C  
                    _PR2 000FCB                      u191 093C                      u407 08A2  
                    u271 0A48                      u280 0A7E                      u417 08B0  
                    u281 0A7A                      u507 07DE                      u427 08BE  
                    u347 06AA                      u517 07E8                      u437 08CC  
                    u357 06B4                      u527 0862                      u447 08DA  
                    u367 072E                      u295 0AD0                      u537 086C  
                    u457 08E8                      u377 0738                      u547 087A  
                    u467 090E                      u387 0742                      u477 0926  
                    u397 074E                      u487 095A                      u497 0972  
                    wreg 000FE8                     l1031 0CA4                     l1041 089C  
                   l1201 0A2E                     l1033 0CA8                     l1051 0914  
                   l1043 08F0                     l1203 0A4C                     l1211 0A6E  
                   l1035 0CAC                     l1061 091E                     l1053 0916  
                   l1213 0A7E                     l1205 0A5C                     l1221 0AA4  
                   l1037 0CAE                     l1071 0964                     l1063 092E  
                   l1055 0918                     l1039 0884                     l1215 0A8E  
                   l1207 0A5E                     l1231 0AB2                     l1223 0AA6  
                   l1081 097A                     l1073 0966                     l1065 0958  
                   l1057 091A                     l1049 090C                     l1209 0A68  
                   l1241 0B3C                     l1233 0AFC                     l1225 0AA8  
                   l1091 098C                     l1083 0980                     l1075 0968  
                   l1067 0960                     l1059 091C                     l1251 0B94  
                   l1243 0B44                     l1235 0B0C                     l1227 0AAA  
                   l1219 0AA0                     l1093 098C                     l1085 0980  
                   l1077 096A                     l1069 0962                     l1253 0B98  
                   l1181 09B6                     l1245 0B64                     l1237 0B10  
                   l1229 0AB0                     l1087 0986                     l1079 097A  
                   l1271 0C04                     l1255 0BA2                     l1263 0BC0  
                   l1191 09EC                     l1183 09BA                     l1175 0994  
                   l1247 0B84                     l1239 0B18                     l1089 0986  
                   l1257 0BAC                     l1265 0BE6                     l1193 0A02  
                   l1185 09C8                     l1177 0998                     l1249 0B8C  
                   l1281 0C66                     l1273 0C22                     l1267 0BF0  
                   l1259 0BB6                     l1195 0A0A                     l1187 09D8  
                   l1179 09A6                     l1283 0C78                     l1275 0C2A  
                   l1269 0C00                     l1197 0A16                     l1189 09DC  
                   l1285 0C8A                     l1277 0C5C                     l1199 0A24  
                   l1287 0C96                     l1279 0C60                     STR_1 0612  
                   STR_2 0601                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     _main 0C22  
                   _duty 0017                     start 0000          __end_of_Lcd_Cmd 0884  
        __end_of_Lcd_Out 0C22             ___param_bank 000000               _Lcd_Chr_CP 0624  
        __end_of___aldiv 0AA0                    ?_main 0001                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96              ?_PWM1_Start 0001                    tablat 000FF5  
                  status 000FD8         __end_of_Lcd_Init 0994          __initialization 0CD0  
           __end_of_main 0CA4                   ??_main 0017            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   _CCPR1L 000FBE  
              ??_Lcd_Cmd 0001                ??_Lcd_Out 0007        __end_of_PWM1_Init 0B92  
            ?_Lcd_Chr_CP 0001                ??___aldiv 0009                   isa$std 000001  
           __pdataCOMRAM 0017             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 0CE8            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_Lcd_Init 0001                  _CCP1CON 000FBD             ??_PWM1_Start 0001  
             ??_Lcd_Init 0004                  _Lcd_Cmd 0758                  _Lcd_Out 0B92  
                __Hparam 0000                  __Lparam 0000                  ___aldiv 0994  
     __end_of_PWM1_Start 0CD0             __psmallconst 0600                  __pcinit 0CD0  
                __ramtop 0600                  __ptext0 0C22                  __ptext1 0CA4  
                __ptext2 0AA0                  __ptext3 0994                  __ptext4 0B92  
                __ptext5 0624                  __ptext6 0884                  __ptext7 0758  
              _T2CONbits 000FCA         ___aldiv@dividend 0001     end_of_initialization 0CE8  
          __Lmediumconst 0000         ___aldiv@quotient 000B             ??_Lcd_Chr_CP 0001  
              _PWM1_Init 0AA0                _PORTCbits 000F82                _PORTDbits 000F83  
              _PORTEbits 000F84                _TRISCbits 000F94                _TRISDbits 000F95  
              _TRISEbits 000F96       __end_of_Lcd_Chr_CP 0758            __pidataCOMRAM 0CF2  
             ?_PWM1_Init 000F      start_initialization 0CD0            Lcd_Out@buffer 0005  
               ?_Lcd_Cmd 0001                 ?_Lcd_Out 0004                 ?___aldiv 0001  
            ??_PWM1_Init 0011              __smallconst 0600               PWM1_Init@f 000F  
        ___aldiv@divisor 0005          ___aldiv@counter 0009            PWM1_Init@temp 0015  
               _PIR1bits 000F9E                 Lcd_Out@x 0004                 Lcd_Out@y 0007  
           Lcd_Init@data 0005               _ADCON0bits 000FC2                 _Lcd_Init 0884  
            _INTCON2bits 000FF1                 __Hrparam 0000                 __Lrparam 0000  
         Lcd_Chr_CP@data 0003              Lcd_Cmd@data 0003                 isa$xinst 000000  
            Lcd_Out@data 0008             ___aldiv@sign 000A               _PWM1_Start 0CA4  
