

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Nov 21 09:46:30 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F4550 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  0014DE                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _duty
    72  0014DE  0064               	dw	100
    73                           
    74                           	psect	smallconst
    75  000800                     __psmallconst:
    76                           	callstack 0
    77  000800  00                 	db	0
    78  000801                     _dpowers:
    79                           	callstack 0
    80  000801  0001               	dw	1
    81  000803  000A               	dw	10
    82  000805  0064               	dw	100
    83  000807  03E8               	dw	1000
    84  000809  2710               	dw	10000
    85  00080B                     __end_of_dpowers:
    86                           	callstack 0
    87  0000                     _LATE	set	3981
    88  0000                     _PORTE	set	3972
    89  0000                     _LATD	set	3980
    90  0000                     _PORTD	set	3971
    91  0000                     _LATC	set	3979
    92  0000                     _PORTC	set	3970
    93  0000                     _LATB	set	3978
    94  0000                     _PORTB	set	3969
    95  0000                     _LATA	set	3977
    96  0000                     _PORTA	set	3968
    97  0000                     _TRISE	set	3990
    98  0000                     _TRISD	set	3989
    99  0000                     _TRISC	set	3988
   100  0000                     _TRISB	set	3987
   101  0000                     _TRISA	set	3986
   102  0000                     _TMR1H	set	4047
   103  0000                     _TMR1L	set	4046
   104  0000                     _T1CON	set	4045
   105  0000                     _INTCON2bits	set	4081
   106  0000                     _PORTEbits	set	3972
   107  0000                     _TRISEbits	set	3990
   108  0000                     _PIR1bits	set	3998
   109  0000                     _PR2	set	4043
   110  0000                     _T2CONbits	set	4042
   111  0000                     _CCPR1L	set	4030
   112  0000                     _PORTDbits	set	3971
   113  0000                     _PORTCbits	set	3970
   114  0000                     _TRISDbits	set	3989
   115  0000                     _TRISCbits	set	3988
   116  0000                     _CCP1CON	set	4029
   117  0000                     _ADRESL	set	4035
   118  0000                     _ADRESH	set	4036
   119  0000                     _ADCON0bits	set	4034
   120  0000                     _ADCON2	set	4032
   121  0000                     _ADCON1	set	4033
   122  0000                     _ADCON0	set	4034
   123  00080B                     STR_1:
   124  00080B  25                 	db	37
   125  00080C  30                 	db	48	;'0'
   126  00080D  35                 	db	53	;'5'
   127  00080E  75                 	db	117	;'u'
   128  00080F  00                 	db	0
   129  000810  00                 	db	0	; dummy byte at the end
   130  0000                     
   131                           ; #config settings
   132                           
   133                           	psect	cinit
   134  00145E                     __pcinit:
   135                           	callstack 0
   136  00145E                     start_initialization:
   137                           	callstack 0
   138  00145E                     __initialization:
   139                           	callstack 0
   140                           
   141                           ; Initialize objects allocated to COMRAM (2 bytes)
   142                           ; load TBLPTR registers with __pidataCOMRAM
   143  00145E  0EDE               	movlw	low __pidataCOMRAM
   144  001460  6EF6               	movwf	tblptrl,c
   145  001462  0E14               	movlw	high __pidataCOMRAM
   146  001464  6EF7               	movwf	tblptrh,c
   147  001466  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   148  001468  6EF8               	movwf	tblptru,c
   149  00146A  0009               	tblrd		*+	;fetch initializer
   150  00146C  CFF5 F029          	movff	tablat,__pdataCOMRAM
   151  001470  0009               	tblrd		*+	;fetch initializer
   152  001472  CFF5 F02A          	movff	tablat,__pdataCOMRAM+1
   153                           
   154                           ; Clear objects allocated to COMRAM (7 bytes)
   155  001476  EE00  F022         	lfsr	0,__pbssCOMRAM
   156  00147A  0E07               	movlw	7
   157  00147C                     clear_0:
   158  00147C  6AEE               	clrf	postinc0,c
   159  00147E  06E8               	decf	wreg,f,c
   160  001480  E1FD               	bnz	clear_0
   161  001482                     end_of_initialization:
   162                           	callstack 0
   163  001482                     __end_of__initialization:
   164                           	callstack 0
   165  001482  0E00               	movlw	low (__Lmediumconst shr (0+16))
   166  001484  6EF8               	movwf	tblptru,c
   167  001486  0100               	movlb	0
   168  001488  EF2C  F008         	goto	_main	;jump to C main() function
   169                           
   170                           	psect	bssCOMRAM
   171  000022                     __pbssCOMRAM:
   172                           	callstack 0
   173  000022                     _count:
   174                           	callstack 0
   175  000022                     	ds	2
   176  000024                     _str:
   177                           	callstack 0
   178  000024                     	ds	5
   179                           
   180                           	psect	dataCOMRAM
   181  000029                     __pdataCOMRAM:
   182                           	callstack 0
   183  000029                     _duty:
   184                           	callstack 0
   185  000029                     	ds	2
   186                           
   187                           	psect	cstackCOMRAM
   188  000001                     __pcstackCOMRAM:
   189                           	callstack 0
   190  000001                     ??_Lcd_Cmd:
   191  000001                     ??_Lcd_Chr_CP:
   192  000001                     ??_isdigit:
   193  000001                     ?___wmul:
   194                           	callstack 0
   195  000001                     ?___lwdiv:
   196                           	callstack 0
   197  000001                     ?___lmul:
   198                           	callstack 0
   199  000001                     ?___aldiv:
   200                           	callstack 0
   201  000001                     ___wmul@multiplier:
   202                           	callstack 0
   203  000001                     ___lwdiv@dividend:
   204                           	callstack 0
   205  000001                     ___lmul@multiplier:
   206                           	callstack 0
   207  000001                     ___aldiv@dividend:
   208                           	callstack 0
   209                           
   210                           ; 4 bytes @ 0x0
   211  000001                     	ds	1
   212  000002                     _isdigit$1156:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x1
   216  000002                     	ds	1
   217  000003                     Lcd_Chr_CP@data:
   218                           	callstack 0
   219  000003                     Lcd_Cmd@data:
   220                           	callstack 0
   221  000003                     isdigit@c:
   222                           	callstack 0
   223  000003                     ___wmul@multiplicand:
   224                           	callstack 0
   225  000003                     ___lwdiv@divisor:
   226                           	callstack 0
   227                           
   228                           ; 2 bytes @ 0x2
   229  000003                     	ds	1
   230  000004                     ??_Lcd_Init:
   231  000004                     Lcd_Out@x:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x3
   235  000004                     	ds	1
   236  000005                     Lcd_Init@data:
   237                           	callstack 0
   238  000005                     Lcd_Out@buffer:
   239                           	callstack 0
   240  000005                     ___wmul@product:
   241                           	callstack 0
   242  000005                     ___lwdiv@quotient:
   243                           	callstack 0
   244  000005                     ___lmul@multiplicand:
   245                           	callstack 0
   246  000005                     ___aldiv@divisor:
   247                           	callstack 0
   248                           
   249                           ; 4 bytes @ 0x4
   250  000005                     	ds	2
   251  000007                     Lcd_Out@y:
   252                           	callstack 0
   253  000007                     ___lwdiv@counter:
   254                           	callstack 0
   255                           
   256                           ; 1 bytes @ 0x6
   257  000007                     	ds	1
   258  000008                     ?___lwmod:
   259                           	callstack 0
   260  000008                     Lcd_Out@data:
   261                           	callstack 0
   262  000008                     ___lwmod@dividend:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x7
   266  000008                     	ds	1
   267  000009                     ___aldiv@counter:
   268                           	callstack 0
   269  000009                     ___lmul@product:
   270                           	callstack 0
   271                           
   272                           ; 4 bytes @ 0x8
   273  000009                     	ds	1
   274  00000A                     ___aldiv@sign:
   275                           	callstack 0
   276  00000A                     ___lwmod@divisor:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x9
   280  00000A                     	ds	1
   281  00000B                     ___aldiv@quotient:
   282                           	callstack 0
   283                           
   284                           ; 4 bytes @ 0xA
   285  00000B                     	ds	1
   286  00000C                     ___lwmod@counter:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0xB
   290  00000C                     	ds	1
   291  00000D                     ?_sprintf:
   292                           	callstack 0
   293  00000D                     ?___lldiv:
   294                           	callstack 0
   295  00000D                     sprintf@sp:
   296                           	callstack 0
   297  00000D                     ___lldiv@dividend:
   298                           	callstack 0
   299                           
   300                           ; 4 bytes @ 0xC
   301  00000D                     	ds	2
   302  00000F                     PWM1_Init@f:
   303                           	callstack 0
   304  00000F                     sprintf@f:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0xE
   308  00000F                     	ds	2
   309  000011                     ??_PWM1_Init:
   310  000011                     ___lldiv@divisor:
   311                           	callstack 0
   312                           
   313                           ; 4 bytes @ 0x10
   314  000011                     	ds	2
   315  000013                     ??_sprintf:
   316                           
   317                           ; 1 bytes @ 0x12
   318  000013                     	ds	2
   319  000015                     PWM1_Init@temp:
   320                           	callstack 0
   321  000015                     ___lldiv@quotient:
   322                           	callstack 0
   323                           
   324                           ; 4 bytes @ 0x14
   325  000015                     	ds	2
   326  000017                     sprintf@ap:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x16
   330  000017                     	ds	2
   331  000019                     sprintf@flag:
   332                           	callstack 0
   333  000019                     ___lldiv@counter:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x18
   337  000019                     	ds	1
   338  00001A                     ??_PWM1_Set_Duty:
   339  00001A                     sprintf@val:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x19
   343  00001A                     	ds	2
   344  00001C                     PWM1_Set_Duty@d:
   345                           	callstack 0
   346  00001C                     sprintf@prec:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0x1B
   350  00001C                     	ds	1
   351  00001D                     PWM1_Set_Duty@temp:
   352                           	callstack 0
   353  00001D                     sprintf@width:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0x1C
   357  00001D                     	ds	2
   358  00001F                     sprintf@c:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x1E
   362  00001F                     	ds	1
   363  000020                     ??_main:
   364                           
   365                           ; 1 bytes @ 0x1F
   366  000020                     	ds	2
   367                           
   368 ;;
   369 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   370 ;;
   371 ;; *************** function _main *****************
   372 ;; Defined at:
   373 ;;		line 34 in file "mainPWM.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   387 ;;      Params:         0       0       0       0       0       0       0       0       0
   388 ;;      Locals:         0       0       0       0       0       0       0       0       0
   389 ;;      Temps:          2       0       0       0       0       0       0       0       0
   390 ;;      Totals:         2       0       0       0       0       0       0       0       0
   391 ;;Total ram usage:        2 bytes
   392 ;; Hardware stack levels required when called:    2
   393 ;; This function calls:
   394 ;;		_Lcd_Cmd
   395 ;;		_Lcd_Init
   396 ;;		_Lcd_Out
   397 ;;		_PWM1_Init
   398 ;;		_PWM1_Set_Duty
   399 ;;		_PWM1_Start
   400 ;;		_sprintf
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           	psect	text0
   407  001058                     __ptext0:
   408                           	callstack 0
   409  001058                     _main:
   410                           	callstack 29
   411  001058                     
   412                           ;mainPWM.c: 36: ADCON0 = 0b00000000;
   413  001058  0E00               	movlw	0
   414  00105A  6EC2               	movwf	194,c	;volatile
   415                           
   416                           ;mainPWM.c: 37: ADCON1 = 0x06;
   417  00105C  0E06               	movlw	6
   418  00105E  6EC1               	movwf	193,c	;volatile
   419  001060                     
   420                           ;mainPWM.c: 40: INTCON2bits.RBPU = 1;
   421  001060  8EF1               	bsf	241,7,c	;volatile
   422                           
   423                           ;mainPWM.c: 41: T1CON = 0b10000011;
   424  001062  0E83               	movlw	131
   425  001064  6ECD               	movwf	205,c	;volatile
   426                           
   427                           ;mainPWM.c: 44: TMR1L = 0;
   428  001066  0E00               	movlw	0
   429  001068  6ECE               	movwf	206,c	;volatile
   430                           
   431                           ;mainPWM.c: 45: TMR1H = 0;
   432  00106A  0E00               	movlw	0
   433  00106C  6ECF               	movwf	207,c	;volatile
   434  00106E                     
   435                           ;mainPWM.c: 48: TRISA = 0xFF;
   436  00106E  6892               	setf	146,c	;volatile
   437                           
   438                           ;mainPWM.c: 49: TRISB = 0b00000000;
   439  001070  0E00               	movlw	0
   440  001072  6E93               	movwf	147,c	;volatile
   441                           
   442                           ;mainPWM.c: 50: TRISC = 0b00000001;
   443  001074  0E01               	movlw	1
   444  001076  6E94               	movwf	148,c	;volatile
   445                           
   446                           ;mainPWM.c: 51: TRISD = 0b00001111;
   447  001078  0E0F               	movlw	15
   448  00107A  6E95               	movwf	149,c	;volatile
   449                           
   450                           ;mainPWM.c: 52: TRISE = 0b00000000;
   451  00107C  0E00               	movlw	0
   452  00107E  6E96               	movwf	150,c	;volatile
   453                           
   454                           ;mainPWM.c: 54: PORTA = 0;
   455  001080  0E00               	movlw	0
   456  001082  6E80               	movwf	128,c	;volatile
   457                           
   458                           ;mainPWM.c: 55: LATA = 0;
   459  001084  0E00               	movlw	0
   460  001086  6E89               	movwf	137,c	;volatile
   461                           
   462                           ;mainPWM.c: 56: PORTB = 0;
   463  001088  0E00               	movlw	0
   464  00108A  6E81               	movwf	129,c	;volatile
   465                           
   466                           ;mainPWM.c: 57: LATB = 0;
   467  00108C  0E00               	movlw	0
   468  00108E  6E8A               	movwf	138,c	;volatile
   469                           
   470                           ;mainPWM.c: 58: PORTC = 0;
   471  001090  0E00               	movlw	0
   472  001092  6E82               	movwf	130,c	;volatile
   473                           
   474                           ;mainPWM.c: 59: LATC = 0;
   475  001094  0E00               	movlw	0
   476  001096  6E8B               	movwf	139,c	;volatile
   477                           
   478                           ;mainPWM.c: 60: PORTD = 0;
   479  001098  0E00               	movlw	0
   480  00109A  6E83               	movwf	131,c	;volatile
   481                           
   482                           ;mainPWM.c: 61: LATD = 0;
   483  00109C  0E00               	movlw	0
   484  00109E  6E8C               	movwf	140,c	;volatile
   485                           
   486                           ;mainPWM.c: 62: PORTE = 0;
   487  0010A0  0E00               	movlw	0
   488  0010A2  6E84               	movwf	132,c	;volatile
   489                           
   490                           ;mainPWM.c: 63: LATE = 0;
   491  0010A4  0E00               	movlw	0
   492  0010A6  6E8D               	movwf	141,c	;volatile
   493  0010A8                     
   494                           ;mainPWM.c: 66: Lcd_Init();
   495  0010A8  ECA5  F006         	call	_Lcd_Init	;wreg free
   496  0010AC                     
   497                           ;mainPWM.c: 67: Lcd_Cmd(12);
   498  0010AC  0E0C               	movlw	12
   499  0010AE  EC0F  F006         	call	_Lcd_Cmd
   500  0010B2                     
   501                           ;mainPWM.c: 68: PWM1_Init(1000);
   502  0010B2  0E03               	movlw	3
   503  0010B4  6E10               	movwf	(PWM1_Init@f+1)^0,c
   504  0010B6  0EE8               	movlw	232
   505  0010B8  6E0F               	movwf	PWM1_Init@f^0,c
   506  0010BA  ECB3  F007         	call	_PWM1_Init	;wreg free
   507  0010BE                     
   508                           ;mainPWM.c: 69: PWM1_Start();
   509  0010BE  EC46  F00A         	call	_PWM1_Start	;wreg free
   510  0010C2                     l180:
   511  0010C2  0004               	clrwdt		;# 
   512  0010C4                     
   513                           ;mainPWM.c: 77: PWM1_Set_Duty(duty);
   514  0010C4  0E64               	movlw	100
   515  0010C6  ECE7  F008         	call	_PWM1_Set_Duty
   516  0010CA                     
   517                           ;mainPWM.c: 78: count = (TMR1H<<8) + TMR1L;
   518  0010CA  50CF               	movf	207,w,c	;volatile
   519  0010CC  6E21               	movwf	(??_main+1)^0,c
   520  0010CE  6A20               	clrf	??_main^0,c
   521  0010D0  50CE               	movf	206,w,c	;volatile
   522  0010D2  2420               	addwf	??_main^0,w,c
   523  0010D4  6E22               	movwf	_count^0,c
   524  0010D6  0E00               	movlw	0
   525  0010D8  2021               	addwfc	(??_main+1)^0,w,c
   526  0010DA  6E23               	movwf	(_count+1)^0,c
   527  0010DC                     
   528                           ;mainPWM.c: 80: sprintf(str, "%05u", count);
   529  0010DC  0E24               	movlw	low _str
   530  0010DE  6E0D               	movwf	sprintf@sp^0,c
   531  0010E0  0E00               	movlw	high _str
   532  0010E2  6E0E               	movwf	(sprintf@sp+1)^0,c
   533  0010E4  0E0B               	movlw	low STR_1
   534  0010E6  6E0F               	movwf	sprintf@f^0,c
   535  0010E8  0E08               	movlw	high STR_1
   536  0010EA  6E10               	movwf	(sprintf@f+1)^0,c
   537  0010EC  C022  F011         	movff	_count,?_sprintf+4
   538  0010F0  C023  F012         	movff	_count+1,?_sprintf+5
   539  0010F4  EC09  F004         	call	_sprintf	;wreg free
   540  0010F8                     
   541                           ;mainPWM.c: 81: Lcd_Out(1, 0, str);
   542  0010F8  0E00               	movlw	0
   543  0010FA  6E04               	movwf	Lcd_Out@x^0,c
   544  0010FC  0E24               	movlw	low _str
   545  0010FE  6E05               	movwf	Lcd_Out@buffer^0,c
   546  001100  0E00               	movlw	high _str
   547  001102  6E06               	movwf	(Lcd_Out@buffer+1)^0,c
   548  001104  0E01               	movlw	1
   549  001106  EC30  F009         	call	_Lcd_Out
   550  00110A                     
   551                           ;mainPWM.c: 82: _delaywdt((unsigned long)((1000)*(8000000/4000.0)));
   552  00110A  0E08               	movlw	8
   553  00110C  6E21               	movwf	(??_main+1)^0,c
   554  00110E  0E9E               	movlw	158
   555  001110  6E20               	movwf	??_main^0,c
   556  001112  0E4C               	movlw	76
   557  001114                     u867:
   558  001114  0004               	clrwdt	
   559  001116  2EE8               	decfsz	wreg,f,c
   560  001118  D7FD               	bra	u867
   561  00111A  2E20               	decfsz	??_main^0,f,c
   562  00111C  D7FB               	bra	u867
   563  00111E  2E21               	decfsz	(??_main+1)^0,f,c
   564  001120  D7F9               	bra	u867
   565  001122  EF61  F008         	goto	l180
   566  001126  EF00  F000         	goto	start
   567  00112A                     __end_of_main:
   568                           	callstack 0
   569                           
   570 ;; *************** function _sprintf *****************
   571 ;; Defined at:
   572 ;;		line 505 in file "D:\MPLABX\XC8\pic\sources\c90\common\doprnt.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;  sp              2   12[COMRAM] PTR unsigned char 
   575 ;;		 -> str(5), 
   576 ;;  f               2   14[COMRAM] PTR const unsigned char 
   577 ;;		 -> STR_1(5), 
   578 ;; Auto vars:     Size  Location     Type
   579 ;;  tmpval          4    0        struct .
   580 ;;  cp              3    0        PTR const unsigned char 
   581 ;;  width           2   28[COMRAM] int 
   582 ;;  val             2   25[COMRAM] unsigned int 
   583 ;;  ap              2   22[COMRAM] PTR void [1]
   584 ;;		 -> ?_sprintf(2), 
   585 ;;  len             2    0        unsigned int 
   586 ;;  c               1   30[COMRAM] unsigned char 
   587 ;;  prec            1   27[COMRAM] char 
   588 ;;  flag            1   24[COMRAM] unsigned char 
   589 ;; Return value:  Size  Location     Type
   590 ;;                  2   12[COMRAM] int 
   591 ;; Registers used:
   592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   593 ;; Tracked objects:
   594 ;;		On entry : 0/0
   595 ;;		On exit  : 0/0
   596 ;;		Unchanged: 0/0
   597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   598 ;;      Params:         6       0       0       0       0       0       0       0       0
   599 ;;      Locals:         9       0       0       0       0       0       0       0       0
   600 ;;      Temps:          4       0       0       0       0       0       0       0       0
   601 ;;      Totals:        19       0       0       0       0       0       0       0       0
   602 ;;Total ram usage:       19 bytes
   603 ;; Hardware stack levels used:    1
   604 ;; Hardware stack levels required when called:    1
   605 ;; This function calls:
   606 ;;		___lwdiv
   607 ;;		___lwmod
   608 ;;		___wmul
   609 ;;		_isdigit
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text1
   616  000812                     __ptext1:
   617                           	callstack 0
   618  000812                     _sprintf:
   619                           	callstack 29
   620  000812                     
   621                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
   622  000812  0E11               	movlw	low (?_sprintf+4)
   623  000814  6E17               	movwf	sprintf@ap^0,c
   624  000816  0E00               	movlw	high (?_sprintf+4)
   625  000818  6E18               	movwf	(sprintf@ap+1)^0,c
   626                           
   627                           ;doprnt.c: 553: while((c = *f++)) {
   628  00081A  EF5D  F005         	goto	l1710
   629  00081E                     l1628:
   630                           
   631                           ;doprnt.c: 555: if(c != '%')
   632  00081E  0E25               	movlw	37
   633  000820  181F               	xorwf	sprintf@c^0,w,c
   634  000822  B4D8               	btfsc	status,2,c
   635  000824  EF16  F004         	goto	u731
   636  000828  EF18  F004         	goto	u730
   637  00082C                     u731:
   638  00082C  EF22  F004         	goto	l1634
   639  000830                     u730:
   640  000830                     
   641                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
   642  000830  C00D  FFD9         	movff	sprintf@sp,fsr2l
   643  000834  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   644  000838  C01F  FFDF         	movff	sprintf@c,indf2
   645  00083C  4A0D               	infsnz	sprintf@sp^0,f,c
   646  00083E  2A0E               	incf	(sprintf@sp+1)^0,f,c
   647                           
   648                           ;doprnt.c: 559: continue;
   649  000840  EF5D  F005         	goto	l1710
   650  000844                     l1634:
   651                           
   652                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
   653  000844  0E00               	movlw	0
   654  000846  6E1E               	movwf	(sprintf@width+1)^0,c
   655  000848  0E00               	movlw	0
   656  00084A  6E1D               	movwf	sprintf@width^0,c
   657                           
   658                           ;doprnt.c: 565: flag = 0;
   659  00084C  0E00               	movlw	0
   660  00084E  6E19               	movwf	sprintf@flag^0,c
   661  000850  EF2D  F004         	goto	l1640
   662  000854                     l1636:
   663                           
   664                           ;doprnt.c: 597: flag |= 0x04;
   665  000854  8419               	bsf	sprintf@flag^0,2,c
   666                           
   667                           ;doprnt.c: 598: f++;
   668  000856  4A0F               	infsnz	sprintf@f^0,f,c
   669  000858  2A10               	incf	(sprintf@f+1)^0,f,c
   670  00085A                     l1640:
   671  00085A  C00F  FFF6         	movff	sprintf@f,tblptrl
   672  00085E  C010  FFF7         	movff	sprintf@f+1,tblptrh
   673  000862                     	if	0	;tblptru may be non-zero
   674  000862                     	endif
   675  000862                     	if	0	;tblptru may be non-zero
   676  000862                     	endif
   677  000862  0008               	tblrd		*
   678  000864  50F5               	movf	tablat,w,c
   679                           
   680                           ; Switch size 1, requested type "simple"
   681                           ; Number of cases is 1, Range of values is 48 to 48
   682                           ; switch strategies available:
   683                           ; Name         Instructions Cycles
   684                           ; simple_byte            4     3 (average)
   685                           ;	Chosen strategy is simple_byte
   686  000866  0A30               	xorlw	48	; case 48
   687  000868  B4D8               	btfsc	status,2,c
   688  00086A  EF2A  F004         	goto	l1636
   689  00086E  EF39  F004         	goto	l1642
   690  000872                     l1642:
   691                           
   692                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
   693  000872  C00F  FFF6         	movff	sprintf@f,tblptrl
   694  000876  C010  FFF7         	movff	sprintf@f+1,tblptrh
   695  00087A                     	if	0	;tblptru may be non-zero
   696  00087A                     	endif
   697  00087A                     	if	0	;tblptru may be non-zero
   698  00087A                     	endif
   699  00087A  0008               	tblrd		*
   700  00087C  50F5               	movf	tablat,w,c
   701  00087E  EC16  F00A         	call	_isdigit
   702  000882  A0D8               	btfss	status,0,c
   703  000884  EF46  F004         	goto	u741
   704  000888  EF48  F004         	goto	u740
   705  00088C                     u741:
   706  00088C  EF85  F004         	goto	l1658
   707  000890                     u740:
   708  000890                     
   709                           ;doprnt.c: 615: width = 0;
   710  000890  0E00               	movlw	0
   711  000892  6E1E               	movwf	(sprintf@width+1)^0,c
   712  000894  0E00               	movlw	0
   713  000896  6E1D               	movwf	sprintf@width^0,c
   714  000898                     l1646:
   715                           
   716                           ;doprnt.c: 617: width *= 10;
   717  000898  C01D  F001         	movff	sprintf@width,___wmul@multiplier
   718  00089C  C01E  F002         	movff	sprintf@width+1,___wmul@multiplier+1
   719  0008A0  0E00               	movlw	0
   720  0008A2  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   721  0008A4  0E0A               	movlw	10
   722  0008A6  6E03               	movwf	___wmul@multiplicand^0,c
   723  0008A8  EC5C  F00A         	call	___wmul	;wreg free
   724  0008AC  C001  F01D         	movff	?___wmul,sprintf@width
   725  0008B0  C002  F01E         	movff	?___wmul+1,sprintf@width+1
   726  0008B4                     
   727                           ;doprnt.c: 618: width += *f++ - '0';
   728  0008B4  0ED0               	movlw	208
   729  0008B6  6E13               	movwf	??_sprintf^0,c
   730  0008B8  0EFF               	movlw	255
   731  0008BA  6E14               	movwf	(??_sprintf+1)^0,c
   732  0008BC  C00F  FFF6         	movff	sprintf@f,tblptrl
   733  0008C0  C010  FFF7         	movff	sprintf@f+1,tblptrh
   734  0008C4                     	if	0	;tblptru may be non-zero
   735  0008C4                     	endif
   736  0008C4                     	if	0	;tblptru may be non-zero
   737  0008C4                     	endif
   738  0008C4  0008               	tblrd		*
   739  0008C6  50F5               	movf	tablat,w,c
   740  0008C8  6E15               	movwf	(??_sprintf+2)^0,c
   741  0008CA  6A16               	clrf	(??_sprintf+3)^0,c
   742  0008CC  5013               	movf	??_sprintf^0,w,c
   743  0008CE  2615               	addwf	(??_sprintf+2)^0,f,c
   744  0008D0  5014               	movf	(??_sprintf+1)^0,w,c
   745  0008D2  2216               	addwfc	(??_sprintf+3)^0,f,c
   746  0008D4  5015               	movf	(??_sprintf+2)^0,w,c
   747  0008D6  261D               	addwf	sprintf@width^0,f,c
   748  0008D8  5016               	movf	(??_sprintf+3)^0,w,c
   749  0008DA  221E               	addwfc	(sprintf@width+1)^0,f,c
   750  0008DC  4A0F               	infsnz	sprintf@f^0,f,c
   751  0008DE  2A10               	incf	(sprintf@f+1)^0,f,c
   752  0008E0                     
   753                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
   754  0008E0  C00F  FFF6         	movff	sprintf@f,tblptrl
   755  0008E4  C010  FFF7         	movff	sprintf@f+1,tblptrh
   756  0008E8                     	if	0	;tblptru may be non-zero
   757  0008E8                     	endif
   758  0008E8                     	if	0	;tblptru may be non-zero
   759  0008E8                     	endif
   760  0008E8  0008               	tblrd		*
   761  0008EA  50F5               	movf	tablat,w,c
   762  0008EC  EC16  F00A         	call	_isdigit
   763  0008F0  B0D8               	btfsc	status,0,c
   764  0008F2  EF7D  F004         	goto	u751
   765  0008F6  EF7F  F004         	goto	u750
   766  0008FA                     u751:
   767  0008FA  EF4C  F004         	goto	l1646
   768  0008FE                     u750:
   769  0008FE  EF85  F004         	goto	l1658
   770  000902                     l1654:
   771                           
   772                           ;doprnt.c: 844: flag |= 0xC0;
   773  000902  0EC0               	movlw	192
   774  000904  1219               	iorwf	sprintf@flag^0,f,c
   775                           
   776                           ;doprnt.c: 845: break;
   777  000906  EF99  F004         	goto	l1660
   778  00090A                     l1658:
   779  00090A  C00F  FFF6         	movff	sprintf@f,tblptrl
   780  00090E  C010  FFF7         	movff	sprintf@f+1,tblptrh
   781  000912  4A0F               	infsnz	sprintf@f^0,f,c
   782  000914  2A10               	incf	(sprintf@f+1)^0,f,c
   783  000916                     	if	0	;tblptru may be non-zero
   784  000916                     	endif
   785  000916                     	if	0	;tblptru may be non-zero
   786  000916                     	endif
   787  000916  0008               	tblrd		*
   788  000918  CFF5 F01F          	movff	tablat,sprintf@c
   789  00091C  501F               	movf	sprintf@c^0,w,c
   790                           
   791                           ; Switch size 1, requested type "simple"
   792                           ; Number of cases is 2, Range of values is 0 to 117
   793                           ; switch strategies available:
   794                           ; Name         Instructions Cycles
   795                           ; simple_byte            7     4 (average)
   796                           ;	Chosen strategy is simple_byte
   797  00091E  0A00               	xorlw	0	; case 0
   798  000920  B4D8               	btfsc	status,2,c
   799  000922  EF6E  F005         	goto	l1712
   800  000926  0A75               	xorlw	117	; case 117
   801  000928  B4D8               	btfsc	status,2,c
   802  00092A  EF81  F004         	goto	l1654
   803  00092E  EF5D  F005         	goto	l1710
   804  000932                     l1660:
   805                           
   806                           ;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (uns
      +                          igned)0));
   807  000932  C017  FFD9         	movff	sprintf@ap,fsr2l
   808  000936  C018  FFDA         	movff	sprintf@ap+1,fsr2h
   809  00093A  CFDE F01A          	movff	postinc2,sprintf@val
   810  00093E  CFDD F01B          	movff	postdec2,sprintf@val+1
   811  000942  0E02               	movlw	2
   812  000944  2617               	addwf	sprintf@ap^0,f,c
   813  000946  0E00               	movlw	0
   814  000948  2218               	addwfc	(sprintf@ap+1)^0,f,c
   815  00094A                     
   816                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
   817  00094A  0E01               	movlw	1
   818  00094C  6E1F               	movwf	sprintf@c^0,c
   819  00094E                     l1670:
   820                           
   821                           ;doprnt.c: 1332: if(val < dpowers[c])
   822  00094E  501F               	movf	sprintf@c^0,w,c
   823  000950  0D02               	mullw	2
   824  000952  0E01               	movlw	low _dpowers
   825  000954  24F3               	addwf	243,w,c
   826  000956  6EF6               	movwf	tblptrl,c
   827  000958  0E08               	movlw	high _dpowers
   828  00095A  20F4               	addwfc	244,w,c
   829  00095C  6EF7               	movwf	tblptrh,c
   830  00095E                     	if	0	;There are less than 3 active tblptr bytes
   831  00095E                     	endif
   832  00095E  0009               	tblrd		*+
   833  000960  50F5               	movf	tablat,w,c
   834  000962  5C1A               	subwf	sprintf@val^0,w,c
   835  000964  0009               	tblrd		*+
   836  000966  50F5               	movf	tablat,w,c
   837  000968  581B               	subwfb	(sprintf@val+1)^0,w,c
   838  00096A  B0D8               	btfsc	status,0,c
   839  00096C  EFBA  F004         	goto	u761
   840  000970  EFBC  F004         	goto	u760
   841  000974                     u761:
   842  000974  EFBE  F004         	goto	l1674
   843  000978                     u760:
   844  000978  EFC8  F004         	goto	l1678
   845  00097C                     l1674:
   846  00097C  2A1F               	incf	sprintf@c^0,f,c
   847  00097E  0E05               	movlw	5
   848  000980  181F               	xorwf	sprintf@c^0,w,c
   849  000982  A4D8               	btfss	status,2,c
   850  000984  EFC6  F004         	goto	u771
   851  000988  EFC8  F004         	goto	u770
   852  00098C                     u771:
   853  00098C  EFA7  F004         	goto	l1670
   854  000990                     u770:
   855  000990                     l1678:
   856                           
   857                           ;doprnt.c: 1407: if(width > c)
   858  000990  501F               	movf	sprintf@c^0,w,c
   859  000992  6E13               	movwf	??_sprintf^0,c
   860  000994  6A14               	clrf	(??_sprintf+1)^0,c
   861  000996  501D               	movf	sprintf@width^0,w,c
   862  000998  5C13               	subwf	??_sprintf^0,w,c
   863  00099A  5014               	movf	(??_sprintf+1)^0,w,c
   864  00099C  0A80               	xorlw	128
   865  00099E  6E15               	movwf	(??_sprintf+2)^0,c
   866  0009A0  501E               	movf	(sprintf@width+1)^0,w,c
   867  0009A2  0A80               	xorlw	128
   868  0009A4  5815               	subwfb	(??_sprintf+2)^0,w,c
   869  0009A6  B0D8               	btfsc	status,0,c
   870  0009A8  EFD8  F004         	goto	u781
   871  0009AC  EFDA  F004         	goto	u780
   872  0009B0                     u781:
   873  0009B0  EFE0  F004         	goto	l1682
   874  0009B4                     u780:
   875  0009B4                     
   876                           ;doprnt.c: 1408: width -= c;
   877  0009B4  501F               	movf	sprintf@c^0,w,c
   878  0009B6  5E1D               	subwf	sprintf@width^0,f,c
   879  0009B8  0E00               	movlw	0
   880  0009BA  5A1E               	subwfb	(sprintf@width+1)^0,f,c
   881  0009BC  EFE4  F004         	goto	l1684
   882  0009C0                     l1682:
   883                           
   884                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
   885  0009C0  0E00               	movlw	0
   886  0009C2  6E1E               	movwf	(sprintf@width+1)^0,c
   887  0009C4  0E00               	movlw	0
   888  0009C6  6E1D               	movwf	sprintf@width^0,c
   889  0009C8                     l1684:
   890                           
   891                           ;doprnt.c: 1413: if(flag & 0x04) {
   892  0009C8  A419               	btfss	sprintf@flag^0,2,c
   893  0009CA  EFE9  F004         	goto	u791
   894  0009CE  EFEB  F004         	goto	u790
   895  0009D2                     u791:
   896  0009D2  EF0A  F005         	goto	l1694
   897  0009D6                     u790:
   898  0009D6                     
   899                           ;doprnt.c: 1441: if(width)
   900  0009D6  501D               	movf	sprintf@width^0,w,c
   901  0009D8  101E               	iorwf	(sprintf@width+1)^0,w,c
   902  0009DA  B4D8               	btfsc	status,2,c
   903  0009DC  EFF2  F004         	goto	u801
   904  0009E0  EFF4  F004         	goto	u800
   905  0009E4                     u801:
   906  0009E4  EF27  F005         	goto	l221
   907  0009E8                     u800:
   908  0009E8                     l1688:
   909                           
   910                           ;doprnt.c: 1443: ((*sp++ = ('0')));
   911  0009E8  C00D  FFD9         	movff	sprintf@sp,fsr2l
   912  0009EC  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   913  0009F0  0E30               	movlw	48
   914  0009F2  6EDF               	movwf	indf2,c
   915  0009F4  4A0D               	infsnz	sprintf@sp^0,f,c
   916  0009F6  2A0E               	incf	(sprintf@sp+1)^0,f,c
   917  0009F8                     
   918                           ;doprnt.c: 1444: while(--width);
   919  0009F8  061D               	decf	sprintf@width^0,f,c
   920  0009FA  A0D8               	btfss	status,0,c
   921  0009FC  061E               	decf	(sprintf@width+1)^0,f,c
   922  0009FE  501D               	movf	sprintf@width^0,w,c
   923  000A00  101E               	iorwf	(sprintf@width+1)^0,w,c
   924  000A02  A4D8               	btfss	status,2,c
   925  000A04  EF06  F005         	goto	u811
   926  000A08  EF08  F005         	goto	u810
   927  000A0C                     u811:
   928  000A0C  EFF4  F004         	goto	l1688
   929  000A10                     u810:
   930  000A10  EF27  F005         	goto	l221
   931  000A14                     l1694:
   932                           
   933                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
   934  000A14  501D               	movf	sprintf@width^0,w,c
   935  000A16  101E               	iorwf	(sprintf@width+1)^0,w,c
   936  000A18  B4D8               	btfsc	status,2,c
   937  000A1A  EF11  F005         	goto	u821
   938  000A1E  EF13  F005         	goto	u820
   939  000A22                     u821:
   940  000A22  EF27  F005         	goto	l221
   941  000A26                     u820:
   942  000A26                     l1696:
   943                           
   944                           ;doprnt.c: 1456: ((*sp++ = (' ')));
   945  000A26  C00D  FFD9         	movff	sprintf@sp,fsr2l
   946  000A2A  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
   947  000A2E  0E20               	movlw	32
   948  000A30  6EDF               	movwf	indf2,c
   949  000A32  4A0D               	infsnz	sprintf@sp^0,f,c
   950  000A34  2A0E               	incf	(sprintf@sp+1)^0,f,c
   951  000A36                     
   952                           ;doprnt.c: 1457: while(--width);
   953  000A36  061D               	decf	sprintf@width^0,f,c
   954  000A38  A0D8               	btfss	status,0,c
   955  000A3A  061E               	decf	(sprintf@width+1)^0,f,c
   956  000A3C  501D               	movf	sprintf@width^0,w,c
   957  000A3E  101E               	iorwf	(sprintf@width+1)^0,w,c
   958  000A40  A4D8               	btfss	status,2,c
   959  000A42  EF25  F005         	goto	u831
   960  000A46  EF27  F005         	goto	u830
   961  000A4A                     u831:
   962  000A4A  EF13  F005         	goto	l1696
   963  000A4E                     u830:
   964  000A4E                     l221:
   965                           
   966                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
   967  000A4E  C01F  F01C         	movff	sprintf@c,sprintf@prec
   968                           
   969                           ;doprnt.c: 1500: while(prec--) {
   970  000A52  EF54  F005         	goto	l1708
   971  000A56                     l1702:
   972                           
   973                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
   974  000A56  501C               	movf	sprintf@prec^0,w,c
   975  000A58  0D02               	mullw	2
   976  000A5A  0E01               	movlw	low _dpowers
   977  000A5C  24F3               	addwf	243,w,c
   978  000A5E  6EF6               	movwf	tblptrl,c
   979  000A60  0E08               	movlw	high _dpowers
   980  000A62  20F4               	addwfc	244,w,c
   981  000A64  6EF7               	movwf	tblptrh,c
   982  000A66                     	if	0	;There are less than 3 active tblptr bytes
   983  000A66                     	endif
   984  000A66  0009               	tblrd		*+
   985  000A68  CFF5 F003          	movff	tablat,___lwdiv@divisor
   986  000A6C  000A               	tblrd		*-
   987  000A6E  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
   988  000A72  C01A  F001         	movff	sprintf@val,___lwdiv@dividend
   989  000A76  C01B  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
   990  000A7A  EC75  F009         	call	___lwdiv	;wreg free
   991  000A7E  C001  F008         	movff	?___lwdiv,___lwmod@dividend
   992  000A82  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
   993  000A86  0E00               	movlw	0
   994  000A88  6E0B               	movwf	(___lwmod@divisor+1)^0,c
   995  000A8A  0E0A               	movlw	10
   996  000A8C  6E0A               	movwf	___lwmod@divisor^0,c
   997  000A8E  ECE4  F009         	call	___lwmod	;wreg free
   998  000A92  5008               	movf	?___lwmod^0,w,c
   999  000A94  0F30               	addlw	48
  1000  000A96  6E1F               	movwf	sprintf@c^0,c
  1001  000A98                     
  1002                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  1003  000A98  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1004  000A9C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1005  000AA0  C01F  FFDF         	movff	sprintf@c,indf2
  1006  000AA4  4A0D               	infsnz	sprintf@sp^0,f,c
  1007  000AA6  2A0E               	incf	(sprintf@sp+1)^0,f,c
  1008  000AA8                     l1708:
  1009  000AA8  061C               	decf	sprintf@prec^0,f,c
  1010  000AAA  281C               	incf	sprintf@prec^0,w,c
  1011  000AAC  A4D8               	btfss	status,2,c
  1012  000AAE  EF5B  F005         	goto	u841
  1013  000AB2  EF5D  F005         	goto	u840
  1014  000AB6                     u841:
  1015  000AB6  EF2B  F005         	goto	l1702
  1016  000ABA                     u840:
  1017  000ABA                     l1710:
  1018  000ABA  C00F  FFF6         	movff	sprintf@f,tblptrl
  1019  000ABE  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1020  000AC2  4A0F               	infsnz	sprintf@f^0,f,c
  1021  000AC4  2A10               	incf	(sprintf@f+1)^0,f,c
  1022  000AC6                     	if	0	;tblptru may be non-zero
  1023  000AC6                     	endif
  1024  000AC6                     	if	0	;tblptru may be non-zero
  1025  000AC6                     	endif
  1026  000AC6  0008               	tblrd		*
  1027  000AC8  CFF5 F01F          	movff	tablat,sprintf@c
  1028  000ACC  501F               	movf	sprintf@c^0,w,c
  1029  000ACE  A4D8               	btfss	status,2,c
  1030  000AD0  EF6C  F005         	goto	u851
  1031  000AD4  EF6E  F005         	goto	u850
  1032  000AD8                     u851:
  1033  000AD8  EF0F  F004         	goto	l1628
  1034  000ADC                     u850:
  1035  000ADC                     l1712:
  1036                           
  1037                           ;doprnt.c: 1564: *sp = 0;
  1038  000ADC  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1039  000AE0  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1040  000AE4  0E00               	movlw	0
  1041  000AE6  6EDF               	movwf	indf2,c
  1042  000AE8  0012               	return		;funcret
  1043  000AEA                     __end_of_sprintf:
  1044                           	callstack 0
  1045                           
  1046 ;; *************** function _isdigit *****************
  1047 ;; Defined at:
  1048 ;;		line 8 in file "D:\MPLABX\XC8\pic\sources\c90\common\isdigit.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;  c               1    wreg     unsigned char 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  c               1    2[COMRAM] unsigned char 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;		None               void
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1062 ;;      Params:         0       0       0       0       0       0       0       0       0
  1063 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1064 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1065 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1066 ;;Total ram usage:        3 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_sprintf
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text2
  1076  00142C                     __ptext2:
  1077                           	callstack 0
  1078  00142C                     _isdigit:
  1079                           	callstack 29
  1080                           
  1081                           ;incstack = 0
  1082                           ;isdigit@c stored from wreg
  1083  00142C  6E03               	movwf	isdigit@c^0,c
  1084  00142E  0E00               	movlw	0
  1085  001430  6E02               	movwf	_isdigit$1156^0,c
  1086  001432  0E3A               	movlw	58
  1087  001434  6003               	cpfslt	isdigit@c^0,c
  1088  001436  EF1F  F00A         	goto	u491
  1089  00143A  EF21  F00A         	goto	u490
  1090  00143E                     u491:
  1091  00143E  EF2B  F00A         	goto	l1442
  1092  001442                     u490:
  1093  001442  0E2F               	movlw	47
  1094  001444  6403               	cpfsgt	isdigit@c^0,c
  1095  001446  EF27  F00A         	goto	u501
  1096  00144A  EF29  F00A         	goto	u500
  1097  00144E                     u501:
  1098  00144E  EF2B  F00A         	goto	l1442
  1099  001452                     u500:
  1100  001452  0E01               	movlw	1
  1101  001454  6E02               	movwf	_isdigit$1156^0,c
  1102  001456                     l1442:
  1103  001456  C002  F001         	movff	_isdigit$1156,??_isdigit
  1104  00145A  3001               	rrcf	??_isdigit^0,w,c
  1105  00145C  0012               	return		;funcret
  1106  00145E                     __end_of_isdigit:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function ___wmul *****************
  1110 ;; Defined at:
  1111 ;;		line 15 in file "D:\MPLABX\XC8\pic\sources\c90\common\Umul16.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  multiplier      2    0[COMRAM] unsigned int 
  1114 ;;  multiplicand    2    2[COMRAM] unsigned int 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  product         2    4[COMRAM] unsigned int 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  2    0[COMRAM] unsigned int 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0, prodl, prodh
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1126 ;;      Params:         4       0       0       0       0       0       0       0       0
  1127 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1129 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1130 ;;Total ram usage:        6 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_sprintf
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text3
  1140  0014B8                     __ptext3:
  1141                           	callstack 0
  1142  0014B8                     ___wmul:
  1143                           	callstack 29
  1144  0014B8  5001               	movf	___wmul@multiplier^0,w,c
  1145  0014BA  0203               	mulwf	___wmul@multiplicand^0,c
  1146  0014BC  CFF3 F005          	movff	prodl,___wmul@product
  1147  0014C0  CFF4 F006          	movff	prodh,___wmul@product+1
  1148  0014C4  5001               	movf	___wmul@multiplier^0,w,c
  1149  0014C6  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  1150  0014C8  50F3               	movf	243,w,c
  1151  0014CA  2606               	addwf	(___wmul@product+1)^0,f,c
  1152  0014CC  5002               	movf	(___wmul@multiplier+1)^0,w,c
  1153  0014CE  0203               	mulwf	___wmul@multiplicand^0,c
  1154  0014D0  50F3               	movf	243,w,c
  1155  0014D2  2606               	addwf	(___wmul@product+1)^0,f,c
  1156  0014D4  C005  F001         	movff	___wmul@product,?___wmul
  1157  0014D8  C006  F002         	movff	___wmul@product+1,?___wmul+1
  1158  0014DC  0012               	return		;funcret
  1159  0014DE                     __end_of___wmul:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function ___lwmod *****************
  1163 ;; Defined at:
  1164 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\lwmod.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  dividend        2    7[COMRAM] unsigned int 
  1167 ;;  divisor         2    9[COMRAM] unsigned int 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  counter         1   11[COMRAM] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  2    7[COMRAM] unsigned int 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1179 ;;      Params:         4       0       0       0       0       0       0       0       0
  1180 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1182 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1183 ;;Total ram usage:        5 bytes
  1184 ;; Hardware stack levels used:    1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_sprintf
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text4
  1193  0013C8                     __ptext4:
  1194                           	callstack 0
  1195  0013C8                     ___lwmod:
  1196                           	callstack 29
  1197  0013C8  500A               	movf	___lwmod@divisor^0,w,c
  1198  0013CA  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1199  0013CC  B4D8               	btfsc	status,2,c
  1200  0013CE  EFEB  F009         	goto	u651
  1201  0013D2  EFED  F009         	goto	u650
  1202  0013D6                     u651:
  1203  0013D6  EF11  F00A         	goto	l721
  1204  0013DA                     u650:
  1205  0013DA  0E01               	movlw	1
  1206  0013DC  6E0C               	movwf	___lwmod@counter^0,c
  1207  0013DE  EFF5  F009         	goto	l1556
  1208  0013E2                     l1554:
  1209  0013E2  90D8               	bcf	status,0,c
  1210  0013E4  360A               	rlcf	___lwmod@divisor^0,f,c
  1211  0013E6  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1212  0013E8  2A0C               	incf	___lwmod@counter^0,f,c
  1213  0013EA                     l1556:
  1214  0013EA  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1215  0013EC  EFFA  F009         	goto	u661
  1216  0013F0  EFFC  F009         	goto	u660
  1217  0013F4                     u661:
  1218  0013F4  EFF1  F009         	goto	l1554
  1219  0013F8                     u660:
  1220  0013F8                     l1558:
  1221  0013F8  500A               	movf	___lwmod@divisor^0,w,c
  1222  0013FA  5C08               	subwf	___lwmod@dividend^0,w,c
  1223  0013FC  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1224  0013FE  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1225  001400  A0D8               	btfss	status,0,c
  1226  001402  EF05  F00A         	goto	u671
  1227  001406  EF07  F00A         	goto	u670
  1228  00140A                     u671:
  1229  00140A  EF0B  F00A         	goto	l1562
  1230  00140E                     u670:
  1231  00140E  500A               	movf	___lwmod@divisor^0,w,c
  1232  001410  5E08               	subwf	___lwmod@dividend^0,f,c
  1233  001412  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1234  001414  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1235  001416                     l1562:
  1236  001416  90D8               	bcf	status,0,c
  1237  001418  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1238  00141A  320A               	rrcf	___lwmod@divisor^0,f,c
  1239  00141C  2E0C               	decfsz	___lwmod@counter^0,f,c
  1240  00141E  EFFC  F009         	goto	l1558
  1241  001422                     l721:
  1242  001422  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1243  001426  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1244  00142A  0012               	return		;funcret
  1245  00142C                     __end_of___lwmod:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function ___lwdiv *****************
  1249 ;; Defined at:
  1250 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\lwdiv.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  dividend        2    0[COMRAM] unsigned int 
  1253 ;;  divisor         2    2[COMRAM] unsigned int 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  quotient        2    4[COMRAM] unsigned int 
  1256 ;;  counter         1    6[COMRAM] unsigned char 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  2    0[COMRAM] unsigned int 
  1259 ;; Registers used:
  1260 ;;		wreg, status,2, status,0
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1266 ;;      Params:         4       0       0       0       0       0       0       0       0
  1267 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1269 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1270 ;;Total ram usage:        7 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; This function calls:
  1273 ;;		Nothing
  1274 ;; This function is called by:
  1275 ;;		_sprintf
  1276 ;; This function uses a non-reentrant model
  1277 ;;
  1278                           
  1279                           	psect	text5
  1280  0012EA                     __ptext5:
  1281                           	callstack 0
  1282  0012EA                     ___lwdiv:
  1283                           	callstack 29
  1284  0012EA  0E00               	movlw	0
  1285  0012EC  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1286  0012EE  0E00               	movlw	0
  1287  0012F0  6E05               	movwf	___lwdiv@quotient^0,c
  1288  0012F2  5003               	movf	___lwdiv@divisor^0,w,c
  1289  0012F4  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1290  0012F6  B4D8               	btfsc	status,2,c
  1291  0012F8  EF80  F009         	goto	u621
  1292  0012FC  EF82  F009         	goto	u620
  1293  001300                     u621:
  1294  001300  EFAA  F009         	goto	l711
  1295  001304                     u620:
  1296  001304  0E01               	movlw	1
  1297  001306  6E07               	movwf	___lwdiv@counter^0,c
  1298  001308  EF8A  F009         	goto	l1536
  1299  00130C                     l1534:
  1300  00130C  90D8               	bcf	status,0,c
  1301  00130E  3603               	rlcf	___lwdiv@divisor^0,f,c
  1302  001310  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1303  001312  2A07               	incf	___lwdiv@counter^0,f,c
  1304  001314                     l1536:
  1305  001314  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1306  001316  EF8F  F009         	goto	u631
  1307  00131A  EF91  F009         	goto	u630
  1308  00131E                     u631:
  1309  00131E  EF86  F009         	goto	l1534
  1310  001322                     u630:
  1311  001322                     l1538:
  1312  001322  90D8               	bcf	status,0,c
  1313  001324  3605               	rlcf	___lwdiv@quotient^0,f,c
  1314  001326  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1315  001328  5003               	movf	___lwdiv@divisor^0,w,c
  1316  00132A  5C01               	subwf	___lwdiv@dividend^0,w,c
  1317  00132C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1318  00132E  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1319  001330  A0D8               	btfss	status,0,c
  1320  001332  EF9D  F009         	goto	u641
  1321  001336  EF9F  F009         	goto	u640
  1322  00133A                     u641:
  1323  00133A  EFA4  F009         	goto	l1546
  1324  00133E                     u640:
  1325  00133E  5003               	movf	___lwdiv@divisor^0,w,c
  1326  001340  5E01               	subwf	___lwdiv@dividend^0,f,c
  1327  001342  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1328  001344  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1329  001346  8005               	bsf	___lwdiv@quotient^0,0,c
  1330  001348                     l1546:
  1331  001348  90D8               	bcf	status,0,c
  1332  00134A  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1333  00134C  3203               	rrcf	___lwdiv@divisor^0,f,c
  1334  00134E  2E07               	decfsz	___lwdiv@counter^0,f,c
  1335  001350  EF91  F009         	goto	l1538
  1336  001354                     l711:
  1337  001354  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1338  001358  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1339  00135C  0012               	return		;funcret
  1340  00135E                     __end_of___lwdiv:
  1341                           	callstack 0
  1342                           
  1343 ;; *************** function _PWM1_Start *****************
  1344 ;; Defined at:
  1345 ;;		line 76 in file "pwm.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1359 ;;      Params:         0       0       0       0       0       0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1362 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text6
  1373  00148C                     __ptext6:
  1374                           	callstack 0
  1375  00148C                     _PWM1_Start:
  1376                           	callstack 30
  1377  00148C                     
  1378                           ;pwm.c: 79: TRISCbits.TRISC2=0;
  1379  00148C  9494               	bcf	148,2,c	;volatile
  1380                           
  1381                           ;pwm.c: 80: TRISDbits.TRISD5=0;
  1382  00148E  9A95               	bcf	149,5,c	;volatile
  1383  001490                     
  1384                           ;pwm.c: 83: CCP1CON=0x0F;
  1385  001490  0E0F               	movlw	15
  1386  001492  6EBD               	movwf	189,c	;volatile
  1387  001494                     
  1388                           ;pwm.c: 86: T2CONbits.TMR2ON=1;
  1389  001494  84CA               	bsf	202,2,c	;volatile
  1390  001496                     
  1391                           ;pwm.c: 90: PIR1bits.TMR2IF=0;
  1392  001496  929E               	bcf	158,1,c	;volatile
  1393  001498                     l57:
  1394  001498  A29E               	btfss	158,1,c	;volatile
  1395  00149A  EF51  F00A         	goto	u301
  1396  00149E  EF53  F00A         	goto	u300
  1397  0014A2                     u301:
  1398  0014A2  EF4C  F00A         	goto	l57
  1399  0014A6                     u300:
  1400  0014A6                     
  1401                           ;pwm.c: 92: PIR1bits.TMR2IF=0;
  1402  0014A6  929E               	bcf	158,1,c	;volatile
  1403  0014A8                     l60:
  1404  0014A8  A29E               	btfss	158,1,c	;volatile
  1405  0014AA  EF59  F00A         	goto	u311
  1406  0014AE  EF5B  F00A         	goto	u310
  1407  0014B2                     u311:
  1408  0014B2  EF54  F00A         	goto	l60
  1409  0014B6                     u310:
  1410  0014B6  0012               	return		;funcret
  1411  0014B8                     __end_of_PWM1_Start:
  1412                           	callstack 0
  1413                           
  1414 ;; *************** function _PWM1_Set_Duty *****************
  1415 ;; Defined at:
  1416 ;;		line 101 in file "pwm.c"
  1417 ;; Parameters:    Size  Location     Type
  1418 ;;  d               1    wreg     unsigned char 
  1419 ;; Auto vars:     Size  Location     Type
  1420 ;;  d               1   27[COMRAM] unsigned char 
  1421 ;;  temp            2   28[COMRAM] unsigned int 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, status,2, status,0, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1431 ;;      Params:         0       0       0       0       0       0       0       0       0
  1432 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1433 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1434 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1435 ;;Total ram usage:        5 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    1
  1438 ;; This function calls:
  1439 ;;		___lldiv
  1440 ;;		___lmul
  1441 ;; This function is called by:
  1442 ;;		_main
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text7
  1447  0011CE                     __ptext7:
  1448                           	callstack 0
  1449  0011CE                     _PWM1_Set_Duty:
  1450                           	callstack 29
  1451                           
  1452                           ;incstack = 0
  1453                           ;PWM1_Set_Duty@d stored from wreg
  1454  0011CE  6E1C               	movwf	PWM1_Set_Duty@d^0,c
  1455  0011D0                     
  1456                           ;pwm.c: 103: unsigned int temp;;pwm.c: 105: temp=(((unsigned long)(d))*((PR2<<2)|0x03))/
      +                          255;
  1457  0011D0  501C               	movf	PWM1_Set_Duty@d^0,w,c
  1458  0011D2  6E01               	movwf	___lmul@multiplier^0,c
  1459  0011D4  6A02               	clrf	(___lmul@multiplier+1)^0,c
  1460  0011D6  6A03               	clrf	(___lmul@multiplier+2)^0,c
  1461  0011D8  6A04               	clrf	(___lmul@multiplier+3)^0,c
  1462  0011DA  50CB               	movf	203,w,c	;volatile
  1463  0011DC  6E1A               	movwf	??_PWM1_Set_Duty^0,c
  1464  0011DE  6A1B               	clrf	(??_PWM1_Set_Duty+1)^0,c
  1465  0011E0  90D8               	bcf	status,0,c
  1466  0011E2  361A               	rlcf	??_PWM1_Set_Duty^0,f,c
  1467  0011E4  361B               	rlcf	(??_PWM1_Set_Duty+1)^0,f,c
  1468  0011E6  90D8               	bcf	status,0,c
  1469  0011E8  361A               	rlcf	??_PWM1_Set_Duty^0,f,c
  1470  0011EA  361B               	rlcf	(??_PWM1_Set_Duty+1)^0,f,c
  1471  0011EC  0E03               	movlw	3
  1472  0011EE  121A               	iorwf	??_PWM1_Set_Duty^0,f,c
  1473  0011F0  0E00               	movlw	0
  1474  0011F2  121B               	iorwf	(??_PWM1_Set_Duty+1)^0,f,c
  1475  0011F4  C01A  F005         	movff	??_PWM1_Set_Duty,___lmul@multiplicand
  1476  0011F8  C01B  F006         	movff	??_PWM1_Set_Duty+1,___lmul@multiplicand+1
  1477  0011FC  0E00               	movlw	0
  1478  0011FE  BE06               	btfsc	(___lmul@multiplicand+1)^0,7,c
  1479  001200  0EFF               	movlw	-1
  1480  001202  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1481  001204  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1482  001206  ECAF  F009         	call	___lmul	;wreg free
  1483  00120A  C001  F00D         	movff	?___lmul,___lldiv@dividend
  1484  00120E  C002  F00E         	movff	?___lmul+1,___lldiv@dividend+1
  1485  001212  C003  F00F         	movff	?___lmul+2,___lldiv@dividend+2
  1486  001216  C004  F010         	movff	?___lmul+3,___lldiv@dividend+3
  1487  00121A  0EFF               	movlw	255
  1488  00121C  6E11               	movwf	___lldiv@divisor^0,c
  1489  00121E  0E00               	movlw	0
  1490  001220  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1491  001222  0E00               	movlw	0
  1492  001224  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1493  001226  0E00               	movlw	0
  1494  001228  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1495  00122A  EC95  F008         	call	___lldiv	;wreg free
  1496  00122E  C00D  F01D         	movff	?___lldiv,PWM1_Set_Duty@temp
  1497  001232  C00E  F01E         	movff	?___lldiv+1,PWM1_Set_Duty@temp+1
  1498  001236                     
  1499                           ;pwm.c: 107: CCPR1L= (0x03FC&temp)>>2;
  1500  001236  C01D  F01A         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
  1501  00123A  C01E  F01B         	movff	PWM1_Set_Duty@temp+1,??_PWM1_Set_Duty+1
  1502  00123E  90D8               	bcf	status,0,c
  1503  001240  321B               	rrcf	(??_PWM1_Set_Duty+1)^0,f,c
  1504  001242  321A               	rrcf	??_PWM1_Set_Duty^0,f,c
  1505  001244  90D8               	bcf	status,0,c
  1506  001246  321B               	rrcf	(??_PWM1_Set_Duty+1)^0,f,c
  1507  001248  321A               	rrcf	??_PWM1_Set_Duty^0,f,c
  1508  00124A  501A               	movf	??_PWM1_Set_Duty^0,w,c
  1509  00124C  6EBE               	movwf	190,c	;volatile
  1510  00124E                     
  1511                           ;pwm.c: 108: CCP1CON=((0x0003&temp)<<4)|0x0F;
  1512  00124E  C01D  F01A         	movff	PWM1_Set_Duty@temp,??_PWM1_Set_Duty
  1513  001252  0E03               	movlw	3
  1514  001254  161A               	andwf	??_PWM1_Set_Duty^0,f,c
  1515  001256  381A               	swapf	??_PWM1_Set_Duty^0,w,c
  1516  001258  0BF0               	andlw	240
  1517  00125A  090F               	iorlw	15
  1518  00125C  6EBD               	movwf	189,c	;volatile
  1519  00125E  0012               	return		;funcret
  1520  001260                     __end_of_PWM1_Set_Duty:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function ___lmul *****************
  1524 ;; Defined at:
  1525 ;;		line 15 in file "D:\MPLABX\XC8\pic\sources\c90\common\Umul32.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  multiplier      4    0[COMRAM] unsigned long 
  1528 ;;  multiplicand    4    4[COMRAM] unsigned long 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  product         4    8[COMRAM] unsigned long 
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  4    0[COMRAM] unsigned long 
  1533 ;; Registers used:
  1534 ;;		wreg, status,2, status,0
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1540 ;;      Params:         8       0       0       0       0       0       0       0       0
  1541 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1543 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1544 ;;Total ram usage:       12 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; This function calls:
  1547 ;;		Nothing
  1548 ;; This function is called by:
  1549 ;;		_PWM1_Set_Duty
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text8
  1554  00135E                     __ptext8:
  1555                           	callstack 0
  1556  00135E                     ___lmul:
  1557                           	callstack 29
  1558  00135E  0E00               	movlw	0
  1559  001360  6E09               	movwf	___lmul@product^0,c
  1560  001362  0E00               	movlw	0
  1561  001364  6E0A               	movwf	(___lmul@product+1)^0,c
  1562  001366  0E00               	movlw	0
  1563  001368  6E0B               	movwf	(___lmul@product+2)^0,c
  1564  00136A  0E00               	movlw	0
  1565  00136C  6E0C               	movwf	(___lmul@product+3)^0,c
  1566  00136E                     l1454:
  1567  00136E  A001               	btfss	___lmul@multiplier^0,0,c
  1568  001370  EFBC  F009         	goto	u511
  1569  001374  EFBE  F009         	goto	u510
  1570  001378                     u511:
  1571  001378  EFC6  F009         	goto	l1458
  1572  00137C                     u510:
  1573  00137C  5005               	movf	___lmul@multiplicand^0,w,c
  1574  00137E  2609               	addwf	___lmul@product^0,f,c
  1575  001380  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  1576  001382  220A               	addwfc	(___lmul@product+1)^0,f,c
  1577  001384  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  1578  001386  220B               	addwfc	(___lmul@product+2)^0,f,c
  1579  001388  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  1580  00138A  220C               	addwfc	(___lmul@product+3)^0,f,c
  1581  00138C                     l1458:
  1582  00138C  90D8               	bcf	status,0,c
  1583  00138E  3605               	rlcf	___lmul@multiplicand^0,f,c
  1584  001390  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  1585  001392  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  1586  001394  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  1587  001396  90D8               	bcf	status,0,c
  1588  001398  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  1589  00139A  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  1590  00139C  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  1591  00139E  3201               	rrcf	___lmul@multiplier^0,f,c
  1592  0013A0  5001               	movf	___lmul@multiplier^0,w,c
  1593  0013A2  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  1594  0013A4  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  1595  0013A6  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  1596  0013A8  A4D8               	btfss	status,2,c
  1597  0013AA  EFD9  F009         	goto	u521
  1598  0013AE  EFDB  F009         	goto	u520
  1599  0013B2                     u521:
  1600  0013B2  EFB7  F009         	goto	l1454
  1601  0013B6                     u520:
  1602  0013B6  C009  F001         	movff	___lmul@product,?___lmul
  1603  0013BA  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  1604  0013BE  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  1605  0013C2  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  1606  0013C6  0012               	return		;funcret
  1607  0013C8                     __end_of___lmul:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function ___lldiv *****************
  1611 ;; Defined at:
  1612 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\__lldiv.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  dividend        4   12[COMRAM] unsigned long 
  1615 ;;  divisor         4   16[COMRAM] unsigned long 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  quotient        4   20[COMRAM] unsigned long 
  1618 ;;  counter         1   24[COMRAM] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  4   12[COMRAM] unsigned long 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1628 ;;      Params:         8       0       0       0       0       0       0       0       0
  1629 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1630 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1631 ;;      Totals:        13       0       0       0       0       0       0       0       0
  1632 ;;Total ram usage:       13 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_PWM1_Set_Duty
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text9
  1642  00112A                     __ptext9:
  1643                           	callstack 0
  1644  00112A                     ___lldiv:
  1645                           	callstack 29
  1646  00112A  0E00               	movlw	0
  1647  00112C  6E15               	movwf	___lldiv@quotient^0,c
  1648  00112E  0E00               	movlw	0
  1649  001130  6E16               	movwf	(___lldiv@quotient+1)^0,c
  1650  001132  0E00               	movlw	0
  1651  001134  6E17               	movwf	(___lldiv@quotient+2)^0,c
  1652  001136  0E00               	movlw	0
  1653  001138  6E18               	movwf	(___lldiv@quotient+3)^0,c
  1654  00113A  5011               	movf	___lldiv@divisor^0,w,c
  1655  00113C  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  1656  00113E  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  1657  001140  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  1658  001142  B4D8               	btfsc	status,2,c
  1659  001144  EFA6  F008         	goto	u531
  1660  001148  EFA8  F008         	goto	u530
  1661  00114C                     u531:
  1662  00114C  EFDE  F008         	goto	l259
  1663  001150                     u530:
  1664  001150  0E01               	movlw	1
  1665  001152  6E19               	movwf	___lldiv@counter^0,c
  1666  001154  EFB2  F008         	goto	l1470
  1667  001158                     l1468:
  1668  001158  90D8               	bcf	status,0,c
  1669  00115A  3611               	rlcf	___lldiv@divisor^0,f,c
  1670  00115C  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  1671  00115E  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  1672  001160  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  1673  001162  2A19               	incf	___lldiv@counter^0,f,c
  1674  001164                     l1470:
  1675  001164  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  1676  001166  EFB7  F008         	goto	u541
  1677  00116A  EFB9  F008         	goto	u540
  1678  00116E                     u541:
  1679  00116E  EFAC  F008         	goto	l1468
  1680  001172                     u540:
  1681  001172                     l1472:
  1682  001172  90D8               	bcf	status,0,c
  1683  001174  3615               	rlcf	___lldiv@quotient^0,f,c
  1684  001176  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  1685  001178  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  1686  00117A  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  1687  00117C  5011               	movf	___lldiv@divisor^0,w,c
  1688  00117E  5C0D               	subwf	___lldiv@dividend^0,w,c
  1689  001180  5012               	movf	(___lldiv@divisor+1)^0,w,c
  1690  001182  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  1691  001184  5013               	movf	(___lldiv@divisor+2)^0,w,c
  1692  001186  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  1693  001188  5014               	movf	(___lldiv@divisor+3)^0,w,c
  1694  00118A  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  1695  00118C  A0D8               	btfss	status,0,c
  1696  00118E  EFCB  F008         	goto	u551
  1697  001192  EFCD  F008         	goto	u550
  1698  001196                     u551:
  1699  001196  EFD6  F008         	goto	l1480
  1700  00119A                     u550:
  1701  00119A  5011               	movf	___lldiv@divisor^0,w,c
  1702  00119C  5E0D               	subwf	___lldiv@dividend^0,f,c
  1703  00119E  5012               	movf	(___lldiv@divisor+1)^0,w,c
  1704  0011A0  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  1705  0011A2  5013               	movf	(___lldiv@divisor+2)^0,w,c
  1706  0011A4  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  1707  0011A6  5014               	movf	(___lldiv@divisor+3)^0,w,c
  1708  0011A8  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  1709  0011AA  8015               	bsf	___lldiv@quotient^0,0,c
  1710  0011AC                     l1480:
  1711  0011AC  90D8               	bcf	status,0,c
  1712  0011AE  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  1713  0011B0  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  1714  0011B2  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  1715  0011B4  3211               	rrcf	___lldiv@divisor^0,f,c
  1716  0011B6  2E19               	decfsz	___lldiv@counter^0,f,c
  1717  0011B8  EFB9  F008         	goto	l1472
  1718  0011BC                     l259:
  1719  0011BC  C015  F00D         	movff	___lldiv@quotient,?___lldiv
  1720  0011C0  C016  F00E         	movff	___lldiv@quotient+1,?___lldiv+1
  1721  0011C4  C017  F00F         	movff	___lldiv@quotient+2,?___lldiv+2
  1722  0011C8  C018  F010         	movff	___lldiv@quotient+3,?___lldiv+3
  1723  0011CC  0012               	return		;funcret
  1724  0011CE                     __end_of___lldiv:
  1725                           	callstack 0
  1726                           
  1727 ;; *************** function _PWM1_Init *****************
  1728 ;; Defined at:
  1729 ;;		line 31 in file "pwm.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;  f               2   14[COMRAM] unsigned int 
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  temp            2   20[COMRAM] unsigned int 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      void 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 0/0
  1740 ;;		On exit  : 0/0
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1743 ;;      Params:         2       0       0       0       0       0       0       0       0
  1744 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1745 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1746 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1747 ;;Total ram usage:        8 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:    1
  1750 ;; This function calls:
  1751 ;;		___aldiv
  1752 ;; This function is called by:
  1753 ;;		_main
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text10
  1758  000F66                     __ptext10:
  1759                           	callstack 0
  1760  000F66                     _PWM1_Init:
  1761                           	callstack 29
  1762  000F66                     
  1763                           ;pwm.c: 33: unsigned int temp;;pwm.c: 39: CCP1CON=0x00;
  1764  000F66  0E00               	movlw	0
  1765  000F68  6EBD               	movwf	189,c	;volatile
  1766  000F6A                     
  1767                           ;pwm.c: 40: TRISCbits.TRISC2=1;
  1768  000F6A  8494               	bsf	148,2,c	;volatile
  1769  000F6C                     
  1770                           ;pwm.c: 41: TRISDbits.TRISD5=1;
  1771  000F6C  8A95               	bsf	149,5,c	;volatile
  1772  000F6E                     
  1773                           ;pwm.c: 43: PORTCbits.RC2=0;
  1774  000F6E  9482               	bcf	130,2,c	;volatile
  1775  000F70                     
  1776                           ;pwm.c: 44: PORTDbits.RD5=0;
  1777  000F70  9A83               	bcf	131,5,c	;volatile
  1778                           
  1779                           ;pwm.c: 46: CCPR1L=0;
  1780  000F72  0E00               	movlw	0
  1781  000F74  6EBE               	movwf	190,c	;volatile
  1782  000F76                     
  1783                           ;pwm.c: 51: T2CONbits.TMR2ON=0;
  1784  000F76  94CA               	bcf	202,2,c	;volatile
  1785  000F78                     
  1786                           ;pwm.c: 53: temp=8000000/(f*4l);
  1787  000F78  0E00               	movlw	0
  1788  000F7A  6E01               	movwf	___aldiv@dividend^0,c
  1789  000F7C  0E12               	movlw	18
  1790  000F7E  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1791  000F80  0E7A               	movlw	122
  1792  000F82  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1793  000F84  0E00               	movlw	0
  1794  000F86  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1795  000F88  500F               	movf	PWM1_Init@f^0,w,c
  1796  000F8A  6E11               	movwf	??_PWM1_Init^0,c
  1797  000F8C  5010               	movf	(PWM1_Init@f+1)^0,w,c
  1798  000F8E  6E12               	movwf	(??_PWM1_Init+1)^0,c
  1799  000F90  6A13               	clrf	(??_PWM1_Init+2)^0,c
  1800  000F92  6A14               	clrf	(??_PWM1_Init+3)^0,c
  1801  000F94  0E02               	movlw	2
  1802  000F96                     u685:
  1803  000F96  90D8               	bcf	status,0,c
  1804  000F98  3611               	rlcf	??_PWM1_Init^0,f,c
  1805  000F9A  3612               	rlcf	(??_PWM1_Init+1)^0,f,c
  1806  000F9C  3613               	rlcf	(??_PWM1_Init+2)^0,f,c
  1807  000F9E  3614               	rlcf	(??_PWM1_Init+3)^0,f,c
  1808  000FA0  2EE8               	decfsz	wreg,f,c
  1809  000FA2  EFCB  F007         	goto	u685
  1810  000FA6  C011  F005         	movff	??_PWM1_Init,___aldiv@divisor
  1811  000FAA  C012  F006         	movff	??_PWM1_Init+1,___aldiv@divisor+1
  1812  000FAE  C013  F007         	movff	??_PWM1_Init+2,___aldiv@divisor+2
  1813  000FB2  C014  F008         	movff	??_PWM1_Init+3,___aldiv@divisor+3
  1814  000FB6  EC2D  F007         	call	___aldiv	;wreg free
  1815  000FBA  C001  F015         	movff	?___aldiv,PWM1_Init@temp
  1816  000FBE  C002  F016         	movff	?___aldiv+1,PWM1_Init@temp+1
  1817  000FC2                     
  1818                           ;pwm.c: 55: if (temp < 256)
  1819  000FC2  0416               	decf	(PWM1_Init@temp+1)^0,w,c
  1820  000FC4  B0D8               	btfsc	status,0,c
  1821  000FC6  EFE7  F007         	goto	u691
  1822  000FCA  EFE9  F007         	goto	u690
  1823  000FCE                     u691:
  1824  000FCE  EFEF  F007         	goto	l1586
  1825  000FD2                     u690:
  1826  000FD2                     
  1827                           ;pwm.c: 56: {;pwm.c: 57: T2CONbits.T2CKPS=0;
  1828  000FD2  0EFC               	movlw	-4
  1829  000FD4  16CA               	andwf	202,f,c	;volatile
  1830  000FD6                     
  1831                           ;pwm.c: 58: PR2=temp;
  1832  000FD6  C015  FFCB         	movff	PWM1_Init@temp,4043	;volatile
  1833                           
  1834                           ;pwm.c: 59: }
  1835  000FDA  EF29  F008         	goto	l1596
  1836  000FDE                     l1586:
  1837                           
  1838                           ;pwm.c: 60: else if(temp/4 < 256 )
  1839  000FDE  C015  F011         	movff	PWM1_Init@temp,??_PWM1_Init
  1840  000FE2  C016  F012         	movff	PWM1_Init@temp+1,??_PWM1_Init+1
  1841  000FE6  90D8               	bcf	status,0,c
  1842  000FE8  3212               	rrcf	(??_PWM1_Init+1)^0,f,c
  1843  000FEA  3211               	rrcf	??_PWM1_Init^0,f,c
  1844  000FEC  90D8               	bcf	status,0,c
  1845  000FEE  3212               	rrcf	(??_PWM1_Init+1)^0,f,c
  1846  000FF0  3211               	rrcf	??_PWM1_Init^0,f,c
  1847  000FF2  0412               	decf	(??_PWM1_Init+1)^0,w,c
  1848  000FF4  B0D8               	btfsc	status,0,c
  1849  000FF6  EFFF  F007         	goto	u701
  1850  000FFA  EF01  F008         	goto	u700
  1851  000FFE                     u701:
  1852  000FFE  EF15  F008         	goto	l1592
  1853  001002                     u700:
  1854  001002                     
  1855                           ;pwm.c: 61: {;pwm.c: 62: T2CONbits.T2CKPS=1;
  1856  001002  50CA               	movf	202,w,c	;volatile
  1857  001004  0BFC               	andlw	-4
  1858  001006  0901               	iorlw	1
  1859  001008  6ECA               	movwf	202,c	;volatile
  1860  00100A                     
  1861                           ;pwm.c: 63: PR2=(temp+2)/4;
  1862  00100A  0E02               	movlw	2
  1863  00100C  2415               	addwf	PWM1_Init@temp^0,w,c
  1864  00100E  6E11               	movwf	??_PWM1_Init^0,c
  1865  001010  0E00               	movlw	0
  1866  001012  2016               	addwfc	(PWM1_Init@temp+1)^0,w,c
  1867  001014  6E12               	movwf	(??_PWM1_Init+1)^0,c
  1868  001016  90D8               	bcf	status,0,c
  1869  001018  3212               	rrcf	(??_PWM1_Init+1)^0,f,c
  1870  00101A  3211               	rrcf	??_PWM1_Init^0,f,c
  1871  00101C  90D8               	bcf	status,0,c
  1872  00101E  3212               	rrcf	(??_PWM1_Init+1)^0,f,c
  1873  001020  3211               	rrcf	??_PWM1_Init^0,f,c
  1874  001022  5011               	movf	??_PWM1_Init^0,w,c
  1875  001024  6ECB               	movwf	203,c	;volatile
  1876                           
  1877                           ;pwm.c: 64: }
  1878  001026  EF29  F008         	goto	l1596
  1879  00102A                     l1592:
  1880                           
  1881                           ;pwm.c: 65: else;pwm.c: 66: {;pwm.c: 67: PR2=(temp+8)/16;
  1882  00102A  0E08               	movlw	8
  1883  00102C  2415               	addwf	PWM1_Init@temp^0,w,c
  1884  00102E  6E11               	movwf	??_PWM1_Init^0,c
  1885  001030  0E00               	movlw	0
  1886  001032  2016               	addwfc	(PWM1_Init@temp+1)^0,w,c
  1887  001034  6E12               	movwf	(??_PWM1_Init+1)^0,c
  1888  001036  0E04               	movlw	4
  1889  001038  6E13               	movwf	(??_PWM1_Init+2)^0,c
  1890  00103A                     u715:
  1891  00103A  90D8               	bcf	status,0,c
  1892  00103C  3212               	rrcf	(??_PWM1_Init+1)^0,f,c
  1893  00103E  3211               	rrcf	??_PWM1_Init^0,f,c
  1894  001040  2E13               	decfsz	(??_PWM1_Init+2)^0,f,c
  1895  001042  EF1D  F008         	goto	u715
  1896  001046  5011               	movf	??_PWM1_Init^0,w,c
  1897  001048  6ECB               	movwf	203,c	;volatile
  1898  00104A                     
  1899                           ;pwm.c: 68: T2CONbits.T2CKPS=2;
  1900  00104A  50CA               	movf	202,w,c	;volatile
  1901  00104C  0BFC               	andlw	-4
  1902  00104E  0902               	iorlw	2
  1903  001050  6ECA               	movwf	202,c	;volatile
  1904  001052                     l1596:
  1905                           
  1906                           ;pwm.c: 69: };pwm.c: 71: T2CONbits.TOUTPS=0;
  1907  001052  0E87               	movlw	-121
  1908  001054  16CA               	andwf	202,f,c	;volatile
  1909  001056  0012               	return		;funcret
  1910  001058                     __end_of_PWM1_Init:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function ___aldiv *****************
  1914 ;; Defined at:
  1915 ;;		line 7 in file "D:\MPLABX\XC8\pic\sources\c90\common\aldiv.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  dividend        4    0[COMRAM] long 
  1918 ;;  divisor         4    4[COMRAM] long 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  quotient        4   10[COMRAM] long 
  1921 ;;  sign            1    9[COMRAM] unsigned char 
  1922 ;;  counter         1    8[COMRAM] unsigned char 
  1923 ;; Return value:  Size  Location     Type
  1924 ;;                  4    0[COMRAM] long 
  1925 ;; Registers used:
  1926 ;;		wreg, status,2, status,0
  1927 ;; Tracked objects:
  1928 ;;		On entry : 0/0
  1929 ;;		On exit  : 0/0
  1930 ;;		Unchanged: 0/0
  1931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1932 ;;      Params:         8       0       0       0       0       0       0       0       0
  1933 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1934 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1935 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1936 ;;Total ram usage:       14 bytes
  1937 ;; Hardware stack levels used:    1
  1938 ;; This function calls:
  1939 ;;		Nothing
  1940 ;; This function is called by:
  1941 ;;		_PWM1_Init
  1942 ;; This function uses a non-reentrant model
  1943 ;;
  1944                           
  1945                           	psect	text11
  1946  000E5A                     __ptext11:
  1947                           	callstack 0
  1948  000E5A                     ___aldiv:
  1949                           	callstack 29
  1950  000E5A  0E00               	movlw	0
  1951  000E5C  6E0A               	movwf	___aldiv@sign^0,c
  1952  000E5E  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1953  000E60  EF36  F007         	goto	u560
  1954  000E64  EF34  F007         	goto	u561
  1955  000E68                     u561:
  1956  000E68  EF40  F007         	goto	l1492
  1957  000E6C                     u560:
  1958  000E6C  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1959  000E6E  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1960  000E70  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1961  000E72  6C05               	negf	___aldiv@divisor^0,c
  1962  000E74  0E00               	movlw	0
  1963  000E76  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1964  000E78  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1965  000E7A  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1966  000E7C  0E01               	movlw	1
  1967  000E7E  6E0A               	movwf	___aldiv@sign^0,c
  1968  000E80                     l1492:
  1969  000E80  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1970  000E82  EF47  F007         	goto	u570
  1971  000E86  EF45  F007         	goto	u571
  1972  000E8A                     u571:
  1973  000E8A  EF51  F007         	goto	l1498
  1974  000E8E                     u570:
  1975  000E8E  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1976  000E90  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1977  000E92  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1978  000E94  6C01               	negf	___aldiv@dividend^0,c
  1979  000E96  0E00               	movlw	0
  1980  000E98  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1981  000E9A  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1982  000E9C  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1983  000E9E  0E01               	movlw	1
  1984  000EA0  1A0A               	xorwf	___aldiv@sign^0,f,c
  1985  000EA2                     l1498:
  1986  000EA2  0E00               	movlw	0
  1987  000EA4  6E0B               	movwf	___aldiv@quotient^0,c
  1988  000EA6  0E00               	movlw	0
  1989  000EA8  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1990  000EAA  0E00               	movlw	0
  1991  000EAC  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1992  000EAE  0E00               	movlw	0
  1993  000EB0  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1994  000EB2  5005               	movf	___aldiv@divisor^0,w,c
  1995  000EB4  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1996  000EB6  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1997  000EB8  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1998  000EBA  B4D8               	btfsc	status,2,c
  1999  000EBC  EF62  F007         	goto	u581
  2000  000EC0  EF64  F007         	goto	u580
  2001  000EC4                     u581:
  2002  000EC4  EF9A  F007         	goto	l1520
  2003  000EC8                     u580:
  2004  000EC8  0E01               	movlw	1
  2005  000ECA  6E09               	movwf	___aldiv@counter^0,c
  2006  000ECC  EF6E  F007         	goto	l1506
  2007  000ED0                     l1504:
  2008  000ED0  90D8               	bcf	status,0,c
  2009  000ED2  3605               	rlcf	___aldiv@divisor^0,f,c
  2010  000ED4  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2011  000ED6  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2012  000ED8  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2013  000EDA  2A09               	incf	___aldiv@counter^0,f,c
  2014  000EDC                     l1506:
  2015  000EDC  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2016  000EDE  EF73  F007         	goto	u591
  2017  000EE2  EF75  F007         	goto	u590
  2018  000EE6                     u591:
  2019  000EE6  EF68  F007         	goto	l1504
  2020  000EEA                     u590:
  2021  000EEA                     l1508:
  2022  000EEA  90D8               	bcf	status,0,c
  2023  000EEC  360B               	rlcf	___aldiv@quotient^0,f,c
  2024  000EEE  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2025  000EF0  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2026  000EF2  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2027  000EF4  5005               	movf	___aldiv@divisor^0,w,c
  2028  000EF6  5C01               	subwf	___aldiv@dividend^0,w,c
  2029  000EF8  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2030  000EFA  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2031  000EFC  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2032  000EFE  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2033  000F00  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2034  000F02  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2035  000F04  A0D8               	btfss	status,0,c
  2036  000F06  EF87  F007         	goto	u601
  2037  000F0A  EF89  F007         	goto	u600
  2038  000F0E                     u601:
  2039  000F0E  EF92  F007         	goto	l1516
  2040  000F12                     u600:
  2041  000F12  5005               	movf	___aldiv@divisor^0,w,c
  2042  000F14  5E01               	subwf	___aldiv@dividend^0,f,c
  2043  000F16  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2044  000F18  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2045  000F1A  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2046  000F1C  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2047  000F1E  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2048  000F20  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2049  000F22  800B               	bsf	___aldiv@quotient^0,0,c
  2050  000F24                     l1516:
  2051  000F24  90D8               	bcf	status,0,c
  2052  000F26  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2053  000F28  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2054  000F2A  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2055  000F2C  3205               	rrcf	___aldiv@divisor^0,f,c
  2056  000F2E  2E09               	decfsz	___aldiv@counter^0,f,c
  2057  000F30  EF75  F007         	goto	l1508
  2058  000F34                     l1520:
  2059  000F34  500A               	movf	___aldiv@sign^0,w,c
  2060  000F36  B4D8               	btfsc	status,2,c
  2061  000F38  EFA0  F007         	goto	u611
  2062  000F3C  EFA2  F007         	goto	u610
  2063  000F40                     u611:
  2064  000F40  EFAA  F007         	goto	l1524
  2065  000F44                     u610:
  2066  000F44  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2067  000F46  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2068  000F48  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2069  000F4A  6C0B               	negf	___aldiv@quotient^0,c
  2070  000F4C  0E00               	movlw	0
  2071  000F4E  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2072  000F50  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2073  000F52  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2074  000F54                     l1524:
  2075  000F54  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2076  000F58  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2077  000F5C  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2078  000F60  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2079  000F64  0012               	return		;funcret
  2080  000F66                     __end_of___aldiv:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _Lcd_Out *****************
  2084 ;; Defined at:
  2085 ;;		line 96 in file "flexlcd.h"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;  y               1    wreg     unsigned char 
  2088 ;;  x               1    3[COMRAM] unsigned char 
  2089 ;;  buffer          2    4[COMRAM] PTR const unsigned char 
  2090 ;;		 -> str(5), 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  y               1    6[COMRAM] unsigned char 
  2093 ;;  data            1    7[COMRAM] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  1    wreg      void 
  2096 ;; Registers used:
  2097 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2103 ;;      Params:         3       0       0       0       0       0       0       0       0
  2104 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2106 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2107 ;;Total ram usage:        5 bytes
  2108 ;; Hardware stack levels used:    1
  2109 ;; Hardware stack levels required when called:    1
  2110 ;; This function calls:
  2111 ;;		_Lcd_Chr_CP
  2112 ;;		_Lcd_Cmd
  2113 ;; This function is called by:
  2114 ;;		_main
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text12
  2119  001260                     __ptext12:
  2120                           	callstack 0
  2121  001260                     _Lcd_Out:
  2122                           	callstack 29
  2123                           
  2124                           ;incstack = 0
  2125                           ;Lcd_Out@y stored from wreg
  2126  001260  6E07               	movwf	Lcd_Out@y^0,c
  2127  001262                     
  2128                           ;flexlcd.h: 98: unsigned char data;;flexlcd.h: 99: switch (y)
  2129  001262  EF47  F009         	goto	l1616
  2130  001266                     l1606:
  2131  001266  5004               	movf	Lcd_Out@x^0,w,c
  2132  001268  0F80               	addlw	128
  2133  00126A  6E08               	movwf	Lcd_Out@data^0,c
  2134  00126C  EF5A  F009         	goto	l1618
  2135  001270                     l1608:
  2136  001270  5004               	movf	Lcd_Out@x^0,w,c
  2137  001272  0FC0               	addlw	192
  2138  001274  6E08               	movwf	Lcd_Out@data^0,c
  2139  001276  EF5A  F009         	goto	l1618
  2140  00127A                     l1610:
  2141  00127A  5004               	movf	Lcd_Out@x^0,w,c
  2142  00127C  0F94               	addlw	148
  2143  00127E  6E08               	movwf	Lcd_Out@data^0,c
  2144  001280  EF5A  F009         	goto	l1618
  2145  001284                     l1612:
  2146  001284  5004               	movf	Lcd_Out@x^0,w,c
  2147  001286  0FD4               	addlw	212
  2148  001288  6E08               	movwf	Lcd_Out@data^0,c
  2149  00128A  EF5A  F009         	goto	l1618
  2150  00128E                     l1616:
  2151  00128E  5007               	movf	Lcd_Out@y^0,w,c
  2152                           
  2153                           ; Switch size 1, requested type "simple"
  2154                           ; Number of cases is 4, Range of values is 1 to 4
  2155                           ; switch strategies available:
  2156                           ; Name         Instructions Cycles
  2157                           ; simple_byte           13     7 (average)
  2158                           ;	Chosen strategy is simple_byte
  2159  001290  0A01               	xorlw	1	; case 1
  2160  001292  B4D8               	btfsc	status,2,c
  2161  001294  EF33  F009         	goto	l1606
  2162  001298  0A03               	xorlw	3	; case 2
  2163  00129A  B4D8               	btfsc	status,2,c
  2164  00129C  EF38  F009         	goto	l1608
  2165  0012A0  0A01               	xorlw	1	; case 3
  2166  0012A2  B4D8               	btfsc	status,2,c
  2167  0012A4  EF3D  F009         	goto	l1610
  2168  0012A8  0A07               	xorlw	7	; case 4
  2169  0012AA  B4D8               	btfsc	status,2,c
  2170  0012AC  EF42  F009         	goto	l1612
  2171  0012B0  EF5A  F009         	goto	l1618
  2172  0012B4                     l1618:
  2173                           
  2174                           ;flexlcd.h: 107: Lcd_Cmd(data);
  2175  0012B4  5008               	movf	Lcd_Out@data^0,w,c
  2176  0012B6  EC0F  F006         	call	_Lcd_Cmd
  2177                           
  2178                           ;flexlcd.h: 108: while(*buffer)
  2179  0012BA  EF68  F009         	goto	l1624
  2180  0012BE                     l1620:
  2181                           
  2182                           ;flexlcd.h: 109: {;flexlcd.h: 110: Lcd_Chr_CP(*buffer);
  2183  0012BE  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  2184  0012C2  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  2185  0012C6  50DF               	movf	indf2,w,c
  2186  0012C8  EC75  F005         	call	_Lcd_Chr_CP
  2187  0012CC                     
  2188                           ;flexlcd.h: 111: buffer++;
  2189  0012CC  4A05               	infsnz	Lcd_Out@buffer^0,f,c
  2190  0012CE  2A06               	incf	(Lcd_Out@buffer+1)^0,f,c
  2191  0012D0                     l1624:
  2192  0012D0  C005  FFD9         	movff	Lcd_Out@buffer,fsr2l
  2193  0012D4  C006  FFDA         	movff	Lcd_Out@buffer+1,fsr2h
  2194  0012D8  50DF               	movf	indf2,w,c
  2195  0012DA  A4D8               	btfss	status,2,c
  2196  0012DC  EF72  F009         	goto	u721
  2197  0012E0  EF74  F009         	goto	u720
  2198  0012E4                     u721:
  2199  0012E4  EF5F  F009         	goto	l1620
  2200  0012E8                     u720:
  2201  0012E8  0012               	return		;funcret
  2202  0012EA                     __end_of_Lcd_Out:
  2203                           	callstack 0
  2204                           
  2205 ;; *************** function _Lcd_Chr_CP *****************
  2206 ;; Defined at:
  2207 ;;		line 138 in file "flexlcd.h"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  data            1    wreg     unsigned char 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  data            1    2[COMRAM] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2221 ;;      Params:         0       0       0       0       0       0       0       0       0
  2222 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2223 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2224 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2225 ;;Total ram usage:        3 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; This function calls:
  2228 ;;		Nothing
  2229 ;; This function is called by:
  2230 ;;		_Lcd_Out
  2231 ;;		_Lcd_Out2
  2232 ;; This function uses a non-reentrant model
  2233 ;;
  2234                           
  2235                           	psect	text13
  2236  000AEA                     __ptext13:
  2237                           	callstack 0
  2238  000AEA                     _Lcd_Chr_CP:
  2239                           	callstack 29
  2240                           
  2241                           ;incstack = 0
  2242                           ;Lcd_Chr_CP@data stored from wreg
  2243  000AEA  6E03               	movwf	Lcd_Chr_CP@data^0,c
  2244  000AEC                     
  2245                           ;flexlcd.h: 139: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
  2246  000AEC  9284               	bcf	132,1,c	;volatile
  2247  000AEE  8484               	bsf	132,2,c	;volatile
  2248  000AF0                     
  2249                           ;flexlcd.h: 140: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  2250  000AF0  6A01               	clrf	??_Lcd_Chr_CP^0,c
  2251  000AF2  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
  2252  000AF4  D001               	bra	u45
  2253  000AF6  2A01               	incf	??_Lcd_Chr_CP^0,f,c
  2254  000AF8                     u45:
  2255  000AF8  0E01               	movlw	1
  2256  000AFA  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2257  000AFC  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2258  000AFE  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2259  000B00  5083               	movf	131,w,c	;volatile
  2260  000B02  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2261  000B04  0B7F               	andlw	-129
  2262  000B06  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2263  000B08  6E83               	movwf	131,c	;volatile
  2264  000B0A  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2265  000B0E  0E06               	movlw	6
  2266  000B10  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  2267  000B12                     u55:
  2268  000B12  90D8               	bcf	status,0,c
  2269  000B14  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2270  000B16  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  2271  000B18  EF89  F005         	goto	u55
  2272  000B1C  0E01               	movlw	1
  2273  000B1E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2274  000B20  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  2275  000B22  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2276  000B24  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2277  000B26  5083               	movf	131,w,c	;volatile
  2278  000B28  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2279  000B2A  0BBF               	andlw	-65
  2280  000B2C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2281  000B2E  6E83               	movwf	131,c	;volatile
  2282                           
  2283                           ;flexlcd.h: 141: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  2284  000B30  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2285  000B34  0E05               	movlw	5
  2286  000B36  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  2287  000B38                     u65:
  2288  000B38  90D8               	bcf	status,0,c
  2289  000B3A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2290  000B3C  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  2291  000B3E  EF9C  F005         	goto	u65
  2292  000B42  0E01               	movlw	1
  2293  000B44  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2294  000B46  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  2295  000B48  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2296  000B4A  5083               	movf	131,w,c	;volatile
  2297  000B4C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2298  000B4E  0BDF               	andlw	-33
  2299  000B50  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2300  000B52  6E83               	movwf	131,c	;volatile
  2301  000B54  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2302  000B58  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  2303  000B5A  0E0F               	movlw	15
  2304  000B5C  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2305  000B5E  0E01               	movlw	1
  2306  000B60  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2307  000B62  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  2308  000B64  5083               	movf	131,w,c	;volatile
  2309  000B66  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2310  000B68  0BEF               	andlw	-17
  2311  000B6A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2312  000B6C  6E83               	movwf	131,c	;volatile
  2313  000B6E                     
  2314                           ;flexlcd.h: 142: _delay(10);
  2315  000B6E  0E03               	movlw	3
  2316  000B70                     u877:
  2317  000B70  2EE8               	decfsz	wreg,f,c
  2318  000B72  D7FE               	bra	u877
  2319  000B74  F000               	nop	
  2320  000B76                     
  2321                           ;flexlcd.h: 143: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  2322  000B76  8284               	bsf	132,1,c	;volatile
  2323  000B78  0E03               	movlw	3
  2324  000B7A                     u887:
  2325  000B7A  2EE8               	decfsz	wreg,f,c
  2326  000B7C  D7FE               	bra	u887
  2327  000B7E  F000               	nop	
  2328  000B80  9284               	bcf	132,1,c	;volatile
  2329                           
  2330                           ;flexlcd.h: 144: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  2331  000B82  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2332  000B86  90D8               	bcf	status,0,c
  2333  000B88  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2334  000B8A  90D8               	bcf	status,0,c
  2335  000B8C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2336  000B8E  90D8               	bcf	status,0,c
  2337  000B90  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2338  000B92  0E01               	movlw	1
  2339  000B94  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2340  000B96  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2341  000B98  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2342  000B9A  5083               	movf	131,w,c	;volatile
  2343  000B9C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2344  000B9E  0B7F               	andlw	-129
  2345  000BA0  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2346  000BA2  6E83               	movwf	131,c	;volatile
  2347  000BA4  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2348  000BA8  90D8               	bcf	status,0,c
  2349  000BAA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2350  000BAC  90D8               	bcf	status,0,c
  2351  000BAE  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2352  000BB0  0E01               	movlw	1
  2353  000BB2  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2354  000BB4  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  2355  000BB6  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2356  000BB8  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2357  000BBA  5083               	movf	131,w,c	;volatile
  2358  000BBC  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2359  000BBE  0BBF               	andlw	-65
  2360  000BC0  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2361  000BC2  6E83               	movwf	131,c	;volatile
  2362                           
  2363                           ;flexlcd.h: 145: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  2364  000BC4  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2365  000BC8  90D8               	bcf	status,0,c
  2366  000BCA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  2367  000BCC  0E01               	movlw	1
  2368  000BCE  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2369  000BD0  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  2370  000BD2  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  2371  000BD4  5083               	movf	131,w,c	;volatile
  2372  000BD6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2373  000BD8  0BDF               	andlw	-33
  2374  000BDA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2375  000BDC  6E83               	movwf	131,c	;volatile
  2376  000BDE  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  2377  000BE2  0E01               	movlw	1
  2378  000BE4  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  2379  000BE6  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  2380  000BE8  5083               	movf	131,w,c	;volatile
  2381  000BEA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2382  000BEC  0BEF               	andlw	-17
  2383  000BEE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  2384  000BF0  6E83               	movwf	131,c	;volatile
  2385  000BF2                     
  2386                           ;flexlcd.h: 146: _delay(10);
  2387  000BF2  0E03               	movlw	3
  2388  000BF4                     u897:
  2389  000BF4  2EE8               	decfsz	wreg,f,c
  2390  000BF6  D7FE               	bra	u897
  2391  000BF8  F000               	nop	
  2392  000BFA                     
  2393                           ;flexlcd.h: 147: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  2394  000BFA  8284               	bsf	132,1,c	;volatile
  2395  000BFC  0E03               	movlw	3
  2396  000BFE                     u907:
  2397  000BFE  2EE8               	decfsz	wreg,f,c
  2398  000C00  D7FE               	bra	u907
  2399  000C02  F000               	nop	
  2400  000C04  9284               	bcf	132,1,c	;volatile
  2401  000C06                     
  2402                           ;flexlcd.h: 148: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  2403  000C06  0E03               	movlw	3
  2404  000C08                     u917:
  2405  000C08  2EE8               	decfsz	wreg,f,c
  2406  000C0A  D7FE               	bra	u917
  2407  000C0C  F000               	nop	
  2408  000C0E  0E0F               	movlw	15
  2409  000C10  6E01               	movwf	??_Lcd_Chr_CP^0,c
  2410  000C12  0E48               	movlw	72
  2411  000C14                     u927:
  2412  000C14  2EE8               	decfsz	wreg,f,c
  2413  000C16  D7FE               	bra	u927
  2414  000C18  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  2415  000C1A  D7FC               	bra	u927
  2416  000C1C  0012               	return		;funcret
  2417  000C1E                     __end_of_Lcd_Chr_CP:
  2418                           	callstack 0
  2419                           
  2420 ;; *************** function _Lcd_Init *****************
  2421 ;; Defined at:
  2422 ;;		line 54 in file "flexlcd.h"
  2423 ;; Parameters:    Size  Location     Type
  2424 ;;		None
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  data            1    4[COMRAM] unsigned char 
  2427 ;; Return value:  Size  Location     Type
  2428 ;;                  1    wreg      void 
  2429 ;; Registers used:
  2430 ;;		wreg, status,2, status,0, cstack
  2431 ;; Tracked objects:
  2432 ;;		On entry : 0/0
  2433 ;;		On exit  : 0/0
  2434 ;;		Unchanged: 0/0
  2435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2436 ;;      Params:         0       0       0       0       0       0       0       0       0
  2437 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2438 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2439 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2440 ;;Total ram usage:        2 bytes
  2441 ;; Hardware stack levels used:    1
  2442 ;; Hardware stack levels required when called:    1
  2443 ;; This function calls:
  2444 ;;		_Lcd_Cmd
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text14
  2451  000D4A                     __ptext14:
  2452                           	callstack 0
  2453  000D4A                     _Lcd_Init:
  2454                           	callstack 29
  2455  000D4A                     
  2456                           ;flexlcd.h: 55: unsigned char data;;flexlcd.h: 56: TRISDbits.TRISD7 = 0;
  2457  000D4A  9E95               	bcf	149,7,c	;volatile
  2458                           
  2459                           ;flexlcd.h: 57: TRISDbits.TRISD6 = 0;
  2460  000D4C  9C95               	bcf	149,6,c	;volatile
  2461                           
  2462                           ;flexlcd.h: 58: TRISDbits.TRISD5 = 0;
  2463  000D4E  9A95               	bcf	149,5,c	;volatile
  2464                           
  2465                           ;flexlcd.h: 59: TRISDbits.TRISD4 = 0;
  2466  000D50  9895               	bcf	149,4,c	;volatile
  2467                           
  2468                           ;flexlcd.h: 60: TRISEbits.TRISE2 = 0;
  2469  000D52  9496               	bcf	150,2,c	;volatile
  2470                           
  2471                           ;flexlcd.h: 61: TRISEbits.TRISE1 = 0;
  2472  000D54  9296               	bcf	150,1,c	;volatile
  2473                           
  2474                           ;flexlcd.h: 62: PORTDbits.RD7 = 0;
  2475  000D56  9E83               	bcf	131,7,c	;volatile
  2476                           
  2477                           ;flexlcd.h: 63: PORTDbits.RD6 = 0;
  2478  000D58  9C83               	bcf	131,6,c	;volatile
  2479                           
  2480                           ;flexlcd.h: 64: PORTDbits.RD5 = 0;
  2481  000D5A  9A83               	bcf	131,5,c	;volatile
  2482                           
  2483                           ;flexlcd.h: 65: PORTDbits.RD4 = 0;
  2484  000D5C  9883               	bcf	131,4,c	;volatile
  2485                           
  2486                           ;flexlcd.h: 66: PORTEbits.RE1 = 0;
  2487  000D5E  9284               	bcf	132,1,c	;volatile
  2488                           
  2489                           ;flexlcd.h: 67: PORTEbits.RE2 = 0;
  2490  000D60  9484               	bcf	132,2,c	;volatile
  2491  000D62                     
  2492                           ;flexlcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2493  000D62  0E0F               	movlw	15
  2494  000D64  6E04               	movwf	??_Lcd_Init^0,c
  2495  000D66  0E48               	movlw	72
  2496  000D68                     u937:
  2497  000D68  2EE8               	decfsz	wreg,f,c
  2498  000D6A  D7FE               	bra	u937
  2499  000D6C  2E04               	decfsz	??_Lcd_Init^0,f,c
  2500  000D6E  D7FC               	bra	u937
  2501                           
  2502                           ;flexlcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2503  000D70  0E0F               	movlw	15
  2504  000D72  6E04               	movwf	??_Lcd_Init^0,c
  2505  000D74  0E48               	movlw	72
  2506  000D76                     u947:
  2507  000D76  2EE8               	decfsz	wreg,f,c
  2508  000D78  D7FE               	bra	u947
  2509  000D7A  2E04               	decfsz	??_Lcd_Init^0,f,c
  2510  000D7C  D7FC               	bra	u947
  2511                           
  2512                           ;flexlcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2513  000D7E  0E0F               	movlw	15
  2514  000D80  6E04               	movwf	??_Lcd_Init^0,c
  2515  000D82  0E48               	movlw	72
  2516  000D84                     u957:
  2517  000D84  2EE8               	decfsz	wreg,f,c
  2518  000D86  D7FE               	bra	u957
  2519  000D88  2E04               	decfsz	??_Lcd_Init^0,f,c
  2520  000D8A  D7FC               	bra	u957
  2521                           
  2522                           ;flexlcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2523  000D8C  0E0F               	movlw	15
  2524  000D8E  6E04               	movwf	??_Lcd_Init^0,c
  2525  000D90  0E48               	movlw	72
  2526  000D92                     u967:
  2527  000D92  2EE8               	decfsz	wreg,f,c
  2528  000D94  D7FE               	bra	u967
  2529  000D96  2E04               	decfsz	??_Lcd_Init^0,f,c
  2530  000D98  D7FC               	bra	u967
  2531                           
  2532                           ;flexlcd.h: 72: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2533  000D9A  0E0F               	movlw	15
  2534  000D9C  6E04               	movwf	??_Lcd_Init^0,c
  2535  000D9E  0E48               	movlw	72
  2536  000DA0                     u977:
  2537  000DA0  2EE8               	decfsz	wreg,f,c
  2538  000DA2  D7FE               	bra	u977
  2539  000DA4  2E04               	decfsz	??_Lcd_Init^0,f,c
  2540  000DA6  D7FC               	bra	u977
  2541                           
  2542                           ;flexlcd.h: 73: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2543  000DA8  0E0F               	movlw	15
  2544  000DAA  6E04               	movwf	??_Lcd_Init^0,c
  2545  000DAC  0E48               	movlw	72
  2546  000DAE                     u987:
  2547  000DAE  2EE8               	decfsz	wreg,f,c
  2548  000DB0  D7FE               	bra	u987
  2549  000DB2  2E04               	decfsz	??_Lcd_Init^0,f,c
  2550  000DB4  D7FC               	bra	u987
  2551  000DB6                     
  2552                           ;flexlcd.h: 74: for(data = 1; data < 4; data ++)
  2553  000DB6  0E01               	movlw	1
  2554  000DB8  6E05               	movwf	Lcd_Init@data^0,c
  2555  000DBA                     l135:
  2556                           
  2557                           ;flexlcd.h: 75: {;flexlcd.h: 76: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  2558  000DBA  9E83               	bcf	131,7,c	;volatile
  2559  000DBC  9C83               	bcf	131,6,c	;volatile
  2560  000DBE  8A83               	bsf	131,5,c	;volatile
  2561  000DC0  8883               	bsf	131,4,c	;volatile
  2562  000DC2  9284               	bcf	132,1,c	;volatile
  2563                           
  2564                           ;flexlcd.h: 77: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
  2565  000DC4  9484               	bcf	132,2,c	;volatile
  2566  000DC6  9E83               	bcf	131,7,c	;volatile
  2567  000DC8  9C83               	bcf	131,6,c	;volatile
  2568  000DCA  8A83               	bsf	131,5,c	;volatile
  2569  000DCC  8883               	bsf	131,4,c	;volatile
  2570                           
  2571                           ;flexlcd.h: 78: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  2572  000DCE  8284               	bsf	132,1,c	;volatile
  2573  000DD0  9484               	bcf	132,2,c	;volatile
  2574  000DD2                     
  2575                           ;flexlcd.h: 79: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2576  000DD2  0E03               	movlw	3
  2577  000DD4                     u997:
  2578  000DD4  2EE8               	decfsz	wreg,f,c
  2579  000DD6  D7FE               	bra	u997
  2580  000DD8  F000               	nop	
  2581  000DDA                     
  2582                           ;flexlcd.h: 80: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           1; PORTEbits.RE1 = 0;
  2583  000DDA  9E83               	bcf	131,7,c	;volatile
  2584  000DDC  9C83               	bcf	131,6,c	;volatile
  2585  000DDE  8A83               	bsf	131,5,c	;volatile
  2586  000DE0  8883               	bsf	131,4,c	;volatile
  2587  000DE2  9284               	bcf	132,1,c	;volatile
  2588  000DE4                     
  2589                           ;flexlcd.h: 81: PORTEbits.RE2 = 0;
  2590  000DE4  9484               	bcf	132,2,c	;volatile
  2591                           
  2592                           ;flexlcd.h: 82: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2593  000DE6  0E0F               	movlw	15
  2594  000DE8  6E04               	movwf	??_Lcd_Init^0,c
  2595  000DEA  0E48               	movlw	72
  2596  000DEC                     u1007:
  2597  000DEC  2EE8               	decfsz	wreg,f,c
  2598  000DEE  D7FE               	bra	u1007
  2599  000DF0  2E04               	decfsz	??_Lcd_Init^0,f,c
  2600  000DF2  D7FC               	bra	u1007
  2601  000DF4  2A05               	incf	Lcd_Init@data^0,f,c
  2602  000DF6  0E03               	movlw	3
  2603  000DF8  6405               	cpfsgt	Lcd_Init@data^0,c
  2604  000DFA  EF01  F007         	goto	u321
  2605  000DFE  EF03  F007         	goto	u320
  2606  000E02                     u321:
  2607  000E02  EFDD  F006         	goto	l135
  2608  000E06                     u320:
  2609  000E06                     
  2610                           ;flexlcd.h: 83: };flexlcd.h: 84: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  2611  000E06  9E83               	bcf	131,7,c	;volatile
  2612  000E08  9C83               	bcf	131,6,c	;volatile
  2613  000E0A  8A83               	bsf	131,5,c	;volatile
  2614  000E0C  9883               	bcf	131,4,c	;volatile
  2615  000E0E  9284               	bcf	132,1,c	;volatile
  2616  000E10  9484               	bcf	132,2,c	;volatile
  2617                           
  2618                           ;flexlcd.h: 85: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  2619  000E12  9E83               	bcf	131,7,c	;volatile
  2620  000E14  9C83               	bcf	131,6,c	;volatile
  2621  000E16  8A83               	bsf	131,5,c	;volatile
  2622  000E18  9883               	bcf	131,4,c	;volatile
  2623  000E1A  8284               	bsf	132,1,c	;volatile
  2624  000E1C  9484               	bcf	132,2,c	;volatile
  2625  000E1E                     
  2626                           ;flexlcd.h: 86: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2627  000E1E  0E03               	movlw	3
  2628  000E20                     u1017:
  2629  000E20  2EE8               	decfsz	wreg,f,c
  2630  000E22  D7FE               	bra	u1017
  2631  000E24  F000               	nop	
  2632  000E26                     
  2633                           ;flexlcd.h: 87: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  2634  000E26  9E83               	bcf	131,7,c	;volatile
  2635  000E28  9C83               	bcf	131,6,c	;volatile
  2636  000E2A  8A83               	bsf	131,5,c	;volatile
  2637  000E2C  9883               	bcf	131,4,c	;volatile
  2638  000E2E  9284               	bcf	132,1,c	;volatile
  2639  000E30  9484               	bcf	132,2,c	;volatile
  2640                           
  2641                           ;flexlcd.h: 88: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2642  000E32  0E0F               	movlw	15
  2643  000E34  6E04               	movwf	??_Lcd_Init^0,c
  2644  000E36  0E48               	movlw	72
  2645  000E38                     u1027:
  2646  000E38  2EE8               	decfsz	wreg,f,c
  2647  000E3A  D7FE               	bra	u1027
  2648  000E3C  2E04               	decfsz	??_Lcd_Init^0,f,c
  2649  000E3E  D7FC               	bra	u1027
  2650  000E40  0E28               	movlw	40
  2651  000E42  EC0F  F006         	call	_Lcd_Cmd
  2652  000E46  0E10               	movlw	16
  2653  000E48  EC0F  F006         	call	_Lcd_Cmd
  2654  000E4C  0E01               	movlw	1
  2655  000E4E  EC0F  F006         	call	_Lcd_Cmd
  2656  000E52  0E0F               	movlw	15
  2657  000E54  EC0F  F006         	call	_Lcd_Cmd
  2658  000E58  0012               	return		;funcret
  2659  000E5A                     __end_of_Lcd_Init:
  2660                           	callstack 0
  2661                           
  2662 ;; *************** function _Lcd_Cmd *****************
  2663 ;; Defined at:
  2664 ;;		line 152 in file "flexlcd.h"
  2665 ;; Parameters:    Size  Location     Type
  2666 ;;  data            1    wreg     unsigned char 
  2667 ;; Auto vars:     Size  Location     Type
  2668 ;;  data            1    2[COMRAM] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  1    wreg      void 
  2671 ;; Registers used:
  2672 ;;		wreg, status,2, status,0
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2678 ;;      Params:         0       0       0       0       0       0       0       0       0
  2679 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2680 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2681 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2682 ;;Total ram usage:        3 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; This function calls:
  2685 ;;		Nothing
  2686 ;; This function is called by:
  2687 ;;		_Lcd_Init
  2688 ;;		_Lcd_Out
  2689 ;;		_main
  2690 ;;		_Lcd_Out2
  2691 ;; This function uses a non-reentrant model
  2692 ;;
  2693                           
  2694                           	psect	text15
  2695  000C1E                     __ptext15:
  2696                           	callstack 0
  2697  000C1E                     _Lcd_Cmd:
  2698                           	callstack 29
  2699                           
  2700                           ;incstack = 0
  2701                           ;Lcd_Cmd@data stored from wreg
  2702  000C1E  6E03               	movwf	Lcd_Cmd@data^0,c
  2703  000C20                     
  2704                           ;flexlcd.h: 153: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  2705  000C20  9284               	bcf	132,1,c	;volatile
  2706  000C22  9484               	bcf	132,2,c	;volatile
  2707  000C24                     
  2708                           ;flexlcd.h: 154: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  2709  000C24  6A01               	clrf	??_Lcd_Cmd^0,c
  2710  000C26  AE03               	btfss	Lcd_Cmd@data^0,7,c
  2711  000C28  D001               	bra	u15
  2712  000C2A  2A01               	incf	??_Lcd_Cmd^0,f,c
  2713  000C2C                     u15:
  2714  000C2C  0E01               	movlw	1
  2715  000C2E  1601               	andwf	??_Lcd_Cmd^0,f,c
  2716  000C30  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2717  000C32  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2718  000C34  5083               	movf	131,w,c	;volatile
  2719  000C36  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2720  000C38  0B7F               	andlw	-129
  2721  000C3A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2722  000C3C  6E83               	movwf	131,c	;volatile
  2723  000C3E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2724  000C42  0E06               	movlw	6
  2725  000C44  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  2726  000C46                     u25:
  2727  000C46  90D8               	bcf	status,0,c
  2728  000C48  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2729  000C4A  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  2730  000C4C  EF23  F006         	goto	u25
  2731  000C50  0E01               	movlw	1
  2732  000C52  1601               	andwf	??_Lcd_Cmd^0,f,c
  2733  000C54  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2734  000C56  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2735  000C58  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2736  000C5A  5083               	movf	131,w,c	;volatile
  2737  000C5C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2738  000C5E  0BBF               	andlw	-65
  2739  000C60  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2740  000C62  6E83               	movwf	131,c	;volatile
  2741                           
  2742                           ;flexlcd.h: 155: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  2743  000C64  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2744  000C68  0E05               	movlw	5
  2745  000C6A  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  2746  000C6C                     u35:
  2747  000C6C  90D8               	bcf	status,0,c
  2748  000C6E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2749  000C70  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  2750  000C72  EF36  F006         	goto	u35
  2751  000C76  0E01               	movlw	1
  2752  000C78  1601               	andwf	??_Lcd_Cmd^0,f,c
  2753  000C7A  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2754  000C7C  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2755  000C7E  5083               	movf	131,w,c	;volatile
  2756  000C80  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2757  000C82  0BDF               	andlw	-33
  2758  000C84  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2759  000C86  6E83               	movwf	131,c	;volatile
  2760  000C88  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2761  000C8C  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2762  000C8E  0E0F               	movlw	15
  2763  000C90  1601               	andwf	??_Lcd_Cmd^0,f,c
  2764  000C92  0E01               	movlw	1
  2765  000C94  1601               	andwf	??_Lcd_Cmd^0,f,c
  2766  000C96  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2767  000C98  5083               	movf	131,w,c	;volatile
  2768  000C9A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2769  000C9C  0BEF               	andlw	-17
  2770  000C9E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2771  000CA0  6E83               	movwf	131,c	;volatile
  2772  000CA2                     
  2773                           ;flexlcd.h: 156: _delay(10);
  2774  000CA2  0E03               	movlw	3
  2775  000CA4                     u1037:
  2776  000CA4  2EE8               	decfsz	wreg,f,c
  2777  000CA6  D7FE               	bra	u1037
  2778  000CA8  F000               	nop	
  2779  000CAA                     
  2780                           ;flexlcd.h: 157: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  2781  000CAA  8284               	bsf	132,1,c	;volatile
  2782  000CAC  0E03               	movlw	3
  2783  000CAE                     u1047:
  2784  000CAE  2EE8               	decfsz	wreg,f,c
  2785  000CB0  D7FE               	bra	u1047
  2786  000CB2  F000               	nop	
  2787  000CB4  9284               	bcf	132,1,c	;volatile
  2788                           
  2789                           ;flexlcd.h: 158: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  2790  000CB6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2791  000CBA  90D8               	bcf	status,0,c
  2792  000CBC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2793  000CBE  90D8               	bcf	status,0,c
  2794  000CC0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2795  000CC2  90D8               	bcf	status,0,c
  2796  000CC4  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2797  000CC6  0E01               	movlw	1
  2798  000CC8  1601               	andwf	??_Lcd_Cmd^0,f,c
  2799  000CCA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2800  000CCC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2801  000CCE  5083               	movf	131,w,c	;volatile
  2802  000CD0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2803  000CD2  0B7F               	andlw	-129
  2804  000CD4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2805  000CD6  6E83               	movwf	131,c	;volatile
  2806  000CD8  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2807  000CDC  90D8               	bcf	status,0,c
  2808  000CDE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2809  000CE0  90D8               	bcf	status,0,c
  2810  000CE2  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2811  000CE4  0E01               	movlw	1
  2812  000CE6  1601               	andwf	??_Lcd_Cmd^0,f,c
  2813  000CE8  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2814  000CEA  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2815  000CEC  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2816  000CEE  5083               	movf	131,w,c	;volatile
  2817  000CF0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2818  000CF2  0BBF               	andlw	-65
  2819  000CF4  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2820  000CF6  6E83               	movwf	131,c	;volatile
  2821                           
  2822                           ;flexlcd.h: 159: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  2823  000CF8  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2824  000CFC  90D8               	bcf	status,0,c
  2825  000CFE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  2826  000D00  0E01               	movlw	1
  2827  000D02  1601               	andwf	??_Lcd_Cmd^0,f,c
  2828  000D04  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2829  000D06  4601               	rlncf	??_Lcd_Cmd^0,f,c
  2830  000D08  5083               	movf	131,w,c	;volatile
  2831  000D0A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2832  000D0C  0BDF               	andlw	-33
  2833  000D0E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2834  000D10  6E83               	movwf	131,c	;volatile
  2835  000D12  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  2836  000D16  0E01               	movlw	1
  2837  000D18  1601               	andwf	??_Lcd_Cmd^0,f,c
  2838  000D1A  3A01               	swapf	??_Lcd_Cmd^0,f,c
  2839  000D1C  5083               	movf	131,w,c	;volatile
  2840  000D1E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2841  000D20  0BEF               	andlw	-17
  2842  000D22  1801               	xorwf	??_Lcd_Cmd^0,w,c
  2843  000D24  6E83               	movwf	131,c	;volatile
  2844  000D26                     
  2845                           ;flexlcd.h: 160: _delay(10);
  2846  000D26  0E03               	movlw	3
  2847  000D28                     u1057:
  2848  000D28  2EE8               	decfsz	wreg,f,c
  2849  000D2A  D7FE               	bra	u1057
  2850  000D2C  F000               	nop	
  2851  000D2E                     
  2852                           ;flexlcd.h: 161: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  2853  000D2E  8284               	bsf	132,1,c	;volatile
  2854  000D30  0E03               	movlw	3
  2855  000D32                     u1067:
  2856  000D32  2EE8               	decfsz	wreg,f,c
  2857  000D34  D7FE               	bra	u1067
  2858  000D36  F000               	nop	
  2859  000D38  9284               	bcf	132,1,c	;volatile
  2860  000D3A                     
  2861                           ;flexlcd.h: 162: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2862  000D3A  0E0F               	movlw	15
  2863  000D3C  6E01               	movwf	??_Lcd_Cmd^0,c
  2864  000D3E  0E48               	movlw	72
  2865  000D40                     u1077:
  2866  000D40  2EE8               	decfsz	wreg,f,c
  2867  000D42  D7FE               	bra	u1077
  2868  000D44  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  2869  000D46  D7FC               	bra	u1077
  2870  000D48  0012               	return		;funcret
  2871  000D4A                     __end_of_Lcd_Cmd:
  2872                           	callstack 0
  2873                           
  2874                           	psect	rparam
  2875  0000                     
  2876                           	psect	idloc
  2877                           
  2878                           ;Config register IDLOC0 @ 0x200000
  2879                           ;	unspecified, using default values
  2880  200000                     	org	2097152
  2881  200000  FF                 	db	255
  2882                           
  2883                           ;Config register IDLOC1 @ 0x200001
  2884                           ;	unspecified, using default values
  2885  200001                     	org	2097153
  2886  200001  FF                 	db	255
  2887                           
  2888                           ;Config register IDLOC2 @ 0x200002
  2889                           ;	unspecified, using default values
  2890  200002                     	org	2097154
  2891  200002  FF                 	db	255
  2892                           
  2893                           ;Config register IDLOC3 @ 0x200003
  2894                           ;	unspecified, using default values
  2895  200003                     	org	2097155
  2896  200003  FF                 	db	255
  2897                           
  2898                           ;Config register IDLOC4 @ 0x200004
  2899                           ;	unspecified, using default values
  2900  200004                     	org	2097156
  2901  200004  FF                 	db	255
  2902                           
  2903                           ;Config register IDLOC5 @ 0x200005
  2904                           ;	unspecified, using default values
  2905  200005                     	org	2097157
  2906  200005  FF                 	db	255
  2907                           
  2908                           ;Config register IDLOC6 @ 0x200006
  2909                           ;	unspecified, using default values
  2910  200006                     	org	2097158
  2911  200006  FF                 	db	255
  2912                           
  2913                           ;Config register IDLOC7 @ 0x200007
  2914                           ;	unspecified, using default values
  2915  200007                     	org	2097159
  2916  200007  FF                 	db	255
  2917                           
  2918                           	psect	config
  2919                           
  2920                           ;Config register CONFIG1L @ 0x300000
  2921                           ;	PLL Prescaler Selection bits
  2922                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2923                           ;	System Clock Postscaler Selection bits
  2924                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2925                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2926                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2927  300000                     	org	3145728
  2928  300000  00                 	db	0
  2929                           
  2930                           ;Config register CONFIG1H @ 0x300001
  2931                           ;	Oscillator Selection bits
  2932                           ;	FOSC = HS, HS oscillator (HS)
  2933                           ;	Fail-Safe Clock Monitor Enable bit
  2934                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2935                           ;	Internal/External Oscillator Switchover bit
  2936                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2937  300001                     	org	3145729
  2938  300001  0C                 	db	12
  2939                           
  2940                           ;Config register CONFIG2L @ 0x300002
  2941                           ;	Power-up Timer Enable bit
  2942                           ;	PWRT = OFF, PWRT disabled
  2943                           ;	Brown-out Reset Enable bits
  2944                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2945                           ;	Brown-out Reset Voltage bits
  2946                           ;	BORV = 3, Minimum setting 2.05V
  2947                           ;	USB Voltage Regulator Enable bit
  2948                           ;	VREGEN = OFF, USB voltage regulator disabled
  2949  300002                     	org	3145730
  2950  300002  1F                 	db	31
  2951                           
  2952                           ;Config register CONFIG2H @ 0x300003
  2953                           ;	Watchdog Timer Enable bit
  2954                           ;	WDT = ON, WDT enabled
  2955                           ;	Watchdog Timer Postscale Select bits
  2956                           ;	WDTPS = 32768, 1:32768
  2957  300003                     	org	3145731
  2958  300003  1F                 	db	31
  2959                           
  2960                           ; Padding undefined space
  2961  300004                     	org	3145732
  2962  300004  FF                 	db	255
  2963                           
  2964                           ;Config register CONFIG3H @ 0x300005
  2965                           ;	CCP2 MUX bit
  2966                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2967                           ;	PORTB A/D Enable bit
  2968                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2969                           ;	Low-Power Timer 1 Oscillator Enable bit
  2970                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2971                           ;	MCLR Pin Enable bit
  2972                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2973  300005                     	org	3145733
  2974  300005  81                 	db	129
  2975                           
  2976                           ;Config register CONFIG4L @ 0x300006
  2977                           ;	Stack Full/Underflow Reset Enable bit
  2978                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2979                           ;	Single-Supply ICSP Enable bit
  2980                           ;	LVP = ON, Single-Supply ICSP enabled
  2981                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2982                           ;	ICPRT = OFF, ICPORT disabled
  2983                           ;	Extended Instruction Set Enable bit
  2984                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2985                           ;	Background Debugger Enable bit
  2986                           ;	DEBUG = 0x1, unprogrammed default
  2987  300006                     	org	3145734
  2988  300006  85                 	db	133
  2989                           
  2990                           ; Padding undefined space
  2991  300007                     	org	3145735
  2992  300007  FF                 	db	255
  2993                           
  2994                           ;Config register CONFIG5L @ 0x300008
  2995                           ;	Code Protection bit
  2996                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2997                           ;	Code Protection bit
  2998                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2999                           ;	Code Protection bit
  3000                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3001                           ;	Code Protection bit
  3002                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3003  300008                     	org	3145736
  3004  300008  0F                 	db	15
  3005                           
  3006                           ;Config register CONFIG5H @ 0x300009
  3007                           ;	Boot Block Code Protection bit
  3008                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3009                           ;	Data EEPROM Code Protection bit
  3010                           ;	CPD = OFF, Data EEPROM is not code-protected
  3011  300009                     	org	3145737
  3012  300009  C0                 	db	192
  3013                           
  3014                           ;Config register CONFIG6L @ 0x30000A
  3015                           ;	Write Protection bit
  3016                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3017                           ;	Write Protection bit
  3018                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3019                           ;	Write Protection bit
  3020                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3021                           ;	Write Protection bit
  3022                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3023  30000A                     	org	3145738
  3024  30000A  0F                 	db	15
  3025                           
  3026                           ;Config register CONFIG6H @ 0x30000B
  3027                           ;	Configuration Register Write Protection bit
  3028                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3029                           ;	Boot Block Write Protection bit
  3030                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3031                           ;	Data EEPROM Write Protection bit
  3032                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3033  30000B                     	org	3145739
  3034  30000B  E0                 	db	224
  3035                           
  3036                           ;Config register CONFIG7L @ 0x30000C
  3037                           ;	Table Read Protection bit
  3038                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3039                           ;	Table Read Protection bit
  3040                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3041                           ;	Table Read Protection bit
  3042                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3043                           ;	Table Read Protection bit
  3044                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3045  30000C                     	org	3145740
  3046  30000C  0F                 	db	15
  3047                           
  3048                           ;Config register CONFIG7H @ 0x30000D
  3049                           ;	Boot Block Table Read Protection bit
  3050                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3051  30000D                     	org	3145741
  3052  30000D  40                 	db	64
  3053                           tosu	equ	0xFFF
  3054                           tosh	equ	0xFFE
  3055                           tosl	equ	0xFFD
  3056                           stkptr	equ	0xFFC
  3057                           pclatu	equ	0xFFB
  3058                           pclath	equ	0xFFA
  3059                           pcl	equ	0xFF9
  3060                           tblptru	equ	0xFF8
  3061                           tblptrh	equ	0xFF7
  3062                           tblptrl	equ	0xFF6
  3063                           tablat	equ	0xFF5
  3064                           prodh	equ	0xFF4
  3065                           prodl	equ	0xFF3
  3066                           indf0	equ	0xFEF
  3067                           postinc0	equ	0xFEE
  3068                           postdec0	equ	0xFED
  3069                           preinc0	equ	0xFEC
  3070                           plusw0	equ	0xFEB
  3071                           fsr0h	equ	0xFEA
  3072                           fsr0l	equ	0xFE9
  3073                           wreg	equ	0xFE8
  3074                           indf1	equ	0xFE7
  3075                           postinc1	equ	0xFE6
  3076                           postdec1	equ	0xFE5
  3077                           preinc1	equ	0xFE4
  3078                           plusw1	equ	0xFE3
  3079                           fsr1h	equ	0xFE2
  3080                           fsr1l	equ	0xFE1
  3081                           bsr	equ	0xFE0
  3082                           indf2	equ	0xFDF
  3083                           postinc2	equ	0xFDE
  3084                           postdec2	equ	0xFDD
  3085                           preinc2	equ	0xFDC
  3086                           plusw2	equ	0xFDB
  3087                           fsr2h	equ	0xFDA
  3088                           fsr2l	equ	0xFD9
  3089                           status	equ	0xFD8

Data Sizes:
    Strings     5
    Constant    10
    Data        2
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     33      42
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 5
		 -> str(COMRAM[5]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 5
		 -> str(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _PWM1_Set_Duty->___lldiv
    ___lldiv->___lmul
    _PWM1_Init->___aldiv
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5383
                                             31 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                          _PWM1_Init
                      _PWM1_Set_Duty
                         _PWM1_Start
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    22      6    3068
                                             12 COMRAM    19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     903
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     906
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _PWM1_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_Set_Duty                                        5     5      0     751
                                             25 COMRAM     5     5      0
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     370
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _PWM1_Init                                            8     6      2     661
                                             14 COMRAM     8     6      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     2      3     573
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out
     _Lcd_Chr_CP
     _Lcd_Cmd
   _PWM1_Init
     ___aldiv
   _PWM1_Set_Duty
     ___lldiv
       ___lmul (ARG)
     ___lmul
   _PWM1_Start
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     21      2A       1       44.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2A      20        0.0%
DATA                 0      0      2A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Nov 21 09:46:30 2020

                     l60 14A8                       l54 1056                       l63 14B6  
                     l57 1498                       l66 125E                       l59 14A6  
                     u15 0C2C                       u25 0C46                       u35 0C6C  
                     u45 0AF8        PWM1_Set_Duty@temp 001D                       u55 0B12  
                     u65 0B38      ___wmul@multiplicand 0003                      l221 0A4E  
                    l150 12E8                      l135 0DBA                      l311 0F64  
                    l136 0E06                      l232 14DC                      l137 0E58  
                    l243 13B6                      l244 13C6                      l180 10C2  
                    l229 0AE8                      l166 0C1C                      l169 0D48  
                    l266 11CC                      l259 11BC                      l711 1354  
                    l721 1422                      l718 135C                      l728 142A  
                    l990 0CAC                      l982 0C20                      l992 0CB4  
                    l984 0C24                      l896 145C                      l994 0D26  
                    l986 0CA2                      l996 0D2E                      l988 0CAA  
                    l998 0D30                      u300 14A6                      u301 14A2  
                    u310 14B6                      u311 14B2                      u320 0E06  
                    u321 0E02                      u500 1452                      u501 144E  
                    u510 137C                      _PR2 000FCB                      u511 1378  
                    u600 0F12                      u520 13B6                      u601 0F0E  
                    u521 13B2                      u610 0F44                      u530 1150  
                    u611 0F40                      u531 114C                      u700 1002  
                    u540 1172                      u620 1304                      u701 0FFE  
                    u541 116E                      u621 1300                      u550 119A  
                    u630 1322                      u551 1196                      u631 131E  
                    u720 12E8                      u560 0E6C                      u640 133E  
                    u800 09E8                      u721 12E4                      u561 0E68  
                    u641 133A                      u801 09E4                      u570 0E8E  
                    u650 13DA                      u490 1442                      u810 0A10  
                    u730 0830                      u571 0E8A                      u715 103A  
                    u651 13D6                      u491 143E                      u811 0A0C  
                    u731 082C                      u580 0EC8                      u660 13F8  
                    u820 0A26                      u740 0890                      u581 0EC4  
                    u661 13F4                      u821 0A22                      u741 088C  
                    u590 0EEA                      u670 140E                      u830 0A4E  
                    u750 08FE                      u591 0EE6                      u671 140A  
                    u831 0A4A                      u751 08FA                      u840 0ABA  
                    u760 0978                      u841 0AB6                      u761 0974  
                    u690 0FD2                      u850 0ADC                      u770 0990  
                    u907 0BFE                      u691 0FCE                      u851 0AD8  
                    u771 098C                      u780 09B4                      u917 0C08  
                    u685 0F96                      u781 09B0                      u790 09D6  
                    u927 0C14                      u791 09D2                      u937 0D68  
                    u947 0D76                      u867 1114                      u957 0D84  
                    u877 0B70                      u967 0D92                      u887 0B7A  
                    u977 0DA0                      u897 0BF4                      u987 0DAE  
                    u997 0DD4                      _str 0024                      wreg 000FE8  
                   l1000 0D38                     l1002 0D3A                     l1010 0B76  
                   l1020 0BFC                     l1012 0B78                     l1004 0AEC  
                   l1022 0C04                     l1014 0B80                     l1006 0AF0  
                   l1024 0C06                     l1016 0BF2                     l1008 0B6E  
                   l1210 0DB6                     l1026 0C0E                     l1018 0BFA  
                   l1220 0DDC                     l1230 0DF4                     l1222 0DDE  
                   l1206 0D4A                     l1240 0E2C                     l1232 0E1E  
                   l1224 0DE0                     l1216 0DD2                     l1208 0D62  
                   l1250 0E46                     l1242 0E2E                     l1234 0E26  
                   l1226 0DE2                     l1218 0DDA                     l1260 0E52  
                   l1252 0E46                     l1244 0E30                     l1236 0E28  
                   l1228 0DE4                     l1500 0EB2                     l1254 0E4C  
                   l1246 0E40                     l1238 0E2A                     l1510 0EF4  
                   l1502 0EC8                     l1256 0E4C                     l1248 0E40  
                   l1512 0F12                     l1504 0ED0                     l1520 0F34  
                   l1600 1236                     l1192 148C                     l1440 1452  
                   l1258 0E52                     l1610 127A                     l1522 0F44  
                   l1514 0F22                     l1506 0EDC                     l1602 124E  
                   l1194 1490                     l1530 12F2                     l1442 1456  
                   l1434 142E                     l1620 12BE                     l1612 1284  
                   l1604 1262                     l1524 0F54                     l1516 0F24  
                   l1508 0EEA                     l1460 1396                     l1452 135E  
                   l1196 1494                     l1540 1328                     l1532 1304  
                   l1436 1432                     l1700 0A36                     l1622 12CC  
                   l1606 1266                     l1518 0F2E                     l1470 1164  
                   l1462 112A                     l1454 136E                     l1198 1496  
                   l1542 133E                     l1534 130C                     l1550 13C8  
                   l1446 14B8                     l1438 1442                     l1702 0A56  
                   l1630 0830                     l1710 0ABA                     l1624 12D0  
                   l1608 1270                     l1616 128E                     l1480 11AC  
                   l1472 1172                     l1464 113A                     l1456 137C  
                   l1544 1346                     l1536 1314                     l1528 12EA  
                   l1560 140E                     l1552 13DA                     l1448 14D4  
                   l1704 0A98                     l1712 0ADC                     l1640 085A  
                   l1632 083C                     l1720 106E                     l1618 12B4  
                   l1490 0E7C                     l1570 0F6C                     l1482 11B6  
                   l1474 117C                     l1466 1150                     l1458 138C  
                   l1546 1348                     l1538 1322                     l1562 1416  
                   l1554 13E2                     l1706 0AA4                     l1650 08DC  
                   l1642 0872                     l1634 0844                     l1626 0812  
                   l1730 10C4                     l1722 10A8                     l1492 0E80  
                   l1484 0E5A                     l1580 0FC2                     l1572 0F6E  
                   l1476 119A                     l1468 1158                     l1548 134E  
                   l1564 141C                     l1556 13EA                     l1708 0AA8  
                   l1660 0932                     l1652 08E0                     l1644 0890  
                   l1636 0854                     l1628 081E                     l1732 10CA  
                   l1724 10AC                     l1716 1058                     l1494 0E8E  
                   l1486 0E5E                     l1590 100A                     l1582 0FD2  
                   l1574 0F70                     l1566 0F66                     l1478 11AA  
                   l1558 13F8                     l1670 094E                     l1662 0942  
                   l1654 0902                     l1646 0898                     l1734 10DC  
                   l1726 10B2                     l1718 1060                     l1496 0E9E  
                   l1488 0E6C                     l1592 102A                     l1584 0FD6  
                   l1576 0F76                     l1568 0F6A                     l1680 09B4  
                   l1664 094A                     l1648 08B4                     l1736 10F8  
                   l1728 10BE                     l1498 0EA2                     l1594 104A  
                   l1586 0FDE                     l1578 0F78                     l1690 09F4  
                   l1682 09C0                     l1674 097C                     l1658 090A  
                   l1738 110A                     l1588 1002                     l1596 1052  
                   l1692 09F8                     l1684 09C8                     l1676 097E  
                   l1598 11D0                     l1686 09D6                     l1694 0A14  
                   l1678 0990                     l1696 0A26                     l1688 09E8  
                   l1698 0A32                     STR_1 080B                     u1007 0DEC  
                   u1017 0E20                     u1027 0E38                     u1037 0CA4  
                   u1047 0CAE                     u1057 0D28                     u1067 0D32  
                   u1077 0D40                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B                     _LATD 000F8C                     _LATE 000F8D  
                   _main 1058                     _duty 0029                     fsr2h 000FDA  
                   indf2 000FDF                     fsr2l 000FD9                     prodh 000FF4  
                   prodl 000FF3                     start 0000          __end_of_Lcd_Cmd 0D4A  
        __end_of_Lcd_Out 12EA             ___param_bank 000000               _Lcd_Chr_CP 0AEA  
        __end_of___aldiv 0F66                    ?_main 0001          __end_of___lldiv 11CE  
                  _T1CON 000FCD          __end_of___lwdiv 135E          __end_of___lwmod 142C  
                  _TMR1H 000FCF                    _TMR1L 000FCE                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
    ___lmul@multiplicand 0005       __size_of_PWM1_Init 00F2              ?_PWM1_Start 0001  
        __end_of_dpowers 080B                    _count 0022          __end_of_isdigit 145E  
                  tablat 000FF5                    status 000FD8          __end_of_sprintf 0AEA  
       __end_of_Lcd_Init 0E5A          __initialization 145E             __end_of_main 112A  
                 ??_main 0020            __activetblptr 000002                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR1L 000FBE                ??_Lcd_Cmd 0001  
              ??_Lcd_Out 0007        __end_of_PWM1_Init 1058                   ___lmul 135E  
            ?_Lcd_Chr_CP 0001                ??___aldiv 0009                   ___wmul 14B8  
    __size_of_PWM1_Start 002C                ??___lldiv 0015                ??___lwdiv 0005  
              ??___lwmod 000C                   clear_0 147C             __pdataCOMRAM 0029  
              ??_isdigit 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_sprintf 0013  
             __accesstop 0060  __end_of__initialization 1482            ___rparam_used 000001  
         __pcstackCOMRAM 0001    __end_of_PWM1_Set_Duty 1260                ?_Lcd_Init 0001  
           sprintf@width 001D      __size_of_Lcd_Chr_CP 0134                  ?___lmul 0001  
                ?___wmul 0001                  _CCP1CON 000FBD           ___lmul@product 0009  
           ??_PWM1_Start 0001               ??_Lcd_Init 0004                  _Lcd_Cmd 0C1E  
                _Lcd_Out 1260                  __Hparam 0000                  __Lparam 0000  
                ___aldiv 0E5A          __size_of___lmul 006A                  ___lldiv 112A  
        __size_of___wmul 0026                  ___lwdiv 12EA                  ___lwmod 13C8  
     __end_of_PWM1_Start 14B8             __psmallconst 0800                  __pcinit 145E  
                __ramtop 0800                  __ptext0 1058                  __ptext1 0812  
                __ptext2 142C                  __ptext3 14B8                  __ptext4 13C8  
                __ptext5 12EA                  __ptext6 148C                  __ptext7 11CE  
                __ptext8 135E                  __ptext9 112A                  _dpowers 0801  
              _T2CONbits 000FCA                  _isdigit 142C         ___aldiv@dividend 0001  
                _sprintf 0812     end_of_initialization 1482            __Lmediumconst 0000  
        ___lldiv@divisor 0011          ___lldiv@counter 0019         ___aldiv@quotient 000B  
           ??_Lcd_Chr_CP 0001                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE                _PWM1_Init 0F66                _PORTCbits 000F82  
              _PORTDbits 000F83                _PORTEbits 000F84                _TRISCbits 000F94  
              _TRISDbits 000F95                _TRISEbits 000F96           PWM1_Set_Duty@d 001C  
     __end_of_Lcd_Chr_CP 0C1E           __end_of___lmul 13C8           __end_of___wmul 14DE  
          __pidataCOMRAM 14DE               ?_PWM1_Init 000F      start_initialization 145E  
          Lcd_Out@buffer 0005        __size_of_Lcd_Init 0110                 ??___lmul 0009  
               ??___wmul 0005              __pbssCOMRAM 0022             _isdigit$1156 0002  
 __size_of_PWM1_Set_Duty 0092                 ?_Lcd_Cmd 0001              sprintf@flag 0019  
               ?_Lcd_Out 0004              sprintf@prec 001C         ___lwdiv@dividend 0001  
               ?___aldiv 0001                 ?___lldiv 000D                 ?___lwdiv 0001  
               ?___lwmod 0008              ??_PWM1_Init 0011              __smallconst 0800  
               ?_isdigit 0001         ___lwdiv@quotient 0005                 ?_sprintf 000D  
             PWM1_Init@f 000F          ___aldiv@divisor 0005          ___aldiv@counter 0009  
         ___wmul@product 0005            PWM1_Init@temp 0015                 _PIR1bits 000F9E  
               Lcd_Out@x 0004                 Lcd_Out@y 0007            _PWM1_Set_Duty 11CE  
           Lcd_Init@data 0005               _ADCON0bits 000FC2        ___wmul@multiplier 0001  
               _Lcd_Init 0D4A        ___lmul@multiplier 0001              _INTCON2bits 000FF1  
       __size_of_Lcd_Cmd 012C         __size_of_Lcd_Out 008A                 __Hrparam 0000  
               __Lrparam 0000           ?_PWM1_Set_Duty 0001         __size_of___aldiv 010C  
       __size_of___lldiv 00A4         __size_of___lwdiv 0074         __size_of___lwmod 0064  
             sprintf@val 001A         __size_of_isdigit 0032           Lcd_Chr_CP@data 0003  
        ___lwdiv@divisor 0003          ___lwdiv@counter 0007                 __ptext10 0F66  
               __ptext11 0E5A                 __ptext12 1260                 __ptext13 0AEA  
               __ptext14 0D4A                 __ptext15 0C1E         __size_of_sprintf 02D8  
            Lcd_Cmd@data 0003            __size_of_main 00D2              Lcd_Out@data 0008  
               isdigit@c 0003                sprintf@ap 0017                sprintf@sp 000D  
       ___lwmod@dividend 0008         ___lldiv@dividend 000D          ??_PWM1_Set_Duty 001A  
               sprintf@c 001F                 sprintf@f 000F         ___lldiv@quotient 0015  
        ___lwmod@divisor 000A          ___lwmod@counter 000C             ___aldiv@sign 000A  
             _PWM1_Start 148C  
