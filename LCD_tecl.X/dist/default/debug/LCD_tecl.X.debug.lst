

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Nov 18 13:31:54 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  000FE6                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _key
    61  000FE6  20                 	db	32
    62  0000                     _LATBbits	set	3978
    63  0000                     _LATE	set	3981
    64  0000                     _PORTE	set	3972
    65  0000                     _LATD	set	3980
    66  0000                     _PORTD	set	3971
    67  0000                     _LATC	set	3979
    68  0000                     _PORTC	set	3970
    69  0000                     _LATB	set	3978
    70  0000                     _PORTB	set	3969
    71  0000                     _TRISE	set	3990
    72  0000                     _TRISD	set	3989
    73  0000                     _TRISC	set	3988
    74  0000                     _TRISB	set	3987
    75  0000                     _INTCON3	set	4080
    76  0000                     _INTCON2	set	4081
    77  0000                     _INTCON	set	4082
    78  0000                     _ADCON1	set	4033
    79  0000                     _ADCON0	set	4034
    80  0000                     _PORTEbits	set	3972
    81  0000                     _PORTDbits	set	3971
    82  0000                     _TRISEbits	set	3990
    83  0000                     _TRISDbits	set	3989
    84                           
    85                           	psect	smallconst
    86  000800                     __psmallconst:
    87                           	callstack 0
    88  000800  00                 	db	0
    89  000801                     STR_12:
    90  000801  2D                 	db	45
    91  000802  00                 	db	0
    92  000803                     STR_8:
    93  000803  30                 	db	48	;'0'
    94  000804  00                 	db	0
    95  000805                     STR_1:
    96  000805  31                 	db	49	;'1'
    97  000806  00                 	db	0
    98  000807                     STR_5:
    99  000807  32                 	db	50	;'2'
   100  000808  00                 	db	0
   101  000809                     STR_9:
   102  000809  33                 	db	51	;'3'
   103  00080A  00                 	db	0
   104  00080B                     STR_2:
   105  00080B  34                 	db	52	;'4'
   106  00080C  00                 	db	0
   107  00080D                     STR_6:
   108  00080D  35                 	db	53	;'5'
   109  00080E  00                 	db	0
   110  00080F                     STR_10:
   111  00080F  36                 	db	54	;'6'
   112  000810  00                 	db	0
   113  000811                     STR_3:
   114  000811  37                 	db	55	;'7'
   115  000812  00                 	db	0
   116  000813                     STR_7:
   117  000813  38                 	db	56	;'8'
   118  000814  00                 	db	0
   119  000815                     STR_11:
   120  000815  39                 	db	57	;'9'
   121  000816  00                 	db	0
   122  000817                     STR_4:
   123  000817  78                 	db	120	;'x'
   124  000818  00                 	db	0
   125  000819  00                 	db	0	; dummy byte at the end
   126  0000                     
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130  000FC8                     __pcinit:
   131                           	callstack 0
   132  000FC8                     start_initialization:
   133                           	callstack 0
   134  000FC8                     __initialization:
   135                           	callstack 0
   136                           
   137                           ; Initialize objects allocated to COMRAM (1 bytes)
   138                           ; load TBLPTR registers with __pidataCOMRAM
   139  000FC8  0EE6               	movlw	low __pidataCOMRAM
   140  000FCA  6EF6               	movwf	tblptrl,c
   141  000FCC  0E0F               	movlw	high __pidataCOMRAM
   142  000FCE  6EF7               	movwf	tblptrh,c
   143  000FD0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   144  000FD2  6EF8               	movwf	tblptru,c
   145  000FD4  0009               	tblrd		*+	;fetch initializer
   146  000FD6  CFF5 F00C          	movff	tablat,__pdataCOMRAM
   147                           
   148                           ; Clear objects allocated to COMRAM (1 bytes)
   149  000FDA  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   150  000FDC                     end_of_initialization:
   151                           	callstack 0
   152  000FDC                     __end_of__initialization:
   153                           	callstack 0
   154  000FDC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155  000FDE  6EF8               	movwf	tblptru,c
   156  000FE0  0100               	movlb	0
   157  000FE2  EF0D  F004         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160  00000B                     __pbssCOMRAM:
   161                           	callstack 0
   162  00000B                     _tecla:
   163                           	callstack 0
   164  00000B                     	ds	1
   165                           
   166                           	psect	dataCOMRAM
   167  00000C                     __pdataCOMRAM:
   168                           	callstack 0
   169  00000C                     _key:
   170                           	callstack 0
   171  00000C                     	ds	1
   172                           
   173                           	psect	cstackCOMRAM
   174  000001                     __pcstackCOMRAM:
   175                           	callstack 0
   176  000001                     ??_Lcd_Cmd:
   177  000001                     ??_Lcd_Chr_CP:
   178  000001                     
   179                           ; 1 bytes @ 0x0
   180  000001                     	ds	2
   181  000003                     Lcd_Chr_CP@data:
   182                           	callstack 0
   183  000003                     Lcd_Cmd@data:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x2
   187  000003                     	ds	1
   188  000004                     ??_Lcd_Init:
   189  000004                     Lcd_Out2@x:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x3
   193  000004                     	ds	1
   194  000005                     Lcd_Init@data:
   195                           	callstack 0
   196  000005                     Lcd_Out2@buffer:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x4
   200  000005                     	ds	2
   201  000007                     Lcd_Out2@y:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x6
   205  000007                     	ds	1
   206  000008                     Lcd_Out2@data:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x7
   210  000008                     	ds	1
   211  000009                     ??_main:
   212                           
   213                           ; 1 bytes @ 0x8
   214  000009                     	ds	2
   215                           
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 29 in file "mainLCDtecl.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   235 ;;      Params:         0       0       0       0       0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0       0       0       0       0
   237 ;;      Temps:          2       0       0       0       0       0       0       0       0
   238 ;;      Totals:         2       0       0       0       0       0       0       0       0
   239 ;;Total ram usage:        2 bytes
   240 ;; Hardware stack levels required when called:    2
   241 ;; This function calls:
   242 ;;		_Lcd_Cmd
   243 ;;		_Lcd_Init
   244 ;;		_Lcd_Out2
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text0
   251  00081A                     __ptext0:
   252                           	callstack 0
   253  00081A                     _main:
   254                           	callstack 29
   255  00081A                     
   256                           ;mainLCDtecl.c: 31: ADCON0 = 0b00000000;
   257  00081A  0E00               	movlw	0
   258  00081C  6EC2               	movwf	194,c	;volatile
   259                           
   260                           ;mainLCDtecl.c: 32: ADCON1 = 0b00001111;
   261  00081E  0E0F               	movlw	15
   262  000820  6EC1               	movwf	193,c	;volatile
   263                           
   264                           ;mainLCDtecl.c: 34: INTCON = 0b00000000;
   265  000822  0E00               	movlw	0
   266  000824  6EF2               	movwf	242,c	;volatile
   267                           
   268                           ;mainLCDtecl.c: 35: INTCON2 = 0b10000000;
   269  000826  0E80               	movlw	128
   270  000828  6EF1               	movwf	241,c	;volatile
   271                           
   272                           ;mainLCDtecl.c: 36: INTCON3 = 0b00000000;
   273  00082A  0E00               	movlw	0
   274  00082C  6EF0               	movwf	240,c	;volatile
   275                           
   276                           ;mainLCDtecl.c: 38: TRISB = 0b00000000;
   277  00082E  0E00               	movlw	0
   278  000830  6E93               	movwf	147,c	;volatile
   279                           
   280                           ;mainLCDtecl.c: 39: TRISC = 0b00000000;
   281  000832  0E00               	movlw	0
   282  000834  6E94               	movwf	148,c	;volatile
   283                           
   284                           ;mainLCDtecl.c: 40: TRISD = 0b00001111;
   285  000836  0E0F               	movlw	15
   286  000838  6E95               	movwf	149,c	;volatile
   287                           
   288                           ;mainLCDtecl.c: 41: TRISE = 0b00000000;
   289  00083A  0E00               	movlw	0
   290  00083C  6E96               	movwf	150,c	;volatile
   291  00083E                     
   292                           ;mainLCDtecl.c: 43: PORTB = 0xFF;
   293  00083E  6881               	setf	129,c	;volatile
   294  000840                     
   295                           ;mainLCDtecl.c: 44: LATB = 0xFF;
   296  000840  688A               	setf	138,c	;volatile
   297                           
   298                           ;mainLCDtecl.c: 45: PORTC = 0;
   299  000842  0E00               	movlw	0
   300  000844  6E82               	movwf	130,c	;volatile
   301                           
   302                           ;mainLCDtecl.c: 46: LATC = 0;
   303  000846  0E00               	movlw	0
   304  000848  6E8B               	movwf	139,c	;volatile
   305                           
   306                           ;mainLCDtecl.c: 47: PORTD = 0;
   307  00084A  0E00               	movlw	0
   308  00084C  6E83               	movwf	131,c	;volatile
   309                           
   310                           ;mainLCDtecl.c: 48: LATD = 0;
   311  00084E  0E00               	movlw	0
   312  000850  6E8C               	movwf	140,c	;volatile
   313                           
   314                           ;mainLCDtecl.c: 49: PORTE = 0;
   315  000852  0E00               	movlw	0
   316  000854  6E84               	movwf	132,c	;volatile
   317                           
   318                           ;mainLCDtecl.c: 50: LATE = 0;
   319  000856  0E00               	movlw	0
   320  000858  6E8D               	movwf	141,c	;volatile
   321  00085A                     
   322                           ;mainLCDtecl.c: 52: Lcd_Init();
   323  00085A  EC14  F007         	call	_Lcd_Init	;wreg free
   324  00085E                     
   325                           ;mainLCDtecl.c: 53: Lcd_Cmd(12);
   326  00085E  0E0C               	movlw	12
   327  000860  EC7E  F006         	call	_Lcd_Cmd
   328  000864                     
   329                           ;mainLCDtecl.c: 54: _delay((unsigned long)((100)*(8000000/4000.0)));
   330  000864  0E02               	movlw	2
   331  000866  6E0A               	movwf	(??_main+1)^0,c
   332  000868  0E04               	movlw	4
   333  00086A  6E09               	movwf	??_main^0,c
   334  00086C  0EBA               	movlw	186
   335  00086E                     u597:
   336  00086E  2EE8               	decfsz	wreg,f,c
   337  000870  D7FE               	bra	u597
   338  000872  2E09               	decfsz	??_main^0,f,c
   339  000874  D7FC               	bra	u597
   340  000876  2E0A               	decfsz	(??_main+1)^0,f,c
   341  000878  D7FA               	bra	u597
   342  00087A  D000               	nop2	
   343  00087C                     l1194:
   344                           
   345                           ;mainLCDtecl.c: 56: {;mainLCDtecl.c: 57: LATBbits.LB0 = 1; LATBbits.LB1 = 1; LATBbits.LB
      +                          2 = 1;
   346  00087C  808A               	bsf	138,0,c	;volatile
   347  00087E  828A               	bsf	138,1,c	;volatile
   348  000880  848A               	bsf	138,2,c	;volatile
   349  000882                     
   350                           ;mainLCDtecl.c: 58: LATBbits.LB0 = 0;
   351  000882  908A               	bcf	138,0,c	;volatile
   352  000884                     
   353                           ;mainLCDtecl.c: 59: if(!PORTDbits.RD3) {_delay((unsigned long)((20)*(8000000/4000.0))); 
      +                          if (!PORTDbits.RD3) {key = '1'; Lcd_Out2(1, 0, "1");}}
   354  000884  B683               	btfsc	131,3,c	;volatile
   355  000886  EF47  F004         	goto	u351
   356  00088A  EF49  F004         	goto	u350
   357  00088E                     u351:
   358  00088E  EF64  F004         	goto	l97
   359  000892                     u350:
   360  000892  0E34               	movlw	52
   361  000894  6E09               	movwf	??_main^0,c
   362  000896  0EF2               	movlw	242
   363  000898                     u607:
   364  000898  2EE8               	decfsz	wreg,f,c
   365  00089A  D7FE               	bra	u607
   366  00089C  2E09               	decfsz	??_main^0,f,c
   367  00089E  D7FC               	bra	u607
   368  0008A0  B683               	btfsc	131,3,c	;volatile
   369  0008A2  EF55  F004         	goto	u361
   370  0008A6  EF57  F004         	goto	u360
   371  0008AA                     u361:
   372  0008AA  EFC8  F004         	goto	l1236
   373  0008AE                     u360:
   374  0008AE  0E31               	movlw	49
   375  0008B0  6E0C               	movwf	_key^0,c
   376  0008B2  0E00               	movlw	0
   377  0008B4  6E04               	movwf	Lcd_Out2@x^0,c
   378  0008B6  0E05               	movlw	low STR_1
   379  0008B8  6E05               	movwf	Lcd_Out2@buffer^0,c
   380  0008BA  0E08               	movlw	high STR_1
   381  0008BC  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   382  0008BE  0E01               	movlw	1
   383  0008C0  EC9C  F007         	call	_Lcd_Out2
   384  0008C4  EFC8  F004         	goto	l1236
   385  0008C8                     l97:
   386                           
   387                           ;mainLCDtecl.c: 60: else if(!PORTDbits.RD2) {_delay((unsigned long)((20)*(8000000/4000.0
      +                          ))); if (!PORTDbits.RD2){key = '4'; Lcd_Out2(1, 0, "4");}}
   388  0008C8  B483               	btfsc	131,2,c	;volatile
   389  0008CA  EF69  F004         	goto	u371
   390  0008CE  EF6B  F004         	goto	u370
   391  0008D2                     u371:
   392  0008D2  EF86  F004         	goto	l100
   393  0008D6                     u370:
   394  0008D6  0E34               	movlw	52
   395  0008D8  6E09               	movwf	??_main^0,c
   396  0008DA  0EF2               	movlw	242
   397  0008DC                     u617:
   398  0008DC  2EE8               	decfsz	wreg,f,c
   399  0008DE  D7FE               	bra	u617
   400  0008E0  2E09               	decfsz	??_main^0,f,c
   401  0008E2  D7FC               	bra	u617
   402  0008E4  B483               	btfsc	131,2,c	;volatile
   403  0008E6  EF77  F004         	goto	u381
   404  0008EA  EF79  F004         	goto	u380
   405  0008EE                     u381:
   406  0008EE  EFC8  F004         	goto	l1236
   407  0008F2                     u380:
   408  0008F2  0E34               	movlw	52
   409  0008F4  6E0C               	movwf	_key^0,c
   410  0008F6  0E00               	movlw	0
   411  0008F8  6E04               	movwf	Lcd_Out2@x^0,c
   412  0008FA  0E0B               	movlw	low STR_2
   413  0008FC  6E05               	movwf	Lcd_Out2@buffer^0,c
   414  0008FE  0E08               	movlw	high STR_2
   415  000900  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   416  000902  0E01               	movlw	1
   417  000904  EC9C  F007         	call	_Lcd_Out2
   418  000908  EFC8  F004         	goto	l1236
   419  00090C                     l100:
   420                           
   421                           ;mainLCDtecl.c: 61: else if(!PORTDbits.RD1) {_delay((unsigned long)((20)*(8000000/4000.0
      +                          ))); if (!PORTDbits.RD1){key = '7'; Lcd_Out2(1, 0, "7");}}
   422  00090C  B283               	btfsc	131,1,c	;volatile
   423  00090E  EF8B  F004         	goto	u391
   424  000912  EF8D  F004         	goto	u390
   425  000916                     u391:
   426  000916  EFA8  F004         	goto	l103
   427  00091A                     u390:
   428  00091A  0E34               	movlw	52
   429  00091C  6E09               	movwf	??_main^0,c
   430  00091E  0EF2               	movlw	242
   431  000920                     u627:
   432  000920  2EE8               	decfsz	wreg,f,c
   433  000922  D7FE               	bra	u627
   434  000924  2E09               	decfsz	??_main^0,f,c
   435  000926  D7FC               	bra	u627
   436  000928  B283               	btfsc	131,1,c	;volatile
   437  00092A  EF99  F004         	goto	u401
   438  00092E  EF9B  F004         	goto	u400
   439  000932                     u401:
   440  000932  EFC8  F004         	goto	l1236
   441  000936                     u400:
   442  000936  0E37               	movlw	55
   443  000938  6E0C               	movwf	_key^0,c
   444  00093A  0E00               	movlw	0
   445  00093C  6E04               	movwf	Lcd_Out2@x^0,c
   446  00093E  0E11               	movlw	low STR_3
   447  000940  6E05               	movwf	Lcd_Out2@buffer^0,c
   448  000942  0E08               	movlw	high STR_3
   449  000944  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   450  000946  0E01               	movlw	1
   451  000948  EC9C  F007         	call	_Lcd_Out2
   452  00094C  EFC8  F004         	goto	l1236
   453  000950                     l103:
   454                           
   455                           ;mainLCDtecl.c: 62: else if(!PORTDbits.RD0) {_delay((unsigned long)((20)*(8000000/4000.0
      +                          ))); if (!PORTDbits.RD0){key = 'x'; Lcd_Out2(1, 0, "x");}}
   456  000950  B083               	btfsc	131,0,c	;volatile
   457  000952  EFAD  F004         	goto	u411
   458  000956  EFAF  F004         	goto	u410
   459  00095A                     u411:
   460  00095A  EFC8  F004         	goto	l1236
   461  00095E                     u410:
   462  00095E  0E34               	movlw	52
   463  000960  6E09               	movwf	??_main^0,c
   464  000962  0EF2               	movlw	242
   465  000964                     u637:
   466  000964  2EE8               	decfsz	wreg,f,c
   467  000966  D7FE               	bra	u637
   468  000968  2E09               	decfsz	??_main^0,f,c
   469  00096A  D7FC               	bra	u637
   470  00096C  B083               	btfsc	131,0,c	;volatile
   471  00096E  EFBB  F004         	goto	u421
   472  000972  EFBD  F004         	goto	u420
   473  000976                     u421:
   474  000976  EFC8  F004         	goto	l1236
   475  00097A                     u420:
   476  00097A  0E78               	movlw	120
   477  00097C  6E0C               	movwf	_key^0,c
   478  00097E  0E00               	movlw	0
   479  000980  6E04               	movwf	Lcd_Out2@x^0,c
   480  000982  0E17               	movlw	low STR_4
   481  000984  6E05               	movwf	Lcd_Out2@buffer^0,c
   482  000986  0E08               	movlw	high STR_4
   483  000988  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   484  00098A  0E01               	movlw	1
   485  00098C  EC9C  F007         	call	_Lcd_Out2
   486  000990                     l1236:
   487                           
   488                           ;mainLCDtecl.c: 64: LATBbits.LB0 = 1;
   489  000990  808A               	bsf	138,0,c	;volatile
   490  000992                     
   491                           ;mainLCDtecl.c: 65: LATBbits.LB1 = 0;
   492  000992  928A               	bcf	138,1,c	;volatile
   493  000994                     
   494                           ;mainLCDtecl.c: 67: if(!PORTDbits.RD3) {_delay((unsigned long)((20)*(8000000/4000.0))); 
      +                          if (!PORTDbits.RD3){key = '2'; Lcd_Out2(1, 0, "2");}}
   495  000994  B683               	btfsc	131,3,c	;volatile
   496  000996  EFCF  F004         	goto	u431
   497  00099A  EFD1  F004         	goto	u430
   498  00099E                     u431:
   499  00099E  EFEC  F004         	goto	l108
   500  0009A2                     u430:
   501  0009A2  0E34               	movlw	52
   502  0009A4  6E09               	movwf	??_main^0,c
   503  0009A6  0EF2               	movlw	242
   504  0009A8                     u647:
   505  0009A8  2EE8               	decfsz	wreg,f,c
   506  0009AA  D7FE               	bra	u647
   507  0009AC  2E09               	decfsz	??_main^0,f,c
   508  0009AE  D7FC               	bra	u647
   509  0009B0  B683               	btfsc	131,3,c	;volatile
   510  0009B2  EFDD  F004         	goto	u441
   511  0009B6  EFDF  F004         	goto	u440
   512  0009BA                     u441:
   513  0009BA  EF50  F005         	goto	l1274
   514  0009BE                     u440:
   515  0009BE  0E32               	movlw	50
   516  0009C0  6E0C               	movwf	_key^0,c
   517  0009C2  0E00               	movlw	0
   518  0009C4  6E04               	movwf	Lcd_Out2@x^0,c
   519  0009C6  0E07               	movlw	low STR_5
   520  0009C8  6E05               	movwf	Lcd_Out2@buffer^0,c
   521  0009CA  0E08               	movlw	high STR_5
   522  0009CC  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   523  0009CE  0E01               	movlw	1
   524  0009D0  EC9C  F007         	call	_Lcd_Out2
   525  0009D4  EF50  F005         	goto	l1274
   526  0009D8                     l108:
   527                           
   528                           ;mainLCDtecl.c: 68: else if(!PORTDbits.RD2) {_delay((unsigned long)((20)*(8000000/4000.0
      +                          ))); if (!PORTDbits.RD2){key = '5'; Lcd_Out2(1, 0, "5");}}
   529  0009D8  B483               	btfsc	131,2,c	;volatile
   530  0009DA  EFF1  F004         	goto	u451
   531  0009DE  EFF3  F004         	goto	u450
   532  0009E2                     u451:
   533  0009E2  EF0E  F005         	goto	l111
   534  0009E6                     u450:
   535  0009E6  0E34               	movlw	52
   536  0009E8  6E09               	movwf	??_main^0,c
   537  0009EA  0EF2               	movlw	242
   538  0009EC                     u657:
   539  0009EC  2EE8               	decfsz	wreg,f,c
   540  0009EE  D7FE               	bra	u657
   541  0009F0  2E09               	decfsz	??_main^0,f,c
   542  0009F2  D7FC               	bra	u657
   543  0009F4  B483               	btfsc	131,2,c	;volatile
   544  0009F6  EFFF  F004         	goto	u461
   545  0009FA  EF01  F005         	goto	u460
   546  0009FE                     u461:
   547  0009FE  EF50  F005         	goto	l1274
   548  000A02                     u460:
   549  000A02  0E35               	movlw	53
   550  000A04  6E0C               	movwf	_key^0,c
   551  000A06  0E00               	movlw	0
   552  000A08  6E04               	movwf	Lcd_Out2@x^0,c
   553  000A0A  0E0D               	movlw	low STR_6
   554  000A0C  6E05               	movwf	Lcd_Out2@buffer^0,c
   555  000A0E  0E08               	movlw	high STR_6
   556  000A10  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   557  000A12  0E01               	movlw	1
   558  000A14  EC9C  F007         	call	_Lcd_Out2
   559  000A18  EF50  F005         	goto	l1274
   560  000A1C                     l111:
   561                           
   562                           ;mainLCDtecl.c: 69: else if(!PORTDbits.RD1) {_delay((unsigned long)((20)*(8000000/4000.0
      +                          ))); if (!PORTDbits.RD1){key = '8'; Lcd_Out2(1, 0, "8");}}
   563  000A1C  B283               	btfsc	131,1,c	;volatile
   564  000A1E  EF13  F005         	goto	u471
   565  000A22  EF15  F005         	goto	u470
   566  000A26                     u471:
   567  000A26  EF30  F005         	goto	l114
   568  000A2A                     u470:
   569  000A2A  0E34               	movlw	52
   570  000A2C  6E09               	movwf	??_main^0,c
   571  000A2E  0EF2               	movlw	242
   572  000A30                     u667:
   573  000A30  2EE8               	decfsz	wreg,f,c
   574  000A32  D7FE               	bra	u667
   575  000A34  2E09               	decfsz	??_main^0,f,c
   576  000A36  D7FC               	bra	u667
   577  000A38  B283               	btfsc	131,1,c	;volatile
   578  000A3A  EF21  F005         	goto	u481
   579  000A3E  EF23  F005         	goto	u480
   580  000A42                     u481:
   581  000A42  EF50  F005         	goto	l1274
   582  000A46                     u480:
   583  000A46  0E38               	movlw	56
   584  000A48  6E0C               	movwf	_key^0,c
   585  000A4A  0E00               	movlw	0
   586  000A4C  6E04               	movwf	Lcd_Out2@x^0,c
   587  000A4E  0E13               	movlw	low STR_7
   588  000A50  6E05               	movwf	Lcd_Out2@buffer^0,c
   589  000A52  0E08               	movlw	high STR_7
   590  000A54  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   591  000A56  0E01               	movlw	1
   592  000A58  EC9C  F007         	call	_Lcd_Out2
   593  000A5C  EF50  F005         	goto	l1274
   594  000A60                     l114:
   595                           
   596                           ;mainLCDtecl.c: 70: else if(!PORTDbits.RD0) {_delay((unsigned long)((20)*(8000000/4000.0
      +                          ))); if (!PORTDbits.RD0){key = '0'; Lcd_Out2(1, 0, "0");}}
   597  000A60  B083               	btfsc	131,0,c	;volatile
   598  000A62  EF35  F005         	goto	u491
   599  000A66  EF37  F005         	goto	u490
   600  000A6A                     u491:
   601  000A6A  EF50  F005         	goto	l1274
   602  000A6E                     u490:
   603  000A6E  0E34               	movlw	52
   604  000A70  6E09               	movwf	??_main^0,c
   605  000A72  0EF2               	movlw	242
   606  000A74                     u677:
   607  000A74  2EE8               	decfsz	wreg,f,c
   608  000A76  D7FE               	bra	u677
   609  000A78  2E09               	decfsz	??_main^0,f,c
   610  000A7A  D7FC               	bra	u677
   611  000A7C  B083               	btfsc	131,0,c	;volatile
   612  000A7E  EF43  F005         	goto	u501
   613  000A82  EF45  F005         	goto	u500
   614  000A86                     u501:
   615  000A86  EF50  F005         	goto	l1274
   616  000A8A                     u500:
   617  000A8A  0E30               	movlw	48
   618  000A8C  6E0C               	movwf	_key^0,c
   619  000A8E  0E00               	movlw	0
   620  000A90  6E04               	movwf	Lcd_Out2@x^0,c
   621  000A92  0E03               	movlw	low STR_8
   622  000A94  6E05               	movwf	Lcd_Out2@buffer^0,c
   623  000A96  0E08               	movlw	high STR_8
   624  000A98  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   625  000A9A  0E01               	movlw	1
   626  000A9C  EC9C  F007         	call	_Lcd_Out2
   627  000AA0                     l1274:
   628                           
   629                           ;mainLCDtecl.c: 72: LATBbits.LB1 = 1;
   630  000AA0  828A               	bsf	138,1,c	;volatile
   631  000AA2                     
   632                           ;mainLCDtecl.c: 73: LATBbits.LB2 = 0;
   633  000AA2  948A               	bcf	138,2,c	;volatile
   634  000AA4                     
   635                           ;mainLCDtecl.c: 75: if(!PORTDbits.RD3) {_delay((unsigned long)((20)*(8000000/4000.0))); 
      +                          if (!PORTDbits.RD3){key = '3'; Lcd_Out2(1, 0, "3");}}
   636  000AA4  B683               	btfsc	131,3,c	;volatile
   637  000AA6  EF57  F005         	goto	u511
   638  000AAA  EF59  F005         	goto	u510
   639  000AAE                     u511:
   640  000AAE  EF74  F005         	goto	l119
   641  000AB2                     u510:
   642  000AB2  0E34               	movlw	52
   643  000AB4  6E09               	movwf	??_main^0,c
   644  000AB6  0EF2               	movlw	242
   645  000AB8                     u687:
   646  000AB8  2EE8               	decfsz	wreg,f,c
   647  000ABA  D7FE               	bra	u687
   648  000ABC  2E09               	decfsz	??_main^0,f,c
   649  000ABE  D7FC               	bra	u687
   650  000AC0  B683               	btfsc	131,3,c	;volatile
   651  000AC2  EF65  F005         	goto	u521
   652  000AC6  EF67  F005         	goto	u520
   653  000ACA                     u521:
   654  000ACA  EFD8  F005         	goto	l1312
   655  000ACE                     u520:
   656  000ACE  0E33               	movlw	51
   657  000AD0  6E0C               	movwf	_key^0,c
   658  000AD2  0E00               	movlw	0
   659  000AD4  6E04               	movwf	Lcd_Out2@x^0,c
   660  000AD6  0E09               	movlw	low STR_9
   661  000AD8  6E05               	movwf	Lcd_Out2@buffer^0,c
   662  000ADA  0E08               	movlw	high STR_9
   663  000ADC  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   664  000ADE  0E01               	movlw	1
   665  000AE0  EC9C  F007         	call	_Lcd_Out2
   666  000AE4  EFD8  F005         	goto	l1312
   667  000AE8                     l119:
   668                           
   669                           ;mainLCDtecl.c: 76: else if(!PORTDbits.RD2) {_delay((unsigned long)((20)*(8000000/4000.0
      +                          ))); if (!PORTDbits.RD2){key = '6'; Lcd_Out2(1, 0, "6");}}
   670  000AE8  B483               	btfsc	131,2,c	;volatile
   671  000AEA  EF79  F005         	goto	u531
   672  000AEE  EF7B  F005         	goto	u530
   673  000AF2                     u531:
   674  000AF2  EF96  F005         	goto	l122
   675  000AF6                     u530:
   676  000AF6  0E34               	movlw	52
   677  000AF8  6E09               	movwf	??_main^0,c
   678  000AFA  0EF2               	movlw	242
   679  000AFC                     u697:
   680  000AFC  2EE8               	decfsz	wreg,f,c
   681  000AFE  D7FE               	bra	u697
   682  000B00  2E09               	decfsz	??_main^0,f,c
   683  000B02  D7FC               	bra	u697
   684  000B04  B483               	btfsc	131,2,c	;volatile
   685  000B06  EF87  F005         	goto	u541
   686  000B0A  EF89  F005         	goto	u540
   687  000B0E                     u541:
   688  000B0E  EFD8  F005         	goto	l1312
   689  000B12                     u540:
   690  000B12  0E36               	movlw	54
   691  000B14  6E0C               	movwf	_key^0,c
   692  000B16  0E00               	movlw	0
   693  000B18  6E04               	movwf	Lcd_Out2@x^0,c
   694  000B1A  0E0F               	movlw	low STR_10
   695  000B1C  6E05               	movwf	Lcd_Out2@buffer^0,c
   696  000B1E  0E08               	movlw	high STR_10
   697  000B20  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   698  000B22  0E01               	movlw	1
   699  000B24  EC9C  F007         	call	_Lcd_Out2
   700  000B28  EFD8  F005         	goto	l1312
   701  000B2C                     l122:
   702                           
   703                           ;mainLCDtecl.c: 77: else if(!PORTDbits.RD1) {_delay((unsigned long)((20)*(8000000/4000.0
      +                          ))); if (!PORTDbits.RD1){key = '9'; Lcd_Out2(1, 0, "9");}}
   704  000B2C  B283               	btfsc	131,1,c	;volatile
   705  000B2E  EF9B  F005         	goto	u551
   706  000B32  EF9D  F005         	goto	u550
   707  000B36                     u551:
   708  000B36  EFB8  F005         	goto	l125
   709  000B3A                     u550:
   710  000B3A  0E34               	movlw	52
   711  000B3C  6E09               	movwf	??_main^0,c
   712  000B3E  0EF2               	movlw	242
   713  000B40                     u707:
   714  000B40  2EE8               	decfsz	wreg,f,c
   715  000B42  D7FE               	bra	u707
   716  000B44  2E09               	decfsz	??_main^0,f,c
   717  000B46  D7FC               	bra	u707
   718  000B48  B283               	btfsc	131,1,c	;volatile
   719  000B4A  EFA9  F005         	goto	u561
   720  000B4E  EFAB  F005         	goto	u560
   721  000B52                     u561:
   722  000B52  EFD8  F005         	goto	l1312
   723  000B56                     u560:
   724  000B56  0E39               	movlw	57
   725  000B58  6E0C               	movwf	_key^0,c
   726  000B5A  0E00               	movlw	0
   727  000B5C  6E04               	movwf	Lcd_Out2@x^0,c
   728  000B5E  0E15               	movlw	low STR_11
   729  000B60  6E05               	movwf	Lcd_Out2@buffer^0,c
   730  000B62  0E08               	movlw	high STR_11
   731  000B64  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   732  000B66  0E01               	movlw	1
   733  000B68  EC9C  F007         	call	_Lcd_Out2
   734  000B6C  EFD8  F005         	goto	l1312
   735  000B70                     l125:
   736                           
   737                           ;mainLCDtecl.c: 78: else if(!PORTDbits.RD0) {_delay((unsigned long)((20)*(8000000/4000.0
      +                          ))); if (!PORTDbits.RD0){key = '-'; Lcd_Out2(1, 0, "-");}}
   738  000B70  B083               	btfsc	131,0,c	;volatile
   739  000B72  EFBD  F005         	goto	u571
   740  000B76  EFBF  F005         	goto	u570
   741  000B7A                     u571:
   742  000B7A  EFD8  F005         	goto	l1312
   743  000B7E                     u570:
   744  000B7E  0E34               	movlw	52
   745  000B80  6E09               	movwf	??_main^0,c
   746  000B82  0EF2               	movlw	242
   747  000B84                     u717:
   748  000B84  2EE8               	decfsz	wreg,f,c
   749  000B86  D7FE               	bra	u717
   750  000B88  2E09               	decfsz	??_main^0,f,c
   751  000B8A  D7FC               	bra	u717
   752  000B8C  B083               	btfsc	131,0,c	;volatile
   753  000B8E  EFCB  F005         	goto	u581
   754  000B92  EFCD  F005         	goto	u580
   755  000B96                     u581:
   756  000B96  EFD8  F005         	goto	l1312
   757  000B9A                     u580:
   758  000B9A  0E2D               	movlw	45
   759  000B9C  6E0C               	movwf	_key^0,c
   760  000B9E  0E00               	movlw	0
   761  000BA0  6E04               	movwf	Lcd_Out2@x^0,c
   762  000BA2  0E01               	movlw	low STR_12
   763  000BA4  6E05               	movwf	Lcd_Out2@buffer^0,c
   764  000BA6  0E08               	movlw	high STR_12
   765  000BA8  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   766  000BAA  0E01               	movlw	1
   767  000BAC  EC9C  F007         	call	_Lcd_Out2
   768  000BB0                     l1312:
   769                           
   770                           ;mainLCDtecl.c: 80: LATBbits.LB2 = 1;
   771  000BB0  848A               	bsf	138,2,c	;volatile
   772  000BB2                     
   773                           ;mainLCDtecl.c: 81: _delay((unsigned long)((5)*(8000000/4000.0)));
   774  000BB2  0E0D               	movlw	13
   775  000BB4  6E09               	movwf	??_main^0,c
   776  000BB6  0EFC               	movlw	252
   777  000BB8                     u727:
   778  000BB8  2EE8               	decfsz	wreg,f,c
   779  000BBA  D7FE               	bra	u727
   780  000BBC  2E09               	decfsz	??_main^0,f,c
   781  000BBE  D7FC               	bra	u727
   782  000BC0  EF3E  F004         	goto	l1194
   783  000BC4  EF00  F000         	goto	start
   784  000BC8                     __end_of_main:
   785                           	callstack 0
   786                           
   787 ;; *************** function _Lcd_Out2 *****************
   788 ;; Defined at:
   789 ;;		line 116 in file "flexlcd.h"
   790 ;; Parameters:    Size  Location     Type
   791 ;;  y               1    wreg     unsigned char 
   792 ;;  x               1    3[COMRAM] unsigned char 
   793 ;;  buffer          2    4[COMRAM] PTR unsigned char 
   794 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
   795 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
   796 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
   797 ;; Auto vars:     Size  Location     Type
   798 ;;  y               1    6[COMRAM] unsigned char 
   799 ;;  data            1    7[COMRAM] unsigned char 
   800 ;; Return value:  Size  Location     Type
   801 ;;                  1    wreg      void 
   802 ;; Registers used:
   803 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   804 ;; Tracked objects:
   805 ;;		On entry : 0/0
   806 ;;		On exit  : 0/0
   807 ;;		Unchanged: 0/0
   808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   809 ;;      Params:         3       0       0       0       0       0       0       0       0
   810 ;;      Locals:         2       0       0       0       0       0       0       0       0
   811 ;;      Temps:          0       0       0       0       0       0       0       0       0
   812 ;;      Totals:         5       0       0       0       0       0       0       0       0
   813 ;;Total ram usage:        5 bytes
   814 ;; Hardware stack levels used:    1
   815 ;; Hardware stack levels required when called:    1
   816 ;; This function calls:
   817 ;;		_Lcd_Chr_CP
   818 ;;		_Lcd_Cmd
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text1
   825  000F38                     __ptext1:
   826                           	callstack 0
   827  000F38                     _Lcd_Out2:
   828                           	callstack 29
   829                           
   830                           ;incstack = 0
   831                           ;Lcd_Out2@y stored from wreg
   832  000F38  6E07               	movwf	Lcd_Out2@y^0,c
   833  000F3A                     
   834                           ;flexlcd.h: 118: unsigned char data;;flexlcd.h: 119: switch (y)
   835  000F3A  EFB3  F007         	goto	l1172
   836  000F3E                     l1162:
   837  000F3E  5004               	movf	Lcd_Out2@x^0,w,c
   838  000F40  0F80               	addlw	128
   839  000F42  6E08               	movwf	Lcd_Out2@data^0,c
   840  000F44  EFC6  F007         	goto	l1174
   841  000F48                     l1164:
   842  000F48  5004               	movf	Lcd_Out2@x^0,w,c
   843  000F4A  0FC0               	addlw	192
   844  000F4C  6E08               	movwf	Lcd_Out2@data^0,c
   845  000F4E  EFC6  F007         	goto	l1174
   846  000F52                     l1166:
   847  000F52  5004               	movf	Lcd_Out2@x^0,w,c
   848  000F54  0F94               	addlw	148
   849  000F56  6E08               	movwf	Lcd_Out2@data^0,c
   850  000F58  EFC6  F007         	goto	l1174
   851  000F5C                     l1168:
   852  000F5C  5004               	movf	Lcd_Out2@x^0,w,c
   853  000F5E  0FD4               	addlw	212
   854  000F60  6E08               	movwf	Lcd_Out2@data^0,c
   855  000F62  EFC6  F007         	goto	l1174
   856  000F66                     l1172:
   857  000F66  5007               	movf	Lcd_Out2@y^0,w,c
   858                           
   859                           ; Switch size 1, requested type "simple"
   860                           ; Number of cases is 4, Range of values is 1 to 4
   861                           ; switch strategies available:
   862                           ; Name         Instructions Cycles
   863                           ; simple_byte           13     7 (average)
   864                           ;	Chosen strategy is simple_byte
   865  000F68  0A01               	xorlw	1	; case 1
   866  000F6A  B4D8               	btfsc	status,2,c
   867  000F6C  EF9F  F007         	goto	l1162
   868  000F70  0A03               	xorlw	3	; case 2
   869  000F72  B4D8               	btfsc	status,2,c
   870  000F74  EFA4  F007         	goto	l1164
   871  000F78  0A01               	xorlw	1	; case 3
   872  000F7A  B4D8               	btfsc	status,2,c
   873  000F7C  EFA9  F007         	goto	l1166
   874  000F80  0A07               	xorlw	7	; case 4
   875  000F82  B4D8               	btfsc	status,2,c
   876  000F84  EFAE  F007         	goto	l1168
   877  000F88  EFC6  F007         	goto	l1174
   878  000F8C                     l1174:
   879                           
   880                           ;flexlcd.h: 127: Lcd_Cmd(data);
   881  000F8C  5008               	movf	Lcd_Out2@data^0,w,c
   882  000F8E  EC7E  F006         	call	_Lcd_Cmd
   883                           
   884                           ;flexlcd.h: 128: while(*buffer)
   885  000F92  EFD5  F007         	goto	l1180
   886  000F96                     l1176:
   887                           
   888                           ;flexlcd.h: 129: {;flexlcd.h: 130: Lcd_Chr_CP(*buffer);
   889  000F96  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
   890  000F9A  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
   891  000F9E                     	if	0	;tblptru may be non-zero
   892  000F9E                     	endif
   893  000F9E                     	if	0	;tblptru may be non-zero
   894  000F9E                     	endif
   895  000F9E  0008               	tblrd		*
   896  000FA0  50F5               	movf	tablat,w,c
   897  000FA2  ECE4  F005         	call	_Lcd_Chr_CP
   898  000FA6                     
   899                           ;flexlcd.h: 131: buffer++;
   900  000FA6  4A05               	infsnz	Lcd_Out2@buffer^0,f,c
   901  000FA8  2A06               	incf	(Lcd_Out2@buffer+1)^0,f,c
   902  000FAA                     l1180:
   903  000FAA  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
   904  000FAE  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
   905  000FB2                     	if	0	;tblptru may be non-zero
   906  000FB2                     	endif
   907  000FB2                     	if	0	;tblptru may be non-zero
   908  000FB2                     	endif
   909  000FB2  0008               	tblrd		*
   910  000FB4  50F5               	movf	tablat,w,c
   911  000FB6  0900               	iorlw	0
   912  000FB8  A4D8               	btfss	status,2,c
   913  000FBA  EFE1  F007         	goto	u341
   914  000FBE  EFE3  F007         	goto	u340
   915  000FC2                     u341:
   916  000FC2  EFCB  F007         	goto	l1176
   917  000FC6                     u340:
   918  000FC6  0012               	return		;funcret
   919  000FC8                     __end_of_Lcd_Out2:
   920                           	callstack 0
   921                           
   922 ;; *************** function _Lcd_Chr_CP *****************
   923 ;; Defined at:
   924 ;;		line 137 in file "flexlcd.h"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  data            1    wreg     unsigned char 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  data            1    2[COMRAM] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   938 ;;      Params:         0       0       0       0       0       0       0       0       0
   939 ;;      Locals:         1       0       0       0       0       0       0       0       0
   940 ;;      Temps:          2       0       0       0       0       0       0       0       0
   941 ;;      Totals:         3       0       0       0       0       0       0       0       0
   942 ;;Total ram usage:        3 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		_Lcd_Out2
   948 ;;		_Lcd_Out
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text2
   953  000BC8                     __ptext2:
   954                           	callstack 0
   955  000BC8                     _Lcd_Chr_CP:
   956                           	callstack 29
   957                           
   958                           ;incstack = 0
   959                           ;Lcd_Chr_CP@data stored from wreg
   960  000BC8  6E03               	movwf	Lcd_Chr_CP@data^0,c
   961  000BCA                     
   962                           ;flexlcd.h: 138: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
   963  000BCA  9284               	bcf	132,1,c	;volatile
   964  000BCC  8484               	bsf	132,2,c	;volatile
   965  000BCE                     
   966                           ;flexlcd.h: 139: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
   967  000BCE  6A01               	clrf	??_Lcd_Chr_CP^0,c
   968  000BD0  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
   969  000BD2  D001               	bra	u45
   970  000BD4  2A01               	incf	??_Lcd_Chr_CP^0,f,c
   971  000BD6                     u45:
   972  000BD6  0E01               	movlw	1
   973  000BD8  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   974  000BDA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   975  000BDC  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   976  000BDE  5083               	movf	131,w,c	;volatile
   977  000BE0  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   978  000BE2  0B7F               	andlw	-129
   979  000BE4  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   980  000BE6  6E83               	movwf	131,c	;volatile
   981  000BE8  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   982  000BEC  0E06               	movlw	6
   983  000BEE  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
   984  000BF0                     u55:
   985  000BF0  90D8               	bcf	status,0,c
   986  000BF2  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   987  000BF4  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
   988  000BF6  EFF8  F005         	goto	u55
   989  000BFA  0E01               	movlw	1
   990  000BFC  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   991  000BFE  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
   992  000C00  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   993  000C02  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
   994  000C04  5083               	movf	131,w,c	;volatile
   995  000C06  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   996  000C08  0BBF               	andlw	-65
   997  000C0A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   998  000C0C  6E83               	movwf	131,c	;volatile
   999                           
  1000                           ;flexlcd.h: 140: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1001  000C0E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1002  000C12  0E05               	movlw	5
  1003  000C14  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  1004  000C16                     u65:
  1005  000C16  90D8               	bcf	status,0,c
  1006  000C18  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1007  000C1A  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  1008  000C1C  EF0B  F006         	goto	u65
  1009  000C20  0E01               	movlw	1
  1010  000C22  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1011  000C24  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1012  000C26  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1013  000C28  5083               	movf	131,w,c	;volatile
  1014  000C2A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1015  000C2C  0BDF               	andlw	-33
  1016  000C2E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1017  000C30  6E83               	movwf	131,c	;volatile
  1018  000C32  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1019  000C36  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1020  000C38  0E0F               	movlw	15
  1021  000C3A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1022  000C3C  0E01               	movlw	1
  1023  000C3E  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1024  000C40  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1025  000C42  5083               	movf	131,w,c	;volatile
  1026  000C44  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1027  000C46  0BEF               	andlw	-17
  1028  000C48  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1029  000C4A  6E83               	movwf	131,c	;volatile
  1030  000C4C                     
  1031                           ;flexlcd.h: 141: _delay(10);
  1032  000C4C  0E03               	movlw	3
  1033  000C4E                     u737:
  1034  000C4E  2EE8               	decfsz	wreg,f,c
  1035  000C50  D7FE               	bra	u737
  1036  000C52  F000               	nop	
  1037  000C54                     
  1038                           ;flexlcd.h: 142: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1039  000C54  8284               	bsf	132,1,c	;volatile
  1040  000C56  0E03               	movlw	3
  1041  000C58                     u747:
  1042  000C58  2EE8               	decfsz	wreg,f,c
  1043  000C5A  D7FE               	bra	u747
  1044  000C5C  F000               	nop	
  1045  000C5E  9284               	bcf	132,1,c	;volatile
  1046                           
  1047                           ;flexlcd.h: 143: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1048  000C60  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1049  000C64  90D8               	bcf	status,0,c
  1050  000C66  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1051  000C68  90D8               	bcf	status,0,c
  1052  000C6A  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1053  000C6C  90D8               	bcf	status,0,c
  1054  000C6E  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1055  000C70  0E01               	movlw	1
  1056  000C72  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1057  000C74  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1058  000C76  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1059  000C78  5083               	movf	131,w,c	;volatile
  1060  000C7A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1061  000C7C  0B7F               	andlw	-129
  1062  000C7E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1063  000C80  6E83               	movwf	131,c	;volatile
  1064  000C82  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1065  000C86  90D8               	bcf	status,0,c
  1066  000C88  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1067  000C8A  90D8               	bcf	status,0,c
  1068  000C8C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1069  000C8E  0E01               	movlw	1
  1070  000C90  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1071  000C92  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1072  000C94  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1073  000C96  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1074  000C98  5083               	movf	131,w,c	;volatile
  1075  000C9A  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1076  000C9C  0BBF               	andlw	-65
  1077  000C9E  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1078  000CA0  6E83               	movwf	131,c	;volatile
  1079                           
  1080                           ;flexlcd.h: 144: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1081  000CA2  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1082  000CA6  90D8               	bcf	status,0,c
  1083  000CA8  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1084  000CAA  0E01               	movlw	1
  1085  000CAC  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1086  000CAE  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1087  000CB0  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1088  000CB2  5083               	movf	131,w,c	;volatile
  1089  000CB4  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1090  000CB6  0BDF               	andlw	-33
  1091  000CB8  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1092  000CBA  6E83               	movwf	131,c	;volatile
  1093  000CBC  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1094  000CC0  0E01               	movlw	1
  1095  000CC2  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1096  000CC4  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1097  000CC6  5083               	movf	131,w,c	;volatile
  1098  000CC8  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1099  000CCA  0BEF               	andlw	-17
  1100  000CCC  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1101  000CCE  6E83               	movwf	131,c	;volatile
  1102  000CD0                     
  1103                           ;flexlcd.h: 145: _delay(10);
  1104  000CD0  0E03               	movlw	3
  1105  000CD2                     u757:
  1106  000CD2  2EE8               	decfsz	wreg,f,c
  1107  000CD4  D7FE               	bra	u757
  1108  000CD6  F000               	nop	
  1109  000CD8                     
  1110                           ;flexlcd.h: 146: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1111  000CD8  8284               	bsf	132,1,c	;volatile
  1112  000CDA  0E03               	movlw	3
  1113  000CDC                     u767:
  1114  000CDC  2EE8               	decfsz	wreg,f,c
  1115  000CDE  D7FE               	bra	u767
  1116  000CE0  F000               	nop	
  1117  000CE2  9284               	bcf	132,1,c	;volatile
  1118  000CE4                     
  1119                           ;flexlcd.h: 147: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  1120  000CE4  0E03               	movlw	3
  1121  000CE6                     u777:
  1122  000CE6  2EE8               	decfsz	wreg,f,c
  1123  000CE8  D7FE               	bra	u777
  1124  000CEA  F000               	nop	
  1125  000CEC  0E0F               	movlw	15
  1126  000CEE  6E01               	movwf	??_Lcd_Chr_CP^0,c
  1127  000CF0  0E48               	movlw	72
  1128  000CF2                     u787:
  1129  000CF2  2EE8               	decfsz	wreg,f,c
  1130  000CF4  D7FE               	bra	u787
  1131  000CF6  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  1132  000CF8  D7FC               	bra	u787
  1133  000CFA  0012               	return		;funcret
  1134  000CFC                     __end_of_Lcd_Chr_CP:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _Lcd_Init *****************
  1138 ;; Defined at:
  1139 ;;		line 53 in file "flexlcd.h"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  data            1    4[COMRAM] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0, cstack
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         0       0       0       0       0       0       0       0       0
  1154 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1155 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1157 ;;Total ram usage:        2 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    1
  1160 ;; This function calls:
  1161 ;;		_Lcd_Cmd
  1162 ;; This function is called by:
  1163 ;;		_main
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text3
  1168  000E28                     __ptext3:
  1169                           	callstack 0
  1170  000E28                     _Lcd_Init:
  1171                           	callstack 29
  1172  000E28                     
  1173                           ;flexlcd.h: 54: unsigned char data;;flexlcd.h: 55: TRISDbits.TRISD7 = 0;
  1174  000E28  9E95               	bcf	149,7,c	;volatile
  1175                           
  1176                           ;flexlcd.h: 56: TRISDbits.TRISD6 = 0;
  1177  000E2A  9C95               	bcf	149,6,c	;volatile
  1178                           
  1179                           ;flexlcd.h: 57: TRISDbits.TRISD5 = 0;
  1180  000E2C  9A95               	bcf	149,5,c	;volatile
  1181                           
  1182                           ;flexlcd.h: 58: TRISDbits.TRISD4 = 0;
  1183  000E2E  9895               	bcf	149,4,c	;volatile
  1184                           
  1185                           ;flexlcd.h: 59: TRISEbits.TRISE2 = 0;
  1186  000E30  9496               	bcf	150,2,c	;volatile
  1187                           
  1188                           ;flexlcd.h: 60: TRISEbits.TRISE1 = 0;
  1189  000E32  9296               	bcf	150,1,c	;volatile
  1190                           
  1191                           ;flexlcd.h: 61: PORTDbits.RD7 = 0;
  1192  000E34  9E83               	bcf	131,7,c	;volatile
  1193                           
  1194                           ;flexlcd.h: 62: PORTDbits.RD6 = 0;
  1195  000E36  9C83               	bcf	131,6,c	;volatile
  1196                           
  1197                           ;flexlcd.h: 63: PORTDbits.RD5 = 0;
  1198  000E38  9A83               	bcf	131,5,c	;volatile
  1199                           
  1200                           ;flexlcd.h: 64: PORTDbits.RD4 = 0;
  1201  000E3A  9883               	bcf	131,4,c	;volatile
  1202                           
  1203                           ;flexlcd.h: 65: PORTEbits.RE1 = 0;
  1204  000E3C  9284               	bcf	132,1,c	;volatile
  1205                           
  1206                           ;flexlcd.h: 66: PORTEbits.RE2 = 0;
  1207  000E3E  9484               	bcf	132,2,c	;volatile
  1208  000E40                     
  1209                           ;flexlcd.h: 67: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1210  000E40  0E0F               	movlw	15
  1211  000E42  6E04               	movwf	??_Lcd_Init^0,c
  1212  000E44  0E48               	movlw	72
  1213  000E46                     u797:
  1214  000E46  2EE8               	decfsz	wreg,f,c
  1215  000E48  D7FE               	bra	u797
  1216  000E4A  2E04               	decfsz	??_Lcd_Init^0,f,c
  1217  000E4C  D7FC               	bra	u797
  1218                           
  1219                           ;flexlcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1220  000E4E  0E0F               	movlw	15
  1221  000E50  6E04               	movwf	??_Lcd_Init^0,c
  1222  000E52  0E48               	movlw	72
  1223  000E54                     u807:
  1224  000E54  2EE8               	decfsz	wreg,f,c
  1225  000E56  D7FE               	bra	u807
  1226  000E58  2E04               	decfsz	??_Lcd_Init^0,f,c
  1227  000E5A  D7FC               	bra	u807
  1228                           
  1229                           ;flexlcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1230  000E5C  0E0F               	movlw	15
  1231  000E5E  6E04               	movwf	??_Lcd_Init^0,c
  1232  000E60  0E48               	movlw	72
  1233  000E62                     u817:
  1234  000E62  2EE8               	decfsz	wreg,f,c
  1235  000E64  D7FE               	bra	u817
  1236  000E66  2E04               	decfsz	??_Lcd_Init^0,f,c
  1237  000E68  D7FC               	bra	u817
  1238                           
  1239                           ;flexlcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1240  000E6A  0E0F               	movlw	15
  1241  000E6C  6E04               	movwf	??_Lcd_Init^0,c
  1242  000E6E  0E48               	movlw	72
  1243  000E70                     u827:
  1244  000E70  2EE8               	decfsz	wreg,f,c
  1245  000E72  D7FE               	bra	u827
  1246  000E74  2E04               	decfsz	??_Lcd_Init^0,f,c
  1247  000E76  D7FC               	bra	u827
  1248                           
  1249                           ;flexlcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1250  000E78  0E0F               	movlw	15
  1251  000E7A  6E04               	movwf	??_Lcd_Init^0,c
  1252  000E7C  0E48               	movlw	72
  1253  000E7E                     u837:
  1254  000E7E  2EE8               	decfsz	wreg,f,c
  1255  000E80  D7FE               	bra	u837
  1256  000E82  2E04               	decfsz	??_Lcd_Init^0,f,c
  1257  000E84  D7FC               	bra	u837
  1258                           
  1259                           ;flexlcd.h: 72: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1260  000E86  0E0F               	movlw	15
  1261  000E88  6E04               	movwf	??_Lcd_Init^0,c
  1262  000E8A  0E48               	movlw	72
  1263  000E8C                     u847:
  1264  000E8C  2EE8               	decfsz	wreg,f,c
  1265  000E8E  D7FE               	bra	u847
  1266  000E90  2E04               	decfsz	??_Lcd_Init^0,f,c
  1267  000E92  D7FC               	bra	u847
  1268  000E94                     
  1269                           ;flexlcd.h: 73: for(data = 1; data < 4; data ++)
  1270  000E94  0E01               	movlw	1
  1271  000E96  6E05               	movwf	Lcd_Init@data^0,c
  1272  000E98                     l53:
  1273                           
  1274                           ;flexlcd.h: 74: {;flexlcd.h: 75: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  1275  000E98  9E83               	bcf	131,7,c	;volatile
  1276  000E9A  9C83               	bcf	131,6,c	;volatile
  1277  000E9C  8A83               	bsf	131,5,c	;volatile
  1278  000E9E  8883               	bsf	131,4,c	;volatile
  1279  000EA0  9284               	bcf	132,1,c	;volatile
  1280                           
  1281                           ;flexlcd.h: 76: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
  1282  000EA2  9484               	bcf	132,2,c	;volatile
  1283  000EA4  9E83               	bcf	131,7,c	;volatile
  1284  000EA6  9C83               	bcf	131,6,c	;volatile
  1285  000EA8  8A83               	bsf	131,5,c	;volatile
  1286  000EAA  8883               	bsf	131,4,c	;volatile
  1287                           
  1288                           ;flexlcd.h: 77: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  1289  000EAC  8284               	bsf	132,1,c	;volatile
  1290  000EAE  9484               	bcf	132,2,c	;volatile
  1291  000EB0                     
  1292                           ;flexlcd.h: 78: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1293  000EB0  0E03               	movlw	3
  1294  000EB2                     u857:
  1295  000EB2  2EE8               	decfsz	wreg,f,c
  1296  000EB4  D7FE               	bra	u857
  1297  000EB6  F000               	nop	
  1298  000EB8                     
  1299                           ;flexlcd.h: 79: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           1; PORTEbits.RE1 = 0;
  1300  000EB8  9E83               	bcf	131,7,c	;volatile
  1301  000EBA  9C83               	bcf	131,6,c	;volatile
  1302  000EBC  8A83               	bsf	131,5,c	;volatile
  1303  000EBE  8883               	bsf	131,4,c	;volatile
  1304  000EC0  9284               	bcf	132,1,c	;volatile
  1305  000EC2                     
  1306                           ;flexlcd.h: 80: PORTEbits.RE2 = 0;
  1307  000EC2  9484               	bcf	132,2,c	;volatile
  1308                           
  1309                           ;flexlcd.h: 81: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1310  000EC4  0E0F               	movlw	15
  1311  000EC6  6E04               	movwf	??_Lcd_Init^0,c
  1312  000EC8  0E48               	movlw	72
  1313  000ECA                     u867:
  1314  000ECA  2EE8               	decfsz	wreg,f,c
  1315  000ECC  D7FE               	bra	u867
  1316  000ECE  2E04               	decfsz	??_Lcd_Init^0,f,c
  1317  000ED0  D7FC               	bra	u867
  1318  000ED2  2A05               	incf	Lcd_Init@data^0,f,c
  1319  000ED4  0E03               	movlw	3
  1320  000ED6  6405               	cpfsgt	Lcd_Init@data^0,c
  1321  000ED8  EF70  F007         	goto	u71
  1322  000EDC  EF72  F007         	goto	u70
  1323  000EE0                     u71:
  1324  000EE0  EF4C  F007         	goto	l53
  1325  000EE4                     u70:
  1326  000EE4                     
  1327                           ;flexlcd.h: 82: };flexlcd.h: 83: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1328  000EE4  9E83               	bcf	131,7,c	;volatile
  1329  000EE6  9C83               	bcf	131,6,c	;volatile
  1330  000EE8  8A83               	bsf	131,5,c	;volatile
  1331  000EEA  9883               	bcf	131,4,c	;volatile
  1332  000EEC  9284               	bcf	132,1,c	;volatile
  1333  000EEE  9484               	bcf	132,2,c	;volatile
  1334                           
  1335                           ;flexlcd.h: 84: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  1336  000EF0  9E83               	bcf	131,7,c	;volatile
  1337  000EF2  9C83               	bcf	131,6,c	;volatile
  1338  000EF4  8A83               	bsf	131,5,c	;volatile
  1339  000EF6  9883               	bcf	131,4,c	;volatile
  1340  000EF8  8284               	bsf	132,1,c	;volatile
  1341  000EFA  9484               	bcf	132,2,c	;volatile
  1342  000EFC                     
  1343                           ;flexlcd.h: 85: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1344  000EFC  0E03               	movlw	3
  1345  000EFE                     u877:
  1346  000EFE  2EE8               	decfsz	wreg,f,c
  1347  000F00  D7FE               	bra	u877
  1348  000F02  F000               	nop	
  1349  000F04                     
  1350                           ;flexlcd.h: 86: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1351  000F04  9E83               	bcf	131,7,c	;volatile
  1352  000F06  9C83               	bcf	131,6,c	;volatile
  1353  000F08  8A83               	bsf	131,5,c	;volatile
  1354  000F0A  9883               	bcf	131,4,c	;volatile
  1355  000F0C  9284               	bcf	132,1,c	;volatile
  1356  000F0E  9484               	bcf	132,2,c	;volatile
  1357                           
  1358                           ;flexlcd.h: 87: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1359  000F10  0E0F               	movlw	15
  1360  000F12  6E04               	movwf	??_Lcd_Init^0,c
  1361  000F14  0E48               	movlw	72
  1362  000F16                     u887:
  1363  000F16  2EE8               	decfsz	wreg,f,c
  1364  000F18  D7FE               	bra	u887
  1365  000F1A  2E04               	decfsz	??_Lcd_Init^0,f,c
  1366  000F1C  D7FC               	bra	u887
  1367  000F1E  0E28               	movlw	40
  1368  000F20  EC7E  F006         	call	_Lcd_Cmd
  1369  000F24  0E10               	movlw	16
  1370  000F26  EC7E  F006         	call	_Lcd_Cmd
  1371  000F2A  0E01               	movlw	1
  1372  000F2C  EC7E  F006         	call	_Lcd_Cmd
  1373  000F30  0E0F               	movlw	15
  1374  000F32  EC7E  F006         	call	_Lcd_Cmd
  1375  000F36  0012               	return		;funcret
  1376  000F38                     __end_of_Lcd_Init:
  1377                           	callstack 0
  1378                           
  1379 ;; *************** function _Lcd_Cmd *****************
  1380 ;; Defined at:
  1381 ;;		line 151 in file "flexlcd.h"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  data            1    wreg     unsigned char 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  data            1    2[COMRAM] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, status,2, status,0
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1395 ;;      Params:         0       0       0       0       0       0       0       0       0
  1396 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1397 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1398 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1399 ;;Total ram usage:        3 bytes
  1400 ;; Hardware stack levels used:    1
  1401 ;; This function calls:
  1402 ;;		Nothing
  1403 ;; This function is called by:
  1404 ;;		_Lcd_Init
  1405 ;;		_Lcd_Out2
  1406 ;;		_main
  1407 ;;		_Lcd_Out
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text4
  1412  000CFC                     __ptext4:
  1413                           	callstack 0
  1414  000CFC                     _Lcd_Cmd:
  1415                           	callstack 29
  1416                           
  1417                           ;incstack = 0
  1418                           ;Lcd_Cmd@data stored from wreg
  1419  000CFC  6E03               	movwf	Lcd_Cmd@data^0,c
  1420  000CFE                     
  1421                           ;flexlcd.h: 152: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1422  000CFE  9284               	bcf	132,1,c	;volatile
  1423  000D00  9484               	bcf	132,2,c	;volatile
  1424  000D02                     
  1425                           ;flexlcd.h: 153: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1426  000D02  6A01               	clrf	??_Lcd_Cmd^0,c
  1427  000D04  AE03               	btfss	Lcd_Cmd@data^0,7,c
  1428  000D06  D001               	bra	u15
  1429  000D08  2A01               	incf	??_Lcd_Cmd^0,f,c
  1430  000D0A                     u15:
  1431  000D0A  0E01               	movlw	1
  1432  000D0C  1601               	andwf	??_Lcd_Cmd^0,f,c
  1433  000D0E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1434  000D10  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1435  000D12  5083               	movf	131,w,c	;volatile
  1436  000D14  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1437  000D16  0B7F               	andlw	-129
  1438  000D18  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1439  000D1A  6E83               	movwf	131,c	;volatile
  1440  000D1C  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1441  000D20  0E06               	movlw	6
  1442  000D22  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1443  000D24                     u25:
  1444  000D24  90D8               	bcf	status,0,c
  1445  000D26  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1446  000D28  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1447  000D2A  EF92  F006         	goto	u25
  1448  000D2E  0E01               	movlw	1
  1449  000D30  1601               	andwf	??_Lcd_Cmd^0,f,c
  1450  000D32  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1451  000D34  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1452  000D36  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1453  000D38  5083               	movf	131,w,c	;volatile
  1454  000D3A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1455  000D3C  0BBF               	andlw	-65
  1456  000D3E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1457  000D40  6E83               	movwf	131,c	;volatile
  1458                           
  1459                           ;flexlcd.h: 154: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1460  000D42  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1461  000D46  0E05               	movlw	5
  1462  000D48  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1463  000D4A                     u35:
  1464  000D4A  90D8               	bcf	status,0,c
  1465  000D4C  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1466  000D4E  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1467  000D50  EFA5  F006         	goto	u35
  1468  000D54  0E01               	movlw	1
  1469  000D56  1601               	andwf	??_Lcd_Cmd^0,f,c
  1470  000D58  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1471  000D5A  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1472  000D5C  5083               	movf	131,w,c	;volatile
  1473  000D5E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1474  000D60  0BDF               	andlw	-33
  1475  000D62  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1476  000D64  6E83               	movwf	131,c	;volatile
  1477  000D66  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1478  000D6A  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1479  000D6C  0E0F               	movlw	15
  1480  000D6E  1601               	andwf	??_Lcd_Cmd^0,f,c
  1481  000D70  0E01               	movlw	1
  1482  000D72  1601               	andwf	??_Lcd_Cmd^0,f,c
  1483  000D74  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1484  000D76  5083               	movf	131,w,c	;volatile
  1485  000D78  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1486  000D7A  0BEF               	andlw	-17
  1487  000D7C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1488  000D7E  6E83               	movwf	131,c	;volatile
  1489  000D80                     
  1490                           ;flexlcd.h: 155: _delay(10);
  1491  000D80  0E03               	movlw	3
  1492  000D82                     u897:
  1493  000D82  2EE8               	decfsz	wreg,f,c
  1494  000D84  D7FE               	bra	u897
  1495  000D86  F000               	nop	
  1496  000D88                     
  1497                           ;flexlcd.h: 156: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1498  000D88  8284               	bsf	132,1,c	;volatile
  1499  000D8A  0E03               	movlw	3
  1500  000D8C                     u907:
  1501  000D8C  2EE8               	decfsz	wreg,f,c
  1502  000D8E  D7FE               	bra	u907
  1503  000D90  F000               	nop	
  1504  000D92  9284               	bcf	132,1,c	;volatile
  1505                           
  1506                           ;flexlcd.h: 157: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1507  000D94  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1508  000D98  90D8               	bcf	status,0,c
  1509  000D9A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1510  000D9C  90D8               	bcf	status,0,c
  1511  000D9E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1512  000DA0  90D8               	bcf	status,0,c
  1513  000DA2  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1514  000DA4  0E01               	movlw	1
  1515  000DA6  1601               	andwf	??_Lcd_Cmd^0,f,c
  1516  000DA8  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1517  000DAA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1518  000DAC  5083               	movf	131,w,c	;volatile
  1519  000DAE  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1520  000DB0  0B7F               	andlw	-129
  1521  000DB2  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1522  000DB4  6E83               	movwf	131,c	;volatile
  1523  000DB6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1524  000DBA  90D8               	bcf	status,0,c
  1525  000DBC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1526  000DBE  90D8               	bcf	status,0,c
  1527  000DC0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1528  000DC2  0E01               	movlw	1
  1529  000DC4  1601               	andwf	??_Lcd_Cmd^0,f,c
  1530  000DC6  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1531  000DC8  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1532  000DCA  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1533  000DCC  5083               	movf	131,w,c	;volatile
  1534  000DCE  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1535  000DD0  0BBF               	andlw	-65
  1536  000DD2  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1537  000DD4  6E83               	movwf	131,c	;volatile
  1538                           
  1539                           ;flexlcd.h: 158: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1540  000DD6  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1541  000DDA  90D8               	bcf	status,0,c
  1542  000DDC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1543  000DDE  0E01               	movlw	1
  1544  000DE0  1601               	andwf	??_Lcd_Cmd^0,f,c
  1545  000DE2  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1546  000DE4  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1547  000DE6  5083               	movf	131,w,c	;volatile
  1548  000DE8  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1549  000DEA  0BDF               	andlw	-33
  1550  000DEC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1551  000DEE  6E83               	movwf	131,c	;volatile
  1552  000DF0  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1553  000DF4  0E01               	movlw	1
  1554  000DF6  1601               	andwf	??_Lcd_Cmd^0,f,c
  1555  000DF8  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1556  000DFA  5083               	movf	131,w,c	;volatile
  1557  000DFC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1558  000DFE  0BEF               	andlw	-17
  1559  000E00  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1560  000E02  6E83               	movwf	131,c	;volatile
  1561  000E04                     
  1562                           ;flexlcd.h: 159: _delay(10);
  1563  000E04  0E03               	movlw	3
  1564  000E06                     u917:
  1565  000E06  2EE8               	decfsz	wreg,f,c
  1566  000E08  D7FE               	bra	u917
  1567  000E0A  F000               	nop	
  1568  000E0C                     
  1569                           ;flexlcd.h: 160: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1570  000E0C  8284               	bsf	132,1,c	;volatile
  1571  000E0E  0E03               	movlw	3
  1572  000E10                     u927:
  1573  000E10  2EE8               	decfsz	wreg,f,c
  1574  000E12  D7FE               	bra	u927
  1575  000E14  F000               	nop	
  1576  000E16  9284               	bcf	132,1,c	;volatile
  1577  000E18                     
  1578                           ;flexlcd.h: 161: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1579  000E18  0E0F               	movlw	15
  1580  000E1A  6E01               	movwf	??_Lcd_Cmd^0,c
  1581  000E1C  0E48               	movlw	72
  1582  000E1E                     u937:
  1583  000E1E  2EE8               	decfsz	wreg,f,c
  1584  000E20  D7FE               	bra	u937
  1585  000E22  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  1586  000E24  D7FC               	bra	u937
  1587  000E26  0012               	return		;funcret
  1588  000E28                     __end_of_Lcd_Cmd:
  1589                           	callstack 0
  1590                           
  1591                           	psect	rparam
  1592  0000                     
  1593                           	psect	idloc
  1594                           
  1595                           ;Config register IDLOC0 @ 0x200000
  1596                           ;	unspecified, using default values
  1597  200000                     	org	2097152
  1598  200000  FF                 	db	255
  1599                           
  1600                           ;Config register IDLOC1 @ 0x200001
  1601                           ;	unspecified, using default values
  1602  200001                     	org	2097153
  1603  200001  FF                 	db	255
  1604                           
  1605                           ;Config register IDLOC2 @ 0x200002
  1606                           ;	unspecified, using default values
  1607  200002                     	org	2097154
  1608  200002  FF                 	db	255
  1609                           
  1610                           ;Config register IDLOC3 @ 0x200003
  1611                           ;	unspecified, using default values
  1612  200003                     	org	2097155
  1613  200003  FF                 	db	255
  1614                           
  1615                           ;Config register IDLOC4 @ 0x200004
  1616                           ;	unspecified, using default values
  1617  200004                     	org	2097156
  1618  200004  FF                 	db	255
  1619                           
  1620                           ;Config register IDLOC5 @ 0x200005
  1621                           ;	unspecified, using default values
  1622  200005                     	org	2097157
  1623  200005  FF                 	db	255
  1624                           
  1625                           ;Config register IDLOC6 @ 0x200006
  1626                           ;	unspecified, using default values
  1627  200006                     	org	2097158
  1628  200006  FF                 	db	255
  1629                           
  1630                           ;Config register IDLOC7 @ 0x200007
  1631                           ;	unspecified, using default values
  1632  200007                     	org	2097159
  1633  200007  FF                 	db	255
  1634                           
  1635                           	psect	config
  1636                           
  1637                           ;Config register CONFIG1L @ 0x300000
  1638                           ;	PLL Prescaler Selection bits
  1639                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1640                           ;	System Clock Postscaler Selection bits
  1641                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1642                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1643                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1644  300000                     	org	3145728
  1645  300000  00                 	db	0
  1646                           
  1647                           ;Config register CONFIG1H @ 0x300001
  1648                           ;	Oscillator Selection bits
  1649                           ;	FOSC = HS, HS oscillator (HS)
  1650                           ;	Fail-Safe Clock Monitor Enable bit
  1651                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1652                           ;	Internal/External Oscillator Switchover bit
  1653                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1654  300001                     	org	3145729
  1655  300001  0C                 	db	12
  1656                           
  1657                           ;Config register CONFIG2L @ 0x300002
  1658                           ;	Power-up Timer Enable bit
  1659                           ;	PWRT = OFF, PWRT disabled
  1660                           ;	Brown-out Reset Enable bits
  1661                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1662                           ;	Brown-out Reset Voltage bits
  1663                           ;	BORV = 3, Minimum setting 2.05V
  1664                           ;	USB Voltage Regulator Enable bit
  1665                           ;	VREGEN = OFF, USB voltage regulator disabled
  1666  300002                     	org	3145730
  1667  300002  1F                 	db	31
  1668                           
  1669                           ;Config register CONFIG2H @ 0x300003
  1670                           ;	Watchdog Timer Enable bit
  1671                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1672                           ;	Watchdog Timer Postscale Select bits
  1673                           ;	WDTPS = 32768, 1:32768
  1674  300003                     	org	3145731
  1675  300003  1E                 	db	30
  1676                           
  1677                           ; Padding undefined space
  1678  300004                     	org	3145732
  1679  300004  FF                 	db	255
  1680                           
  1681                           ;Config register CONFIG3H @ 0x300005
  1682                           ;	CCP2 MUX bit
  1683                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1684                           ;	PORTB A/D Enable bit
  1685                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1686                           ;	Low-Power Timer 1 Oscillator Enable bit
  1687                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1688                           ;	MCLR Pin Enable bit
  1689                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1690  300005                     	org	3145733
  1691  300005  81                 	db	129
  1692                           
  1693                           ;Config register CONFIG4L @ 0x300006
  1694                           ;	Stack Full/Underflow Reset Enable bit
  1695                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1696                           ;	Single-Supply ICSP Enable bit
  1697                           ;	LVP = ON, Single-Supply ICSP enabled
  1698                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1699                           ;	ICPRT = OFF, ICPORT disabled
  1700                           ;	Extended Instruction Set Enable bit
  1701                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1702                           ;	Background Debugger Enable bit
  1703                           ;	DEBUG = 0x1, unprogrammed default
  1704  300006                     	org	3145734
  1705  300006  85                 	db	133
  1706                           
  1707                           ; Padding undefined space
  1708  300007                     	org	3145735
  1709  300007  FF                 	db	255
  1710                           
  1711                           ;Config register CONFIG5L @ 0x300008
  1712                           ;	Code Protection bit
  1713                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1714                           ;	Code Protection bit
  1715                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1716                           ;	Code Protection bit
  1717                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1718                           ;	Code Protection bit
  1719                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1720  300008                     	org	3145736
  1721  300008  0F                 	db	15
  1722                           
  1723                           ;Config register CONFIG5H @ 0x300009
  1724                           ;	Boot Block Code Protection bit
  1725                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1726                           ;	Data EEPROM Code Protection bit
  1727                           ;	CPD = OFF, Data EEPROM is not code-protected
  1728  300009                     	org	3145737
  1729  300009  C0                 	db	192
  1730                           
  1731                           ;Config register CONFIG6L @ 0x30000A
  1732                           ;	Write Protection bit
  1733                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1734                           ;	Write Protection bit
  1735                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1736                           ;	Write Protection bit
  1737                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1738                           ;	Write Protection bit
  1739                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1740  30000A                     	org	3145738
  1741  30000A  0F                 	db	15
  1742                           
  1743                           ;Config register CONFIG6H @ 0x30000B
  1744                           ;	Configuration Register Write Protection bit
  1745                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1746                           ;	Boot Block Write Protection bit
  1747                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1748                           ;	Data EEPROM Write Protection bit
  1749                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1750  30000B                     	org	3145739
  1751  30000B  E0                 	db	224
  1752                           
  1753                           ;Config register CONFIG7L @ 0x30000C
  1754                           ;	Table Read Protection bit
  1755                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1756                           ;	Table Read Protection bit
  1757                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1758                           ;	Table Read Protection bit
  1759                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1760                           ;	Table Read Protection bit
  1761                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1762  30000C                     	org	3145740
  1763  30000C  0F                 	db	15
  1764                           
  1765                           ;Config register CONFIG7H @ 0x30000D
  1766                           ;	Boot Block Table Read Protection bit
  1767                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1768  30000D                     	org	3145741
  1769  30000D  40                 	db	64
  1770                           tosu	equ	0xFFF
  1771                           tosh	equ	0xFFE
  1772                           tosl	equ	0xFFD
  1773                           stkptr	equ	0xFFC
  1774                           pclatu	equ	0xFFB
  1775                           pclath	equ	0xFFA
  1776                           pcl	equ	0xFF9
  1777                           tblptru	equ	0xFF8
  1778                           tblptrh	equ	0xFF7
  1779                           tblptrl	equ	0xFF6
  1780                           tablat	equ	0xFF5
  1781                           prodh	equ	0xFF4
  1782                           prodl	equ	0xFF3
  1783                           indf0	equ	0xFEF
  1784                           postinc0	equ	0xFEE
  1785                           postdec0	equ	0xFED
  1786                           preinc0	equ	0xFEC
  1787                           plusw0	equ	0xFEB
  1788                           fsr0h	equ	0xFEA
  1789                           fsr0l	equ	0xFE9
  1790                           wreg	equ	0xFE8
  1791                           indf1	equ	0xFE7
  1792                           postinc1	equ	0xFE6
  1793                           postdec1	equ	0xFE5
  1794                           preinc1	equ	0xFE4
  1795                           plusw1	equ	0xFE3
  1796                           fsr1h	equ	0xFE2
  1797                           fsr1l	equ	0xFE1
  1798                           bsr	equ	0xFE0
  1799                           indf2	equ	0xFDF
  1800                           postinc2	equ	0xFDE
  1801                           postdec2	equ	0xFDD
  1802                           preinc2	equ	0xFDC
  1803                           plusw2	equ	0xFDB
  1804                           fsr2h	equ	0xFDA
  1805                           fsr2l	equ	0xFD9
  1806                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      12
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Out2
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2575
                                              8 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     2      3    2245
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A       C       1       12.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      20        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Nov 18 13:31:54 2020

                     l53 0E98                       l54 0EE4                       l55 0F36  
                     l81 0FC6                       l84 0CFA                       l87 0E26  
                     l97 08C8                       u15 0D0A                       u25 0D24  
                     u35 0D4A                       u45 0BD6                       u70 0EE4  
                     u71 0EE0                       u55 0BF0                       u65 0C16  
                    l100 090C                      l111 0A1C                      l103 0950  
                    l122 0B2C                      l114 0A60                      l108 09D8  
                    l125 0B70                      l119 0AE8                      l900 0E18  
                    l910 0C56                      l902 0BCA                      l920 0CE2  
                    l912 0C5E                      l904 0BCE                      l930 0E94  
                    l922 0CE4                      l914 0CD0                      l906 0C4C  
                    l940 0EBA                      l924 0CEC                      l916 0CD8  
                    l908 0C54                      l950 0ED2                      l942 0EBC  
                    l926 0E28                      l918 0CDA                      l880 0CFE  
                    l960 0F0A                      l952 0EFC                      l944 0EBE  
                    l936 0EB0                      l928 0E40                      l890 0D92  
                    l882 0D02                      l970 0F24                      l962 0F0C  
                    l954 0F04                      l946 0EC0                      l938 0EB8  
                    l892 0E04                      l884 0D80                      l980 0F30  
                    l972 0F24                      l964 0F0E                      l956 0F06  
                    l948 0EC2                      l894 0E0C                      l886 0D88  
                    l974 0F2A                      l966 0F1E                      l958 0F08  
                    l896 0E0E                      l888 0D8A                      l976 0F2A  
                    l968 0F1E                      l898 0E16                      l978 0F30  
                    u400 0936                      u401 0932                      u410 095E  
                    u411 095A                      u340 0FC6                      u500 0A8A  
                    u420 097A                      u341 0FC2                      u501 0A86  
                    u421 0976                      u510 0AB2                      u430 09A2  
                    u350 0892                      u511 0AAE                      u431 099E  
                    u351 088E                      u520 0ACE                      u440 09BE  
                    u360 08AE                      u521 0ACA                      u441 09BA  
                    u361 08AA                      u530 0AF6                      u450 09E6  
                    u370 08D6                      u531 0AF2                      u451 09E2  
                    u371 08D2                      u540 0B12                      u460 0A02  
                    u380 08F2                      u541 0B0E                      u461 09FE  
                    u381 08EE                      u550 0B3A                      u470 0A2A  
                    u390 091A                      u551 0B36                      u471 0A26  
                    u391 0916                      u607 0898                      u560 0B56  
                    u480 0A46                      u561 0B52                      u481 0A42  
                    u617 08DC                      u570 0B7E                      u490 0A6E  
                    u571 0B7A                      u707 0B40                      u491 0A6A  
                    u627 0920                      u580 0B9A                      u581 0B96  
                    u717 0B84                      u637 0964                      u807 0E54  
                    u727 0BB8                      u647 09A8                      u817 0E62  
                    u737 0C4E                      u657 09EC                      u907 0D8C  
                    u827 0E70                      u747 0C58                      u667 0A30  
                    u917 0E06                      u837 0E7E                      u757 0CD2  
                    u677 0A74                      u597 086E                      u927 0E10  
                    u847 0E8C                      u767 0CDC                      u687 0AB8  
                    u937 0E1E                      u857 0EB2                      u777 0CE6  
                    u697 0AFC                      u867 0ECA                      u787 0CF2  
                    u877 0EFE                      u797 0E46                      u887 0F16  
                    u897 0D82                      _key 000C                      wreg 000FE8  
                   l1200 0882                     l1210 08B2                     l1202 0884  
                   l1300 0B56                     l1220 091A                     l1212 08D6  
                   l1204 0892                     l1310 0B9E                     l1302 0B5A  
                   l1230 096C                     l1222 0928                     l1214 08E4  
                   l1206 08A0                     l1160 0F3A                     l1304 0B7E  
                   l1312 0BB0                     l1240 0994                     l1232 097A  
                   l1224 0936                     l1216 08F2                     l1208 08AE  
                   l1162 0F3E                     l1314 0BB2                     l1306 0B8C  
                   l1250 09E6                     l1242 09A2                     l1234 097E  
                   l1226 093A                     l1218 08F6                     l1180 0FAA  
                   l1164 0F48                     l1172 0F66                     l1308 0B9A  
                   l1260 0A38                     l1252 09F4                     l1244 09B0  
                   l1228 095E                     l1236 0990                     l1166 0F52  
                   l1174 0F8C                     l1270 0A8A                     l1262 0A46  
                   l1254 0A02                     l1246 09BE                     l1238 0992  
                   l1190 085E                     l1182 081A                     l1176 0F96  
                   l1168 0F5C                     l1280 0AB2                     l1272 0A8E  
                   l1264 0A4A                     l1256 0A06                     l1248 09C2  
                   l1192 0864                     l1184 083E                     l1178 0FA6  
                   l1290 0B04                     l1282 0AC0                     l1266 0A6E  
                   l1258 0A2A                     l1274 0AA0                     l1194 087C  
                   l1186 0840                     l1292 0B12                     l1284 0ACE  
                   l1276 0AA2                     l1268 0A7C                     l1196 087E  
                   l1188 085A                     l1294 0B16                     l1286 0AD2  
                   l1278 0AA4                     l1198 0880                     l1296 0B3A  
                   l1288 0AF6                     l1298 0B48                     STR_1 0805  
                   STR_2 080B                     STR_3 0811                     STR_4 0817  
                   STR_5 0807                     STR_6 080D                     STR_7 0813  
                   STR_8 0803                     STR_9 0809                     _LATB 000F8A  
                   _LATC 000F8B                     _LATD 000F8C                     _LATE 000F8D  
                   _main 081A                     start 0000          __end_of_Lcd_Cmd 0E28  
           ___param_bank 000000               _Lcd_Chr_CP 0BC8           Lcd_Out2@buffer 0005  
                  ?_main 0001                    STR_10 080F                    STR_11 0815  
                  STR_12 0801                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISB 000F93  
                  _TRISC 000F94                    _TRISD 000F95                    _TRISE 000F96  
                  _tecla 000B                    tablat 000FF5                    status 000FD8  
       __end_of_Lcd_Init 0F38         __end_of_Lcd_Out2 0FC8          __initialization 0FC8  
           __end_of_main 0BC8                   ??_main 0009            __activetblptr 000002  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _INTCON 000FF2  
              ??_Lcd_Cmd 0001              ?_Lcd_Chr_CP 0001             __pdataCOMRAM 000C  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0FDC  
          ___rparam_used 000001           __pcstackCOMRAM 0001                ?_Lcd_Init 0001  
              ?_Lcd_Out2 0004      __size_of_Lcd_Chr_CP 0134                  _INTCON2 000FF1  
                _INTCON3 000FF0               ??_Lcd_Init 0004               ??_Lcd_Out2 0007  
                _Lcd_Cmd 0CFC                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 0FC8                  __ramtop 0800  
                __ptext0 081A                  __ptext1 0F38                  __ptext2 0BC8  
                __ptext3 0E28                  __ptext4 0CFC     end_of_initialization 0FDC  
          __Lmediumconst 0000             ??_Lcd_Chr_CP 0001                Lcd_Out2@x 0004  
              Lcd_Out2@y 0007                _PORTDbits 000F83                _PORTEbits 000F84  
              _TRISDbits 000F95                _TRISEbits 000F96       __end_of_Lcd_Chr_CP 0CFC  
          __pidataCOMRAM 0FE6      start_initialization 0FC8        __size_of_Lcd_Init 0110  
      __size_of_Lcd_Out2 0090              __pbssCOMRAM 000B                 ?_Lcd_Cmd 0001  
            __smallconst 0800                 _LATBbits 000F8A             Lcd_Init@data 0005  
           Lcd_Out2@data 0008                 _Lcd_Init 0E28                 _Lcd_Out2 0F38  
       __size_of_Lcd_Cmd 012C                 __Hrparam 0000                 __Lrparam 0000  
         Lcd_Chr_CP@data 0003              Lcd_Cmd@data 0003            __size_of_main 03AE  
