

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Dec 02 15:15:06 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4520 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     
    56                           	psect	idataCOMRAM
    57  000E04                     __pidataCOMRAM:
    58                           	callstack 0
    59                           
    60                           ;initializer for _key
    61  000E04  20                 	db	32
    62  0000                     _LATBbits	set	3978
    63  0000                     _LATE	set	3981
    64  0000                     _PORTE	set	3972
    65  0000                     _LATD	set	3980
    66  0000                     _PORTD	set	3971
    67  0000                     _LATC	set	3979
    68  0000                     _PORTC	set	3970
    69  0000                     _LATB	set	3978
    70  0000                     _PORTB	set	3969
    71  0000                     _TRISE	set	3990
    72  0000                     _TRISD	set	3989
    73  0000                     _TRISC	set	3988
    74  0000                     _TRISB	set	3987
    75  0000                     _INTCON3	set	4080
    76  0000                     _INTCON2	set	4081
    77  0000                     _INTCON	set	4082
    78  0000                     _ADCON1	set	4033
    79  0000                     _ADCON0	set	4034
    80  0000                     _PORTEbits	set	3972
    81  0000                     _PORTDbits	set	3971
    82  0000                     _TRISEbits	set	3990
    83  0000                     _TRISDbits	set	3989
    84                           
    85                           	psect	smallconst
    86  000600                     __psmallconst:
    87                           	callstack 0
    88  000600  00                 	db	0
    89  000601                     STR_12:
    90  000601  2D                 	db	45
    91  000602  00                 	db	0
    92  000603                     STR_8:
    93  000603  30                 	db	48	;'0'
    94  000604  00                 	db	0
    95  000605                     STR_1:
    96  000605  31                 	db	49	;'1'
    97  000606  00                 	db	0
    98  000607                     STR_5:
    99  000607  32                 	db	50	;'2'
   100  000608  00                 	db	0
   101  000609                     STR_9:
   102  000609  33                 	db	51	;'3'
   103  00060A  00                 	db	0
   104  00060B                     STR_2:
   105  00060B  34                 	db	52	;'4'
   106  00060C  00                 	db	0
   107  00060D                     STR_6:
   108  00060D  35                 	db	53	;'5'
   109  00060E  00                 	db	0
   110  00060F                     STR_10:
   111  00060F  36                 	db	54	;'6'
   112  000610  00                 	db	0
   113  000611                     STR_3:
   114  000611  37                 	db	55	;'7'
   115  000612  00                 	db	0
   116  000613                     STR_7:
   117  000613  38                 	db	56	;'8'
   118  000614  00                 	db	0
   119  000615                     STR_11:
   120  000615  39                 	db	57	;'9'
   121  000616  00                 	db	0
   122  000617                     STR_4:
   123  000617  78                 	db	120	;'x'
   124  000618  00                 	db	0
   125  000619  00                 	db	0	; dummy byte at the end
   126  0000                     
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130  000DE6                     __pcinit:
   131                           	callstack 0
   132  000DE6                     start_initialization:
   133                           	callstack 0
   134  000DE6                     __initialization:
   135                           	callstack 0
   136                           
   137                           ; Initialize objects allocated to COMRAM (1 bytes)
   138                           ; load TBLPTR registers with __pidataCOMRAM
   139  000DE6  0E04               	movlw	low __pidataCOMRAM
   140  000DE8  6EF6               	movwf	tblptrl,c
   141  000DEA  0E0E               	movlw	high __pidataCOMRAM
   142  000DEC  6EF7               	movwf	tblptrh,c
   143  000DEE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   144  000DF0  6EF8               	movwf	tblptru,c
   145  000DF2  0009               	tblrd		*+	;fetch initializer
   146  000DF4  CFF5 F00C          	movff	tablat,__pdataCOMRAM
   147                           
   148                           ; Clear objects allocated to COMRAM (1 bytes)
   149  000DF8  6A0B               	clrf	__pbssCOMRAM& (0+255),c
   150  000DFA                     end_of_initialization:
   151                           	callstack 0
   152  000DFA                     __end_of__initialization:
   153                           	callstack 0
   154  000DFA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   155  000DFC  6EF8               	movwf	tblptru,c
   156  000DFE  0100               	movlb	0
   157  000E00  EF0D  F003         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	bssCOMRAM
   160  00000B                     __pbssCOMRAM:
   161                           	callstack 0
   162  00000B                     _tecla:
   163                           	callstack 0
   164  00000B                     	ds	1
   165                           
   166                           	psect	dataCOMRAM
   167  00000C                     __pdataCOMRAM:
   168                           	callstack 0
   169  00000C                     _key:
   170                           	callstack 0
   171  00000C                     	ds	1
   172                           
   173                           	psect	cstackCOMRAM
   174  000001                     __pcstackCOMRAM:
   175                           	callstack 0
   176  000001                     ??_Lcd_Cmd:
   177  000001                     ??_Lcd_Chr_CP:
   178  000001                     
   179                           ; 1 bytes @ 0x0
   180  000001                     	ds	2
   181  000003                     Lcd_Chr_CP@data:
   182                           	callstack 0
   183  000003                     Lcd_Cmd@data:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x2
   187  000003                     	ds	1
   188  000004                     ??_Lcd_Init:
   189  000004                     Lcd_Out2@x:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x3
   193  000004                     	ds	1
   194  000005                     Lcd_Init@data:
   195                           	callstack 0
   196  000005                     Lcd_Out2@buffer:
   197                           	callstack 0
   198                           
   199                           ; 2 bytes @ 0x4
   200  000005                     	ds	2
   201  000007                     Lcd_Out2@y:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x6
   205  000007                     	ds	1
   206  000008                     Lcd_Out2@data:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x7
   210  000008                     	ds	1
   211  000009                     ??_main:
   212                           
   213                           ; 1 bytes @ 0x8
   214  000009                     	ds	2
   215                           
   216 ;;
   217 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   218 ;;
   219 ;; *************** function _main *****************
   220 ;; Defined at:
   221 ;;		line 29 in file "mainLCDtecl.c"
   222 ;; Parameters:    Size  Location     Type
   223 ;;		None
   224 ;; Auto vars:     Size  Location     Type
   225 ;;		None
   226 ;; Return value:  Size  Location     Type
   227 ;;                  1    wreg      void 
   228 ;; Registers used:
   229 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   230 ;; Tracked objects:
   231 ;;		On entry : 0/0
   232 ;;		On exit  : 0/0
   233 ;;		Unchanged: 0/0
   234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   235 ;;      Params:         0       0       0       0       0       0       0
   236 ;;      Locals:         0       0       0       0       0       0       0
   237 ;;      Temps:          2       0       0       0       0       0       0
   238 ;;      Totals:         2       0       0       0       0       0       0
   239 ;;Total ram usage:        2 bytes
   240 ;; Hardware stack levels required when called:    2
   241 ;; This function calls:
   242 ;;		_Lcd_Cmd
   243 ;;		_Lcd_Init
   244 ;;		_Lcd_Out2
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text0
   251  00061A                     __ptext0:
   252                           	callstack 0
   253  00061A                     _main:
   254                           	callstack 29
   255  00061A                     
   256                           ;mainLCDtecl.c: 31: ADCON0 = 0b00000000;
   257  00061A  0E00               	movlw	0
   258  00061C  6EC2               	movwf	194,c	;volatile
   259                           
   260                           ;mainLCDtecl.c: 32: ADCON1 = 0b00001111;
   261  00061E  0E0F               	movlw	15
   262  000620  6EC1               	movwf	193,c	;volatile
   263                           
   264                           ;mainLCDtecl.c: 34: INTCON = 0b00000000;
   265  000622  0E00               	movlw	0
   266  000624  6EF2               	movwf	242,c	;volatile
   267                           
   268                           ;mainLCDtecl.c: 35: INTCON2 = 0b10000000;
   269  000626  0E80               	movlw	128
   270  000628  6EF1               	movwf	241,c	;volatile
   271                           
   272                           ;mainLCDtecl.c: 36: INTCON3 = 0b00000000;
   273  00062A  0E00               	movlw	0
   274  00062C  6EF0               	movwf	240,c	;volatile
   275                           
   276                           ;mainLCDtecl.c: 38: TRISB = 0b00000000;
   277  00062E  0E00               	movlw	0
   278  000630  6E93               	movwf	147,c	;volatile
   279                           
   280                           ;mainLCDtecl.c: 39: TRISC = 0b00000000;
   281  000632  0E00               	movlw	0
   282  000634  6E94               	movwf	148,c	;volatile
   283                           
   284                           ;mainLCDtecl.c: 40: TRISD = 0b00001111;
   285  000636  0E0F               	movlw	15
   286  000638  6E95               	movwf	149,c	;volatile
   287                           
   288                           ;mainLCDtecl.c: 41: TRISE = 0b00000000;
   289  00063A  0E00               	movlw	0
   290  00063C  6E96               	movwf	150,c	;volatile
   291  00063E                     
   292                           ;mainLCDtecl.c: 43: PORTB = 0xFF;
   293  00063E  6881               	setf	129,c	;volatile
   294  000640                     
   295                           ;mainLCDtecl.c: 44: LATB = 0xFF;
   296  000640  688A               	setf	138,c	;volatile
   297                           
   298                           ;mainLCDtecl.c: 45: PORTC = 0;
   299  000642  0E00               	movlw	0
   300  000644  6E82               	movwf	130,c	;volatile
   301                           
   302                           ;mainLCDtecl.c: 46: LATC = 0;
   303  000646  0E00               	movlw	0
   304  000648  6E8B               	movwf	139,c	;volatile
   305                           
   306                           ;mainLCDtecl.c: 47: PORTD = 0;
   307  00064A  0E00               	movlw	0
   308  00064C  6E83               	movwf	131,c	;volatile
   309                           
   310                           ;mainLCDtecl.c: 48: LATD = 0;
   311  00064E  0E00               	movlw	0
   312  000650  6E8C               	movwf	140,c	;volatile
   313                           
   314                           ;mainLCDtecl.c: 49: PORTE = 0;
   315  000652  0E00               	movlw	0
   316  000654  6E84               	movwf	132,c	;volatile
   317                           
   318                           ;mainLCDtecl.c: 50: LATE = 0;
   319  000656  0E00               	movlw	0
   320  000658  6E8D               	movwf	141,c	;volatile
   321  00065A                     
   322                           ;mainLCDtecl.c: 52: Lcd_Init();
   323  00065A  EC23  F006         	call	_Lcd_Init	;wreg free
   324  00065E                     
   325                           ;mainLCDtecl.c: 53: Lcd_Cmd(12);
   326  00065E  0E0C               	movlw	12
   327  000660  EC8D  F005         	call	_Lcd_Cmd
   328  000664                     
   329                           ;mainLCDtecl.c: 54: _delay((unsigned long)((100)*(8000000/4000.0)));
   330  000664  0E02               	movlw	2
   331  000666  6E0A               	movwf	(??_main+1)^0,c
   332  000668  0E04               	movlw	4
   333  00066A  6E09               	movwf	??_main^0,c
   334  00066C  0EBA               	movlw	186
   335  00066E                     u597:
   336  00066E  2EE8               	decfsz	wreg,f,c
   337  000670  D7FE               	bra	u597
   338  000672  2E09               	decfsz	??_main^0,f,c
   339  000674  D7FC               	bra	u597
   340  000676  2E0A               	decfsz	(??_main+1)^0,f,c
   341  000678  D7FA               	bra	u597
   342  00067A  D000               	nop2	
   343  00067C                     l98:
   344  00067C  0004               	clrwdt		;# 
   345  00067E                     
   346                           ;mainLCDtecl.c: 58: LATBbits.LB0 = 1; LATBbits.LB1 = 1; LATBbits.LB2 = 1;
   347  00067E  808A               	bsf	138,0,c	;volatile
   348  000680  828A               	bsf	138,1,c	;volatile
   349  000682  848A               	bsf	138,2,c	;volatile
   350  000684                     
   351                           ;mainLCDtecl.c: 59: LATBbits.LB0 = 0;
   352  000684  908A               	bcf	138,0,c	;volatile
   353  000686                     
   354                           ;mainLCDtecl.c: 60: if(!PORTDbits.RD3) {_delaywdt((unsigned long)((20)*(8000000/4000.0))
      +                          ); if (!PORTDbits.RD3) {key = '1'; Lcd_Out2(1, 0, "1");}}
   355  000686  B683               	btfsc	131,3,c	;volatile
   356  000688  EF48  F003         	goto	u351
   357  00068C  EF4A  F003         	goto	u350
   358  000690                     u351:
   359  000690  EF66  F003         	goto	l99
   360  000694                     u350:
   361  000694  0E27               	movlw	39
   362  000696  6E09               	movwf	??_main^0,c
   363  000698  0EFC               	movlw	252
   364  00069A                     u607:
   365  00069A  0004               	clrwdt	
   366  00069C  2EE8               	decfsz	wreg,f,c
   367  00069E  D7FD               	bra	u607
   368  0006A0  2E09               	decfsz	??_main^0,f,c
   369  0006A2  D7FB               	bra	u607
   370  0006A4  B683               	btfsc	131,3,c	;volatile
   371  0006A6  EF57  F003         	goto	u361
   372  0006AA  EF59  F003         	goto	u360
   373  0006AE                     u361:
   374  0006AE  EFCD  F003         	goto	l1238
   375  0006B2                     u360:
   376  0006B2  0E31               	movlw	49
   377  0006B4  6E0C               	movwf	_key^0,c
   378  0006B6  0E00               	movlw	0
   379  0006B8  6E04               	movwf	Lcd_Out2@x^0,c
   380  0006BA  0E05               	movlw	low STR_1
   381  0006BC  6E05               	movwf	Lcd_Out2@buffer^0,c
   382  0006BE  0E06               	movlw	high STR_1
   383  0006C0  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   384  0006C2  0E01               	movlw	1
   385  0006C4  ECAB  F006         	call	_Lcd_Out2
   386  0006C8  EFCD  F003         	goto	l1238
   387  0006CC                     l99:
   388                           
   389                           ;mainLCDtecl.c: 61: else if(!PORTDbits.RD2) {_delaywdt((unsigned long)((20)*(8000000/400
      +                          0.0))); if (!PORTDbits.RD2){key = '4'; Lcd_Out2(1, 0, "4");}}
   390  0006CC  B483               	btfsc	131,2,c	;volatile
   391  0006CE  EF6B  F003         	goto	u371
   392  0006D2  EF6D  F003         	goto	u370
   393  0006D6                     u371:
   394  0006D6  EF89  F003         	goto	l102
   395  0006DA                     u370:
   396  0006DA  0E27               	movlw	39
   397  0006DC  6E09               	movwf	??_main^0,c
   398  0006DE  0EFC               	movlw	252
   399  0006E0                     u617:
   400  0006E0  0004               	clrwdt	
   401  0006E2  2EE8               	decfsz	wreg,f,c
   402  0006E4  D7FD               	bra	u617
   403  0006E6  2E09               	decfsz	??_main^0,f,c
   404  0006E8  D7FB               	bra	u617
   405  0006EA  B483               	btfsc	131,2,c	;volatile
   406  0006EC  EF7A  F003         	goto	u381
   407  0006F0  EF7C  F003         	goto	u380
   408  0006F4                     u381:
   409  0006F4  EFCD  F003         	goto	l1238
   410  0006F8                     u380:
   411  0006F8  0E34               	movlw	52
   412  0006FA  6E0C               	movwf	_key^0,c
   413  0006FC  0E00               	movlw	0
   414  0006FE  6E04               	movwf	Lcd_Out2@x^0,c
   415  000700  0E0B               	movlw	low STR_2
   416  000702  6E05               	movwf	Lcd_Out2@buffer^0,c
   417  000704  0E06               	movlw	high STR_2
   418  000706  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   419  000708  0E01               	movlw	1
   420  00070A  ECAB  F006         	call	_Lcd_Out2
   421  00070E  EFCD  F003         	goto	l1238
   422  000712                     l102:
   423                           
   424                           ;mainLCDtecl.c: 62: else if(!PORTDbits.RD1) {_delaywdt((unsigned long)((20)*(8000000/400
      +                          0.0))); if (!PORTDbits.RD1){key = '7'; Lcd_Out2(1, 0, "7");}}
   425  000712  B283               	btfsc	131,1,c	;volatile
   426  000714  EF8E  F003         	goto	u391
   427  000718  EF90  F003         	goto	u390
   428  00071C                     u391:
   429  00071C  EFAC  F003         	goto	l105
   430  000720                     u390:
   431  000720  0E27               	movlw	39
   432  000722  6E09               	movwf	??_main^0,c
   433  000724  0EFC               	movlw	252
   434  000726                     u627:
   435  000726  0004               	clrwdt	
   436  000728  2EE8               	decfsz	wreg,f,c
   437  00072A  D7FD               	bra	u627
   438  00072C  2E09               	decfsz	??_main^0,f,c
   439  00072E  D7FB               	bra	u627
   440  000730  B283               	btfsc	131,1,c	;volatile
   441  000732  EF9D  F003         	goto	u401
   442  000736  EF9F  F003         	goto	u400
   443  00073A                     u401:
   444  00073A  EFCD  F003         	goto	l1238
   445  00073E                     u400:
   446  00073E  0E37               	movlw	55
   447  000740  6E0C               	movwf	_key^0,c
   448  000742  0E00               	movlw	0
   449  000744  6E04               	movwf	Lcd_Out2@x^0,c
   450  000746  0E11               	movlw	low STR_3
   451  000748  6E05               	movwf	Lcd_Out2@buffer^0,c
   452  00074A  0E06               	movlw	high STR_3
   453  00074C  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   454  00074E  0E01               	movlw	1
   455  000750  ECAB  F006         	call	_Lcd_Out2
   456  000754  EFCD  F003         	goto	l1238
   457  000758                     l105:
   458                           
   459                           ;mainLCDtecl.c: 63: else if(!PORTDbits.RD0) {_delaywdt((unsigned long)((20)*(8000000/400
      +                          0.0))); if (!PORTDbits.RD0){key = 'x'; Lcd_Out2(1, 0, "x");}}
   460  000758  B083               	btfsc	131,0,c	;volatile
   461  00075A  EFB1  F003         	goto	u411
   462  00075E  EFB3  F003         	goto	u410
   463  000762                     u411:
   464  000762  EFCD  F003         	goto	l1238
   465  000766                     u410:
   466  000766  0E27               	movlw	39
   467  000768  6E09               	movwf	??_main^0,c
   468  00076A  0EFC               	movlw	252
   469  00076C                     u637:
   470  00076C  0004               	clrwdt	
   471  00076E  2EE8               	decfsz	wreg,f,c
   472  000770  D7FD               	bra	u637
   473  000772  2E09               	decfsz	??_main^0,f,c
   474  000774  D7FB               	bra	u637
   475  000776  B083               	btfsc	131,0,c	;volatile
   476  000778  EFC0  F003         	goto	u421
   477  00077C  EFC2  F003         	goto	u420
   478  000780                     u421:
   479  000780  EFCD  F003         	goto	l1238
   480  000784                     u420:
   481  000784  0E78               	movlw	120
   482  000786  6E0C               	movwf	_key^0,c
   483  000788  0E00               	movlw	0
   484  00078A  6E04               	movwf	Lcd_Out2@x^0,c
   485  00078C  0E17               	movlw	low STR_4
   486  00078E  6E05               	movwf	Lcd_Out2@buffer^0,c
   487  000790  0E06               	movlw	high STR_4
   488  000792  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   489  000794  0E01               	movlw	1
   490  000796  ECAB  F006         	call	_Lcd_Out2
   491  00079A                     l1238:
   492                           
   493                           ;mainLCDtecl.c: 65: LATBbits.LB0 = 1;
   494  00079A  808A               	bsf	138,0,c	;volatile
   495  00079C                     
   496                           ;mainLCDtecl.c: 66: LATBbits.LB1 = 0;
   497  00079C  928A               	bcf	138,1,c	;volatile
   498  00079E                     
   499                           ;mainLCDtecl.c: 68: if(!PORTDbits.RD3) {_delaywdt((unsigned long)((20)*(8000000/4000.0))
      +                          ); if (!PORTDbits.RD3){key = '2'; Lcd_Out2(1, 0, "2");}}
   500  00079E  B683               	btfsc	131,3,c	;volatile
   501  0007A0  EFD4  F003         	goto	u431
   502  0007A4  EFD6  F003         	goto	u430
   503  0007A8                     u431:
   504  0007A8  EFF2  F003         	goto	l110
   505  0007AC                     u430:
   506  0007AC  0E27               	movlw	39
   507  0007AE  6E09               	movwf	??_main^0,c
   508  0007B0  0EFC               	movlw	252
   509  0007B2                     u647:
   510  0007B2  0004               	clrwdt	
   511  0007B4  2EE8               	decfsz	wreg,f,c
   512  0007B6  D7FD               	bra	u647
   513  0007B8  2E09               	decfsz	??_main^0,f,c
   514  0007BA  D7FB               	bra	u647
   515  0007BC  B683               	btfsc	131,3,c	;volatile
   516  0007BE  EFE3  F003         	goto	u441
   517  0007C2  EFE5  F003         	goto	u440
   518  0007C6                     u441:
   519  0007C6  EF58  F004         	goto	l1276
   520  0007CA                     u440:
   521  0007CA  0E32               	movlw	50
   522  0007CC  6E0C               	movwf	_key^0,c
   523  0007CE  0E00               	movlw	0
   524  0007D0  6E04               	movwf	Lcd_Out2@x^0,c
   525  0007D2  0E07               	movlw	low STR_5
   526  0007D4  6E05               	movwf	Lcd_Out2@buffer^0,c
   527  0007D6  0E06               	movlw	high STR_5
   528  0007D8  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   529  0007DA  0E01               	movlw	1
   530  0007DC  ECAB  F006         	call	_Lcd_Out2
   531  0007E0  EF58  F004         	goto	l1276
   532  0007E4                     l110:
   533                           
   534                           ;mainLCDtecl.c: 69: else if(!PORTDbits.RD2) {_delaywdt((unsigned long)((20)*(8000000/400
      +                          0.0))); if (!PORTDbits.RD2){key = '5'; Lcd_Out2(1, 0, "5");}}
   535  0007E4  B483               	btfsc	131,2,c	;volatile
   536  0007E6  EFF7  F003         	goto	u451
   537  0007EA  EFF9  F003         	goto	u450
   538  0007EE                     u451:
   539  0007EE  EF15  F004         	goto	l113
   540  0007F2                     u450:
   541  0007F2  0E27               	movlw	39
   542  0007F4  6E09               	movwf	??_main^0,c
   543  0007F6  0EFC               	movlw	252
   544  0007F8                     u657:
   545  0007F8  0004               	clrwdt	
   546  0007FA  2EE8               	decfsz	wreg,f,c
   547  0007FC  D7FD               	bra	u657
   548  0007FE  2E09               	decfsz	??_main^0,f,c
   549  000800  D7FB               	bra	u657
   550  000802  B483               	btfsc	131,2,c	;volatile
   551  000804  EF06  F004         	goto	u461
   552  000808  EF08  F004         	goto	u460
   553  00080C                     u461:
   554  00080C  EF58  F004         	goto	l1276
   555  000810                     u460:
   556  000810  0E35               	movlw	53
   557  000812  6E0C               	movwf	_key^0,c
   558  000814  0E00               	movlw	0
   559  000816  6E04               	movwf	Lcd_Out2@x^0,c
   560  000818  0E0D               	movlw	low STR_6
   561  00081A  6E05               	movwf	Lcd_Out2@buffer^0,c
   562  00081C  0E06               	movlw	high STR_6
   563  00081E  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   564  000820  0E01               	movlw	1
   565  000822  ECAB  F006         	call	_Lcd_Out2
   566  000826  EF58  F004         	goto	l1276
   567  00082A                     l113:
   568                           
   569                           ;mainLCDtecl.c: 70: else if(!PORTDbits.RD1) {_delaywdt((unsigned long)((20)*(8000000/400
      +                          0.0))); if (!PORTDbits.RD1){key = '8'; Lcd_Out2(1, 0, "8");}}
   570  00082A  B283               	btfsc	131,1,c	;volatile
   571  00082C  EF1A  F004         	goto	u471
   572  000830  EF1C  F004         	goto	u470
   573  000834                     u471:
   574  000834  EF38  F004         	goto	l116
   575  000838                     u470:
   576  000838  0E27               	movlw	39
   577  00083A  6E09               	movwf	??_main^0,c
   578  00083C  0EFC               	movlw	252
   579  00083E                     u667:
   580  00083E  0004               	clrwdt	
   581  000840  2EE8               	decfsz	wreg,f,c
   582  000842  D7FD               	bra	u667
   583  000844  2E09               	decfsz	??_main^0,f,c
   584  000846  D7FB               	bra	u667
   585  000848  B283               	btfsc	131,1,c	;volatile
   586  00084A  EF29  F004         	goto	u481
   587  00084E  EF2B  F004         	goto	u480
   588  000852                     u481:
   589  000852  EF58  F004         	goto	l1276
   590  000856                     u480:
   591  000856  0E38               	movlw	56
   592  000858  6E0C               	movwf	_key^0,c
   593  00085A  0E00               	movlw	0
   594  00085C  6E04               	movwf	Lcd_Out2@x^0,c
   595  00085E  0E13               	movlw	low STR_7
   596  000860  6E05               	movwf	Lcd_Out2@buffer^0,c
   597  000862  0E06               	movlw	high STR_7
   598  000864  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   599  000866  0E01               	movlw	1
   600  000868  ECAB  F006         	call	_Lcd_Out2
   601  00086C  EF58  F004         	goto	l1276
   602  000870                     l116:
   603                           
   604                           ;mainLCDtecl.c: 71: else if(!PORTDbits.RD0) {_delay((unsigned long)((20)*(8000000/4000.0
      +                          ))); if (!PORTDbits.RD0){key = '0'; Lcd_Out2(1, 0, "0");}}
   605  000870  B083               	btfsc	131,0,c	;volatile
   606  000872  EF3D  F004         	goto	u491
   607  000876  EF3F  F004         	goto	u490
   608  00087A                     u491:
   609  00087A  EF58  F004         	goto	l1276
   610  00087E                     u490:
   611  00087E  0E34               	movlw	52
   612  000880  6E09               	movwf	??_main^0,c
   613  000882  0EF2               	movlw	242
   614  000884                     u677:
   615  000884  2EE8               	decfsz	wreg,f,c
   616  000886  D7FE               	bra	u677
   617  000888  2E09               	decfsz	??_main^0,f,c
   618  00088A  D7FC               	bra	u677
   619  00088C  B083               	btfsc	131,0,c	;volatile
   620  00088E  EF4B  F004         	goto	u501
   621  000892  EF4D  F004         	goto	u500
   622  000896                     u501:
   623  000896  EF58  F004         	goto	l1276
   624  00089A                     u500:
   625  00089A  0E30               	movlw	48
   626  00089C  6E0C               	movwf	_key^0,c
   627  00089E  0E00               	movlw	0
   628  0008A0  6E04               	movwf	Lcd_Out2@x^0,c
   629  0008A2  0E03               	movlw	low STR_8
   630  0008A4  6E05               	movwf	Lcd_Out2@buffer^0,c
   631  0008A6  0E06               	movlw	high STR_8
   632  0008A8  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   633  0008AA  0E01               	movlw	1
   634  0008AC  ECAB  F006         	call	_Lcd_Out2
   635  0008B0                     l1276:
   636                           
   637                           ;mainLCDtecl.c: 73: LATBbits.LB1 = 1;
   638  0008B0  828A               	bsf	138,1,c	;volatile
   639  0008B2                     
   640                           ;mainLCDtecl.c: 74: LATBbits.LB2 = 0;
   641  0008B2  948A               	bcf	138,2,c	;volatile
   642  0008B4                     
   643                           ;mainLCDtecl.c: 76: if(!PORTDbits.RD3) {_delaywdt((unsigned long)((20)*(8000000/4000.0))
      +                          ); if (!PORTDbits.RD3){key = '3'; Lcd_Out2(1, 0, "3");}}
   644  0008B4  B683               	btfsc	131,3,c	;volatile
   645  0008B6  EF5F  F004         	goto	u511
   646  0008BA  EF61  F004         	goto	u510
   647  0008BE                     u511:
   648  0008BE  EF7D  F004         	goto	l121
   649  0008C2                     u510:
   650  0008C2  0E27               	movlw	39
   651  0008C4  6E09               	movwf	??_main^0,c
   652  0008C6  0EFC               	movlw	252
   653  0008C8                     u687:
   654  0008C8  0004               	clrwdt	
   655  0008CA  2EE8               	decfsz	wreg,f,c
   656  0008CC  D7FD               	bra	u687
   657  0008CE  2E09               	decfsz	??_main^0,f,c
   658  0008D0  D7FB               	bra	u687
   659  0008D2  B683               	btfsc	131,3,c	;volatile
   660  0008D4  EF6E  F004         	goto	u521
   661  0008D8  EF70  F004         	goto	u520
   662  0008DC                     u521:
   663  0008DC  EFE4  F004         	goto	l1314
   664  0008E0                     u520:
   665  0008E0  0E33               	movlw	51
   666  0008E2  6E0C               	movwf	_key^0,c
   667  0008E4  0E00               	movlw	0
   668  0008E6  6E04               	movwf	Lcd_Out2@x^0,c
   669  0008E8  0E09               	movlw	low STR_9
   670  0008EA  6E05               	movwf	Lcd_Out2@buffer^0,c
   671  0008EC  0E06               	movlw	high STR_9
   672  0008EE  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   673  0008F0  0E01               	movlw	1
   674  0008F2  ECAB  F006         	call	_Lcd_Out2
   675  0008F6  EFE4  F004         	goto	l1314
   676  0008FA                     l121:
   677                           
   678                           ;mainLCDtecl.c: 77: else if(!PORTDbits.RD2) {_delaywdt((unsigned long)((20)*(8000000/400
      +                          0.0))); if (!PORTDbits.RD2){key = '6'; Lcd_Out2(1, 0, "6");}}
   679  0008FA  B483               	btfsc	131,2,c	;volatile
   680  0008FC  EF82  F004         	goto	u531
   681  000900  EF84  F004         	goto	u530
   682  000904                     u531:
   683  000904  EFA0  F004         	goto	l124
   684  000908                     u530:
   685  000908  0E27               	movlw	39
   686  00090A  6E09               	movwf	??_main^0,c
   687  00090C  0EFC               	movlw	252
   688  00090E                     u697:
   689  00090E  0004               	clrwdt	
   690  000910  2EE8               	decfsz	wreg,f,c
   691  000912  D7FD               	bra	u697
   692  000914  2E09               	decfsz	??_main^0,f,c
   693  000916  D7FB               	bra	u697
   694  000918  B483               	btfsc	131,2,c	;volatile
   695  00091A  EF91  F004         	goto	u541
   696  00091E  EF93  F004         	goto	u540
   697  000922                     u541:
   698  000922  EFE4  F004         	goto	l1314
   699  000926                     u540:
   700  000926  0E36               	movlw	54
   701  000928  6E0C               	movwf	_key^0,c
   702  00092A  0E00               	movlw	0
   703  00092C  6E04               	movwf	Lcd_Out2@x^0,c
   704  00092E  0E0F               	movlw	low STR_10
   705  000930  6E05               	movwf	Lcd_Out2@buffer^0,c
   706  000932  0E06               	movlw	high STR_10
   707  000934  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   708  000936  0E01               	movlw	1
   709  000938  ECAB  F006         	call	_Lcd_Out2
   710  00093C  EFE4  F004         	goto	l1314
   711  000940                     l124:
   712                           
   713                           ;mainLCDtecl.c: 78: else if(!PORTDbits.RD1) {_delaywdt((unsigned long)((20)*(8000000/400
      +                          0.0))); if (!PORTDbits.RD1){key = '9'; Lcd_Out2(1, 0, "9");}}
   714  000940  B283               	btfsc	131,1,c	;volatile
   715  000942  EFA5  F004         	goto	u551
   716  000946  EFA7  F004         	goto	u550
   717  00094A                     u551:
   718  00094A  EFC3  F004         	goto	l127
   719  00094E                     u550:
   720  00094E  0E27               	movlw	39
   721  000950  6E09               	movwf	??_main^0,c
   722  000952  0EFC               	movlw	252
   723  000954                     u707:
   724  000954  0004               	clrwdt	
   725  000956  2EE8               	decfsz	wreg,f,c
   726  000958  D7FD               	bra	u707
   727  00095A  2E09               	decfsz	??_main^0,f,c
   728  00095C  D7FB               	bra	u707
   729  00095E  B283               	btfsc	131,1,c	;volatile
   730  000960  EFB4  F004         	goto	u561
   731  000964  EFB6  F004         	goto	u560
   732  000968                     u561:
   733  000968  EFE4  F004         	goto	l1314
   734  00096C                     u560:
   735  00096C  0E39               	movlw	57
   736  00096E  6E0C               	movwf	_key^0,c
   737  000970  0E00               	movlw	0
   738  000972  6E04               	movwf	Lcd_Out2@x^0,c
   739  000974  0E15               	movlw	low STR_11
   740  000976  6E05               	movwf	Lcd_Out2@buffer^0,c
   741  000978  0E06               	movlw	high STR_11
   742  00097A  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   743  00097C  0E01               	movlw	1
   744  00097E  ECAB  F006         	call	_Lcd_Out2
   745  000982  EFE4  F004         	goto	l1314
   746  000986                     l127:
   747                           
   748                           ;mainLCDtecl.c: 79: else if(!PORTDbits.RD0) {_delaywdt((unsigned long)((20)*(8000000/400
      +                          0.0))); if (!PORTDbits.RD0){key = '-'; Lcd_Out2(1, 0, "-");}}
   749  000986  B083               	btfsc	131,0,c	;volatile
   750  000988  EFC8  F004         	goto	u571
   751  00098C  EFCA  F004         	goto	u570
   752  000990                     u571:
   753  000990  EFE4  F004         	goto	l1314
   754  000994                     u570:
   755  000994  0E27               	movlw	39
   756  000996  6E09               	movwf	??_main^0,c
   757  000998  0EFC               	movlw	252
   758  00099A                     u717:
   759  00099A  0004               	clrwdt	
   760  00099C  2EE8               	decfsz	wreg,f,c
   761  00099E  D7FD               	bra	u717
   762  0009A0  2E09               	decfsz	??_main^0,f,c
   763  0009A2  D7FB               	bra	u717
   764  0009A4  B083               	btfsc	131,0,c	;volatile
   765  0009A6  EFD7  F004         	goto	u581
   766  0009AA  EFD9  F004         	goto	u580
   767  0009AE                     u581:
   768  0009AE  EFE4  F004         	goto	l1314
   769  0009B2                     u580:
   770  0009B2  0E2D               	movlw	45
   771  0009B4  6E0C               	movwf	_key^0,c
   772  0009B6  0E00               	movlw	0
   773  0009B8  6E04               	movwf	Lcd_Out2@x^0,c
   774  0009BA  0E01               	movlw	low STR_12
   775  0009BC  6E05               	movwf	Lcd_Out2@buffer^0,c
   776  0009BE  0E06               	movlw	high STR_12
   777  0009C0  6E06               	movwf	(Lcd_Out2@buffer+1)^0,c
   778  0009C2  0E01               	movlw	1
   779  0009C4  ECAB  F006         	call	_Lcd_Out2
   780  0009C8                     l1314:
   781                           
   782                           ;mainLCDtecl.c: 81: LATBbits.LB2 = 1;
   783  0009C8  848A               	bsf	138,2,c	;volatile
   784  0009CA                     
   785                           ;mainLCDtecl.c: 82: _delaywdt((unsigned long)((5)*(8000000/4000.0)));
   786  0009CA  0E0A               	movlw	10
   787  0009CC  6E09               	movwf	??_main^0,c
   788  0009CE  0EBE               	movlw	190
   789  0009D0                     u727:
   790  0009D0  0004               	clrwdt	
   791  0009D2  2EE8               	decfsz	wreg,f,c
   792  0009D4  D7FD               	bra	u727
   793  0009D6  2E09               	decfsz	??_main^0,f,c
   794  0009D8  D7FB               	bra	u727
   795  0009DA  0004               	clrwdt	
   796  0009DC  F000               	nop	
   797  0009DE  EF3E  F003         	goto	l98
   798  0009E2  EF00  F000         	goto	start
   799  0009E6                     __end_of_main:
   800                           	callstack 0
   801                           
   802 ;; *************** function _Lcd_Out2 *****************
   803 ;; Defined at:
   804 ;;		line 116 in file "flexlcd.h"
   805 ;; Parameters:    Size  Location     Type
   806 ;;  y               1    wreg     unsigned char 
   807 ;;  x               1    3[COMRAM] unsigned char 
   808 ;;  buffer          2    4[COMRAM] PTR unsigned char 
   809 ;;		 -> STR_12(2), STR_11(2), STR_10(2), STR_9(2), 
   810 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(2), 
   811 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(2), 
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  y               1    6[COMRAM] unsigned char 
   814 ;;  data            1    7[COMRAM] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   824 ;;      Params:         3       0       0       0       0       0       0
   825 ;;      Locals:         2       0       0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0
   827 ;;      Totals:         5       0       0       0       0       0       0
   828 ;;Total ram usage:        5 bytes
   829 ;; Hardware stack levels used:    1
   830 ;; Hardware stack levels required when called:    1
   831 ;; This function calls:
   832 ;;		_Lcd_Chr_CP
   833 ;;		_Lcd_Cmd
   834 ;; This function is called by:
   835 ;;		_main
   836 ;; This function uses a non-reentrant model
   837 ;;
   838                           
   839                           	psect	text1
   840  000D56                     __ptext1:
   841                           	callstack 0
   842  000D56                     _Lcd_Out2:
   843                           	callstack 29
   844                           
   845                           ;incstack = 0
   846                           ;Lcd_Out2@y stored from wreg
   847  000D56  6E07               	movwf	Lcd_Out2@y^0,c
   848  000D58                     
   849                           ;flexlcd.h: 118: unsigned char data;;flexlcd.h: 119: switch (y)
   850  000D58  EFC2  F006         	goto	l1174
   851  000D5C                     l1164:
   852  000D5C  5004               	movf	Lcd_Out2@x^0,w,c
   853  000D5E  0F80               	addlw	128
   854  000D60  6E08               	movwf	Lcd_Out2@data^0,c
   855  000D62  EFD5  F006         	goto	l1176
   856  000D66                     l1166:
   857  000D66  5004               	movf	Lcd_Out2@x^0,w,c
   858  000D68  0FC0               	addlw	192
   859  000D6A  6E08               	movwf	Lcd_Out2@data^0,c
   860  000D6C  EFD5  F006         	goto	l1176
   861  000D70                     l1168:
   862  000D70  5004               	movf	Lcd_Out2@x^0,w,c
   863  000D72  0F94               	addlw	148
   864  000D74  6E08               	movwf	Lcd_Out2@data^0,c
   865  000D76  EFD5  F006         	goto	l1176
   866  000D7A                     l1170:
   867  000D7A  5004               	movf	Lcd_Out2@x^0,w,c
   868  000D7C  0FD4               	addlw	212
   869  000D7E  6E08               	movwf	Lcd_Out2@data^0,c
   870  000D80  EFD5  F006         	goto	l1176
   871  000D84                     l1174:
   872  000D84  5007               	movf	Lcd_Out2@y^0,w,c
   873                           
   874                           ; Switch size 1, requested type "simple"
   875                           ; Number of cases is 4, Range of values is 1 to 4
   876                           ; switch strategies available:
   877                           ; Name         Instructions Cycles
   878                           ; simple_byte           13     7 (average)
   879                           ;	Chosen strategy is simple_byte
   880  000D86  0A01               	xorlw	1	; case 1
   881  000D88  B4D8               	btfsc	status,2,c
   882  000D8A  EFAE  F006         	goto	l1164
   883  000D8E  0A03               	xorlw	3	; case 2
   884  000D90  B4D8               	btfsc	status,2,c
   885  000D92  EFB3  F006         	goto	l1166
   886  000D96  0A01               	xorlw	1	; case 3
   887  000D98  B4D8               	btfsc	status,2,c
   888  000D9A  EFB8  F006         	goto	l1168
   889  000D9E  0A07               	xorlw	7	; case 4
   890  000DA0  B4D8               	btfsc	status,2,c
   891  000DA2  EFBD  F006         	goto	l1170
   892  000DA6  EFD5  F006         	goto	l1176
   893  000DAA                     l1176:
   894                           
   895                           ;flexlcd.h: 127: Lcd_Cmd(data);
   896  000DAA  5008               	movf	Lcd_Out2@data^0,w,c
   897  000DAC  EC8D  F005         	call	_Lcd_Cmd
   898                           
   899                           ;flexlcd.h: 128: while(*buffer)
   900  000DB0  EFE4  F006         	goto	l1182
   901  000DB4                     l1178:
   902                           
   903                           ;flexlcd.h: 129: {;flexlcd.h: 130: Lcd_Chr_CP(*buffer);
   904  000DB4  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
   905  000DB8  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
   906  000DBC                     	if	0	;tblptru may be non-zero
   907  000DBC                     	endif
   908  000DBC                     	if	0	;tblptru may be non-zero
   909  000DBC                     	endif
   910  000DBC  0008               	tblrd		*
   911  000DBE  50F5               	movf	tablat,w,c
   912  000DC0  ECF3  F004         	call	_Lcd_Chr_CP
   913  000DC4                     
   914                           ;flexlcd.h: 131: buffer++;
   915  000DC4  4A05               	infsnz	Lcd_Out2@buffer^0,f,c
   916  000DC6  2A06               	incf	(Lcd_Out2@buffer+1)^0,f,c
   917  000DC8                     l1182:
   918  000DC8  C005  FFF6         	movff	Lcd_Out2@buffer,tblptrl
   919  000DCC  C006  FFF7         	movff	Lcd_Out2@buffer+1,tblptrh
   920  000DD0                     	if	0	;tblptru may be non-zero
   921  000DD0                     	endif
   922  000DD0                     	if	0	;tblptru may be non-zero
   923  000DD0                     	endif
   924  000DD0  0008               	tblrd		*
   925  000DD2  50F5               	movf	tablat,w,c
   926  000DD4  0900               	iorlw	0
   927  000DD6  A4D8               	btfss	status,2,c
   928  000DD8  EFF0  F006         	goto	u341
   929  000DDC  EFF2  F006         	goto	u340
   930  000DE0                     u341:
   931  000DE0  EFDA  F006         	goto	l1178
   932  000DE4                     u340:
   933  000DE4  0012               	return		;funcret
   934  000DE6                     __end_of_Lcd_Out2:
   935                           	callstack 0
   936                           
   937 ;; *************** function _Lcd_Chr_CP *****************
   938 ;; Defined at:
   939 ;;		line 137 in file "flexlcd.h"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  data            1    wreg     unsigned char 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  data            1    2[COMRAM] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   953 ;;      Params:         0       0       0       0       0       0       0
   954 ;;      Locals:         1       0       0       0       0       0       0
   955 ;;      Temps:          2       0       0       0       0       0       0
   956 ;;      Totals:         3       0       0       0       0       0       0
   957 ;;Total ram usage:        3 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; This function calls:
   960 ;;		Nothing
   961 ;; This function is called by:
   962 ;;		_Lcd_Out2
   963 ;;		_Lcd_Out
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text2
   968  0009E6                     __ptext2:
   969                           	callstack 0
   970  0009E6                     _Lcd_Chr_CP:
   971                           	callstack 29
   972                           
   973                           ;incstack = 0
   974                           ;Lcd_Chr_CP@data stored from wreg
   975  0009E6  6E03               	movwf	Lcd_Chr_CP@data^0,c
   976  0009E8                     
   977                           ;flexlcd.h: 138: PORTEbits.RE1 = 0; PORTEbits.RE2 = 1;
   978  0009E8  9284               	bcf	132,1,c	;volatile
   979  0009EA  8484               	bsf	132,2,c	;volatile
   980  0009EC                     
   981                           ;flexlcd.h: 139: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
   982  0009EC  6A01               	clrf	??_Lcd_Chr_CP^0,c
   983  0009EE  AE03               	btfss	Lcd_Chr_CP@data^0,7,c
   984  0009F0  D001               	bra	u45
   985  0009F2  2A01               	incf	??_Lcd_Chr_CP^0,f,c
   986  0009F4                     u45:
   987  0009F4  0E01               	movlw	1
   988  0009F6  1601               	andwf	??_Lcd_Chr_CP^0,f,c
   989  0009F8  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   990  0009FA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
   991  0009FC  5083               	movf	131,w,c	;volatile
   992  0009FE  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   993  000A00  0B7F               	andlw	-129
   994  000A02  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
   995  000A04  6E83               	movwf	131,c	;volatile
   996  000A06  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
   997  000A0A  0E06               	movlw	6
   998  000A0C  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
   999  000A0E                     u55:
  1000  000A0E  90D8               	bcf	status,0,c
  1001  000A10  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1002  000A12  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  1003  000A14  EF07  F005         	goto	u55
  1004  000A18  0E01               	movlw	1
  1005  000A1A  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1006  000A1C  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1007  000A1E  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1008  000A20  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1009  000A22  5083               	movf	131,w,c	;volatile
  1010  000A24  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1011  000A26  0BBF               	andlw	-65
  1012  000A28  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1013  000A2A  6E83               	movwf	131,c	;volatile
  1014                           
  1015                           ;flexlcd.h: 140: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1016  000A2C  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1017  000A30  0E05               	movlw	5
  1018  000A32  6E02               	movwf	(??_Lcd_Chr_CP+1)^0,c
  1019  000A34                     u65:
  1020  000A34  90D8               	bcf	status,0,c
  1021  000A36  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1022  000A38  2E02               	decfsz	(??_Lcd_Chr_CP+1)^0,f,c
  1023  000A3A  EF1A  F005         	goto	u65
  1024  000A3E  0E01               	movlw	1
  1025  000A40  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1026  000A42  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1027  000A44  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1028  000A46  5083               	movf	131,w,c	;volatile
  1029  000A48  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1030  000A4A  0BDF               	andlw	-33
  1031  000A4C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1032  000A4E  6E83               	movwf	131,c	;volatile
  1033  000A50  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1034  000A54  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1035  000A56  0E0F               	movlw	15
  1036  000A58  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1037  000A5A  0E01               	movlw	1
  1038  000A5C  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1039  000A5E  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1040  000A60  5083               	movf	131,w,c	;volatile
  1041  000A62  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1042  000A64  0BEF               	andlw	-17
  1043  000A66  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1044  000A68  6E83               	movwf	131,c	;volatile
  1045  000A6A                     
  1046                           ;flexlcd.h: 141: _delay(10);
  1047  000A6A  0E03               	movlw	3
  1048  000A6C                     u737:
  1049  000A6C  2EE8               	decfsz	wreg,f,c
  1050  000A6E  D7FE               	bra	u737
  1051  000A70  F000               	nop	
  1052  000A72                     
  1053                           ;flexlcd.h: 142: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1054  000A72  8284               	bsf	132,1,c	;volatile
  1055  000A74  0E03               	movlw	3
  1056  000A76                     u747:
  1057  000A76  2EE8               	decfsz	wreg,f,c
  1058  000A78  D7FE               	bra	u747
  1059  000A7A  F000               	nop	
  1060  000A7C  9284               	bcf	132,1,c	;volatile
  1061                           
  1062                           ;flexlcd.h: 143: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1063  000A7E  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1064  000A82  90D8               	bcf	status,0,c
  1065  000A84  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1066  000A86  90D8               	bcf	status,0,c
  1067  000A88  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1068  000A8A  90D8               	bcf	status,0,c
  1069  000A8C  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1070  000A8E  0E01               	movlw	1
  1071  000A90  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1072  000A92  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1073  000A94  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1074  000A96  5083               	movf	131,w,c	;volatile
  1075  000A98  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1076  000A9A  0B7F               	andlw	-129
  1077  000A9C  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1078  000A9E  6E83               	movwf	131,c	;volatile
  1079  000AA0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1080  000AA4  90D8               	bcf	status,0,c
  1081  000AA6  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1082  000AA8  90D8               	bcf	status,0,c
  1083  000AAA  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1084  000AAC  0E01               	movlw	1
  1085  000AAE  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1086  000AB0  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1087  000AB2  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1088  000AB4  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1089  000AB6  5083               	movf	131,w,c	;volatile
  1090  000AB8  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1091  000ABA  0BBF               	andlw	-65
  1092  000ABC  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1093  000ABE  6E83               	movwf	131,c	;volatile
  1094                           
  1095                           ;flexlcd.h: 144: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1096  000AC0  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1097  000AC4  90D8               	bcf	status,0,c
  1098  000AC6  3201               	rrcf	??_Lcd_Chr_CP^0,f,c
  1099  000AC8  0E01               	movlw	1
  1100  000ACA  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1101  000ACC  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1102  000ACE  4601               	rlncf	??_Lcd_Chr_CP^0,f,c
  1103  000AD0  5083               	movf	131,w,c	;volatile
  1104  000AD2  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1105  000AD4  0BDF               	andlw	-33
  1106  000AD6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1107  000AD8  6E83               	movwf	131,c	;volatile
  1108  000ADA  C003  F001         	movff	Lcd_Chr_CP@data,??_Lcd_Chr_CP
  1109  000ADE  0E01               	movlw	1
  1110  000AE0  1601               	andwf	??_Lcd_Chr_CP^0,f,c
  1111  000AE2  3A01               	swapf	??_Lcd_Chr_CP^0,f,c
  1112  000AE4  5083               	movf	131,w,c	;volatile
  1113  000AE6  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1114  000AE8  0BEF               	andlw	-17
  1115  000AEA  1801               	xorwf	??_Lcd_Chr_CP^0,w,c
  1116  000AEC  6E83               	movwf	131,c	;volatile
  1117  000AEE                     
  1118                           ;flexlcd.h: 145: _delay(10);
  1119  000AEE  0E03               	movlw	3
  1120  000AF0                     u757:
  1121  000AF0  2EE8               	decfsz	wreg,f,c
  1122  000AF2  D7FE               	bra	u757
  1123  000AF4  F000               	nop	
  1124  000AF6                     
  1125                           ;flexlcd.h: 146: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1126  000AF6  8284               	bsf	132,1,c	;volatile
  1127  000AF8  0E03               	movlw	3
  1128  000AFA                     u767:
  1129  000AFA  2EE8               	decfsz	wreg,f,c
  1130  000AFC  D7FE               	bra	u767
  1131  000AFE  F000               	nop	
  1132  000B00  9284               	bcf	132,1,c	;volatile
  1133  000B02                     
  1134                           ;flexlcd.h: 147: _delay((unsigned long)((5)*(8000000/4000000.0))); _delay((unsigned long
      +                          )((5500)*(8000000/4000000.0)));
  1135  000B02  0E03               	movlw	3
  1136  000B04                     u777:
  1137  000B04  2EE8               	decfsz	wreg,f,c
  1138  000B06  D7FE               	bra	u777
  1139  000B08  F000               	nop	
  1140  000B0A  0E0F               	movlw	15
  1141  000B0C  6E01               	movwf	??_Lcd_Chr_CP^0,c
  1142  000B0E  0E48               	movlw	72
  1143  000B10                     u787:
  1144  000B10  2EE8               	decfsz	wreg,f,c
  1145  000B12  D7FE               	bra	u787
  1146  000B14  2E01               	decfsz	??_Lcd_Chr_CP^0,f,c
  1147  000B16  D7FC               	bra	u787
  1148  000B18  0012               	return		;funcret
  1149  000B1A                     __end_of_Lcd_Chr_CP:
  1150                           	callstack 0
  1151                           
  1152 ;; *************** function _Lcd_Init *****************
  1153 ;; Defined at:
  1154 ;;		line 53 in file "flexlcd.h"
  1155 ;; Parameters:    Size  Location     Type
  1156 ;;		None
  1157 ;; Auto vars:     Size  Location     Type
  1158 ;;  data            1    4[COMRAM] unsigned char 
  1159 ;; Return value:  Size  Location     Type
  1160 ;;                  1    wreg      void 
  1161 ;; Registers used:
  1162 ;;		wreg, status,2, status,0, cstack
  1163 ;; Tracked objects:
  1164 ;;		On entry : 0/0
  1165 ;;		On exit  : 0/0
  1166 ;;		Unchanged: 0/0
  1167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1168 ;;      Params:         0       0       0       0       0       0       0
  1169 ;;      Locals:         1       0       0       0       0       0       0
  1170 ;;      Temps:          1       0       0       0       0       0       0
  1171 ;;      Totals:         2       0       0       0       0       0       0
  1172 ;;Total ram usage:        2 bytes
  1173 ;; Hardware stack levels used:    1
  1174 ;; Hardware stack levels required when called:    1
  1175 ;; This function calls:
  1176 ;;		_Lcd_Cmd
  1177 ;; This function is called by:
  1178 ;;		_main
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text3
  1183  000C46                     __ptext3:
  1184                           	callstack 0
  1185  000C46                     _Lcd_Init:
  1186                           	callstack 29
  1187  000C46                     
  1188                           ;flexlcd.h: 54: unsigned char data;;flexlcd.h: 55: TRISDbits.TRISD7 = 0;
  1189  000C46  9E95               	bcf	149,7,c	;volatile
  1190                           
  1191                           ;flexlcd.h: 56: TRISDbits.TRISD6 = 0;
  1192  000C48  9C95               	bcf	149,6,c	;volatile
  1193                           
  1194                           ;flexlcd.h: 57: TRISDbits.TRISD5 = 0;
  1195  000C4A  9A95               	bcf	149,5,c	;volatile
  1196                           
  1197                           ;flexlcd.h: 58: TRISDbits.TRISD4 = 0;
  1198  000C4C  9895               	bcf	149,4,c	;volatile
  1199                           
  1200                           ;flexlcd.h: 59: TRISEbits.TRISE2 = 0;
  1201  000C4E  9496               	bcf	150,2,c	;volatile
  1202                           
  1203                           ;flexlcd.h: 60: TRISEbits.TRISE1 = 0;
  1204  000C50  9296               	bcf	150,1,c	;volatile
  1205                           
  1206                           ;flexlcd.h: 61: PORTDbits.RD7 = 0;
  1207  000C52  9E83               	bcf	131,7,c	;volatile
  1208                           
  1209                           ;flexlcd.h: 62: PORTDbits.RD6 = 0;
  1210  000C54  9C83               	bcf	131,6,c	;volatile
  1211                           
  1212                           ;flexlcd.h: 63: PORTDbits.RD5 = 0;
  1213  000C56  9A83               	bcf	131,5,c	;volatile
  1214                           
  1215                           ;flexlcd.h: 64: PORTDbits.RD4 = 0;
  1216  000C58  9883               	bcf	131,4,c	;volatile
  1217                           
  1218                           ;flexlcd.h: 65: PORTEbits.RE1 = 0;
  1219  000C5A  9284               	bcf	132,1,c	;volatile
  1220                           
  1221                           ;flexlcd.h: 66: PORTEbits.RE2 = 0;
  1222  000C5C  9484               	bcf	132,2,c	;volatile
  1223  000C5E                     
  1224                           ;flexlcd.h: 67: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1225  000C5E  0E0F               	movlw	15
  1226  000C60  6E04               	movwf	??_Lcd_Init^0,c
  1227  000C62  0E48               	movlw	72
  1228  000C64                     u797:
  1229  000C64  2EE8               	decfsz	wreg,f,c
  1230  000C66  D7FE               	bra	u797
  1231  000C68  2E04               	decfsz	??_Lcd_Init^0,f,c
  1232  000C6A  D7FC               	bra	u797
  1233                           
  1234                           ;flexlcd.h: 68: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1235  000C6C  0E0F               	movlw	15
  1236  000C6E  6E04               	movwf	??_Lcd_Init^0,c
  1237  000C70  0E48               	movlw	72
  1238  000C72                     u807:
  1239  000C72  2EE8               	decfsz	wreg,f,c
  1240  000C74  D7FE               	bra	u807
  1241  000C76  2E04               	decfsz	??_Lcd_Init^0,f,c
  1242  000C78  D7FC               	bra	u807
  1243                           
  1244                           ;flexlcd.h: 69: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1245  000C7A  0E0F               	movlw	15
  1246  000C7C  6E04               	movwf	??_Lcd_Init^0,c
  1247  000C7E  0E48               	movlw	72
  1248  000C80                     u817:
  1249  000C80  2EE8               	decfsz	wreg,f,c
  1250  000C82  D7FE               	bra	u817
  1251  000C84  2E04               	decfsz	??_Lcd_Init^0,f,c
  1252  000C86  D7FC               	bra	u817
  1253                           
  1254                           ;flexlcd.h: 70: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1255  000C88  0E0F               	movlw	15
  1256  000C8A  6E04               	movwf	??_Lcd_Init^0,c
  1257  000C8C  0E48               	movlw	72
  1258  000C8E                     u827:
  1259  000C8E  2EE8               	decfsz	wreg,f,c
  1260  000C90  D7FE               	bra	u827
  1261  000C92  2E04               	decfsz	??_Lcd_Init^0,f,c
  1262  000C94  D7FC               	bra	u827
  1263                           
  1264                           ;flexlcd.h: 71: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1265  000C96  0E0F               	movlw	15
  1266  000C98  6E04               	movwf	??_Lcd_Init^0,c
  1267  000C9A  0E48               	movlw	72
  1268  000C9C                     u837:
  1269  000C9C  2EE8               	decfsz	wreg,f,c
  1270  000C9E  D7FE               	bra	u837
  1271  000CA0  2E04               	decfsz	??_Lcd_Init^0,f,c
  1272  000CA2  D7FC               	bra	u837
  1273                           
  1274                           ;flexlcd.h: 72: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1275  000CA4  0E0F               	movlw	15
  1276  000CA6  6E04               	movwf	??_Lcd_Init^0,c
  1277  000CA8  0E48               	movlw	72
  1278  000CAA                     u847:
  1279  000CAA  2EE8               	decfsz	wreg,f,c
  1280  000CAC  D7FE               	bra	u847
  1281  000CAE  2E04               	decfsz	??_Lcd_Init^0,f,c
  1282  000CB0  D7FC               	bra	u847
  1283  000CB2                     
  1284                           ;flexlcd.h: 73: for(data = 1; data < 4; data ++)
  1285  000CB2  0E01               	movlw	1
  1286  000CB4  6E05               	movwf	Lcd_Init@data^0,c
  1287  000CB6                     l55:
  1288                           
  1289                           ;flexlcd.h: 74: {;flexlcd.h: 75: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 1; PORTEbits.RE1 = 0;
  1290  000CB6  9E83               	bcf	131,7,c	;volatile
  1291  000CB8  9C83               	bcf	131,6,c	;volatile
  1292  000CBA  8A83               	bsf	131,5,c	;volatile
  1293  000CBC  8883               	bsf	131,4,c	;volatile
  1294  000CBE  9284               	bcf	132,1,c	;volatile
  1295                           
  1296                           ;flexlcd.h: 76: PORTEbits.RE2 = 0; PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 =
      +                           1; PORTDbits.RD4 = 1;
  1297  000CC0  9484               	bcf	132,2,c	;volatile
  1298  000CC2  9E83               	bcf	131,7,c	;volatile
  1299  000CC4  9C83               	bcf	131,6,c	;volatile
  1300  000CC6  8A83               	bsf	131,5,c	;volatile
  1301  000CC8  8883               	bsf	131,4,c	;volatile
  1302                           
  1303                           ;flexlcd.h: 77: PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  1304  000CCA  8284               	bsf	132,1,c	;volatile
  1305  000CCC  9484               	bcf	132,2,c	;volatile
  1306  000CCE                     
  1307                           ;flexlcd.h: 78: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1308  000CCE  0E03               	movlw	3
  1309  000CD0                     u857:
  1310  000CD0  2EE8               	decfsz	wreg,f,c
  1311  000CD2  D7FE               	bra	u857
  1312  000CD4  F000               	nop	
  1313  000CD6                     
  1314                           ;flexlcd.h: 79: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           1; PORTEbits.RE1 = 0;
  1315  000CD6  9E83               	bcf	131,7,c	;volatile
  1316  000CD8  9C83               	bcf	131,6,c	;volatile
  1317  000CDA  8A83               	bsf	131,5,c	;volatile
  1318  000CDC  8883               	bsf	131,4,c	;volatile
  1319  000CDE  9284               	bcf	132,1,c	;volatile
  1320  000CE0                     
  1321                           ;flexlcd.h: 80: PORTEbits.RE2 = 0;
  1322  000CE0  9484               	bcf	132,2,c	;volatile
  1323                           
  1324                           ;flexlcd.h: 81: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1325  000CE2  0E0F               	movlw	15
  1326  000CE4  6E04               	movwf	??_Lcd_Init^0,c
  1327  000CE6  0E48               	movlw	72
  1328  000CE8                     u867:
  1329  000CE8  2EE8               	decfsz	wreg,f,c
  1330  000CEA  D7FE               	bra	u867
  1331  000CEC  2E04               	decfsz	??_Lcd_Init^0,f,c
  1332  000CEE  D7FC               	bra	u867
  1333  000CF0  2A05               	incf	Lcd_Init@data^0,f,c
  1334  000CF2  0E03               	movlw	3
  1335  000CF4  6405               	cpfsgt	Lcd_Init@data^0,c
  1336  000CF6  EF7F  F006         	goto	u71
  1337  000CFA  EF81  F006         	goto	u70
  1338  000CFE                     u71:
  1339  000CFE  EF5B  F006         	goto	l55
  1340  000D02                     u70:
  1341  000D02                     
  1342                           ;flexlcd.h: 82: };flexlcd.h: 83: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1
      +                          ; PORTDbits.RD4 = 0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1343  000D02  9E83               	bcf	131,7,c	;volatile
  1344  000D04  9C83               	bcf	131,6,c	;volatile
  1345  000D06  8A83               	bsf	131,5,c	;volatile
  1346  000D08  9883               	bcf	131,4,c	;volatile
  1347  000D0A  9284               	bcf	132,1,c	;volatile
  1348  000D0C  9484               	bcf	132,2,c	;volatile
  1349                           
  1350                           ;flexlcd.h: 84: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 1; PORTEbits.RE2 = 0;
  1351  000D0E  9E83               	bcf	131,7,c	;volatile
  1352  000D10  9C83               	bcf	131,6,c	;volatile
  1353  000D12  8A83               	bsf	131,5,c	;volatile
  1354  000D14  9883               	bcf	131,4,c	;volatile
  1355  000D16  8284               	bsf	132,1,c	;volatile
  1356  000D18  9484               	bcf	132,2,c	;volatile
  1357  000D1A                     
  1358                           ;flexlcd.h: 85: _delay((unsigned long)((5)*(8000000/4000000.0)));
  1359  000D1A  0E03               	movlw	3
  1360  000D1C                     u877:
  1361  000D1C  2EE8               	decfsz	wreg,f,c
  1362  000D1E  D7FE               	bra	u877
  1363  000D20  F000               	nop	
  1364  000D22                     
  1365                           ;flexlcd.h: 86: PORTDbits.RD7 = 0; PORTDbits.RD6 = 0; PORTDbits.RD5 = 1; PORTDbits.RD4 =
      +                           0; PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1366  000D22  9E83               	bcf	131,7,c	;volatile
  1367  000D24  9C83               	bcf	131,6,c	;volatile
  1368  000D26  8A83               	bsf	131,5,c	;volatile
  1369  000D28  9883               	bcf	131,4,c	;volatile
  1370  000D2A  9284               	bcf	132,1,c	;volatile
  1371  000D2C  9484               	bcf	132,2,c	;volatile
  1372                           
  1373                           ;flexlcd.h: 87: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1374  000D2E  0E0F               	movlw	15
  1375  000D30  6E04               	movwf	??_Lcd_Init^0,c
  1376  000D32  0E48               	movlw	72
  1377  000D34                     u887:
  1378  000D34  2EE8               	decfsz	wreg,f,c
  1379  000D36  D7FE               	bra	u887
  1380  000D38  2E04               	decfsz	??_Lcd_Init^0,f,c
  1381  000D3A  D7FC               	bra	u887
  1382  000D3C  0E28               	movlw	40
  1383  000D3E  EC8D  F005         	call	_Lcd_Cmd
  1384  000D42  0E10               	movlw	16
  1385  000D44  EC8D  F005         	call	_Lcd_Cmd
  1386  000D48  0E01               	movlw	1
  1387  000D4A  EC8D  F005         	call	_Lcd_Cmd
  1388  000D4E  0E0F               	movlw	15
  1389  000D50  EC8D  F005         	call	_Lcd_Cmd
  1390  000D54  0012               	return		;funcret
  1391  000D56                     __end_of_Lcd_Init:
  1392                           	callstack 0
  1393                           
  1394 ;; *************** function _Lcd_Cmd *****************
  1395 ;; Defined at:
  1396 ;;		line 151 in file "flexlcd.h"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  data            1    wreg     unsigned char 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  data            1    2[COMRAM] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg, status,2, status,0
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1410 ;;      Params:         0       0       0       0       0       0       0
  1411 ;;      Locals:         1       0       0       0       0       0       0
  1412 ;;      Temps:          2       0       0       0       0       0       0
  1413 ;;      Totals:         3       0       0       0       0       0       0
  1414 ;;Total ram usage:        3 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; This function calls:
  1417 ;;		Nothing
  1418 ;; This function is called by:
  1419 ;;		_Lcd_Init
  1420 ;;		_Lcd_Out2
  1421 ;;		_main
  1422 ;;		_Lcd_Out
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           	psect	text4
  1427  000B1A                     __ptext4:
  1428                           	callstack 0
  1429  000B1A                     _Lcd_Cmd:
  1430                           	callstack 29
  1431                           
  1432                           ;incstack = 0
  1433                           ;Lcd_Cmd@data stored from wreg
  1434  000B1A  6E03               	movwf	Lcd_Cmd@data^0,c
  1435  000B1C                     
  1436                           ;flexlcd.h: 152: PORTEbits.RE1 = 0; PORTEbits.RE2 = 0;
  1437  000B1C  9284               	bcf	132,1,c	;volatile
  1438  000B1E  9484               	bcf	132,2,c	;volatile
  1439  000B20                     
  1440                           ;flexlcd.h: 153: PORTDbits.RD7 = (data & 0b10000000)>>7; PORTDbits.RD6 = (data & 0b01000
      +                          000)>>6;
  1441  000B20  6A01               	clrf	??_Lcd_Cmd^0,c
  1442  000B22  AE03               	btfss	Lcd_Cmd@data^0,7,c
  1443  000B24  D001               	bra	u15
  1444  000B26  2A01               	incf	??_Lcd_Cmd^0,f,c
  1445  000B28                     u15:
  1446  000B28  0E01               	movlw	1
  1447  000B2A  1601               	andwf	??_Lcd_Cmd^0,f,c
  1448  000B2C  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1449  000B2E  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1450  000B30  5083               	movf	131,w,c	;volatile
  1451  000B32  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1452  000B34  0B7F               	andlw	-129
  1453  000B36  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1454  000B38  6E83               	movwf	131,c	;volatile
  1455  000B3A  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1456  000B3E  0E06               	movlw	6
  1457  000B40  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1458  000B42                     u25:
  1459  000B42  90D8               	bcf	status,0,c
  1460  000B44  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1461  000B46  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1462  000B48  EFA1  F005         	goto	u25
  1463  000B4C  0E01               	movlw	1
  1464  000B4E  1601               	andwf	??_Lcd_Cmd^0,f,c
  1465  000B50  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1466  000B52  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1467  000B54  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1468  000B56  5083               	movf	131,w,c	;volatile
  1469  000B58  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1470  000B5A  0BBF               	andlw	-65
  1471  000B5C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1472  000B5E  6E83               	movwf	131,c	;volatile
  1473                           
  1474                           ;flexlcd.h: 154: PORTDbits.RD5 = (data & 0b00100000)>>5; PORTDbits.RD4 = (data & 0b00010
      +                          000)>>4;
  1475  000B60  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1476  000B64  0E05               	movlw	5
  1477  000B66  6E02               	movwf	(??_Lcd_Cmd+1)^0,c
  1478  000B68                     u35:
  1479  000B68  90D8               	bcf	status,0,c
  1480  000B6A  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1481  000B6C  2E02               	decfsz	(??_Lcd_Cmd+1)^0,f,c
  1482  000B6E  EFB4  F005         	goto	u35
  1483  000B72  0E01               	movlw	1
  1484  000B74  1601               	andwf	??_Lcd_Cmd^0,f,c
  1485  000B76  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1486  000B78  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1487  000B7A  5083               	movf	131,w,c	;volatile
  1488  000B7C  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1489  000B7E  0BDF               	andlw	-33
  1490  000B80  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1491  000B82  6E83               	movwf	131,c	;volatile
  1492  000B84  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1493  000B88  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1494  000B8A  0E0F               	movlw	15
  1495  000B8C  1601               	andwf	??_Lcd_Cmd^0,f,c
  1496  000B8E  0E01               	movlw	1
  1497  000B90  1601               	andwf	??_Lcd_Cmd^0,f,c
  1498  000B92  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1499  000B94  5083               	movf	131,w,c	;volatile
  1500  000B96  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1501  000B98  0BEF               	andlw	-17
  1502  000B9A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1503  000B9C  6E83               	movwf	131,c	;volatile
  1504  000B9E                     
  1505                           ;flexlcd.h: 155: _delay(10);
  1506  000B9E  0E03               	movlw	3
  1507  000BA0                     u897:
  1508  000BA0  2EE8               	decfsz	wreg,f,c
  1509  000BA2  D7FE               	bra	u897
  1510  000BA4  F000               	nop	
  1511  000BA6                     
  1512                           ;flexlcd.h: 156: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1513  000BA6  8284               	bsf	132,1,c	;volatile
  1514  000BA8  0E03               	movlw	3
  1515  000BAA                     u907:
  1516  000BAA  2EE8               	decfsz	wreg,f,c
  1517  000BAC  D7FE               	bra	u907
  1518  000BAE  F000               	nop	
  1519  000BB0  9284               	bcf	132,1,c	;volatile
  1520                           
  1521                           ;flexlcd.h: 157: PORTDbits.RD7 = (data & 0b00001000)>>3; PORTDbits.RD6 = (data & 0b00000
      +                          100)>>2;
  1522  000BB2  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1523  000BB6  90D8               	bcf	status,0,c
  1524  000BB8  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1525  000BBA  90D8               	bcf	status,0,c
  1526  000BBC  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1527  000BBE  90D8               	bcf	status,0,c
  1528  000BC0  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1529  000BC2  0E01               	movlw	1
  1530  000BC4  1601               	andwf	??_Lcd_Cmd^0,f,c
  1531  000BC6  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1532  000BC8  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1533  000BCA  5083               	movf	131,w,c	;volatile
  1534  000BCC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1535  000BCE  0B7F               	andlw	-129
  1536  000BD0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1537  000BD2  6E83               	movwf	131,c	;volatile
  1538  000BD4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1539  000BD8  90D8               	bcf	status,0,c
  1540  000BDA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1541  000BDC  90D8               	bcf	status,0,c
  1542  000BDE  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1543  000BE0  0E01               	movlw	1
  1544  000BE2  1601               	andwf	??_Lcd_Cmd^0,f,c
  1545  000BE4  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1546  000BE6  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1547  000BE8  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1548  000BEA  5083               	movf	131,w,c	;volatile
  1549  000BEC  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1550  000BEE  0BBF               	andlw	-65
  1551  000BF0  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1552  000BF2  6E83               	movwf	131,c	;volatile
  1553                           
  1554                           ;flexlcd.h: 158: PORTDbits.RD5 = (data & 0b00000010)>>1; PORTDbits.RD4 = (data & 0b00000
      +                          001);
  1555  000BF4  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1556  000BF8  90D8               	bcf	status,0,c
  1557  000BFA  3201               	rrcf	??_Lcd_Cmd^0,f,c
  1558  000BFC  0E01               	movlw	1
  1559  000BFE  1601               	andwf	??_Lcd_Cmd^0,f,c
  1560  000C00  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1561  000C02  4601               	rlncf	??_Lcd_Cmd^0,f,c
  1562  000C04  5083               	movf	131,w,c	;volatile
  1563  000C06  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1564  000C08  0BDF               	andlw	-33
  1565  000C0A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1566  000C0C  6E83               	movwf	131,c	;volatile
  1567  000C0E  C003  F001         	movff	Lcd_Cmd@data,??_Lcd_Cmd
  1568  000C12  0E01               	movlw	1
  1569  000C14  1601               	andwf	??_Lcd_Cmd^0,f,c
  1570  000C16  3A01               	swapf	??_Lcd_Cmd^0,f,c
  1571  000C18  5083               	movf	131,w,c	;volatile
  1572  000C1A  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1573  000C1C  0BEF               	andlw	-17
  1574  000C1E  1801               	xorwf	??_Lcd_Cmd^0,w,c
  1575  000C20  6E83               	movwf	131,c	;volatile
  1576  000C22                     
  1577                           ;flexlcd.h: 159: _delay(10);
  1578  000C22  0E03               	movlw	3
  1579  000C24                     u917:
  1580  000C24  2EE8               	decfsz	wreg,f,c
  1581  000C26  D7FE               	bra	u917
  1582  000C28  F000               	nop	
  1583  000C2A                     
  1584                           ;flexlcd.h: 160: PORTEbits.RE1 = 1; _delay((unsigned long)((5)*(8000000/4000000.0))); PO
      +                          RTEbits.RE1 = 0;
  1585  000C2A  8284               	bsf	132,1,c	;volatile
  1586  000C2C  0E03               	movlw	3
  1587  000C2E                     u927:
  1588  000C2E  2EE8               	decfsz	wreg,f,c
  1589  000C30  D7FE               	bra	u927
  1590  000C32  F000               	nop	
  1591  000C34  9284               	bcf	132,1,c	;volatile
  1592  000C36                     
  1593                           ;flexlcd.h: 161: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  1594  000C36  0E0F               	movlw	15
  1595  000C38  6E01               	movwf	??_Lcd_Cmd^0,c
  1596  000C3A  0E48               	movlw	72
  1597  000C3C                     u937:
  1598  000C3C  2EE8               	decfsz	wreg,f,c
  1599  000C3E  D7FE               	bra	u937
  1600  000C40  2E01               	decfsz	??_Lcd_Cmd^0,f,c
  1601  000C42  D7FC               	bra	u937
  1602  000C44  0012               	return		;funcret
  1603  000C46                     __end_of_Lcd_Cmd:
  1604                           	callstack 0
  1605                           
  1606                           	psect	rparam
  1607  0000                     
  1608                           	psect	idloc
  1609                           
  1610                           ;Config register IDLOC0 @ 0x200000
  1611                           ;	unspecified, using default values
  1612  200000                     	org	2097152
  1613  200000  FF                 	db	255
  1614                           
  1615                           ;Config register IDLOC1 @ 0x200001
  1616                           ;	unspecified, using default values
  1617  200001                     	org	2097153
  1618  200001  FF                 	db	255
  1619                           
  1620                           ;Config register IDLOC2 @ 0x200002
  1621                           ;	unspecified, using default values
  1622  200002                     	org	2097154
  1623  200002  FF                 	db	255
  1624                           
  1625                           ;Config register IDLOC3 @ 0x200003
  1626                           ;	unspecified, using default values
  1627  200003                     	org	2097155
  1628  200003  FF                 	db	255
  1629                           
  1630                           ;Config register IDLOC4 @ 0x200004
  1631                           ;	unspecified, using default values
  1632  200004                     	org	2097156
  1633  200004  FF                 	db	255
  1634                           
  1635                           ;Config register IDLOC5 @ 0x200005
  1636                           ;	unspecified, using default values
  1637  200005                     	org	2097157
  1638  200005  FF                 	db	255
  1639                           
  1640                           ;Config register IDLOC6 @ 0x200006
  1641                           ;	unspecified, using default values
  1642  200006                     	org	2097158
  1643  200006  FF                 	db	255
  1644                           
  1645                           ;Config register IDLOC7 @ 0x200007
  1646                           ;	unspecified, using default values
  1647  200007                     	org	2097159
  1648  200007  FF                 	db	255
  1649                           
  1650                           	psect	config
  1651                           
  1652                           ; Padding undefined space
  1653  300000                     	org	3145728
  1654  300000  FF                 	db	255
  1655                           
  1656                           ;Config register CONFIG1H @ 0x300001
  1657                           ;	Oscillator Selection bits
  1658                           ;	OSC = HS, HS oscillator
  1659                           ;	Fail-Safe Clock Monitor Enable bit
  1660                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1661                           ;	Internal/External Oscillator Switchover bit
  1662                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1663  300001                     	org	3145729
  1664  300001  02                 	db	2
  1665                           
  1666                           ;Config register CONFIG2L @ 0x300002
  1667                           ;	Power-up Timer Enable bit
  1668                           ;	PWRT = OFF, PWRT disabled
  1669                           ;	Brown-out Reset Enable bits
  1670                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1671                           ;	Brown Out Reset Voltage bits
  1672                           ;	BORV = 3, Minimum setting
  1673  300002                     	org	3145730
  1674  300002  1F                 	db	31
  1675                           
  1676                           ;Config register CONFIG2H @ 0x300003
  1677                           ;	Watchdog Timer Enable bit
  1678                           ;	WDT = ON, WDT enabled
  1679                           ;	Watchdog Timer Postscale Select bits
  1680                           ;	WDTPS = 32768, 1:32768
  1681  300003                     	org	3145731
  1682  300003  1F                 	db	31
  1683                           
  1684                           ; Padding undefined space
  1685  300004                     	org	3145732
  1686  300004  FF                 	db	255
  1687                           
  1688                           ;Config register CONFIG3H @ 0x300005
  1689                           ;	CCP2 MUX bit
  1690                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1691                           ;	PORTB A/D Enable bit
  1692                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1693                           ;	Low-Power Timer1 Oscillator Enable bit
  1694                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1695                           ;	MCLR Pin Enable bit
  1696                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1697  300005                     	org	3145733
  1698  300005  81                 	db	129
  1699                           
  1700                           ;Config register CONFIG4L @ 0x300006
  1701                           ;	Stack Full/Underflow Reset Enable bit
  1702                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1703                           ;	Single-Supply ICSP Enable bit
  1704                           ;	LVP = ON, Single-Supply ICSP enabled
  1705                           ;	Extended Instruction Set Enable bit
  1706                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1707                           ;	Background Debugger Enable bit
  1708                           ;	DEBUG = 0x1, unprogrammed default
  1709  300006                     	org	3145734
  1710  300006  85                 	db	133
  1711                           
  1712                           ; Padding undefined space
  1713  300007                     	org	3145735
  1714  300007  FF                 	db	255
  1715                           
  1716                           ;Config register CONFIG5L @ 0x300008
  1717                           ;	Code Protection bit
  1718                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  1719                           ;	Code Protection bit
  1720                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  1721                           ;	Code Protection bit
  1722                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  1723                           ;	Code Protection bit
  1724                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  1725  300008                     	org	3145736
  1726  300008  0F                 	db	15
  1727                           
  1728                           ;Config register CONFIG5H @ 0x300009
  1729                           ;	Boot Block Code Protection bit
  1730                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1731                           ;	Data EEPROM Code Protection bit
  1732                           ;	CPD = OFF, Data EEPROM not code-protected
  1733  300009                     	org	3145737
  1734  300009  C0                 	db	192
  1735                           
  1736                           ;Config register CONFIG6L @ 0x30000A
  1737                           ;	Write Protection bit
  1738                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  1739                           ;	Write Protection bit
  1740                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  1741                           ;	Write Protection bit
  1742                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  1743                           ;	Write Protection bit
  1744                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  1745  30000A                     	org	3145738
  1746  30000A  0F                 	db	15
  1747                           
  1748                           ;Config register CONFIG6H @ 0x30000B
  1749                           ;	Configuration Register Write Protection bit
  1750                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1751                           ;	Boot Block Write Protection bit
  1752                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  1753                           ;	Data EEPROM Write Protection bit
  1754                           ;	WRTD = OFF, Data EEPROM not write-protected
  1755  30000B                     	org	3145739
  1756  30000B  E0                 	db	224
  1757                           
  1758                           ;Config register CONFIG7L @ 0x30000C
  1759                           ;	Table Read Protection bit
  1760                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  1761                           ;	Table Read Protection bit
  1762                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  1763                           ;	Table Read Protection bit
  1764                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  1765                           ;	Table Read Protection bit
  1766                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1767  30000C                     	org	3145740
  1768  30000C  0F                 	db	15
  1769                           
  1770                           ;Config register CONFIG7H @ 0x30000D
  1771                           ;	Boot Block Table Read Protection bit
  1772                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1773  30000D                     	org	3145741
  1774  30000D  40                 	db	64
  1775                           tosu	equ	0xFFF
  1776                           tosh	equ	0xFFE
  1777                           tosl	equ	0xFFD
  1778                           stkptr	equ	0xFFC
  1779                           pclatu	equ	0xFFB
  1780                           pclath	equ	0xFFA
  1781                           pcl	equ	0xFF9
  1782                           tblptru	equ	0xFF8
  1783                           tblptrh	equ	0xFF7
  1784                           tblptrl	equ	0xFF6
  1785                           tablat	equ	0xFF5
  1786                           prodh	equ	0xFF4
  1787                           prodl	equ	0xFF3
  1788                           indf0	equ	0xFEF
  1789                           postinc0	equ	0xFEE
  1790                           postdec0	equ	0xFED
  1791                           preinc0	equ	0xFEC
  1792                           plusw0	equ	0xFEB
  1793                           fsr0h	equ	0xFEA
  1794                           fsr0l	equ	0xFE9
  1795                           wreg	equ	0xFE8
  1796                           indf1	equ	0xFE7
  1797                           postinc1	equ	0xFE6
  1798                           postdec1	equ	0xFE5
  1799                           preinc1	equ	0xFE4
  1800                           plusw1	equ	0xFE3
  1801                           fsr1h	equ	0xFE2
  1802                           fsr1l	equ	0xFE1
  1803                           bsr	equ	0xFE0
  1804                           indf2	equ	0xFDF
  1805                           postinc2	equ	0xFDE
  1806                           postdec2	equ	0xFDD
  1807                           preinc2	equ	0xFDC
  1808                           plusw2	equ	0xFDB
  1809                           fsr2h	equ	0xFDA
  1810                           fsr2l	equ	0xFD9
  1811                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        1
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     10      12
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Lcd_Out2@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> STR_12(CODE[2]), STR_11(CODE[2]), STR_10(CODE[2]), STR_9(CODE[2]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Out2
    _Lcd_Out2->_Lcd_Chr_CP
    _Lcd_Out2->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    2575
                                              8 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Init
                           _Lcd_Out2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out2                                             5     2      3    2245
                                              3 COMRAM     5     2      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     210
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     120
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Cmd
   _Lcd_Init
     _Lcd_Cmd
   _Lcd_Out2
     _Lcd_Chr_CP
     _Lcd_Cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      A       C       1        9.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       C      15        0.0%
DATA                 0      0       C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Dec 02 15:15:06 2020

                     l55 0CB6                       l56 0D02                       l57 0D54  
                     l83 0DE4                       l86 0B18                       l89 0C44  
                     l98 067C                       l99 06CC                       u15 0B28  
                     u25 0B42                       u35 0B68                       u45 09F4  
                     u70 0D02                       u71 0CFE                       u55 0A0E  
                     u65 0A34                      l110 07E4                      l102 0712  
                    l121 08FA                      l113 082A                      l105 0758  
                    l124 0940                      l116 0870                      l127 0986  
                    l900 0C34                      l902 0C36                      l910 0A72  
                    l920 0AF8                      l912 0A74                      l904 09E8  
                    l930 0C5E                      l922 0B00                      l914 0A7C  
                    l906 09EC                      l940 0CD6                      l932 0CB2  
                    l924 0B02                      l916 0AEE                      l908 0A6A  
                    l950 0CE0                      l942 0CD8                      l926 0B0A  
                    l918 0AF6                      l960 0D26                      l952 0CF0  
                    l944 0CDA                      l928 0C46                      l890 0BA8  
                    l882 0B1C                      l970 0D3C                      l962 0D28  
                    l954 0D1A                      l946 0CDC                      l938 0CCE  
                    l892 0BB0                      l884 0B20                      l980 0D4E  
                    l972 0D42                      l964 0D2A                      l956 0D22  
                    l948 0CDE                      l894 0C22                      l886 0B9E  
                    l982 0D4E                      l974 0D42                      l966 0D2C  
                    l958 0D24                      l896 0C2A                      l888 0BA6  
                    l976 0D48                      l968 0D3C                      l898 0C2C  
                    l978 0D48                      u400 073E                      u401 073A  
                    u410 0766                      u411 0762                      u340 0DE4  
                    u500 089A                      u420 0784                      u341 0DE0  
                    u501 0896                      u421 0780                      u510 08C2  
                    u430 07AC                      u350 0694                      u511 08BE  
                    u431 07A8                      u351 0690                      u520 08E0  
                    u440 07CA                      u360 06B2                      u521 08DC  
                    u441 07C6                      u361 06AE                      u530 0908  
                    u450 07F2                      u370 06DA                      u531 0904  
                    u451 07EE                      u371 06D6                      u540 0926  
                    u460 0810                      u380 06F8                      u541 0922  
                    u461 080C                      u381 06F4                      u550 094E  
                    u470 0838                      u390 0720                      u551 094A  
                    u471 0834                      u391 071C                      u607 069A  
                    u560 096C                      u480 0856                      u561 0968  
                    u481 0852                      u617 06E0                      u570 0994  
                    u490 087E                      u571 0990                      u707 0954  
                    u491 087A                      u627 0726                      u580 09B2  
                    u581 09AE                      u717 099A                      u637 076C  
                    u807 0C72                      u727 09D0                      u647 07B2  
                    u817 0C80                      u737 0A6C                      u657 07F8  
                    u907 0BAA                      u827 0C8E                      u747 0A76  
                    u667 083E                      u917 0C24                      u837 0C9C  
                    u757 0AF0                      u677 0884                      u597 066E  
                    u927 0C2E                      u847 0CAA                      u767 0AFA  
                    u687 08C8                      u937 0C3C                      u857 0CD0  
                    u777 0B04                      u697 090E                      u867 0CE8  
                    u787 0B10                      u877 0D1C                      u797 0C64  
                    u887 0D34                      u897 0BA0                      _key 000C  
                    wreg 000FE8                     l1200 0682                     l1210 06B2  
                   l1202 0684                     l1300 095E                     l1220 06FC  
                   l1212 06B6                     l1204 0686                     l1310 09B2  
                   l1302 096C                     l1230 0766                     l1222 0720  
                   l1214 06DA                     l1206 0694                     l1312 09B6  
                   l1304 0970                     l1240 079C                     l1232 0776  
                   l1224 0730                     l1216 06EA                     l1208 06A4  
                   l1170 0D7A                     l1162 0D58                     l1306 0994  
                   l1314 09C8                     l1250 07CE                     l1242 079E  
                   l1234 0784                     l1226 073E                     l1218 06F8  
                   l1180 0DC4                     l1164 0D5C                     l1316 09CA  
                   l1308 09A4                     l1260 0838                     l1252 07F2  
                   l1244 07AC                     l1236 0788                     l1228 0742  
                   l1182 0DC8                     l1166 0D66                     l1174 0D84  
                   l1270 088C                     l1262 0848                     l1254 0802  
                   l1246 07BC                     l1238 079A                     l1190 065A  
                   l1168 0D70                     l1176 0DAA                     l1280 08B4  
                   l1272 089A                     l1264 0856                     l1256 0810  
                   l1248 07CA                     l1192 065E                     l1184 061A  
                   l1178 0DB4                     l1290 0908                     l1282 08C2  
                   l1274 089E                     l1266 085A                     l1258 0814  
                   l1194 0664                     l1186 063E                     l1292 0918  
                   l1284 08D2                     l1268 087E                     l1276 08B0  
                   l1196 067E                     l1188 0640                     l1294 0926  
                   l1286 08E0                     l1278 08B2                     l1198 0680  
                   l1296 092A                     l1288 08E4                     l1298 094E  
                   STR_1 0605                     STR_2 060B                     STR_3 0611  
                   STR_4 0617                     STR_5 0607                     STR_6 060D  
                   STR_7 0613                     STR_8 0603                     STR_9 0609  
                   _LATB 000F8A                     _LATC 000F8B                     _LATD 000F8C  
                   _LATE 000F8D                     _main 061A                     start 0000  
        __end_of_Lcd_Cmd 0C46             ___param_bank 000000               _Lcd_Chr_CP 09E6  
         Lcd_Out2@buffer 0005                    ?_main 0001                    STR_10 060F  
                  STR_11 0615                    STR_12 0601                    _PORTB 000F81  
                  _PORTC 000F82                    _PORTD 000F83                    _PORTE 000F84  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _tecla 000B                    tablat 000FF5  
                  status 000FD8         __end_of_Lcd_Init 0D56         __end_of_Lcd_Out2 0DE6  
        __initialization 0DE6             __end_of_main 09E6                   ??_main 0009  
          __activetblptr 000002                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _INTCON 000FF2                ??_Lcd_Cmd 0001              ?_Lcd_Chr_CP 0001  
           __pdataCOMRAM 000C             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0080  
__end_of__initialization 0DFA            ___rparam_used 000001           __pcstackCOMRAM 0001  
              ?_Lcd_Init 0001                ?_Lcd_Out2 0004      __size_of_Lcd_Chr_CP 0134  
                _INTCON2 000FF1                  _INTCON3 000FF0               ??_Lcd_Init 0004  
             ??_Lcd_Out2 0007                  _Lcd_Cmd 0B1A                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0600                  __pcinit 0DE6  
                __ramtop 0600                  __ptext0 061A                  __ptext1 0D56  
                __ptext2 09E6                  __ptext3 0C46                  __ptext4 0B1A  
   end_of_initialization 0DFA            __Lmediumconst 0000             ??_Lcd_Chr_CP 0001  
              Lcd_Out2@x 0004                Lcd_Out2@y 0007                _PORTDbits 000F83  
              _PORTEbits 000F84                _TRISDbits 000F95                _TRISEbits 000F96  
     __end_of_Lcd_Chr_CP 0B1A            __pidataCOMRAM 0E04      start_initialization 0DE6  
      __size_of_Lcd_Init 0110        __size_of_Lcd_Out2 0090              __pbssCOMRAM 000B  
               ?_Lcd_Cmd 0001              __smallconst 0600                 _LATBbits 000F8A  
           Lcd_Init@data 0005             Lcd_Out2@data 0008                 _Lcd_Init 0C46  
               _Lcd_Out2 0D56         __size_of_Lcd_Cmd 012C                 __Hrparam 0000  
               __Lrparam 0000           Lcd_Chr_CP@data 0003              Lcd_Cmd@data 0003  
          __size_of_main 03CC  
