

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Dec 02 14:45:11 2020

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4520 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _TMR0	set	4054
    53  0000                     _LATBbits	set	3978
    54  0000                     _T0CON	set	4053
    55  0000                     _INTCONbits	set	4082
    56  0000                     _INTCON2bits	set	4081
    57  0000                     _ADCON1	set	4033
    58  0000                     _LATD	set	3980
    59  0000                     _PORTD	set	3971
    60  0000                     _LATB	set	3978
    61  0000                     _PORTB	set	3969
    62  0000                     _LATA	set	3977
    63  0000                     _PORTA	set	3968
    64  0000                     _TRISD	set	3989
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISA	set	3986
    67                           
    68                           ; #config settings
    69                           
    70                           	psect	cinit
    71  000294                     __pcinit:
    72                           	callstack 0
    73  000294                     start_initialization:
    74                           	callstack 0
    75  000294                     __initialization:
    76                           	callstack 0
    77                           
    78                           ; Clear objects allocated to COMRAM (3 bytes)
    79  000294  6A09               	clrf	(__pbssCOMRAM+2)& (0+255),c
    80  000296  6A08               	clrf	(__pbssCOMRAM+1)& (0+255),c
    81  000298  6A07               	clrf	__pbssCOMRAM& (0+255),c
    82  00029A                     end_of_initialization:
    83                           	callstack 0
    84  00029A                     __end_of__initialization:
    85                           	callstack 0
    86  00029A  900A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    87  00029C  920A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    88  00029E  0E00               	movlw	low (__Lmediumconst shr (0+16))
    89  0002A0  6EF8               	movwf	tblptru,c
    90  0002A2  0100               	movlb	0
    91  0002A4  EF09  F000         	goto	_main	;jump to C main() function
    92                           
    93                           	psect	bssCOMRAM
    94  000007                     __pbssCOMRAM:
    95                           	callstack 0
    96  000007                     _count:
    97                           	callstack 0
    98  000007                     	ds	2
    99  000009                     _tmp:
   100                           	callstack 0
   101  000009                     	ds	1
   102                           
   103                           	psect	cstackCOMRAM
   104  000001                     __pcstackCOMRAM:
   105                           	callstack 0
   106  000001                     ??_isr:
   107                           
   108                           ; 1 bytes @ 0x0
   109  000001                     	ds	1
   110  000002                     display7s@v:
   111                           	callstack 0
   112                           
   113                           ; 1 bytes @ 0x1
   114  000002                     	ds	1
   115  000003                     ??_main:
   116                           
   117                           ; 1 bytes @ 0x2
   118  000003                     	ds	2
   119  000005                     main@i:
   120                           	callstack 0
   121                           
   122                           ; 2 bytes @ 0x4
   123  000005                     	ds	2
   124                           
   125 ;;
   126 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   127 ;;
   128 ;; *************** function _main *****************
   129 ;; Defined at:
   130 ;;		line 17 in file "main7seg4.c"
   131 ;; Parameters:    Size  Location     Type
   132 ;;		None
   133 ;; Auto vars:     Size  Location     Type
   134 ;;  i               2    4[COMRAM] int 
   135 ;; Return value:  Size  Location     Type
   136 ;;                  1    wreg      void 
   137 ;; Registers used:
   138 ;;		wreg, status,2, status,0, cstack
   139 ;; Tracked objects:
   140 ;;		On entry : 0/0
   141 ;;		On exit  : 0/0
   142 ;;		Unchanged: 0/0
   143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   144 ;;      Params:         0       0       0       0       0       0       0
   145 ;;      Locals:         2       0       0       0       0       0       0
   146 ;;      Temps:          2       0       0       0       0       0       0
   147 ;;      Totals:         4       0       0       0       0       0       0
   148 ;;Total ram usage:        4 bytes
   149 ;; Hardware stack levels required when called:    2
   150 ;; This function calls:
   151 ;;		_display7s
   152 ;; This function is called by:
   153 ;;		Startup code after reset
   154 ;; This function uses a non-reentrant model
   155 ;;
   156                           
   157                           	psect	text0
   158  000012                     __ptext0:
   159                           	callstack 0
   160  000012                     _main:
   161                           	callstack 29
   162  000012                     
   163                           ;main7seg4.c: 22: TRISA = 0b00000000;
   164  000012  0E00               	movlw	0
   165  000014  6E92               	movwf	146,c	;volatile
   166                           
   167                           ;main7seg4.c: 23: TRISB = 0b00000001;
   168  000016  0E01               	movlw	1
   169  000018  6E93               	movwf	147,c	;volatile
   170                           
   171                           ;main7seg4.c: 24: TRISD = 0b00000000;
   172  00001A  0E00               	movlw	0
   173  00001C  6E95               	movwf	149,c	;volatile
   174                           
   175                           ;main7seg4.c: 25: PORTA = 0;
   176  00001E  0E00               	movlw	0
   177  000020  6E80               	movwf	128,c	;volatile
   178                           
   179                           ;main7seg4.c: 26: LATA = 0;
   180  000022  0E00               	movlw	0
   181  000024  6E89               	movwf	137,c	;volatile
   182                           
   183                           ;main7seg4.c: 27: PORTB = 0;
   184  000026  0E00               	movlw	0
   185  000028  6E81               	movwf	129,c	;volatile
   186                           
   187                           ;main7seg4.c: 28: LATB = 0;
   188  00002A  0E00               	movlw	0
   189  00002C  6E8A               	movwf	138,c	;volatile
   190                           
   191                           ;main7seg4.c: 29: PORTD = 0;
   192  00002E  0E00               	movlw	0
   193  000030  6E83               	movwf	131,c	;volatile
   194                           
   195                           ;main7seg4.c: 30: LATD = 0;
   196  000032  0E00               	movlw	0
   197  000034  6E8C               	movwf	140,c	;volatile
   198                           
   199                           ;main7seg4.c: 32: ADCON1 = 0b00001111;
   200  000036  0E0F               	movlw	15
   201  000038  6EC1               	movwf	193,c	;volatile
   202  00003A                     
   203                           ;main7seg4.c: 34: INTCON2bits.RBPU = 0;
   204  00003A  9EF1               	bcf	241,7,c	;volatile
   205  00003C                     
   206                           ;main7seg4.c: 39: INTCON2bits.INTEDG0 = 0;
   207  00003C  9CF1               	bcf	241,6,c	;volatile
   208  00003E                     
   209                           ;main7seg4.c: 41: INTCONbits.INT0IF = 0;
   210  00003E  92F2               	bcf	242,1,c	;volatile
   211  000040                     
   212                           ;main7seg4.c: 43: INTCONbits.INT0IE = 1;
   213  000040  88F2               	bsf	242,4,c	;volatile
   214  000042                     
   215                           ;main7seg4.c: 45: INTCONbits.TMR0IF = 0;
   216  000042  94F2               	bcf	242,2,c	;volatile
   217  000044                     
   218                           ;main7seg4.c: 47: INTCONbits.TMR0IE = 1;
   219  000044  8AF2               	bsf	242,5,c	;volatile
   220                           
   221                           ;main7seg4.c: 50: T0CON = 0b11000101;
   222  000046  0EC5               	movlw	197
   223  000048  6ED5               	movwf	213,c	;volatile
   224                           
   225                           ;main7seg4.c: 51: TMR0 = 131;
   226  00004A  0E00               	movlw	0
   227  00004C  6ED7               	movwf	215,c	;volatile
   228  00004E  0E83               	movlw	131
   229  000050  6ED6               	movwf	214,c	;volatile
   230  000052                     
   231                           ;main7seg4.c: 52: (INTCONbits.GIE = 1);
   232  000052  8EF2               	bsf	242,7,c	;volatile
   233  000054                     l65:
   234  000054  0004               	clrwdt		;# 
   235                           
   236                           ;main7seg4.c: 57: for(int i=0;i<4;i++)
   237  000056  0E00               	movlw	0
   238  000058  6E06               	movwf	(main@i+1)^0,c
   239  00005A  0E00               	movlw	0
   240  00005C  6E05               	movwf	main@i^0,c
   241  00005E  EF51  F000         	goto	l945
   242  000062                     l927:
   243                           
   244                           ;main7seg4.c: 62: PORTA=0x20;
   245  000062  0E20               	movlw	32
   246  000064  6E80               	movwf	128,c	;volatile
   247  000066                     
   248                           ;main7seg4.c: 63: PORTD=display7s(tmp);
   249  000066  5009               	movf	_tmp^0,w,c
   250  000068  EC8D  F000         	call	_display7s
   251  00006C  6E83               	movwf	131,c	;volatile
   252                           
   253                           ;main7seg4.c: 64: break;
   254  00006E  EF6F  F000         	goto	l947
   255  000072                     l931:
   256                           
   257                           ;main7seg4.c: 66: PORTA=0x10;
   258  000072  0E10               	movlw	16
   259  000074  6E80               	movwf	128,c	;volatile
   260  000076                     
   261                           ;main7seg4.c: 67: PORTD=display7s(tmp);
   262  000076  5009               	movf	_tmp^0,w,c
   263  000078  EC8D  F000         	call	_display7s
   264  00007C  6E83               	movwf	131,c	;volatile
   265                           
   266                           ;main7seg4.c: 68: break;
   267  00007E  EF6F  F000         	goto	l947
   268  000082                     l935:
   269                           
   270                           ;main7seg4.c: 70: PORTA=0x08;
   271  000082  0E08               	movlw	8
   272  000084  6E80               	movwf	128,c	;volatile
   273  000086                     
   274                           ;main7seg4.c: 71: PORTD=display7s(tmp);
   275  000086  5009               	movf	_tmp^0,w,c
   276  000088  EC8D  F000         	call	_display7s
   277  00008C  6E83               	movwf	131,c	;volatile
   278                           
   279                           ;main7seg4.c: 72: break;
   280  00008E  EF6F  F000         	goto	l947
   281  000092                     l939:
   282                           
   283                           ;main7seg4.c: 74: PORTA=0x04;
   284  000092  0E04               	movlw	4
   285  000094  6E80               	movwf	128,c	;volatile
   286  000096                     
   287                           ;main7seg4.c: 75: PORTD=display7s(tmp);
   288  000096  5009               	movf	_tmp^0,w,c
   289  000098  EC8D  F000         	call	_display7s
   290  00009C  6E83               	movwf	131,c	;volatile
   291                           
   292                           ;main7seg4.c: 76: break;
   293  00009E  EF6F  F000         	goto	l947
   294  0000A2                     l945:
   295  0000A2  C005  F003         	movff	main@i,??_main
   296  0000A6  C006  F004         	movff	main@i+1,??_main+1
   297                           
   298                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   299                           ; Switch size 1, requested type "simple"
   300                           ; Number of cases is 1, Range of values is 0 to 0
   301                           ; switch strategies available:
   302                           ; Name         Instructions Cycles
   303                           ; simple_byte            4     3 (average)
   304                           ;	Chosen strategy is simple_byte
   305  0000AA  5004               	movf	(??_main+1)^0,w,c
   306  0000AC  0A00               	xorlw	0	; case 0
   307  0000AE  B4D8               	btfsc	status,2,c
   308  0000B0  EF5C  F000         	goto	l983
   309  0000B4  EF6F  F000         	goto	l947
   310  0000B8                     l983:
   311                           
   312                           ; Switch size 1, requested type "simple"
   313                           ; Number of cases is 4, Range of values is 0 to 3
   314                           ; switch strategies available:
   315                           ; Name         Instructions Cycles
   316                           ; simple_byte           13     7 (average)
   317                           ;	Chosen strategy is simple_byte
   318  0000B8  5003               	movf	??_main^0,w,c
   319  0000BA  0A00               	xorlw	0	; case 0
   320  0000BC  B4D8               	btfsc	status,2,c
   321  0000BE  EF31  F000         	goto	l927
   322  0000C2  0A01               	xorlw	1	; case 1
   323  0000C4  B4D8               	btfsc	status,2,c
   324  0000C6  EF39  F000         	goto	l931
   325  0000CA  0A03               	xorlw	3	; case 2
   326  0000CC  B4D8               	btfsc	status,2,c
   327  0000CE  EF41  F000         	goto	l935
   328  0000D2  0A01               	xorlw	1	; case 3
   329  0000D4  B4D8               	btfsc	status,2,c
   330  0000D6  EF49  F000         	goto	l939
   331  0000DA  EF6F  F000         	goto	l947
   332  0000DE                     l947:
   333                           
   334                           ;main7seg4.c: 78: _delaywdt((unsigned long)((1)*(8000000/4000.0)));
   335  0000DE  0E02               	movlw	2
   336  0000E0  6E03               	movwf	??_main^0,c
   337  0000E2  0EF2               	movlw	242
   338  0000E4                     u77:
   339  0000E4  0004               	clrwdt	
   340  0000E6  2EE8               	decfsz	wreg,f,c
   341  0000E8  D7FD               	bra	u77
   342  0000EA  2E03               	decfsz	??_main^0,f,c
   343  0000EC  D7FB               	bra	u77
   344  0000EE  0004               	clrwdt	
   345  0000F0  F000               	nop	
   346  0000F2  4A05               	infsnz	main@i^0,f,c
   347  0000F4  2A06               	incf	(main@i+1)^0,f,c
   348  0000F6  BE06               	btfsc	(main@i+1)^0,7,c
   349  0000F8  EF87  F000         	goto	u11
   350  0000FC  5006               	movf	(main@i+1)^0,w,c
   351  0000FE  E109               	bnz	u10
   352  000100  0E04               	movlw	4
   353  000102  5C05               	subwf	main@i^0,w,c
   354  000104  A0D8               	btfss	status,0,c
   355  000106  EF87  F000         	goto	u11
   356  00010A  EF89  F000         	goto	u10
   357  00010E                     u11:
   358  00010E  EF51  F000         	goto	l945
   359  000112                     u10:
   360  000112  EF2A  F000         	goto	l65
   361  000116  EF07  F000         	goto	start
   362  00011A                     __end_of_main:
   363                           	callstack 0
   364                           
   365 ;; *************** function _display7s *****************
   366 ;; Defined at:
   367 ;;		line 35 in file "display7s.c"
   368 ;; Parameters:    Size  Location     Type
   369 ;;  v               1    wreg     unsigned char 
   370 ;; Auto vars:     Size  Location     Type
   371 ;;  v               1    1[COMRAM] unsigned char 
   372 ;; Return value:  Size  Location     Type
   373 ;;                  1    wreg      unsigned char 
   374 ;; Registers used:
   375 ;;		wreg, status,2, status,0
   376 ;; Tracked objects:
   377 ;;		On entry : 0/0
   378 ;;		On exit  : 0/0
   379 ;;		Unchanged: 0/0
   380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   381 ;;      Params:         0       0       0       0       0       0       0
   382 ;;      Locals:         1       0       0       0       0       0       0
   383 ;;      Temps:          0       0       0       0       0       0       0
   384 ;;      Totals:         1       0       0       0       0       0       0
   385 ;;Total ram usage:        1 bytes
   386 ;; Hardware stack levels used:    1
   387 ;; Hardware stack levels required when called:    1
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text1
   396  00011A                     __ptext1:
   397                           	callstack 0
   398  00011A                     _display7s:
   399                           	callstack 29
   400                           
   401                           ;incstack = 0
   402                           ;display7s@v stored from wreg
   403  00011A  6E02               	movwf	display7s@v^0,c
   404  00011C                     
   405                           ;display7s.c: 37: switch(v)
   406  00011C  EFC3  F000         	goto	l905
   407  000120                     l835:
   408                           
   409                           ;display7s.c: 40: return 0x3F;
   410  000120  0E3F               	movlw	63
   411  000122  EF06  F001         	goto	l5
   412  000126                     l839:
   413                           
   414                           ;display7s.c: 42: return 0x06;
   415  000126  0E06               	movlw	6
   416  000128  EF06  F001         	goto	l5
   417  00012C                     l843:
   418                           
   419                           ;display7s.c: 44: return 0x5B;
   420  00012C  0E5B               	movlw	91
   421  00012E  EF06  F001         	goto	l5
   422  000132                     l847:
   423                           
   424                           ;display7s.c: 46: return 0x4F;
   425  000132  0E4F               	movlw	79
   426  000134  EF06  F001         	goto	l5
   427  000138                     l851:
   428                           
   429                           ;display7s.c: 48: return 0x66;
   430  000138  0E66               	movlw	102
   431  00013A  EF06  F001         	goto	l5
   432  00013E                     l855:
   433                           
   434                           ;display7s.c: 50: return 0x6D;
   435  00013E  0E6D               	movlw	109
   436  000140  EF06  F001         	goto	l5
   437  000144                     l859:
   438                           
   439                           ;display7s.c: 52: return 0x7D;
   440  000144  0E7D               	movlw	125
   441  000146  EF06  F001         	goto	l5
   442  00014A                     l863:
   443                           
   444                           ;display7s.c: 54: return 0x07;
   445  00014A  0E07               	movlw	7
   446  00014C  EF06  F001         	goto	l5
   447  000150                     l867:
   448                           
   449                           ;display7s.c: 56: return 0x7F;
   450  000150  0E7F               	movlw	127
   451  000152  EF06  F001         	goto	l5
   452  000156                     l871:
   453                           
   454                           ;display7s.c: 58: return 0x6F;
   455  000156  0E6F               	movlw	111
   456  000158  EF06  F001         	goto	l5
   457  00015C                     l875:
   458                           
   459                           ;display7s.c: 60: return 0x77;
   460  00015C  0E77               	movlw	119
   461  00015E  EF06  F001         	goto	l5
   462  000162                     l879:
   463                           
   464                           ;display7s.c: 62: return 0x7c;
   465  000162  0E7C               	movlw	124
   466  000164  EF06  F001         	goto	l5
   467  000168                     l883:
   468                           
   469                           ;display7s.c: 64: return 0x58;
   470  000168  0E58               	movlw	88
   471  00016A  EF06  F001         	goto	l5
   472  00016E                     l887:
   473                           
   474                           ;display7s.c: 66: return 0x5E;
   475  00016E  0E5E               	movlw	94
   476  000170  EF06  F001         	goto	l5
   477  000174                     l891:
   478                           
   479                           ;display7s.c: 68: return 0x79;
   480  000174  0E79               	movlw	121
   481  000176  EF06  F001         	goto	l5
   482  00017A                     l895:
   483                           
   484                           ;display7s.c: 70: return 0x71;
   485  00017A  0E71               	movlw	113
   486  00017C  EF06  F001         	goto	l5
   487  000180                     l899:
   488                           
   489                           ;display7s.c: 72: return 0;
   490  000180  0E00               	movlw	0
   491  000182  EF06  F001         	goto	l5
   492  000186                     l905:
   493  000186  5002               	movf	display7s@v^0,w,c
   494                           
   495                           ; Switch size 1, requested type "simple"
   496                           ; Number of cases is 16, Range of values is 0 to 15
   497                           ; switch strategies available:
   498                           ; Name         Instructions Cycles
   499                           ; simple_byte           49    25 (average)
   500                           ;	Chosen strategy is simple_byte
   501  000188  0A00               	xorlw	0	; case 0
   502  00018A  B4D8               	btfsc	status,2,c
   503  00018C  EF90  F000         	goto	l835
   504  000190  0A01               	xorlw	1	; case 1
   505  000192  B4D8               	btfsc	status,2,c
   506  000194  EF93  F000         	goto	l839
   507  000198  0A03               	xorlw	3	; case 2
   508  00019A  B4D8               	btfsc	status,2,c
   509  00019C  EF96  F000         	goto	l843
   510  0001A0  0A01               	xorlw	1	; case 3
   511  0001A2  B4D8               	btfsc	status,2,c
   512  0001A4  EF99  F000         	goto	l847
   513  0001A8  0A07               	xorlw	7	; case 4
   514  0001AA  B4D8               	btfsc	status,2,c
   515  0001AC  EF9C  F000         	goto	l851
   516  0001B0  0A01               	xorlw	1	; case 5
   517  0001B2  B4D8               	btfsc	status,2,c
   518  0001B4  EF9F  F000         	goto	l855
   519  0001B8  0A03               	xorlw	3	; case 6
   520  0001BA  B4D8               	btfsc	status,2,c
   521  0001BC  EFA2  F000         	goto	l859
   522  0001C0  0A01               	xorlw	1	; case 7
   523  0001C2  B4D8               	btfsc	status,2,c
   524  0001C4  EFA5  F000         	goto	l863
   525  0001C8  0A0F               	xorlw	15	; case 8
   526  0001CA  B4D8               	btfsc	status,2,c
   527  0001CC  EFA8  F000         	goto	l867
   528  0001D0  0A01               	xorlw	1	; case 9
   529  0001D2  B4D8               	btfsc	status,2,c
   530  0001D4  EFAB  F000         	goto	l871
   531  0001D8  0A03               	xorlw	3	; case 10
   532  0001DA  B4D8               	btfsc	status,2,c
   533  0001DC  EFAE  F000         	goto	l875
   534  0001E0  0A01               	xorlw	1	; case 11
   535  0001E2  B4D8               	btfsc	status,2,c
   536  0001E4  EFB1  F000         	goto	l879
   537  0001E8  0A07               	xorlw	7	; case 12
   538  0001EA  B4D8               	btfsc	status,2,c
   539  0001EC  EFB4  F000         	goto	l883
   540  0001F0  0A01               	xorlw	1	; case 13
   541  0001F2  B4D8               	btfsc	status,2,c
   542  0001F4  EFB7  F000         	goto	l887
   543  0001F8  0A03               	xorlw	3	; case 14
   544  0001FA  B4D8               	btfsc	status,2,c
   545  0001FC  EFBA  F000         	goto	l891
   546  000200  0A01               	xorlw	1	; case 15
   547  000202  B4D8               	btfsc	status,2,c
   548  000204  EFBD  F000         	goto	l895
   549  000208  EFC0  F000         	goto	l899
   550  00020C                     l5:
   551  00020C  0012               	return		;funcret
   552  00020E                     __end_of_display7s:
   553                           	callstack 0
   554                           
   555 ;; *************** function _isr *****************
   556 ;; Defined at:
   557 ;;		line 91 in file "main7seg4.c"
   558 ;; Parameters:    Size  Location     Type
   559 ;;		None
   560 ;; Auto vars:     Size  Location     Type
   561 ;;		None
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, status,2, status,0
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   571 ;;      Params:         0       0       0       0       0       0       0
   572 ;;      Locals:         0       0       0       0       0       0       0
   573 ;;      Temps:          1       0       0       0       0       0       0
   574 ;;      Totals:         1       0       0       0       0       0       0
   575 ;;Total ram usage:        1 bytes
   576 ;; Hardware stack levels used:    1
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		Interrupt level 2
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	intcode
   585  000008                     __pintcode:
   586                           	callstack 0
   587  000008                     _isr:
   588                           	callstack 29
   589                           
   590                           ;incstack = 0
   591  000008  820A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   592  00000A  ED07  F001         	call	int_func,f	;refresh shadow registers
   593                           
   594                           	psect	intcode_body
   595  00020E                     __pintcode_body:
   596                           	callstack 29
   597  00020E                     int_func:
   598                           	callstack 29
   599  00020E  0006               	pop		; remove dummy address from shadow register refresh
   600  000210                     
   601                           ;main7seg4.c: 92: if (INTCONbits.INT0F == 1)
   602  000210  A2F2               	btfss	242,1,c	;volatile
   603  000212  EF0D  F001         	goto	i2u2_41
   604  000216  EF0F  F001         	goto	i2u2_40
   605  00021A                     i2u2_41:
   606  00021A  EF1B  F001         	goto	i2l965
   607  00021E                     i2u2_40:
   608  00021E                     
   609                           ;main7seg4.c: 93: {;main7seg4.c: 94: INTCONbits.INT0F = 0;
   610  00021E  92F2               	bcf	242,1,c	;volatile
   611  000220                     
   612                           ;main7seg4.c: 95: tmp++;
   613  000220  2A09               	incf	_tmp^0,f,c
   614  000222                     
   615                           ;main7seg4.c: 96: if (tmp>15) tmp=0;
   616  000222  0E0F               	movlw	15
   617  000224  6409               	cpfsgt	_tmp^0,c
   618  000226  EF17  F001         	goto	i2u3_41
   619  00022A  EF19  F001         	goto	i2u3_40
   620  00022E                     i2u3_41:
   621  00022E  EF1B  F001         	goto	i2l965
   622  000232                     i2u3_40:
   623  000232  0E00               	movlw	0
   624  000234  6E09               	movwf	_tmp^0,c
   625  000236                     i2l965:
   626                           
   627                           ;main7seg4.c: 97: };main7seg4.c: 98: if (INTCONbits.TMR0IF == 1)
   628  000236  A4F2               	btfss	242,2,c	;volatile
   629  000238  EF20  F001         	goto	i2u4_41
   630  00023C  EF22  F001         	goto	i2u4_40
   631  000240                     i2u4_41:
   632  000240  EF48  F001         	goto	i2l85
   633  000244                     i2u4_40:
   634  000244                     
   635                           ;main7seg4.c: 99: {;main7seg4.c: 100: INTCONbits.TMR0IF = 0;
   636  000244  94F2               	bcf	242,2,c	;volatile
   637  000246                     
   638                           ;main7seg4.c: 101: TMR0 = 131;
   639  000246  0E00               	movlw	0
   640  000248  6ED7               	movwf	215,c	;volatile
   641  00024A  0E83               	movlw	131
   642  00024C  6ED6               	movwf	214,c	;volatile
   643  00024E                     
   644                           ;main7seg4.c: 102: count ++;
   645  00024E  4A07               	infsnz	_count^0,f,c
   646  000250  2A08               	incf	(_count+1)^0,f,c
   647  000252                     
   648                           ;main7seg4.c: 103: if (count == 250)
   649  000252  0EFA               	movlw	250
   650  000254  1807               	xorwf	_count^0,w,c
   651  000256  1008               	iorwf	(_count+1)^0,w,c
   652  000258  A4D8               	btfss	status,2,c
   653  00025A  EF31  F001         	goto	i2u5_41
   654  00025E  EF33  F001         	goto	i2u5_40
   655  000262                     i2u5_41:
   656  000262  EF48  F001         	goto	i2l85
   657  000266                     i2u5_40:
   658  000266                     
   659                           ;main7seg4.c: 104: {;main7seg4.c: 105: count = 0;
   660  000266  0E00               	movlw	0
   661  000268  6E08               	movwf	(_count+1)^0,c
   662  00026A  0E00               	movlw	0
   663  00026C  6E07               	movwf	_count^0,c
   664  00026E                     
   665                           ;main7seg4.c: 106: LATBbits.LATB1 = ~LATBbits.LATB1;
   666  00026E  B28A               	btfsc	138,1,c	;volatile
   667  000270  EF3C  F001         	goto	i2u6_41
   668  000274  EF3F  F001         	goto	i2u6_40
   669  000278                     i2u6_41:
   670  000278  0E01               	movlw	1
   671  00027A  EF40  F001         	goto	i2u6_46
   672  00027E                     i2u6_40:
   673  00027E  0E00               	movlw	0
   674  000280                     i2u6_46:
   675  000280  0AFF               	xorlw	255
   676  000282  6E01               	movwf	??_isr^0,c
   677  000284  4601               	rlncf	??_isr^0,f,c
   678  000286  508A               	movf	138,w,c	;volatile
   679  000288  1801               	xorwf	??_isr^0,w,c
   680  00028A  0BFD               	andlw	-3
   681  00028C  1801               	xorwf	??_isr^0,w,c
   682  00028E  6E8A               	movwf	138,c	;volatile
   683  000290                     i2l85:
   684  000290  920A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   685  000292  0011               	retfie		f
   686  000294                     __end_of_isr:
   687                           	callstack 0
   688  0000                     
   689                           	psect	rparam
   690  0000                     
   691                           	psect	temp
   692  00000A                     btemp:
   693                           	callstack 0
   694  00000A                     	ds	1
   695  0000                     int$flags	set	btemp
   696  0000                     wtemp8	set	btemp+1
   697  0000                     ttemp5	set	btemp+1
   698  0000                     ttemp6	set	btemp+4
   699  0000                     ttemp7	set	btemp+8
   700                           
   701                           	psect	idloc
   702                           
   703                           ;Config register IDLOC0 @ 0x200000
   704                           ;	unspecified, using default values
   705  200000                     	org	2097152
   706  200000  FF                 	db	255
   707                           
   708                           ;Config register IDLOC1 @ 0x200001
   709                           ;	unspecified, using default values
   710  200001                     	org	2097153
   711  200001  FF                 	db	255
   712                           
   713                           ;Config register IDLOC2 @ 0x200002
   714                           ;	unspecified, using default values
   715  200002                     	org	2097154
   716  200002  FF                 	db	255
   717                           
   718                           ;Config register IDLOC3 @ 0x200003
   719                           ;	unspecified, using default values
   720  200003                     	org	2097155
   721  200003  FF                 	db	255
   722                           
   723                           ;Config register IDLOC4 @ 0x200004
   724                           ;	unspecified, using default values
   725  200004                     	org	2097156
   726  200004  FF                 	db	255
   727                           
   728                           ;Config register IDLOC5 @ 0x200005
   729                           ;	unspecified, using default values
   730  200005                     	org	2097157
   731  200005  FF                 	db	255
   732                           
   733                           ;Config register IDLOC6 @ 0x200006
   734                           ;	unspecified, using default values
   735  200006                     	org	2097158
   736  200006  FF                 	db	255
   737                           
   738                           ;Config register IDLOC7 @ 0x200007
   739                           ;	unspecified, using default values
   740  200007                     	org	2097159
   741  200007  FF                 	db	255
   742                           
   743                           	psect	config
   744                           
   745                           ; Padding undefined space
   746  300000                     	org	3145728
   747  300000  FF                 	db	255
   748                           
   749                           ;Config register CONFIG1H @ 0x300001
   750                           ;	Oscillator Selection bits
   751                           ;	OSC = HS, HS oscillator
   752                           ;	Fail-Safe Clock Monitor Enable bit
   753                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   754                           ;	Internal/External Oscillator Switchover bit
   755                           ;	IESO = OFF, Oscillator Switchover mode disabled
   756  300001                     	org	3145729
   757  300001  02                 	db	2
   758                           
   759                           ;Config register CONFIG2L @ 0x300002
   760                           ;	Power-up Timer Enable bit
   761                           ;	PWRT = OFF, PWRT disabled
   762                           ;	Brown-out Reset Enable bits
   763                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
   764                           ;	Brown Out Reset Voltage bits
   765                           ;	BORV = 3, Minimum setting
   766  300002                     	org	3145730
   767  300002  1F                 	db	31
   768                           
   769                           ;Config register CONFIG2H @ 0x300003
   770                           ;	Watchdog Timer Enable bit
   771                           ;	WDT = ON, WDT enabled
   772                           ;	Watchdog Timer Postscale Select bits
   773                           ;	WDTPS = 32768, 1:32768
   774  300003                     	org	3145731
   775  300003  1F                 	db	31
   776                           
   777                           ; Padding undefined space
   778  300004                     	org	3145732
   779  300004  FF                 	db	255
   780                           
   781                           ;Config register CONFIG3H @ 0x300005
   782                           ;	CCP2 MUX bit
   783                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   784                           ;	PORTB A/D Enable bit
   785                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   786                           ;	Low-Power Timer1 Oscillator Enable bit
   787                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   788                           ;	MCLR Pin Enable bit
   789                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   790  300005                     	org	3145733
   791  300005  81                 	db	129
   792                           
   793                           ;Config register CONFIG4L @ 0x300006
   794                           ;	Stack Full/Underflow Reset Enable bit
   795                           ;	STVREN = ON, Stack full/underflow will cause Reset
   796                           ;	Single-Supply ICSP Enable bit
   797                           ;	LVP = ON, Single-Supply ICSP enabled
   798                           ;	Extended Instruction Set Enable bit
   799                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   800                           ;	Background Debugger Enable bit
   801                           ;	DEBUG = 0x1, unprogrammed default
   802  300006                     	org	3145734
   803  300006  85                 	db	133
   804                           
   805                           ; Padding undefined space
   806  300007                     	org	3145735
   807  300007  FF                 	db	255
   808                           
   809                           ;Config register CONFIG5L @ 0x300008
   810                           ;	Code Protection bit
   811                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
   812                           ;	Code Protection bit
   813                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
   814                           ;	Code Protection bit
   815                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
   816                           ;	Code Protection bit
   817                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
   818  300008                     	org	3145736
   819  300008  0F                 	db	15
   820                           
   821                           ;Config register CONFIG5H @ 0x300009
   822                           ;	Boot Block Code Protection bit
   823                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   824                           ;	Data EEPROM Code Protection bit
   825                           ;	CPD = OFF, Data EEPROM not code-protected
   826  300009                     	org	3145737
   827  300009  C0                 	db	192
   828                           
   829                           ;Config register CONFIG6L @ 0x30000A
   830                           ;	Write Protection bit
   831                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
   832                           ;	Write Protection bit
   833                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
   834                           ;	Write Protection bit
   835                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
   836                           ;	Write Protection bit
   837                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
   838  30000A                     	org	3145738
   839  30000A  0F                 	db	15
   840                           
   841                           ;Config register CONFIG6H @ 0x30000B
   842                           ;	Configuration Register Write Protection bit
   843                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   844                           ;	Boot Block Write Protection bit
   845                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
   846                           ;	Data EEPROM Write Protection bit
   847                           ;	WRTD = OFF, Data EEPROM not write-protected
   848  30000B                     	org	3145739
   849  30000B  E0                 	db	224
   850                           
   851                           ;Config register CONFIG7L @ 0x30000C
   852                           ;	Table Read Protection bit
   853                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
   854                           ;	Table Read Protection bit
   855                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
   856                           ;	Table Read Protection bit
   857                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
   858                           ;	Table Read Protection bit
   859                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
   860  30000C                     	org	3145740
   861  30000C  0F                 	db	15
   862                           
   863                           ;Config register CONFIG7H @ 0x30000D
   864                           ;	Boot Block Table Read Protection bit
   865                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   866  30000D                     	org	3145741
   867  30000D  40                 	db	64
   868                           tosu	equ	0xFFF
   869                           tosh	equ	0xFFE
   870                           tosl	equ	0xFFD
   871                           stkptr	equ	0xFFC
   872                           pclatu	equ	0xFFB
   873                           pclath	equ	0xFFA
   874                           pcl	equ	0xFF9
   875                           tblptru	equ	0xFF8
   876                           tblptrh	equ	0xFF7
   877                           tblptrl	equ	0xFF6
   878                           tablat	equ	0xFF5
   879                           prodh	equ	0xFF4
   880                           prodl	equ	0xFF3
   881                           indf0	equ	0xFEF
   882                           postinc0	equ	0xFEE
   883                           postdec0	equ	0xFED
   884                           preinc0	equ	0xFEC
   885                           plusw0	equ	0xFEB
   886                           fsr0h	equ	0xFEA
   887                           fsr0l	equ	0xFE9
   888                           wreg	equ	0xFE8
   889                           indf1	equ	0xFE7
   890                           postinc1	equ	0xFE6
   891                           postdec1	equ	0xFE5
   892                           preinc1	equ	0xFE4
   893                           plusw1	equ	0xFE3
   894                           fsr1h	equ	0xFE2
   895                           fsr1l	equ	0xFE1
   896                           bsr	equ	0xFE0
   897                           indf2	equ	0xFDF
   898                           postinc2	equ	0xFDE
   899                           postdec2	equ	0xFDD
   900                           preinc2	equ	0xFDC
   901                           plusw2	equ	0xFDB
   902                           fsr2h	equ	0xFDA
   903                           fsr2l	equ	0xFD9
   904                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126      6       9
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_display7s

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      60
                                              2 COMRAM     4     4      0
                          _display7s
 ---------------------------------------------------------------------------------
 (1) _display7s                                            1     1      0      15
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display7s

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E      6       9       1        7.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       9      15        0.0%
DATA                 0      0       9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Dec 02 14:45:11 2020

                      l5 020C                       l65 0054                       u10 0112  
                     u11 010E                       u77 00E4                      l911 003C  
                    l905 0186                      l833 011C                      l921 0052  
                    l913 003E                      l851 0138                      l843 012C  
                    l835 0120                      l931 0072                      l915 0040  
                    l907 0012                      l941 0096                      l933 0076  
                    l917 0042                      l909 003A                      l871 0156  
                    l863 014A                      l855 013E                      l847 0132  
                    l839 0126                      l935 0082                      l927 0062  
                    l919 0044                      l937 0086                      l929 0066  
                    l945 00A2                      l891 0174                      l883 0168  
                    l875 015C                      l867 0150                      l859 0144  
                    l939 0092                      l947 00DE                      l949 00F2  
                    l895 017A                      l887 016E                      l879 0162  
                    l983 00B8                      l899 0180                      _isr 0008  
                    _tmp 0009                      wreg 000FE8                     ?_isr 0001  
                   _LATA 000F89                     _LATB 000F8A                     _LATD 000F8C  
                   i2l85 0290                     _TMR0 000FD6                     _main 0012  
                   btemp 000A                     start 000E             ___param_bank 000000  
                  ??_isr 0001                    ?_main 0001                    _T0CON 000FD5  
                  i2l961 0222                    i2l971 024E                    i2l963 0232  
                  i2l955 0210                    i2l973 0252                    i2l957 021E  
                  i2l965 0236                    i2l975 0266                    i2l967 0244  
                  i2l959 0220                    i2l977 026E                    i2l969 0246  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTD 000F83  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
                  _count 0007                    main@i 0005                    ttemp5 000B  
                  ttemp6 000E                    ttemp7 0012                    status 000FD8  
                  wtemp8 000B          __initialization 0294             __end_of_main 011A  
                 ??_main 0003            __activetblptr 000002                   _ADCON1 000FC1  
                 i2u2_40 021E                   i2u2_41 021A                   i2u3_40 0232  
                 i2u3_41 022E                   i2u4_40 0244                   i2u4_41 0240  
                 i2u5_40 0266                   i2u5_41 0262                   i2u6_40 027E  
                 i2u6_41 0278                   i2u6_46 0280                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 029A            ___rparam_used 000001  
         __pcstackCOMRAM 0001       __size_of_display7s 00F4                  __Hparam 0000  
                __Lparam 0000        __end_of_display7s 020E                  __pcinit 0294  
                __ramtop 0600                  __ptext0 0012                  __ptext1 011A  
           __size_of_isr 028C           __pintcode_body 020E     end_of_initialization 029A  
          __Lmediumconst 0000                  int_func 020E               display7s@v 0002  
    start_initialization 0294              __end_of_isr 0294              __pbssCOMRAM 0007  
              __pintcode 0008                _display7s 011A                 _LATBbits 000F8A  
             ?_display7s 0001              _INTCON2bits 000FF1                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0108                 int$flags 000A  
            ??_display7s 0002               _INTCONbits 000FF2                 intlevel2 0000  
